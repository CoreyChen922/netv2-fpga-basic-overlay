// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.1 (win64) Build 1538259 Fri Apr  8 15:45:27 MDT 2016
// Date        : Wed Nov 02 23:25:15 2016
// Host        : bunnie-kage running 64-bit Service Pack 1  (build 7601)
// Command     : write_verilog -force -mode funcsim
//               F:/largework/fpga/netv2/overlay2/overlay2.srcs/sources_1/bd/overlay1/ip/overlay1_axi_pcie_0_0/overlay1_axi_pcie_0_0_sim_netlist.v
// Design      : overlay1_axi_pcie_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7a50tcsg325-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "overlay1_axi_pcie_0_0,axi_pcie,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_pcie,Vivado 2016.1" *) 
(* NotValidForBitStream *)
module overlay1_axi_pcie_0_0
   (axi_aresetn,
    axi_aclk_out,
    axi_ctl_aclk_out,
    mmcm_lock,
    interrupt_out,
    INTX_MSI_Request,
    INTX_MSI_Grant,
    MSI_enable,
    MSI_Vector_Num,
    MSI_Vector_Width,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awregion,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arregion,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awprot,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arprot,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    pci_exp_txp,
    pci_exp_txn,
    pci_exp_rxp,
    pci_exp_rxn,
    REFCLK,
    s_axi_ctl_awaddr,
    s_axi_ctl_awvalid,
    s_axi_ctl_awready,
    s_axi_ctl_wdata,
    s_axi_ctl_wstrb,
    s_axi_ctl_wvalid,
    s_axi_ctl_wready,
    s_axi_ctl_bresp,
    s_axi_ctl_bvalid,
    s_axi_ctl_bready,
    s_axi_ctl_araddr,
    s_axi_ctl_arvalid,
    s_axi_ctl_arready,
    s_axi_ctl_rdata,
    s_axi_ctl_rresp,
    s_axi_ctl_rvalid,
    s_axi_ctl_rready,
    pipe_txprbssel,
    pipe_rxprbssel,
    pipe_txprbsforceerr,
    pipe_rxprbscntreset,
    pipe_loopback,
    pipe_rxprbserr,
    pipe_txinhibit,
    pipe_rst_fsm,
    pipe_qrst_fsm,
    pipe_rate_fsm,
    pipe_sync_fsm_tx,
    pipe_sync_fsm_rx,
    pipe_drp_fsm,
    pipe_rst_idle,
    pipe_qrst_idle,
    pipe_rate_idle,
    pipe_eyescandataerror,
    pipe_rxstatus,
    pipe_dmonitorout,
    pipe_cpll_lock,
    pipe_qpll_lock,
    pipe_rxpmaresetdone,
    pipe_rxbufstatus,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_txdlysresetdone,
    pipe_rxphaligndone,
    pipe_rxdlysresetdone,
    pipe_rxsyncdone,
    pipe_rxdisperr,
    pipe_rxnotintable,
    pipe_rxcommadet,
    gt_ch_drp_rdy,
    pipe_debug_0,
    pipe_debug_1,
    pipe_debug_2,
    pipe_debug_3,
    pipe_debug_4,
    pipe_debug_5,
    pipe_debug_6,
    pipe_debug_7,
    pipe_debug_8,
    pipe_debug_9,
    pipe_debug,
    int_pclk_out_slave,
    int_rxusrclk_out,
    int_dclk_out,
    int_userclk1_out,
    int_userclk2_out,
    int_oobclk_out,
    int_mmcm_lock_out,
    int_qplllock_out,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    int_rxoutclk_out,
    int_pclk_sel_slave);
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.axi_aresetn RST" *) input axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.axi_aclk_out CLK" *) output axi_aclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.axi_ctl_aclk_out CLK" *) output axi_ctl_aclk_out;
  output mmcm_lock;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 INTERRUPT.interrupt_out INTERRUPT" *) output interrupt_out;
  input INTX_MSI_Request;
  output INTX_MSI_Grant;
  output MSI_enable;
  input [4:0]MSI_Vector_Num;
  output [2:0]MSI_Vector_Width;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWID" *) input [3:0]s_axi_awid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREGION" *) input [3:0]s_axi_awregion;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWLEN" *) input [7:0]s_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWSIZE" *) input [2:0]s_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWBURST" *) input [1:0]s_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [63:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [7:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WLAST" *) input s_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BID" *) output [3:0]s_axi_bid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARID" *) input [3:0]s_axi_arid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREGION" *) input [3:0]s_axi_arregion;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARLEN" *) input [7:0]s_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARSIZE" *) input [2:0]s_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARBURST" *) input [1:0]s_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RID" *) output [3:0]s_axi_rid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [63:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RLAST" *) output s_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWADDR" *) output [31:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWLEN" *) output [7:0]m_axi_awlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWSIZE" *) output [2:0]m_axi_awsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWBURST" *) output [1:0]m_axi_awburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWPROT" *) output [2:0]m_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWVALID" *) output m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWREADY" *) input m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWLOCK" *) output m_axi_awlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI AWCACHE" *) output [3:0]m_axi_awcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WDATA" *) output [63:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WSTRB" *) output [7:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WLAST" *) output m_axi_wlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WVALID" *) output m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI WREADY" *) input m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI BRESP" *) input [1:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI BVALID" *) input m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI BREADY" *) output m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARADDR" *) output [31:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARLEN" *) output [7:0]m_axi_arlen;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARSIZE" *) output [2:0]m_axi_arsize;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARBURST" *) output [1:0]m_axi_arburst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARPROT" *) output [2:0]m_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARVALID" *) output m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARREADY" *) input m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARLOCK" *) output m_axi_arlock;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI ARCACHE" *) output [3:0]m_axi_arcache;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RDATA" *) input [63:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RRESP" *) input [1:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RLAST" *) input m_axi_rlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RVALID" *) input m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI RREADY" *) output m_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txp" *) output [0:0]pci_exp_txp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt txn" *) output [0:0]pci_exp_txn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxp" *) input [0:0]pci_exp_rxp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_7x_mgt:1.0 pcie_7x_mgt rxn" *) input [0:0]pci_exp_rxn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.REFCLK CLK" *) input REFCLK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL AWADDR" *) input [31:0]s_axi_ctl_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL AWVALID" *) input s_axi_ctl_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL AWREADY" *) output s_axi_ctl_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL WDATA" *) input [31:0]s_axi_ctl_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL WSTRB" *) input [3:0]s_axi_ctl_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL WVALID" *) input s_axi_ctl_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL WREADY" *) output s_axi_ctl_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL BRESP" *) output [1:0]s_axi_ctl_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL BVALID" *) output s_axi_ctl_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL BREADY" *) input s_axi_ctl_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL ARADDR" *) input [31:0]s_axi_ctl_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL ARVALID" *) input s_axi_ctl_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL ARREADY" *) output s_axi_ctl_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL RDATA" *) output [31:0]s_axi_ctl_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL RRESP" *) output [1:0]s_axi_ctl_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL RVALID" *) output s_axi_ctl_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI_CTL RREADY" *) input s_axi_ctl_rready;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug txprbssel" *) input [2:0]pipe_txprbssel;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxprbssel" *) input [2:0]pipe_rxprbssel;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug txprbsforceerr" *) input pipe_txprbsforceerr;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxprbscntreset" *) input pipe_rxprbscntreset;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug loopback" *) input [2:0]pipe_loopback;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxprbserr" *) output [0:0]pipe_rxprbserr;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug txinhibit" *) input [0:0]pipe_txinhibit;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rst_fsm" *) output [4:0]pipe_rst_fsm;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug qrst_fsm" *) output [11:0]pipe_qrst_fsm;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rate_fsm" *) output [4:0]pipe_rate_fsm;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug sync_fsm_tx" *) output [5:0]pipe_sync_fsm_tx;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug sync_fsm_rx" *) output [6:0]pipe_sync_fsm_rx;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug drp_fsm" *) output [6:0]pipe_drp_fsm;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rst_idle" *) output pipe_rst_idle;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug qrst_idle" *) output pipe_qrst_idle;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rate_idle" *) output pipe_rate_idle;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug eyescandataerror" *) output [0:0]pipe_eyescandataerror;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxstatus" *) output [2:0]pipe_rxstatus;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug dmonitorout" *) output [14:0]pipe_dmonitorout;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug cpll_lock" *) output [0:0]pipe_cpll_lock;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug qpll_lock" *) output [0:0]pipe_qpll_lock;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxpmaresetdone" *) output [0:0]pipe_rxpmaresetdone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxbufstatus" *) output [2:0]pipe_rxbufstatus;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug txphaligndone" *) output [0:0]pipe_txphaligndone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug txphinitdone" *) output [0:0]pipe_txphinitdone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug txdlysresetdone" *) output [0:0]pipe_txdlysresetdone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxphaligndone" *) output [0:0]pipe_rxphaligndone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxdlysresetdone" *) output [0:0]pipe_rxdlysresetdone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxsyncdone" *) output [0:0]pipe_rxsyncdone;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxdisperr" *) output [7:0]pipe_rxdisperr;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxnotintable" *) output [7:0]pipe_rxnotintable;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug rxcommadet" *) output [0:0]pipe_rxcommadet;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug gt_ch_drp_rdy" *) output [0:0]gt_ch_drp_rdy;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_0" *) output [0:0]pipe_debug_0;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_1" *) output [0:0]pipe_debug_1;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_2" *) output [0:0]pipe_debug_2;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_3" *) output [0:0]pipe_debug_3;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_4" *) output [0:0]pipe_debug_4;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_5" *) output [0:0]pipe_debug_5;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_6" *) output [0:0]pipe_debug_6;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_7" *) output [0:0]pipe_debug_7;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_8" *) output [0:0]pipe_debug_8;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug_9" *) output [0:0]pipe_debug_9;
  (* X_INTERFACE_INFO = "xilinx.com:display_axi_pcie:transceiver_debug:1.0 transceiver_debug debug" *) output [31:0]pipe_debug;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk pclk_slave" *) output int_pclk_out_slave;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk pipe_rxusrclk" *) output int_rxusrclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk dclk" *) output int_dclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk usrclk1" *) output int_userclk1_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk usrclk2" *) output int_userclk2_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk oobclk" *) output int_oobclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk mmcm_lock" *) output int_mmcm_lock_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk qplllock" *) output [1:0]int_qplllock_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk qplloutclk" *) output [1:0]int_qplloutclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk qplloutrefclk" *) output [1:0]int_qplloutrefclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk rxoutclk" *) output [0:0]int_rxoutclk_out;
  (* X_INTERFACE_INFO = "xilinx.com:interface:pcie_sharedlogic_int_clk:1.0 pcie_sharedlogic_int_clk pclk_sel_slave" *) input [0:0]int_pclk_sel_slave;

  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire [4:0]MSI_Vector_Num;
  wire [2:0]MSI_Vector_Width;
  wire MSI_enable;
  wire REFCLK;
  wire axi_aclk_out;
  wire axi_aresetn;
  wire axi_ctl_aclk_out;
  wire [0:0]gt_ch_drp_rdy;
  wire int_dclk_out;
  wire int_mmcm_lock_out;
  wire int_oobclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire [1:0]int_qplllock_out;
  wire [1:0]int_qplloutclk_out;
  wire [1:0]int_qplloutrefclk_out;
  wire [0:0]int_rxoutclk_out;
  wire int_rxusrclk_out;
  wire int_userclk1_out;
  wire int_userclk2_out;
  wire interrupt_out;
  wire [31:0]m_axi_araddr;
  wire [1:0]m_axi_arburst;
  wire [3:0]m_axi_arcache;
  wire [7:0]m_axi_arlen;
  wire m_axi_arlock;
  wire [2:0]m_axi_arprot;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [1:0]m_axi_awburst;
  wire [3:0]m_axi_awcache;
  wire [7:0]m_axi_awlen;
  wire m_axi_awlock;
  wire [2:0]m_axi_awprot;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [63:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [7:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire mmcm_lock;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire [0:0]pipe_cpll_lock;
  wire [31:0]pipe_debug;
  wire [0:0]pipe_debug_0;
  wire [0:0]pipe_debug_1;
  wire [0:0]pipe_debug_2;
  wire [0:0]pipe_debug_3;
  wire [0:0]pipe_debug_4;
  wire [0:0]pipe_debug_5;
  wire [0:0]pipe_debug_6;
  wire [0:0]pipe_debug_7;
  wire [0:0]pipe_debug_8;
  wire [0:0]pipe_debug_9;
  wire [14:0]pipe_dmonitorout;
  wire [6:0]pipe_drp_fsm;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire [0:0]pipe_qpll_lock;
  wire [11:0]pipe_qrst_fsm;
  wire pipe_qrst_idle;
  wire [4:0]pipe_rate_fsm;
  wire pipe_rate_idle;
  wire [4:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [7:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [7:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire [6:0]pipe_sync_fsm_rx;
  wire [5:0]pipe_sync_fsm_tx;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire [31:0]s_axi_araddr;
  wire [1:0]s_axi_arburst;
  wire [3:0]s_axi_arid;
  wire [7:0]s_axi_arlen;
  wire s_axi_arready;
  wire [3:0]s_axi_arregion;
  wire [2:0]s_axi_arsize;
  wire s_axi_arvalid;
  wire [31:0]s_axi_awaddr;
  wire [1:0]s_axi_awburst;
  wire [3:0]s_axi_awid;
  wire [7:0]s_axi_awlen;
  wire s_axi_awready;
  wire [3:0]s_axi_awregion;
  wire [2:0]s_axi_awsize;
  wire s_axi_awvalid;
  wire [3:0]s_axi_bid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [31:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awready;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire [1:0]s_axi_ctl_bresp;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire [1:0]s_axi_ctl_rresp;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire [63:0]s_axi_rdata;
  wire [3:0]s_axi_rid;
  wire s_axi_rlast;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [63:0]s_axi_wdata;
  wire s_axi_wlast;
  wire s_axi_wready;
  wire [7:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire NLW_inst_clk_gen3_UNCONNECTED;
  wire NLW_inst_clk_txoutclk_UNCONNECTED;
  wire NLW_inst_ext_ch_gt_drpclk_UNCONNECTED;
  wire [0:0]NLW_inst_clk_pclk_sel_UNCONNECTED;
  wire [0:0]NLW_inst_clk_rxoutclk_UNCONNECTED;
  wire [11:0]NLW_inst_common_commands_out_UNCONNECTED;
  wire [15:0]NLW_inst_ext_ch_gt_drpdo_UNCONNECTED;
  wire [0:0]NLW_inst_ext_ch_gt_drprdy_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_0_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_1_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_2_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_3_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_4_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_5_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_6_sigs_UNCONNECTED;
  wire [24:0]NLW_inst_pipe_tx_7_sigs_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_drp_clk_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_drp_gen3_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_drp_ovrd_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_drp_rst_n_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_drp_start_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_qplld_UNCONNECTED;
  wire [1:0]NLW_inst_qpll_qpllreset_UNCONNECTED;

  (* AXI_ACLK_LOOPBACK = "FALSE" *) 
  (* C_AXIBAR2PCIEBAR_0 = "32'b01000000000000000000000000000000" *) 
  (* C_AXIBAR2PCIEBAR_1 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR2PCIEBAR_2 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR2PCIEBAR_3 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR2PCIEBAR_4 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR2PCIEBAR_5 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR_0 = "32'b00100000000000000000000000000000" *) 
  (* C_AXIBAR_1 = "32'b11111111111111111111111111111111" *) 
  (* C_AXIBAR_2 = "32'b11111111111111111111111111111111" *) 
  (* C_AXIBAR_3 = "32'b11111111111111111111111111111111" *) 
  (* C_AXIBAR_4 = "32'b11111111111111111111111111111111" *) 
  (* C_AXIBAR_5 = "32'b11111111111111111111111111111111" *) 
  (* C_AXIBAR_AS_0 = "0" *) 
  (* C_AXIBAR_AS_1 = "1" *) 
  (* C_AXIBAR_AS_2 = "0" *) 
  (* C_AXIBAR_AS_3 = "0" *) 
  (* C_AXIBAR_AS_4 = "0" *) 
  (* C_AXIBAR_AS_5 = "0" *) 
  (* C_AXIBAR_HIGHADDR_0 = "32'b00101111111111111111111111111111" *) 
  (* C_AXIBAR_HIGHADDR_1 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR_HIGHADDR_2 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR_HIGHADDR_3 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR_HIGHADDR_4 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR_HIGHADDR_5 = "32'b00000000000000000000000000000000" *) 
  (* C_AXIBAR_NUM = "1" *) 
  (* C_BASEADDR = "32'b00000000000000000000000000000000" *) 
  (* C_CLASS_CODE = "32'b00000000000001011000000000000000" *) 
  (* C_COMP_TIMEOUT = "0" *) 
  (* C_DEVICE = "xc7a50t" *) 
  (* C_DEVICE_ID = "32'b00000000000000000111000000100001" *) 
  (* C_EP_LINK_PARTNER_RCB = "0" *) 
  (* C_FAMILY = "artix7" *) 
  (* C_HIGHADDR = "32'b00000000000111111111111111111111" *) 
  (* C_INCLUDE_BAROFFSET_REG = "1" *) 
  (* C_INCLUDE_RC = "0" *) 
  (* C_INSTANCE = "overlay1_axi_pcie_0_0" *) 
  (* C_INTERRUPT_PIN = "0" *) 
  (* C_MAX_LINK_SPEED = "1" *) 
  (* C_MSI_DECODE_ENABLE = "TRUE" *) 
  (* C_M_AXI_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DATA_WIDTH = "64" *) 
  (* C_NO_OF_LANES = "1" *) 
  (* C_NUM_MSI_REQ = "0" *) 
  (* C_PCIEBAR2AXIBAR_0 = "32'b00000000000000000000000000000000" *) 
  (* C_PCIEBAR2AXIBAR_0_SEC = "1" *) 
  (* C_PCIEBAR2AXIBAR_1 = "32'b01000100101000000000000000000000" *) 
  (* C_PCIEBAR2AXIBAR_1_SEC = "1" *) 
  (* C_PCIEBAR2AXIBAR_2 = "32'b01000000000000000000000000000000" *) 
  (* C_PCIEBAR2AXIBAR_2_SEC = "1" *) 
  (* C_PCIEBAR_AS = "1" *) 
  (* C_PCIEBAR_LEN_0 = "23" *) 
  (* C_PCIEBAR_LEN_1 = "17" *) 
  (* C_PCIEBAR_LEN_2 = "16" *) 
  (* C_PCIEBAR_NUM = "3" *) 
  (* C_PCIE_BLK_LOCN = "0" *) 
  (* C_PCIE_CAP_SLOT_IMPLEMENTED = "0" *) 
  (* C_PCIE_USE_MODE = "1.0" *) 
  (* C_REF_CLK_FREQ = "0" *) 
  (* C_REV_ID = "32'b00000000000000000000000000000000" *) 
  (* C_RP_BAR_HIDE = "FALSE" *) 
  (* C_SLOT_CLOCK_CONFIG = "TRUE" *) 
  (* C_SPEED = "-2" *) 
  (* C_SUBSYSTEM_ID = "32'b00000000000000000000000000000111" *) 
  (* C_SUBSYSTEM_VENDOR_ID = "32'b00000000000000000001000011101110" *) 
  (* C_S_AXI_ADDR_WIDTH = "32" *) 
  (* C_S_AXI_DATA_WIDTH = "64" *) 
  (* C_S_AXI_ID_WIDTH = "4" *) 
  (* C_S_AXI_SUPPORTS_NARROW_BURST = "1" *) 
  (* C_TRN_NP_FC = "FALSE" *) 
  (* C_VENDOR_ID = "32'b00000000000000000001000011101110" *) 
  (* C_XLNX_REF_BOARD = "NONE" *) 
  (* EXT_CH_GT_DRP = "FALSE" *) 
  (* EXT_PIPE_INTERFACE = "FALSE" *) 
  (* NO_SLV_ERR = "FALSE" *) 
  (* PCIE_EXT_CLK = "FALSE" *) 
  (* PCIE_EXT_GT_COMMON = "FALSE" *) 
  (* SHARED_LOGIC_IN_CORE = "TRUE" *) 
  (* TRANSCEIVER_CTRL_STATUS_PORTS = "TRUE" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  overlay1_axi_pcie_0_0_axi_pcie inst
       (.INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .MSI_Vector_Num(MSI_Vector_Num),
        .MSI_Vector_Width(MSI_Vector_Width),
        .MSI_enable(MSI_enable),
        .REFCLK(REFCLK),
        .axi_aclk(1'b0),
        .axi_aclk_out(axi_aclk_out),
        .axi_aresetn(axi_aresetn),
        .axi_ctl_aclk(1'b0),
        .axi_ctl_aclk_out(axi_ctl_aclk_out),
        .clk_dclk(1'b0),
        .clk_fab_refclk(1'b0),
        .clk_gen3(NLW_inst_clk_gen3_UNCONNECTED),
        .clk_mmcm_lock(1'b1),
        .clk_oobclk_in(1'b0),
        .clk_pclk(1'b0),
        .clk_pclk_sel(NLW_inst_clk_pclk_sel_UNCONNECTED[0]),
        .clk_rxoutclk(NLW_inst_clk_rxoutclk_UNCONNECTED[0]),
        .clk_rxusrclk(1'b0),
        .clk_txoutclk(NLW_inst_clk_txoutclk_UNCONNECTED),
        .clk_userclk1(1'b1),
        .clk_userclk2(1'b0),
        .common_commands_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .common_commands_out(NLW_inst_common_commands_out_UNCONNECTED[11:0]),
        .ext_ch_gt_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpclk(NLW_inst_ext_ch_gt_drpclk_UNCONNECTED),
        .ext_ch_gt_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ext_ch_gt_drpdo(NLW_inst_ext_ch_gt_drpdo_UNCONNECTED[15:0]),
        .ext_ch_gt_drpen(1'b0),
        .ext_ch_gt_drprdy(NLW_inst_ext_ch_gt_drprdy_UNCONNECTED[0]),
        .ext_ch_gt_drpwe(1'b0),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .int_dclk_out(int_dclk_out),
        .int_mmcm_lock_out(int_mmcm_lock_out),
        .int_oobclk_out(int_oobclk_out),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .int_qplllock_out(int_qplllock_out),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .int_rxoutclk_out(int_rxoutclk_out),
        .int_rxusrclk_out(int_rxusrclk_out),
        .int_userclk1_out(int_userclk1_out),
        .int_userclk2_out(int_userclk2_out),
        .interrupt_out(interrupt_out),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arburst(m_axi_arburst),
        .m_axi_arcache(m_axi_arcache),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arlock(m_axi_arlock),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awburst(m_axi_awburst),
        .m_axi_awcache(m_axi_awcache),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awlock(m_axi_awlock),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wvalid(m_axi_wvalid),
        .mmcm_lock(mmcm_lock),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pipe_cpll_lock(pipe_cpll_lock),
        .pipe_debug(pipe_debug),
        .pipe_debug_0(pipe_debug_0),
        .pipe_debug_1(pipe_debug_1),
        .pipe_debug_2(pipe_debug_2),
        .pipe_debug_3(pipe_debug_3),
        .pipe_debug_4(pipe_debug_4),
        .pipe_debug_5(pipe_debug_5),
        .pipe_debug_6(pipe_debug_6),
        .pipe_debug_7(pipe_debug_7),
        .pipe_debug_8(pipe_debug_8),
        .pipe_debug_9(pipe_debug_9),
        .pipe_dmonitorout(pipe_dmonitorout),
        .pipe_drp_fsm(pipe_drp_fsm),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(1'b1),
        .pipe_qpll_lock(pipe_qpll_lock),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .pipe_qrst_idle(pipe_qrst_idle),
        .pipe_rate_fsm(pipe_rate_fsm),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rx_0_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_1_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_2_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_3_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_4_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_5_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_6_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rx_7_sigs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_sync_fsm_tx(pipe_sync_fsm_tx),
        .pipe_tx_0_sigs(NLW_inst_pipe_tx_0_sigs_UNCONNECTED[24:0]),
        .pipe_tx_1_sigs(NLW_inst_pipe_tx_1_sigs_UNCONNECTED[24:0]),
        .pipe_tx_2_sigs(NLW_inst_pipe_tx_2_sigs_UNCONNECTED[24:0]),
        .pipe_tx_3_sigs(NLW_inst_pipe_tx_3_sigs_UNCONNECTED[24:0]),
        .pipe_tx_4_sigs(NLW_inst_pipe_tx_4_sigs_UNCONNECTED[24:0]),
        .pipe_tx_5_sigs(NLW_inst_pipe_tx_5_sigs_UNCONNECTED[24:0]),
        .pipe_tx_6_sigs(NLW_inst_pipe_tx_6_sigs_UNCONNECTED[24:0]),
        .pipe_tx_7_sigs(NLW_inst_pipe_tx_7_sigs_UNCONNECTED[24:0]),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .qpll_drp_clk(NLW_inst_qpll_drp_clk_UNCONNECTED[1:0]),
        .qpll_drp_crscode({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll_drp_done({1'b0,1'b0}),
        .qpll_drp_fsm({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll_drp_gen3(NLW_inst_qpll_drp_gen3_UNCONNECTED[1:0]),
        .qpll_drp_ovrd(NLW_inst_qpll_drp_ovrd_UNCONNECTED[1:0]),
        .qpll_drp_reset({1'b0,1'b0}),
        .qpll_drp_rst_n(NLW_inst_qpll_drp_rst_n_UNCONNECTED[1:0]),
        .qpll_drp_start(NLW_inst_qpll_drp_start_UNCONNECTED[1:0]),
        .qpll_qplld(NLW_inst_qpll_qplld_UNCONNECTED[1:0]),
        .qpll_qplllock({1'b0,1'b0}),
        .qpll_qplloutclk({1'b0,1'b0}),
        .qpll_qplloutrefclk({1'b0,1'b0}),
        .qpll_qpllreset(NLW_inst_qpll_qpllreset_UNCONNECTED[1:0]),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arburst(s_axi_arburst),
        .s_axi_arid(s_axi_arid),
        .s_axi_arlen(s_axi_arlen),
        .s_axi_arready(s_axi_arready),
        .s_axi_arregion(s_axi_arregion),
        .s_axi_arsize(s_axi_arsize),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awburst(s_axi_awburst),
        .s_axi_awid(s_axi_awid),
        .s_axi_awlen(s_axi_awlen),
        .s_axi_awready(s_axi_awready),
        .s_axi_awregion(s_axi_awregion),
        .s_axi_awsize(s_axi_awsize),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(s_axi_bid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awready(s_axi_ctl_awready),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bresp(s_axi_ctl_bresp),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rresp(s_axi_ctl_rresp),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(s_axi_rid),
        .s_axi_rlast(s_axi_rlast),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wlast(s_axi_wlast),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module overlay1_axi_pcie_0_0_BRAM_TDP_MACRO
   (mim_tx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_tx_wen,
    mim_tx_ren,
    mim_tx_waddr,
    mim_tx_raddr,
    mim_tx_wdata);
  output [32:0]mim_tx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_tx_wen;
  input mim_tx_ren;
  input [9:0]mim_tx_waddr;
  input [9:0]mim_tx_raddr;
  input [32:0]mim_tx_wdata;

  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_54 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_89 ;
  wire [9:0]mim_tx_raddr;
  wire [32:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [9:0]mim_tx_waddr;
  wire [32:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,mim_tx_waddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,mim_tx_raddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,mim_tx_wdata[32:27],mim_tx_wdata[25:18],mim_tx_wdata[16:9],mim_tx_wdata[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,mim_tx_wdata[26],mim_tx_wdata[17],mim_tx_wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 }),
        .DOBDO({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_54 ,mim_tx_rdata[32:27],mim_tx_rdata[25:18],mim_tx_rdata[16:9],mim_tx_rdata[7:0]}),
        .DOPADOP({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 }),
        .DOPBDOP({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_89 ,mim_tx_rdata[26],mim_tx_rdata[17],mim_tx_rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_tx_wen),
        .ENBWREN(mim_tx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module overlay1_axi_pcie_0_0_BRAM_TDP_MACRO_10
   (mim_rx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_rx_wen,
    mim_rx_ren,
    mim_rx_waddr,
    mim_rx_raddr,
    mim_rx_wdata);
  output [31:0]mim_rx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_rx_wen;
  input mim_rx_ren;
  input [9:0]mim_rx_waddr;
  input [9:0]mim_rx_raddr;
  input [31:0]mim_rx_wdata;

  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_54 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_55 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_89 ;
  wire [9:0]mim_rx_raddr;
  wire [31:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [9:0]mim_rx_waddr;
  wire [31:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,mim_rx_waddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,mim_rx_raddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,mim_rx_wdata[31:27],mim_rx_wdata[25:18],mim_rx_wdata[16:9],mim_rx_wdata[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,mim_rx_wdata[26],mim_rx_wdata[17],mim_rx_wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 }),
        .DOBDO({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_53 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_54 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_55 ,mim_rx_rdata[31:27],mim_rx_rdata[25:18],mim_rx_rdata[16:9],mim_rx_rdata[7:0]}),
        .DOPADOP({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 }),
        .DOPBDOP({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_89 ,mim_rx_rdata[26],mim_rx_rdata[17],mim_rx_rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_rx_wen),
        .ENBWREN(mim_rx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module overlay1_axi_pcie_0_0_BRAM_TDP_MACRO_11
   (mim_rx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_rx_wen,
    mim_rx_ren,
    mim_rx_waddr,
    mim_rx_raddr,
    mim_rx_wdata);
  output [35:0]mim_rx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_rx_wen;
  input mim_rx_ren;
  input [9:0]mim_rx_waddr;
  input [9:0]mim_rx_raddr;
  input [35:0]mim_rx_wdata;

  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 ;
  wire [9:0]mim_rx_raddr;
  wire [35:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [9:0]mim_rx_waddr;
  wire [35:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,mim_rx_waddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,mim_rx_raddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({mim_rx_wdata[34:27],mim_rx_wdata[25:18],mim_rx_wdata[16:9],mim_rx_wdata[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({mim_rx_wdata[35],mim_rx_wdata[26],mim_rx_wdata[17],mim_rx_wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 }),
        .DOBDO({mim_rx_rdata[34:27],mim_rx_rdata[25:18],mim_rx_rdata[16:9],mim_rx_rdata[7:0]}),
        .DOPADOP({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 }),
        .DOPBDOP({mim_rx_rdata[35],mim_rx_rdata[26],mim_rx_rdata[17],mim_rx_rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_rx_wen),
        .ENBWREN(mim_rx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "BRAM_TDP_MACRO" *) 
module overlay1_axi_pcie_0_0_BRAM_TDP_MACRO_7
   (mim_tx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_tx_wen,
    mim_tx_ren,
    mim_tx_waddr,
    mim_tx_raddr,
    mim_tx_wdata);
  output [35:0]mim_tx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_tx_wen;
  input mim_tx_ren;
  input [9:0]mim_tx_waddr;
  input [9:0]mim_tx_raddr;
  input [35:0]mim_tx_wdata;

  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ;
  wire \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 ;
  wire [9:0]mim_tx_raddr;
  wire [35:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [9:0]mim_tx_waddr;
  wire [35:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ;
  wire \NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(1),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl 
       (.ADDRARDADDR({1'b1,mim_tx_waddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,mim_tx_raddr,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_DBITERR_UNCONNECTED ),
        .DIADI({mim_tx_wdata[34:27],mim_tx_wdata[25:18],mim_tx_wdata[16:9],mim_tx_wdata[7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({mim_tx_wdata[35],mim_tx_wdata[26],mim_tx_wdata[17],mim_tx_wdata[8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_21 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_22 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_23 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_24 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_25 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_26 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_27 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_28 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_29 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_30 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_31 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_32 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_33 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_34 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_35 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_36 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_37 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_38 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_39 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_40 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_41 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_42 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_43 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_44 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_45 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_46 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_47 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_48 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_49 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_50 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_51 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_52 }),
        .DOBDO({mim_tx_rdata[34:27],mim_tx_rdata[25:18],mim_tx_rdata[16:9],mim_tx_rdata[7:0]}),
        .DOPADOP({\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_85 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_86 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_87 ,\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_n_88 }),
        .DOPBDOP({mim_tx_rdata[35],mim_tx_rdata[26],mim_tx_rdata[17],mim_tx_rdata[8]}),
        .ECCPARITY(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(mim_tx_wen),
        .ENBWREN(mim_tx_ren),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_genblk5_0.bram36_tdp_bl.bram36_tdp_bl_SBITERR_UNCONNECTED ),
        .WEA({1'b1,1'b1,1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "axi_enhanced_pcie" *) 
module overlay1_axi_pcie_0_0_axi_enhanced_pcie
   (clk_txoutclk,
    int_oobclk_out,
    int_pclk_out_slave,
    CLK,
    int_userclk1_out,
    mmcm_lock,
    int_qplllock_out,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    pipe_rxsyncdone,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_rxdisperr,
    pipe_rxnotintable,
    out0,
    cr_full,
    cw_full,
    sig_s_axis_cw_tlast,
    sig_s_axis_cr_tlast,
    s_axis_tx_tready,
    sig_Bus2IP_RNW,
    sig_blk_lnk_up,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    s_axi_ctl_wready,
    clk_pclk_sel,
    pipe_rate_idle,
    in0,
    pipe_rst_idle,
    pipe_sync_fsm_rx,
    IP2Bus_WrAck_reg,
    sig_Bus2IP_CS,
    IP2Bus_RdAck_reg,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    neqOp,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    p_49_out,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    \data_width_64.requesteridsig_reg[15] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \rd_req_32_64.rdndreqpipeline_reg[0] ,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    p_76_out,
    p_0_in,
    m_axis_cc_tvalid_d50_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \ctlplength_reg[2,0][0] ,
    cfg_dev_control_max_payload,
    \length_offset_reg[11] ,
    p_3_in,
    badreadreq,
    \ctlplength_reg[1,3][8] ,
    p_0_in1_in,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \ctlpbytecount_reg[1,0][11] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    sig_m_axis_cc_tready,
    sig_s_axis_cw_tvalid,
    \data_width_64.tlpcompleterid_reg[2][7] ,
    \data_width_64.tlpcompleterid_reg[2][15] ,
    interrupt_out,
    \sig_blk_interrupt_di_reg[7] ,
    legint_msiSM_reg,
    cfg_interrupt_msienable,
    \sig_blk_interrupt_di_reg[4] ,
    \sig_blk_interrupt_di_reg[3] ,
    \sig_blk_interrupt_di_reg[2] ,
    \sig_blk_interrupt_di_reg[1] ,
    \sig_blk_interrupt_di_reg[0] ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \ctlplength_reg[2,3][9] ,
    \ctlplength_reg[2,2][9] ,
    \ctlplength_reg[2,1][9] ,
    \ctlplength_reg[2,0][9] ,
    cpldsplitcount0_out,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0] ,
    pipe_rst_fsm,
    \data_width_64.dataoffset_reg ,
    \sig_bus2ip_ce_reg_reg[3] ,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    sig_blk_interrupt_assert_reg,
    INTX_state_reg,
    sig_intx_msi_grant_reg,
    \np_ok_mode.rx_np_ok_int_reg ,
    legint_msiSM_reg_0,
    \pipe_rate_fsm[3] ,
    \pipe_drp_fsm[2] ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    s_axi_ctl_rdata,
    \sig_register_bar_array_reg[1][31] ,
    \data_width_64.tlpcompleterid_reg[2][2] ,
    gt_ch_drp_rdy,
    \pipe_qrst_fsm[0] ,
    pipe_qrst_fsm,
    pipe_qrst_idle,
    MSI_Vector_Width,
    REFCLK,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rxprbscntreset,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    pipe_loopback,
    pipe_rxprbssel,
    pipe_txprbssel,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    s_axi_ctl_wdata,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tlast_nd_reg ,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    int_pclk_sel_slave,
    axi_aresetn,
    out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    O,
    \data_width_64.tlplength_reg[3][6] ,
    neqOp_0,
    \data_width_64.tlplength_reg[3][7] ,
    \data_width_64.tlplength_reg[3][7]_0 ,
    \data_width_64.tlplength_reg[3][6]_0 ,
    \data_width_64.tlplength_reg[3][6]_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \data_width_64.tlplength_reg[3][7]_1 ,
    \data_width_64.tlplength_reg[3][7]_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[10] ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[10]_1 ,
    \length_offset_reg[8] ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[6] ,
    R,
    \ctargetpipeline_reg[1] ,
    \ctargetpipeline_reg[1]_0 ,
    \ctargetpipeline_reg[1]_1 ,
    \ctargetpipeline_reg[1]_2 ,
    \ctargetpipeline_reg[1]_3 ,
    \ctargetpipeline_reg[1]_4 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    sig_m_axis_cc_tlast,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    s_axi_ctl_awaddr,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    sig_IP2Bus_RdAck,
    cfg_interrupt_di,
    INTX_state_reg_0,
    sig_blk_interrupt,
    intx_msi_request_2d,
    intx_msi_request_3d,
    INTX_state,
    INTX_MSI_Request,
    \msi_vector_num_2d_reg[4] ,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctargetpipeline_reg[1]_5 ,
    \cpldsplitsm_reg[1] ,
    \data_width_64.tlplength_reg[3][4] ,
    sig_IP2Bus_WrAck,
    pipe_mmcm_rst_n,
    sig_blk_interrupt_assert,
    INTX_MSI_Grant,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \end_point.psr_reg[2]_1 ,
    \data_width_64.master_int_reg_0 ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    UNCONN_IN,
    UNCONN_IN_0,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output clk_txoutclk;
  output int_oobclk_out;
  output int_pclk_out_slave;
  output CLK;
  output int_userclk1_out;
  output mmcm_lock;
  output [0:0]int_qplllock_out;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output [0:0]pipe_rxsyncdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [5:0]out0;
  output cr_full;
  output cw_full;
  output sig_s_axis_cw_tlast;
  output sig_s_axis_cr_tlast;
  output s_axis_tx_tready;
  output sig_Bus2IP_RNW;
  output sig_blk_lnk_up;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output s_axi_ctl_wready;
  output [0:0]clk_pclk_sel;
  output [0:0]pipe_rate_idle;
  output in0;
  output pipe_rst_idle;
  output [0:0]pipe_sync_fsm_rx;
  output IP2Bus_WrAck_reg;
  output sig_Bus2IP_CS;
  output IP2Bus_RdAck_reg;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output neqOp;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output p_49_out;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output \rd_req_32_64.rdndreqpipeline_reg[0] ;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output p_76_out;
  output p_0_in;
  output m_axis_cc_tvalid_d50_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output \ctlplength_reg[2,0][0] ;
  output [2:0]cfg_dev_control_max_payload;
  output [5:0]\length_offset_reg[11] ;
  output [3:0]p_3_in;
  output badreadreq;
  output [3:0]\ctlplength_reg[1,3][8] ;
  output [1:0]p_0_in1_in;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output [9:0]\ctlpbytecount_reg[1,0][11] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output sig_m_axis_cc_tready;
  output sig_s_axis_cw_tvalid;
  output [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  output [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  output interrupt_out;
  output \sig_blk_interrupt_di_reg[7] ;
  output legint_msiSM_reg;
  output cfg_interrupt_msienable;
  output \sig_blk_interrupt_di_reg[4] ;
  output \sig_blk_interrupt_di_reg[3] ;
  output \sig_blk_interrupt_di_reg[2] ;
  output \sig_blk_interrupt_di_reg[1] ;
  output \sig_blk_interrupt_di_reg[0] ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output \ctlplength_reg[2,3][9] ;
  output \ctlplength_reg[2,2][9] ;
  output \ctlplength_reg[2,1][9] ;
  output \ctlplength_reg[2,0][9] ;
  output cpldsplitcount0_out;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [3:0]pipe_rst_fsm;
  output \data_width_64.dataoffset_reg ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output sig_blk_interrupt_assert_reg;
  output INTX_state_reg;
  output sig_intx_msi_grant_reg;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output legint_msiSM_reg_0;
  output [3:0]\pipe_rate_fsm[3] ;
  output [2:0]\pipe_drp_fsm[2] ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output [31:0]s_axi_ctl_rdata;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]\pipe_qrst_fsm[0] ;
  output [2:0]pipe_qrst_fsm;
  output pipe_qrst_idle;
  output [2:0]MSI_Vector_Width;
  input REFCLK;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input pipe_rxprbscntreset;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]pipe_txprbssel;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input [31:0]s_axi_ctl_wdata;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tlast_nd_reg ;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input [0:0]int_pclk_sel_slave;
  input axi_aresetn;
  input [0:0]out;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input [3:0]O;
  input [3:0]\data_width_64.tlplength_reg[3][6] ;
  input neqOp_0;
  input [1:0]\data_width_64.tlplength_reg[3][7] ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  input \length_offset_reg[11]_0 ;
  input \length_offset_reg[10] ;
  input \length_offset_reg[10]_0 ;
  input \length_offset_reg[11]_1 ;
  input \length_offset_reg[10]_1 ;
  input \length_offset_reg[8] ;
  input [2:0]\length_offset_reg[11]_2 ;
  input \length_offset_reg[6] ;
  input [6:0]R;
  input \ctargetpipeline_reg[1] ;
  input \ctargetpipeline_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_2 ;
  input \ctargetpipeline_reg[1]_3 ;
  input \ctargetpipeline_reg[1]_4 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input sig_m_axis_cc_tlast;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input [11:0]s_axi_ctl_awaddr;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input sig_IP2Bus_RdAck;
  input [5:0]cfg_interrupt_di;
  input INTX_state_reg_0;
  input sig_blk_interrupt;
  input intx_msi_request_2d;
  input intx_msi_request_3d;
  input INTX_state;
  input INTX_MSI_Request;
  input [4:0]\msi_vector_num_2d_reg[4] ;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input \ctlplength[0,3] ;
  input \ctlplength[0,2] ;
  input \ctlplength[0,1] ;
  input \ctargetpipeline_reg[1]_5 ;
  input [1:0]\cpldsplitsm_reg[1] ;
  input \data_width_64.tlplength_reg[3][4] ;
  input sig_IP2Bus_WrAck;
  input pipe_mmcm_rst_n;
  input sig_blk_interrupt_assert;
  input INTX_MSI_Grant;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input [63:0]\end_point.psr_reg[2]_1 ;
  input [2:0]\data_width_64.master_int_reg_0 ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [1:0]UNCONN_IN;
  input [1:0]UNCONN_IN_0;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire INTX_state_reg;
  wire INTX_state_reg_0;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_WrAck_reg;
  wire [2:0]MSI_Vector_Width;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire REFCLK;
  wire [1:0]UNCONN_IN;
  wire [1:0]UNCONN_IN_0;
  wire almost_fullsig;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire [2:0]cfg_dev_control_max_payload;
  wire [5:0]cfg_interrupt_di;
  wire cfg_interrupt_msienable;
  wire [0:0]clk_pclk_sel;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire cpldsplitcount0_out;
  wire [1:0]\cpldsplitsm_reg[1] ;
  wire cr_full;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire \ctargetpipeline_reg[1]_2 ;
  wire \ctargetpipeline_reg[1]_3 ;
  wire \ctargetpipeline_reg[1]_4 ;
  wire \ctargetpipeline_reg[1]_5 ;
  wire [9:0]\ctlpbytecount_reg[1,0][11] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire [3:0]\ctlplength_reg[1,3][8] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][9] ;
  wire \ctlplength_reg[2,2][9] ;
  wire \ctlplength_reg[2,3][9] ;
  wire cw_full;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tlast_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_reg ;
  wire [2:0]\data_width_64.master_int_reg_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  wire [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  wire [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  wire \data_width_64.tlplength_reg[3][4] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7] ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire eqOp;
  wire eqOp56_in;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire \goreg_bm.dout_i_reg[63] ;
  wire [0:0]gt_ch_drp_rdy;
  wire in0;
  wire int_oobclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire [0:0]int_qplllock_out;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire int_userclk1_out;
  wire interrupt_out;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire legint_msiSM_reg;
  wire legint_msiSM_reg_0;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[10]_1 ;
  wire [5:0]\length_offset_reg[11] ;
  wire \length_offset_reg[11]_0 ;
  wire \length_offset_reg[11]_1 ;
  wire [2:0]\length_offset_reg[11]_2 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[8] ;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire mmcm_lock;
  wire [4:0]\msi_vector_num_2d_reg[4] ;
  wire neqOp;
  wire neqOp7_in;
  wire neqOp_0;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire [0:0]out;
  wire [5:0]out0;
  wire p_0_in;
  wire p_0_in0_in;
  wire [1:0]p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_49_out;
  wire p_6_in;
  wire p_76_out;
  wire padzeroes11_out;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\pipe_drp_fsm[2] ;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [2:0]pipe_qrst_fsm;
  wire [0:0]\pipe_qrst_fsm[0] ;
  wire pipe_qrst_idle;
  wire [3:0]\pipe_rate_fsm[3] ;
  wire [0:0]pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  wire [0:0]pipe_sync_fsm_rx;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire \rd_req_32_64.rdndreqpipeline_reg[0] ;
  wire request_completed;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire [11:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire s_axis_tx_tready;
  wire sig_Bus2IP_CS;
  wire sig_Bus2IP_RNW;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire sig_blk_interrupt_assert_reg;
  wire \sig_blk_interrupt_di_reg[0] ;
  wire \sig_blk_interrupt_di_reg[1] ;
  wire \sig_blk_interrupt_di_reg[2] ;
  wire \sig_blk_interrupt_di_reg[3] ;
  wire \sig_blk_interrupt_di_reg[4] ;
  wire \sig_blk_interrupt_di_reg[7] ;
  wire sig_blk_lnk_up;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire sig_intx_msi_grant_reg;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sig_s_axis_cr_tlast;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tlast;
  wire sig_s_axis_cw_tvalid;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_rnp_ok;
  wire user_lnk_up_mux_reg;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_enhanced_core_top_wrap comp_enhanced_core_top_wrap
       (.CLK(int_oobclk_out),
        .D(D),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (neqOp),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .INTX_state(INTX_state),
        .INTX_state_reg(INTX_state_reg),
        .INTX_state_reg_0(INTX_state_reg_0),
        .\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(sig_Bus2IP_CS),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg),
        .IP2Bus_WrAck_reg(sig_Bus2IP_RNW),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg),
        .MSI_Vector_Width(MSI_Vector_Width),
        .O(O),
        .Q(Q),
        .R(R),
        .REFCLK(REFCLK),
        .UNCONN_IN(UNCONN_IN),
        .UNCONN_IN_0(UNCONN_IN_0),
        .almost_fullsig(almost_fullsig),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctargetpipeline_reg[1]_1 (\ctargetpipeline_reg[1]_1 ),
        .\ctargetpipeline_reg[1]_2 (\ctargetpipeline_reg[1]_2 ),
        .\ctargetpipeline_reg[1]_3 (\ctargetpipeline_reg[1]_3 ),
        .\ctargetpipeline_reg[1]_4 (\ctargetpipeline_reg[1]_4 ),
        .\ctargetpipeline_reg[1]_5 (\ctargetpipeline_reg[1]_5 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlplength[0,1] (\ctlplength[0,1] ),
        .\ctlplength[0,2] (\ctlplength[0,2] ),
        .\ctlplength[0,3] (\ctlplength[0,3] ),
        .\ctlplength_reg[1,3][8] (\ctlplength_reg[1,3][8] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][9] (\ctlplength_reg[2,1][9] ),
        .\ctlplength_reg[2,2][9] (\ctlplength_reg[2,2][9] ),
        .\ctlplength_reg[2,3][9] (\ctlplength_reg[2,3][9] ),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (sig_s_axis_cw_tlast),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (p_49_out),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (p_76_out),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .\data_width_64.m_axis_cc_tlast_nd_reg (\data_width_64.m_axis_cc_tlast_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.master_int_reg_0 (\data_width_64.master_int_reg_0 ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlpcompleterid_reg[2][15] (\data_width_64.tlpcompleterid_reg[2][15] ),
        .\data_width_64.tlpcompleterid_reg[2][2] (\data_width_64.tlpcompleterid_reg[2][2] ),
        .\data_width_64.tlpcompleterid_reg[2][7] (\data_width_64.tlpcompleterid_reg[2][7] ),
        .\data_width_64.tlplength_reg[3][4] (\data_width_64.tlplength_reg[3][4] ),
        .\data_width_64.tlplength_reg[3][6] (\data_width_64.tlplength_reg[3][6] ),
        .\data_width_64.tlplength_reg[3][6]_0 (\data_width_64.tlplength_reg[3][6]_0 ),
        .\data_width_64.tlplength_reg[3][6]_1 (\data_width_64.tlplength_reg[3][6]_1 ),
        .\data_width_64.tlplength_reg[3][7] (\data_width_64.tlplength_reg[3][7] ),
        .\data_width_64.tlplength_reg[3][7]_0 (\data_width_64.tlplength_reg[3][7]_0 ),
        .\data_width_64.tlplength_reg[3][7]_1 (\data_width_64.tlplength_reg[3][7]_1 ),
        .\data_width_64.tlplength_reg[3][7]_2 (\data_width_64.tlplength_reg[3][7]_2 ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.fifo_rd_ptr_reg[0] (p_0_in),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .\end_point.trn_lnk_up_d_reg (sig_blk_lnk_up),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .in0(in0),
        .int_dclk_out(CLK),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .\int_qplllock_out[0] (int_qplllock_out),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .int_userclk1_out(int_userclk1_out),
        .interrupt_out(interrupt_out),
        .intx_msi_request_2d(intx_msi_request_2d),
        .intx_msi_request_3d(intx_msi_request_3d),
        .legint_msiSM_reg(legint_msiSM_reg),
        .legint_msiSM_reg_0(legint_msiSM_reg_0),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[10]_0 (\length_offset_reg[10]_0 ),
        .\length_offset_reg[10]_1 (\length_offset_reg[10]_1 ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[6] (\length_offset_reg[6] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .m_axis_cr_tlast_reg(cr_full),
        .\m_axis_cw_tuser_reg[2] (cw_full),
        .mmcm_lock(mmcm_lock),
        .\msi_vector_num_2d_reg[4] (\msi_vector_num_2d_reg[4] ),
        .neqOp7_in(neqOp7_in),
        .neqOp_0(neqOp_0),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (sig_s_axis_cr_tlast),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg ),
        .out(out),
        .out0(out0),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_3_in(p_3_in),
        .p_6_in(p_6_in),
        .padzeroes11_out(padzeroes11_out),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pclk_sel_reg1_reg(clk_pclk_sel),
        .pipe_dmonitorout(pipe_dmonitorout),
        .\pipe_drp_fsm[2] (\pipe_drp_fsm[2] ),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .\pipe_qrst_fsm[0] (\pipe_qrst_fsm[0] ),
        .pipe_qrst_idle(pipe_qrst_idle),
        .\pipe_rate_fsm[3] (\pipe_rate_fsm[3] ),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .\rd_req_32_64.rdndreqpipeline_reg[0] (\rd_req_32_64.rdndreqpipeline_reg[0] ),
        .request_completed(request_completed),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sig_blk_interrupt(sig_blk_interrupt),
        .sig_blk_interrupt_assert(sig_blk_interrupt_assert),
        .sig_blk_interrupt_assert_reg(sig_blk_interrupt_assert_reg),
        .\sig_blk_interrupt_di_reg[0] (\sig_blk_interrupt_di_reg[0] ),
        .\sig_blk_interrupt_di_reg[1] (\sig_blk_interrupt_di_reg[1] ),
        .\sig_blk_interrupt_di_reg[2] (\sig_blk_interrupt_di_reg[2] ),
        .\sig_blk_interrupt_di_reg[3] (\sig_blk_interrupt_di_reg[3] ),
        .\sig_blk_interrupt_di_reg[4] (\sig_blk_interrupt_di_reg[4] ),
        .\sig_blk_interrupt_di_reg[7] (\sig_blk_interrupt_di_reg[7] ),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .sig_intx_msi_grant_reg(sig_intx_msi_grant_reg),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_rnp_ok(trn_rnp_ok),
        .\tstrb_prev_reg[7] (s_axis_tx_tready),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
endmodule

(* ORIG_REF_NAME = "axi_mm_masterbridge_rd" *) 
module overlay1_axi_pcie_0_0_axi_mm_masterbridge_rd
   (\data_width_64.datatxpertlp_reg[1]_0 ,
    \m_axi_arsize_reg[0]_0 ,
    single_beat,
    m_axi_rready,
    dataensig_0,
    D,
    \data_width_64.m_axis_cc_tdata_h_reg[45] ,
    \data_width_64.m_axis_cc_tdata_h_reg[47] ,
    \data_width_64.m_axis_cc_tdata_h_reg[47]_0 ,
    p_1_in79_in,
    neqOp0_out,
    rdaddrsmsig1__2,
    m_axi_arvalid,
    \data_width_64.datammpipeline_reg[1]_0 ,
    \data_width_64.rrespsig_reg[1]_0 ,
    wr_ensig_reg,
    sig_addrstreampipeline,
    rdaddrsmsig_reg_0,
    \data_width_64.m_axi_rready_reg_0 ,
    \orcplpipeline_reg[2] ,
    \orcplpipeline_reg[1] ,
    \orcplpipeline_reg[0] ,
    \cplpendcpl_reg[3] ,
    \cplpendcpl_reg[2] ,
    \cplpendcpl_reg[1] ,
    \cplpendcpl_reg[0] ,
    m_axi_arsize,
    m_axi_arprot,
    \AddrVar_reg[30]_0 ,
    m_axi_araddr,
    m_axi_arlen,
    \ARProtVar_reg[2]_0 ,
    \ARProtVar_reg[1]_0 ,
    \ARProtVar_reg[0]_0 ,
    p_0_in0_in,
    p_0_in1_in,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    SR,
    sig_blk_lnk_up,
    \resetovrd.reset_reg[4] ,
    \gaf.gaf0.ram_afull_i_reg ,
    m_axi_arvalid_sig_reg_0,
    \data_width_64.rddatasmsig_reg_0 ,
    \data_width_64.single_beat_reg_0 ,
    \data_width_64.single_beat_reg_1 ,
    Q,
    m_axis_cc_tdata_d1,
    p_76_out,
    cpltargetpipeline,
    axi_aresetn,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.wrreqpendsig_reg[0]_0 ,
    m_axi_arready,
    m_axi_rlast,
    m_axi_rvalid,
    \gaf.gaf0.ram_afull_i_reg_0 ,
    \gaf.gaf0.ram_afull_i_reg_1 ,
    rdtargetpipeline,
    \gaf.gaf0.ram_afull_i_reg_2 ,
    \orcplpipeline_reg[0]_0 ,
    \orcplpipeline_reg[2]_0 ,
    \orcplpipeline_reg[1]_0 ,
    rdreq_reg,
    cplpendcpl,
    rdaddrsmsig_reg_1,
    p_1_in,
    ARProtVar,
    p_3_in,
    \AddrVar_reg[30]_1 ,
    rdaddrsmsig_reg_2,
    \data_width_64.s_axis_cr_tusersig_reg[3][0] ,
    p_1_in__28,
    p_2_in,
    m_axi_rresp,
    m_axi_rdata,
    \addrspipeline_reg[0]_0 ,
    rdaddrsmsig_reg_3);
  output \data_width_64.datatxpertlp_reg[1]_0 ;
  output \m_axi_arsize_reg[0]_0 ;
  output single_beat;
  output m_axi_rready;
  output dataensig_0;
  output [0:0]D;
  output \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[47] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[47]_0 ;
  output p_1_in79_in;
  output neqOp0_out;
  output rdaddrsmsig1__2;
  output m_axi_arvalid;
  output \data_width_64.datammpipeline_reg[1]_0 ;
  output \data_width_64.rrespsig_reg[1]_0 ;
  output wr_ensig_reg;
  output [2:0]sig_addrstreampipeline;
  output rdaddrsmsig_reg_0;
  output \data_width_64.m_axi_rready_reg_0 ;
  output \orcplpipeline_reg[2] ;
  output \orcplpipeline_reg[1] ;
  output \orcplpipeline_reg[0] ;
  output \cplpendcpl_reg[3] ;
  output \cplpendcpl_reg[2] ;
  output \cplpendcpl_reg[1] ;
  output \cplpendcpl_reg[0] ;
  output [2:0]m_axi_arsize;
  output [2:0]m_axi_arprot;
  output [25:0]\AddrVar_reg[30]_0 ;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output \ARProtVar_reg[2]_0 ;
  output \ARProtVar_reg[1]_0 ;
  output \ARProtVar_reg[0]_0 ;
  output p_0_in0_in;
  output p_0_in1_in;
  output [63:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input [0:0]SR;
  input sig_blk_lnk_up;
  input \resetovrd.reset_reg[4] ;
  input \gaf.gaf0.ram_afull_i_reg ;
  input m_axi_arvalid_sig_reg_0;
  input \data_width_64.rddatasmsig_reg_0 ;
  input \data_width_64.single_beat_reg_0 ;
  input \data_width_64.single_beat_reg_1 ;
  input [1:0]Q;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input [1:0]cpltargetpipeline;
  input axi_aresetn;
  input \data_width_64.wrreqpendsig_reg[0] ;
  input \data_width_64.wrreqpendsig_reg[0]_0 ;
  input m_axi_arready;
  input m_axi_rlast;
  input m_axi_rvalid;
  input \gaf.gaf0.ram_afull_i_reg_0 ;
  input \gaf.gaf0.ram_afull_i_reg_1 ;
  input [1:0]rdtargetpipeline;
  input \gaf.gaf0.ram_afull_i_reg_2 ;
  input \orcplpipeline_reg[0]_0 ;
  input \orcplpipeline_reg[2]_0 ;
  input \orcplpipeline_reg[1]_0 ;
  input rdreq_reg;
  input [0:3]cplpendcpl;
  input [0:0]rdaddrsmsig_reg_1;
  input [0:0]p_1_in;
  input [2:0]ARProtVar;
  input [1:0]p_3_in;
  input [25:0]\AddrVar_reg[30]_1 ;
  input [0:0]rdaddrsmsig_reg_2;
  input \data_width_64.s_axis_cr_tusersig_reg[3][0] ;
  input p_1_in__28;
  input p_2_in;
  input [1:0]m_axi_rresp;
  input [63:0]m_axi_rdata;
  input [8:0]\addrspipeline_reg[0]_0 ;
  input [0:0]rdaddrsmsig_reg_3;

  wire [2:0]ARProtVar;
  wire \ARProtVar[0]_i_1_n_0 ;
  wire \ARProtVar[1]_i_1_n_0 ;
  wire \ARProtVar[2]_i_1_n_0 ;
  wire \ARProtVar_reg[0]_0 ;
  wire \ARProtVar_reg[1]_0 ;
  wire \ARProtVar_reg[2]_0 ;
  wire [25:0]\AddrVar_reg[30]_0 ;
  wire [25:0]\AddrVar_reg[30]_1 ;
  wire [0:0]D;
  wire [63:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [31:2]L;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [2:0]addrmmpipeline;
  wire \addrmmpipeline[0]_i_1__0_n_0 ;
  wire \addrmmpipeline[1]_i_1__0_n_0 ;
  wire \addrmmpipeline[2]_i_1__0_n_0 ;
  wire \addrmmpipeline[2]_i_2_n_0 ;
  wire \addrspipeline[0]_i_1_n_0 ;
  wire \addrspipeline[0]_i_2_n_0 ;
  wire \addrspipeline[1]_i_1_n_0 ;
  wire \addrspipeline[1]_i_2_n_0 ;
  wire \addrspipeline[2]_i_1_n_0 ;
  wire \addrspipeline[2]_i_2_n_0 ;
  wire \addrspipeline[2]_i_3_n_0 ;
  wire [8:0]\addrspipeline_reg[0]_0 ;
  wire axi_aresetn;
  wire blk_lnk_up_d;
  wire [2:0]compready;
  wire [0:3]cplpendcpl;
  wire \cplpendcpl_reg[0] ;
  wire \cplpendcpl_reg[1] ;
  wire \cplpendcpl_reg[2] ;
  wire \cplpendcpl_reg[3] ;
  wire [1:0]cpltargetpipeline;
  wire \data_width_64.datammpipeline[0]_i_1__0_n_0 ;
  wire \data_width_64.datammpipeline[1]_i_1__0_n_0 ;
  wire \data_width_64.datammpipeline[2]_i_1__0_n_0 ;
  wire \data_width_64.datammpipeline[2]_i_2_n_0 ;
  wire \data_width_64.datammpipeline_reg[1]_0 ;
  wire \data_width_64.datatxpertlp[0]_i_1_n_0 ;
  wire \data_width_64.datatxpertlp[1]_i_1_n_0 ;
  wire \data_width_64.datatxpertlp[1]_i_2_n_0 ;
  wire \data_width_64.datatxpertlp_reg[1]_0 ;
  wire \data_width_64.din[63]_i_1_n_0 ;
  wire \data_width_64.m_axi_rready_reg_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[45]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[45]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[47] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[47]_0 ;
  wire \data_width_64.master_int[0]_i_1_n_0 ;
  wire \data_width_64.master_int[1]_i_1_n_0 ;
  wire \data_width_64.rddatasmsig_reg_0 ;
  wire \data_width_64.rresp[0][0]_i_1_n_0 ;
  wire \data_width_64.rresp[0][1]_i_1_n_0 ;
  wire \data_width_64.rresp[0][2]_i_1_n_0 ;
  wire \data_width_64.rresp[0][2]_i_2_n_0 ;
  wire \data_width_64.rresp[0][2]_i_3_n_0 ;
  wire \data_width_64.rresp[0][2]_i_4_n_0 ;
  wire \data_width_64.rresp[0][2]_i_5_n_0 ;
  wire \data_width_64.rresp[1][0]_i_1_n_0 ;
  wire \data_width_64.rresp[1][1]_i_1_n_0 ;
  wire \data_width_64.rresp[1][2]_i_1_n_0 ;
  wire \data_width_64.rresp[1][2]_i_2_n_0 ;
  wire \data_width_64.rresp[1][2]_i_3_n_0 ;
  wire \data_width_64.rresp[1][2]_i_4_n_0 ;
  wire \data_width_64.rresp[1][2]_i_6_n_0 ;
  wire \data_width_64.rresp[1][2]_i_7_n_0 ;
  wire \data_width_64.rresp[2][0]_i_1_n_0 ;
  wire \data_width_64.rresp[2][1]_i_1_n_0 ;
  wire \data_width_64.rresp[2][2]_i_1_n_0 ;
  wire \data_width_64.rresp[2][2]_i_2_n_0 ;
  wire \data_width_64.rresp[2][2]_i_3_n_0 ;
  wire \data_width_64.rresp[2][2]_i_4_n_0 ;
  wire \data_width_64.rresp[2][2]_i_5_n_0 ;
  wire \data_width_64.rresp[2][2]_i_6_n_0 ;
  wire \data_width_64.rresp[3][0]_i_1_n_0 ;
  wire \data_width_64.rresp[3][1]_i_1_n_0 ;
  wire \data_width_64.rresp[3][2]_i_1_n_0 ;
  wire \data_width_64.rresp[3][2]_i_2_n_0 ;
  wire \data_width_64.rresp[3][2]_i_3_n_0 ;
  wire \data_width_64.rresp[3][2]_i_4_n_0 ;
  wire \data_width_64.rresp[3][2]_i_5_n_0 ;
  wire \data_width_64.rrespsig[0]_i_1_n_0 ;
  wire \data_width_64.rrespsig[1]_i_1_n_0 ;
  wire \data_width_64.rrespsig_reg[1]_0 ;
  wire \data_width_64.rrespsig_reg_n_0_[0] ;
  wire \data_width_64.rrespsig_reg_n_0_[1] ;
  wire \data_width_64.s_axis_cr_tusersig_reg[3][0] ;
  wire \data_width_64.single_beat_reg_0 ;
  wire \data_width_64.single_beat_reg_1 ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.wrreqpendsig_reg[0]_0 ;
  wire dataensig_0;
  wire datammpipeline;
  wire [1:0]datatxpertlp;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_1 ;
  wire \gaf.gaf0.ram_afull_i_reg_2 ;
  wire [31:0]m_axi_araddr;
  wire [31:0]m_axi_araddr1;
  wire \m_axi_araddr1[31]_i_2_n_0 ;
  wire [31:2]m_axi_araddr2;
  wire \m_axi_araddr2[13]_i_4_n_0 ;
  wire \m_axi_araddr2[31]_i_1_n_0 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_0 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_1 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_2 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_3 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_4 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_5 ;
  wire \m_axi_araddr2_reg[13]_i_1_n_6 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_0 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_1 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_2 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_3 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_4 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_5 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_6 ;
  wire \m_axi_araddr2_reg[17]_i_1_n_7 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_0 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_1 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_2 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_3 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_4 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_5 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_6 ;
  wire \m_axi_araddr2_reg[21]_i_1_n_7 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_0 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_1 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_2 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_3 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_4 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_5 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_6 ;
  wire \m_axi_araddr2_reg[25]_i_1_n_7 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_0 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_1 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_2 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_3 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_4 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_5 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_6 ;
  wire \m_axi_araddr2_reg[29]_i_1_n_7 ;
  wire \m_axi_araddr2_reg[31]_i_2_n_3 ;
  wire \m_axi_araddr2_reg[31]_i_2_n_6 ;
  wire \m_axi_araddr2_reg[31]_i_2_n_7 ;
  wire [31:31]m_axi_araddr3;
  wire \m_axi_araddr3[14]_i_4_n_0 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_0 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_1 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_2 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_3 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_4 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_5 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_6 ;
  wire \m_axi_araddr3_reg[14]_i_1_n_7 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_0 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_1 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_2 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_3 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_4 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_5 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_6 ;
  wire \m_axi_araddr3_reg[18]_i_1_n_7 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_0 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_1 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_2 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_3 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_4 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_5 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_6 ;
  wire \m_axi_araddr3_reg[22]_i_1_n_7 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_0 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_1 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_2 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_3 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_4 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_5 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_6 ;
  wire \m_axi_araddr3_reg[26]_i_1_n_7 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_0 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_1 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_2 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_3 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_4 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_5 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_6 ;
  wire \m_axi_araddr3_reg[30]_i_1_n_7 ;
  wire \m_axi_araddr3_reg[31]_i_2_n_7 ;
  wire \m_axi_araddr3_reg_n_0_[10] ;
  wire \m_axi_araddr3_reg_n_0_[11] ;
  wire \m_axi_araddr3_reg_n_0_[12] ;
  wire \m_axi_araddr3_reg_n_0_[13] ;
  wire \m_axi_araddr3_reg_n_0_[14] ;
  wire \m_axi_araddr3_reg_n_0_[15] ;
  wire \m_axi_araddr3_reg_n_0_[16] ;
  wire \m_axi_araddr3_reg_n_0_[17] ;
  wire \m_axi_araddr3_reg_n_0_[18] ;
  wire \m_axi_araddr3_reg_n_0_[19] ;
  wire \m_axi_araddr3_reg_n_0_[20] ;
  wire \m_axi_araddr3_reg_n_0_[21] ;
  wire \m_axi_araddr3_reg_n_0_[22] ;
  wire \m_axi_araddr3_reg_n_0_[23] ;
  wire \m_axi_araddr3_reg_n_0_[24] ;
  wire \m_axi_araddr3_reg_n_0_[25] ;
  wire \m_axi_araddr3_reg_n_0_[26] ;
  wire \m_axi_araddr3_reg_n_0_[27] ;
  wire \m_axi_araddr3_reg_n_0_[28] ;
  wire \m_axi_araddr3_reg_n_0_[29] ;
  wire \m_axi_araddr3_reg_n_0_[2] ;
  wire \m_axi_araddr3_reg_n_0_[30] ;
  wire \m_axi_araddr3_reg_n_0_[31] ;
  wire \m_axi_araddr3_reg_n_0_[3] ;
  wire \m_axi_araddr3_reg_n_0_[4] ;
  wire \m_axi_araddr3_reg_n_0_[5] ;
  wire \m_axi_araddr3_reg_n_0_[6] ;
  wire \m_axi_araddr3_reg_n_0_[7] ;
  wire \m_axi_araddr3_reg_n_0_[8] ;
  wire \m_axi_araddr3_reg_n_0_[9] ;
  wire \m_axi_araddr4[13]_i_3_n_0 ;
  wire \m_axi_araddr4[13]_i_4_n_0 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_0 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_1 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_2 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_3 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_4 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_5 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_6 ;
  wire \m_axi_araddr4_reg[13]_i_1_n_7 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_0 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_1 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_2 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_3 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_4 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_5 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_6 ;
  wire \m_axi_araddr4_reg[17]_i_1_n_7 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_0 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_1 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_2 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_3 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_4 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_5 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_6 ;
  wire \m_axi_araddr4_reg[21]_i_1_n_7 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_0 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_1 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_2 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_3 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_4 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_5 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_6 ;
  wire \m_axi_araddr4_reg[25]_i_1_n_7 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_0 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_1 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_2 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_3 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_4 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_5 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_6 ;
  wire \m_axi_araddr4_reg[29]_i_1_n_7 ;
  wire \m_axi_araddr4_reg[31]_i_2_n_3 ;
  wire \m_axi_araddr4_reg[31]_i_2_n_6 ;
  wire \m_axi_araddr4_reg[31]_i_2_n_7 ;
  wire \m_axi_araddr4_reg_n_0_[10] ;
  wire \m_axi_araddr4_reg_n_0_[11] ;
  wire \m_axi_araddr4_reg_n_0_[12] ;
  wire \m_axi_araddr4_reg_n_0_[13] ;
  wire \m_axi_araddr4_reg_n_0_[14] ;
  wire \m_axi_araddr4_reg_n_0_[15] ;
  wire \m_axi_araddr4_reg_n_0_[16] ;
  wire \m_axi_araddr4_reg_n_0_[17] ;
  wire \m_axi_araddr4_reg_n_0_[18] ;
  wire \m_axi_araddr4_reg_n_0_[19] ;
  wire \m_axi_araddr4_reg_n_0_[20] ;
  wire \m_axi_araddr4_reg_n_0_[21] ;
  wire \m_axi_araddr4_reg_n_0_[22] ;
  wire \m_axi_araddr4_reg_n_0_[23] ;
  wire \m_axi_araddr4_reg_n_0_[24] ;
  wire \m_axi_araddr4_reg_n_0_[25] ;
  wire \m_axi_araddr4_reg_n_0_[26] ;
  wire \m_axi_araddr4_reg_n_0_[27] ;
  wire \m_axi_araddr4_reg_n_0_[28] ;
  wire \m_axi_araddr4_reg_n_0_[29] ;
  wire \m_axi_araddr4_reg_n_0_[2] ;
  wire \m_axi_araddr4_reg_n_0_[30] ;
  wire \m_axi_araddr4_reg_n_0_[31] ;
  wire \m_axi_araddr4_reg_n_0_[3] ;
  wire \m_axi_araddr4_reg_n_0_[4] ;
  wire \m_axi_araddr4_reg_n_0_[5] ;
  wire \m_axi_araddr4_reg_n_0_[6] ;
  wire \m_axi_araddr4_reg_n_0_[7] ;
  wire \m_axi_araddr4_reg_n_0_[8] ;
  wire \m_axi_araddr4_reg_n_0_[9] ;
  wire \m_axi_araddr[0]_i_1_n_0 ;
  wire \m_axi_araddr[10]_i_1_n_0 ;
  wire \m_axi_araddr[11]_i_1_n_0 ;
  wire \m_axi_araddr[12]_i_1_n_0 ;
  wire \m_axi_araddr[13]_i_1_n_0 ;
  wire \m_axi_araddr[14]_i_1_n_0 ;
  wire \m_axi_araddr[15]_i_1_n_0 ;
  wire \m_axi_araddr[16]_i_1_n_0 ;
  wire \m_axi_araddr[17]_i_1_n_0 ;
  wire \m_axi_araddr[18]_i_1_n_0 ;
  wire \m_axi_araddr[19]_i_1_n_0 ;
  wire \m_axi_araddr[1]_i_1_n_0 ;
  wire \m_axi_araddr[20]_i_1_n_0 ;
  wire \m_axi_araddr[21]_i_1_n_0 ;
  wire \m_axi_araddr[22]_i_1_n_0 ;
  wire \m_axi_araddr[23]_i_1_n_0 ;
  wire \m_axi_araddr[24]_i_1_n_0 ;
  wire \m_axi_araddr[25]_i_1_n_0 ;
  wire \m_axi_araddr[26]_i_1_n_0 ;
  wire \m_axi_araddr[27]_i_1_n_0 ;
  wire \m_axi_araddr[28]_i_1_n_0 ;
  wire \m_axi_araddr[29]_i_1_n_0 ;
  wire \m_axi_araddr[2]_i_1_n_0 ;
  wire \m_axi_araddr[30]_i_1_n_0 ;
  wire \m_axi_araddr[31]_i_2_n_0 ;
  wire \m_axi_araddr[3]_i_1_n_0 ;
  wire \m_axi_araddr[4]_i_1_n_0 ;
  wire \m_axi_araddr[5]_i_1_n_0 ;
  wire \m_axi_araddr[6]_i_1_n_0 ;
  wire \m_axi_araddr[7]_i_1_n_0 ;
  wire \m_axi_araddr[8]_i_1_n_0 ;
  wire \m_axi_araddr[9]_i_1_n_0 ;
  wire m_axi_araddrtemp_reg_0_3_0_5_n_0;
  wire m_axi_araddrtemp_reg_0_3_0_5_n_1;
  wire [7:0]m_axi_arlen;
  wire [7:0]m_axi_arlen1;
  wire \m_axi_arlen1[7]_i_1_n_0 ;
  wire \m_axi_arlen1[7]_i_2_n_0 ;
  wire [7:0]m_axi_arlen2;
  wire \m_axi_arlen2[7]_i_1_n_0 ;
  wire [7:0]m_axi_arlen3;
  wire \m_axi_arlen3[7]_i_1_n_0 ;
  wire \m_axi_arlen3[7]_i_2_n_0 ;
  wire [7:0]m_axi_arlen4;
  wire \m_axi_arlen4[7]_i_1_n_0 ;
  wire \m_axi_arlen[0]_i_1_n_0 ;
  wire \m_axi_arlen[1]_i_1_n_0 ;
  wire \m_axi_arlen[2]_i_1_n_0 ;
  wire \m_axi_arlen[3]_i_1_n_0 ;
  wire \m_axi_arlen[4]_i_1_n_0 ;
  wire \m_axi_arlen[5]_i_1_n_0 ;
  wire \m_axi_arlen[6]_i_1_n_0 ;
  wire \m_axi_arlen[7]_i_1_n_0 ;
  wire m_axi_arlentemp_reg_0_3_0_5_i_1_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_n_1;
  wire m_axi_arlentemp_reg_0_3_0_5_n_2;
  wire m_axi_arlentemp_reg_0_3_0_5_n_3;
  wire m_axi_arlentemp_reg_0_3_0_5_n_4;
  wire m_axi_arlentemp_reg_0_3_0_5_n_5;
  wire m_axi_arlentemp_reg_0_3_6_9_n_0;
  wire m_axi_arlentemp_reg_0_3_6_9_n_1;
  wire m_axi_arlentemp_reg_0_3_6_9_n_3;
  wire [2:0]m_axi_arprot;
  wire [2:0]m_axi_arprot0;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire [2:0]m_axi_arsize0;
  wire \m_axi_arsize_reg[0]_0 ;
  wire m_axi_arvalid;
  wire m_axi_arvalid_sig_i_1_n_0;
  wire m_axi_arvalid_sig_reg_0;
  wire [63:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire neqOp0_out;
  wire neqOp_2;
  wire \orcplpipeline_reg[0] ;
  wire \orcplpipeline_reg[0]_0 ;
  wire \orcplpipeline_reg[1] ;
  wire \orcplpipeline_reg[1]_0 ;
  wire \orcplpipeline_reg[2] ;
  wire \orcplpipeline_reg[2]_0 ;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire [31:31]p_0_in_1;
  wire [1:0]p_0_out;
  wire [0:0]p_1_in;
  wire p_1_in79_in;
  wire p_1_in__28;
  wire p_1_out__0;
  wire p_2_in;
  wire p_2_out;
  wire [1:0]p_3_in;
  wire p_3_out;
  wire p_76_out;
  wire rdaddrsmsig0__0;
  wire rdaddrsmsig1__2;
  wire rdaddrsmsig_reg_0;
  wire [0:0]rdaddrsmsig_reg_1;
  wire [0:0]rdaddrsmsig_reg_2;
  wire [0:0]rdaddrsmsig_reg_3;
  wire rdreq_reg;
  wire [1:0]rdtargetpipeline;
  wire \resetovrd.reset_reg[4] ;
  wire [2:0]\rrespsig[0]_49 ;
  wire [2:0]\rrespsig[1]_50 ;
  wire [2:0]\rrespsig[2]_51 ;
  wire [2:0]\rrespsig[3]_52 ;
  wire [2:0]sig_addrstreampipeline;
  wire sig_blk_lnk_up;
  wire single_beat;
  wire \slwrreqpending_reg[0]_10 ;
  wire \slwrreqpending_reg[3]_11 ;
  wire [1:0]splitcnt;
  wire [1:0]splitcntr;
  wire \splitcntr[0]_i_1_n_0 ;
  wire \splitcntr[1]_i_1_n_0 ;
  wire \splitcntr[1]_i_2_n_0 ;
  wire \splitcntr[1]_i_3_n_0 ;
  wire wr_ensig_reg;
  wire NLW_datatxpertlp_ram_reg_0_3_0_0_SPO_UNCONNECTED;
  wire NLW_datatxpertlp_ram_reg_0_3_1_1_SPO_UNCONNECTED;
  wire [0:0]\NLW_m_axi_araddr2_reg[13]_i_1_O_UNCONNECTED ;
  wire [3:1]\NLW_m_axi_araddr2_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_m_axi_araddr2_reg[31]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_m_axi_araddr3_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_m_axi_araddr3_reg[31]_i_2_O_UNCONNECTED ;
  wire [3:1]\NLW_m_axi_araddr4_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_m_axi_araddr4_reg[31]_i_2_O_UNCONNECTED ;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_30_31_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_30_31_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_30_31_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_araddrtemp_reg_0_3_6_11_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_arlentemp_reg_0_3_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_arlentemp_reg_0_3_6_9_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_arlentemp_reg_0_3_6_9_DOD_UNCONNECTED;
  wire [1:1]NLW_m_axi_arprottemp_reg_0_3_0_2_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_arprottemp_reg_0_3_0_2_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_arprottemp_reg_0_3_0_2_DOD_UNCONNECTED;
  wire [1:1]NLW_m_axi_awsizetemp_reg_0_3_0_2_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_awsizetemp_reg_0_3_0_2_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_awsizetemp_reg_0_3_0_2_DOD_UNCONNECTED;

  LUT6 #(
    .INIT(64'h01FFFFFF00000000)) 
    \ARProtVar[0]_i_1 
       (.I0(\data_width_64.s_axis_cr_tusersig_reg[3][0] ),
        .I1(p_1_in__28),
        .I2(p_2_in),
        .I3(axi_aresetn),
        .I4(rdreq_reg),
        .I5(\ARProtVar_reg[0]_0 ),
        .O(\ARProtVar[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h01FFFFFF00000000)) 
    \ARProtVar[1]_i_1 
       (.I0(\data_width_64.s_axis_cr_tusersig_reg[3][0] ),
        .I1(p_1_in__28),
        .I2(p_2_in),
        .I3(axi_aresetn),
        .I4(rdreq_reg),
        .I5(\ARProtVar_reg[1]_0 ),
        .O(\ARProtVar[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h01FFFFFF00000000)) 
    \ARProtVar[2]_i_1 
       (.I0(\data_width_64.s_axis_cr_tusersig_reg[3][0] ),
        .I1(p_1_in__28),
        .I2(p_2_in),
        .I3(axi_aresetn),
        .I4(rdreq_reg),
        .I5(\ARProtVar_reg[2]_0 ),
        .O(\ARProtVar[2]_i_1_n_0 ));
  FDRE \ARProtVar_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\ARProtVar[0]_i_1_n_0 ),
        .Q(\ARProtVar_reg[0]_0 ),
        .R(1'b0));
  FDRE \ARProtVar_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\ARProtVar[1]_i_1_n_0 ),
        .Q(\ARProtVar_reg[1]_0 ),
        .R(1'b0));
  FDRE \ARProtVar_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\ARProtVar[2]_i_1_n_0 ),
        .Q(\ARProtVar_reg[2]_0 ),
        .R(1'b0));
  FDRE \AddrVar_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [0]),
        .Q(\AddrVar_reg[30]_0 [0]),
        .R(SR));
  FDRE \AddrVar_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [10]),
        .Q(\AddrVar_reg[30]_0 [10]),
        .R(SR));
  FDRE \AddrVar_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [11]),
        .Q(\AddrVar_reg[30]_0 [11]),
        .R(SR));
  FDRE \AddrVar_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [12]),
        .Q(\AddrVar_reg[30]_0 [12]),
        .R(SR));
  FDRE \AddrVar_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [13]),
        .Q(\AddrVar_reg[30]_0 [13]),
        .R(SR));
  FDRE \AddrVar_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [14]),
        .Q(\AddrVar_reg[30]_0 [14]),
        .R(SR));
  FDRE \AddrVar_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [15]),
        .Q(\AddrVar_reg[30]_0 [15]),
        .R(SR));
  FDRE \AddrVar_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [16]),
        .Q(\AddrVar_reg[30]_0 [16]),
        .R(SR));
  FDRE \AddrVar_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [17]),
        .Q(\AddrVar_reg[30]_0 [17]),
        .R(SR));
  FDRE \AddrVar_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [18]),
        .Q(\AddrVar_reg[30]_0 [18]),
        .R(SR));
  FDRE \AddrVar_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [19]),
        .Q(\AddrVar_reg[30]_0 [19]),
        .R(SR));
  FDRE \AddrVar_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [1]),
        .Q(\AddrVar_reg[30]_0 [1]),
        .R(SR));
  FDRE \AddrVar_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [20]),
        .Q(\AddrVar_reg[30]_0 [20]),
        .R(SR));
  FDRE \AddrVar_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [21]),
        .Q(\AddrVar_reg[30]_0 [21]),
        .R(SR));
  FDRE \AddrVar_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [22]),
        .Q(\AddrVar_reg[30]_0 [22]),
        .R(SR));
  FDRE \AddrVar_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [23]),
        .Q(\AddrVar_reg[30]_0 [23]),
        .R(SR));
  FDRE \AddrVar_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [24]),
        .Q(\AddrVar_reg[30]_0 [24]),
        .R(SR));
  FDRE \AddrVar_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [2]),
        .Q(\AddrVar_reg[30]_0 [2]),
        .R(SR));
  FDRE \AddrVar_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [25]),
        .Q(\AddrVar_reg[30]_0 [25]),
        .R(SR));
  FDRE \AddrVar_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [3]),
        .Q(\AddrVar_reg[30]_0 [3]),
        .R(SR));
  FDRE \AddrVar_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [4]),
        .Q(\AddrVar_reg[30]_0 [4]),
        .R(SR));
  FDRE \AddrVar_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [5]),
        .Q(\AddrVar_reg[30]_0 [5]),
        .R(SR));
  FDRE \AddrVar_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [6]),
        .Q(\AddrVar_reg[30]_0 [6]),
        .R(SR));
  FDRE \AddrVar_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [7]),
        .Q(\AddrVar_reg[30]_0 [7]),
        .R(SR));
  FDRE \AddrVar_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [8]),
        .Q(\AddrVar_reg[30]_0 [8]),
        .R(SR));
  FDRE \AddrVar_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdreq_reg),
        .D(\AddrVar_reg[30]_1 [9]),
        .Q(\AddrVar_reg[30]_0 [9]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \addrmmpipeline[0]_i_1__0 
       (.I0(\addrmmpipeline[2]_i_2_n_0 ),
        .I1(addrmmpipeline[0]),
        .O(\addrmmpipeline[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addrmmpipeline[1]_i_1__0 
       (.I0(addrmmpipeline[0]),
        .I1(\addrmmpipeline[2]_i_2_n_0 ),
        .I2(addrmmpipeline[1]),
        .O(\addrmmpipeline[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addrmmpipeline[2]_i_1__0 
       (.I0(addrmmpipeline[0]),
        .I1(addrmmpipeline[1]),
        .I2(\addrmmpipeline[2]_i_2_n_0 ),
        .I3(addrmmpipeline[2]),
        .O(\addrmmpipeline[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8200008200000000)) 
    \addrmmpipeline[2]_i_2 
       (.I0(\m_axi_arsize_reg[0]_0 ),
        .I1(splitcntr[0]),
        .I2(splitcnt[0]),
        .I3(splitcntr[1]),
        .I4(splitcnt[1]),
        .I5(rdaddrsmsig0__0),
        .O(\addrmmpipeline[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \addrmmpipeline[2]_i_3 
       (.I0(m_axi_arvalid),
        .I1(m_axi_arready),
        .O(rdaddrsmsig0__0));
  FDRE \addrmmpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrmmpipeline[0]_i_1__0_n_0 ),
        .Q(addrmmpipeline[0]),
        .R(SR));
  FDRE \addrmmpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrmmpipeline[1]_i_1__0_n_0 ),
        .Q(addrmmpipeline[1]),
        .R(SR));
  FDRE \addrmmpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrmmpipeline[2]_i_1__0_n_0 ),
        .Q(addrmmpipeline[2]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0600F6FFF6FF0600)) 
    \addrspipeline[0]_i_1 
       (.I0(\addrspipeline[0]_i_2_n_0 ),
        .I1(addrmmpipeline[0]),
        .I2(sig_blk_lnk_up),
        .I3(blk_lnk_up_d),
        .I4(rdreq_reg),
        .I5(sig_addrstreampipeline[0]),
        .O(\addrspipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \addrspipeline[0]_i_2 
       (.I0(m_axi_arvalid),
        .I1(splitcntr[0]),
        .I2(splitcntr[1]),
        .O(\addrspipeline[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3A33FAFFCACC0A00)) 
    \addrspipeline[1]_i_1 
       (.I0(\addrspipeline[1]_i_2_n_0 ),
        .I1(sig_addrstreampipeline[0]),
        .I2(sig_blk_lnk_up),
        .I3(blk_lnk_up_d),
        .I4(rdreq_reg),
        .I5(sig_addrstreampipeline[1]),
        .O(\addrspipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h5557AAA8)) 
    \addrspipeline[1]_i_2 
       (.I0(addrmmpipeline[0]),
        .I1(m_axi_arvalid),
        .I2(splitcntr[0]),
        .I3(splitcntr[1]),
        .I4(addrmmpipeline[1]),
        .O(\addrspipeline[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAA3FAAFFAAC0AA00)) 
    \addrspipeline[2]_i_1 
       (.I0(\addrspipeline[2]_i_2_n_0 ),
        .I1(sig_addrstreampipeline[0]),
        .I2(sig_addrstreampipeline[1]),
        .I3(\addrspipeline[2]_i_3_n_0 ),
        .I4(rdreq_reg),
        .I5(sig_addrstreampipeline[2]),
        .O(\addrspipeline[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7777777F88888880)) 
    \addrspipeline[2]_i_2 
       (.I0(addrmmpipeline[0]),
        .I1(addrmmpipeline[1]),
        .I2(m_axi_arvalid),
        .I3(splitcntr[0]),
        .I4(splitcntr[1]),
        .I5(addrmmpipeline[2]),
        .O(\addrspipeline[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \addrspipeline[2]_i_3 
       (.I0(blk_lnk_up_d),
        .I1(sig_blk_lnk_up),
        .O(\addrspipeline[2]_i_3_n_0 ));
  FDRE \addrspipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrspipeline[0]_i_1_n_0 ),
        .Q(sig_addrstreampipeline[0]),
        .R(SR));
  FDRE \addrspipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrspipeline[1]_i_1_n_0 ),
        .Q(sig_addrstreampipeline[1]),
        .R(SR));
  FDRE \addrspipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrspipeline[2]_i_1_n_0 ),
        .Q(sig_addrstreampipeline[2]),
        .R(SR));
  FDRE blk_lnk_up_d_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(sig_blk_lnk_up),
        .Q(blk_lnk_up_d),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'hFF10)) 
    \cplpendcpl[0]_i_2 
       (.I0(\orcplpipeline_reg[1]_0 ),
        .I1(\orcplpipeline_reg[0]_0 ),
        .I2(neqOp_2),
        .I3(cplpendcpl[0]),
        .O(\cplpendcpl_reg[0] ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \cplpendcpl[0]_i_3 
       (.I0(compready[0]),
        .I1(\orcplpipeline_reg[0]_0 ),
        .I2(\orcplpipeline_reg[2]_0 ),
        .I3(compready[2]),
        .I4(\orcplpipeline_reg[1]_0 ),
        .I5(compready[1]),
        .O(neqOp_2));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'hFF20)) 
    \cplpendcpl[1]_i_1 
       (.I0(\orcplpipeline_reg[0]_0 ),
        .I1(\orcplpipeline_reg[1]_0 ),
        .I2(neqOp_2),
        .I3(cplpendcpl[1]),
        .O(\cplpendcpl_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'hFF20)) 
    \cplpendcpl[2]_i_1 
       (.I0(\orcplpipeline_reg[1]_0 ),
        .I1(\orcplpipeline_reg[0]_0 ),
        .I2(neqOp_2),
        .I3(cplpendcpl[2]),
        .O(\cplpendcpl_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'hFF80)) 
    \cplpendcpl[3]_i_1 
       (.I0(\orcplpipeline_reg[1]_0 ),
        .I1(\orcplpipeline_reg[0]_0 ),
        .I2(neqOp_2),
        .I3(cplpendcpl[3]),
        .O(\cplpendcpl_reg[3] ));
  FDRE \data_width_64.dataen_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.single_beat_reg_1 ),
        .Q(dataensig_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFDFFFFF00200000)) 
    \data_width_64.datammpipeline[0]_i_1__0 
       (.I0(m_axi_rlast),
        .I1(\data_width_64.datammpipeline_reg[1]_0 ),
        .I2(m_axi_rvalid),
        .I3(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I4(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I5(compready[0]),
        .O(\data_width_64.datammpipeline[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFF7FFFF00080000)) 
    \data_width_64.datammpipeline[1]_i_1__0 
       (.I0(compready[0]),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(\gaf.gaf0.ram_afull_i_reg_1 ),
        .I3(\data_width_64.datammpipeline_reg[1]_0 ),
        .I4(m_axi_rlast),
        .I5(compready[1]),
        .O(\data_width_64.datammpipeline[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.datammpipeline[2]_i_1__0 
       (.I0(compready[0]),
        .I1(compready[1]),
        .I2(\data_width_64.datammpipeline[2]_i_2_n_0 ),
        .I3(compready[2]),
        .O(\data_width_64.datammpipeline[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \data_width_64.datammpipeline[2]_i_2 
       (.I0(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I1(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I2(m_axi_rvalid),
        .I3(datatxpertlp[0]),
        .I4(datatxpertlp[1]),
        .I5(m_axi_rlast),
        .O(\data_width_64.datammpipeline[2]_i_2_n_0 ));
  FDRE \data_width_64.datammpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datammpipeline[0]_i_1__0_n_0 ),
        .Q(compready[0]),
        .R(SR));
  FDRE \data_width_64.datammpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datammpipeline[1]_i_1__0_n_0 ),
        .Q(compready[1]),
        .R(SR));
  FDRE \data_width_64.datammpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datammpipeline[2]_i_1__0_n_0 ),
        .Q(compready[2]),
        .R(SR));
  LUT4 #(
    .INIT(16'h4FE0)) 
    \data_width_64.datatxpertlp[0]_i_1 
       (.I0(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I1(p_0_out[0]),
        .I2(\data_width_64.datatxpertlp[1]_i_2_n_0 ),
        .I3(datatxpertlp[0]),
        .O(\data_width_64.datatxpertlp[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'hB8FF7400)) 
    \data_width_64.datatxpertlp[1]_i_1 
       (.I0(datatxpertlp[0]),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(p_0_out[1]),
        .I3(\data_width_64.datatxpertlp[1]_i_2_n_0 ),
        .I4(datatxpertlp[1]),
        .O(\data_width_64.datatxpertlp[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    \data_width_64.datatxpertlp[1]_i_2 
       (.I0(\data_width_64.datammpipeline_reg[1]_0 ),
        .I1(m_axi_rlast),
        .I2(m_axi_rvalid),
        .I3(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I4(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I5(\data_width_64.rrespsig_reg[1]_0 ),
        .O(\data_width_64.datatxpertlp[1]_i_2_n_0 ));
  FDRE \data_width_64.datatxpertlp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datatxpertlp[0]_i_1_n_0 ),
        .Q(datatxpertlp[0]),
        .R(SR));
  FDRE \data_width_64.datatxpertlp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datatxpertlp[1]_i_1_n_0 ),
        .Q(datatxpertlp[1]),
        .R(SR));
  LUT3 #(
    .INIT(8'h08)) 
    \data_width_64.din[63]_i_1 
       (.I0(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I1(m_axi_rvalid),
        .I2(\gaf.gaf0.ram_afull_i_reg_0 ),
        .O(\data_width_64.din[63]_i_1_n_0 ));
  FDRE \data_width_64.din_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]),
        .R(SR));
  FDRE \data_width_64.din_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[10]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [10]),
        .R(SR));
  FDRE \data_width_64.din_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[11]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [11]),
        .R(SR));
  FDRE \data_width_64.din_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[12]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [12]),
        .R(SR));
  FDRE \data_width_64.din_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[13]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [13]),
        .R(SR));
  FDRE \data_width_64.din_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[14]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [14]),
        .R(SR));
  FDRE \data_width_64.din_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[15]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [15]),
        .R(SR));
  FDRE \data_width_64.din_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[16]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [16]),
        .R(SR));
  FDRE \data_width_64.din_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[17]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [17]),
        .R(SR));
  FDRE \data_width_64.din_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[18]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [18]),
        .R(SR));
  FDRE \data_width_64.din_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[19]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [19]),
        .R(SR));
  FDRE \data_width_64.din_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]),
        .R(SR));
  FDRE \data_width_64.din_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[20]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [20]),
        .R(SR));
  FDRE \data_width_64.din_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[21]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [21]),
        .R(SR));
  FDRE \data_width_64.din_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[22]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [22]),
        .R(SR));
  FDRE \data_width_64.din_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[23]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [23]),
        .R(SR));
  FDRE \data_width_64.din_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[24]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [24]),
        .R(SR));
  FDRE \data_width_64.din_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[25]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [25]),
        .R(SR));
  FDRE \data_width_64.din_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[26]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [26]),
        .R(SR));
  FDRE \data_width_64.din_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[27]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [27]),
        .R(SR));
  FDRE \data_width_64.din_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[28]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [28]),
        .R(SR));
  FDRE \data_width_64.din_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[29]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [29]),
        .R(SR));
  FDRE \data_width_64.din_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]),
        .R(SR));
  FDRE \data_width_64.din_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[30]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [30]),
        .R(SR));
  FDRE \data_width_64.din_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[31]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [31]),
        .R(SR));
  FDRE \data_width_64.din_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[32]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [32]),
        .R(SR));
  FDRE \data_width_64.din_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[33]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [33]),
        .R(SR));
  FDRE \data_width_64.din_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[34]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [34]),
        .R(SR));
  FDRE \data_width_64.din_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[35]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [35]),
        .R(SR));
  FDRE \data_width_64.din_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[36]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [36]),
        .R(SR));
  FDRE \data_width_64.din_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[37]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [37]),
        .R(SR));
  FDRE \data_width_64.din_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[38]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [38]),
        .R(SR));
  FDRE \data_width_64.din_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[39]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [39]),
        .R(SR));
  FDRE \data_width_64.din_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]),
        .R(SR));
  FDRE \data_width_64.din_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[40]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [40]),
        .R(SR));
  FDRE \data_width_64.din_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[41]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [41]),
        .R(SR));
  FDRE \data_width_64.din_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[42]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [42]),
        .R(SR));
  FDRE \data_width_64.din_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[43]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [43]),
        .R(SR));
  FDRE \data_width_64.din_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[44]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [44]),
        .R(SR));
  FDRE \data_width_64.din_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[45]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [45]),
        .R(SR));
  FDRE \data_width_64.din_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[46]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [46]),
        .R(SR));
  FDRE \data_width_64.din_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[47]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [47]),
        .R(SR));
  FDRE \data_width_64.din_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[48]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [48]),
        .R(SR));
  FDRE \data_width_64.din_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[49]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [49]),
        .R(SR));
  FDRE \data_width_64.din_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]),
        .R(SR));
  FDRE \data_width_64.din_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[50]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [50]),
        .R(SR));
  FDRE \data_width_64.din_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[51]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [51]),
        .R(SR));
  FDRE \data_width_64.din_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[52]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [52]),
        .R(SR));
  FDRE \data_width_64.din_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[53]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [53]),
        .R(SR));
  FDRE \data_width_64.din_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[54]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [54]),
        .R(SR));
  FDRE \data_width_64.din_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[55]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [55]),
        .R(SR));
  FDRE \data_width_64.din_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[56]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [56]),
        .R(SR));
  FDRE \data_width_64.din_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[57]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [57]),
        .R(SR));
  FDRE \data_width_64.din_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[58]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [58]),
        .R(SR));
  FDRE \data_width_64.din_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[59]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [59]),
        .R(SR));
  FDRE \data_width_64.din_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]),
        .R(SR));
  FDRE \data_width_64.din_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[60]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [60]),
        .R(SR));
  FDRE \data_width_64.din_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[61]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [61]),
        .R(SR));
  FDRE \data_width_64.din_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[62]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [62]),
        .R(SR));
  FDRE \data_width_64.din_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[63]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [63]),
        .R(SR));
  FDRE \data_width_64.din_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]),
        .R(SR));
  FDRE \data_width_64.din_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]),
        .R(SR));
  FDRE \data_width_64.din_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]),
        .R(SR));
  FDRE \data_width_64.din_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.din[63]_i_1_n_0 ),
        .D(m_axi_rdata[9]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \data_width_64.m_axi_rready_i_2 
       (.I0(datatxpertlp[1]),
        .I1(datatxpertlp[0]),
        .O(\data_width_64.datammpipeline_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.m_axi_rready_i_3 
       (.I0(axi_aresetn),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.m_axi_rready_reg_0 ));
  FDRE \data_width_64.m_axi_rready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.single_beat_reg_0 ),
        .Q(m_axi_rready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[45]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[45] ),
        .I1(Q[1]),
        .I2(m_axis_cc_tdata_d1),
        .I3(Q[0]),
        .I4(p_76_out),
        .I5(\data_width_64.m_axis_cc_tdata_h[45]_i_2_n_0 ),
        .O(D));
  LUT6 #(
    .INIT(64'hAAA222A288800080)) 
    \data_width_64.m_axis_cc_tdata_h[45]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[47] ),
        .I1(cpltargetpipeline[0]),
        .I2(\rrespsig[1]_50 [0]),
        .I3(cpltargetpipeline[1]),
        .I4(\rrespsig[3]_52 [0]),
        .I5(\data_width_64.m_axis_cc_tdata_h[45]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_h[45]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_h[45]_i_3 
       (.I0(\rrespsig[2]_51 [0]),
        .I1(cpltargetpipeline[1]),
        .I2(\rrespsig[0]_49 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h[45]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[47]_i_2 
       (.I0(\rrespsig[3]_52 [1]),
        .I1(\rrespsig[1]_50 [1]),
        .I2(cpltargetpipeline[0]),
        .I3(\rrespsig[2]_51 [1]),
        .I4(cpltargetpipeline[1]),
        .I5(\rrespsig[0]_49 [1]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[47] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[47]_i_3 
       (.I0(\rrespsig[3]_52 [0]),
        .I1(\rrespsig[1]_50 [0]),
        .I2(cpltargetpipeline[0]),
        .I3(\rrespsig[2]_51 [0]),
        .I4(cpltargetpipeline[1]),
        .I5(\rrespsig[0]_49 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[47]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_4 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[47] ),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[47]_0 ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[45] ));
  LUT6 #(
    .INIT(64'hE222000000000000)) 
    \data_width_64.master_int[0]_i_1 
       (.I0(p_0_in1_in),
        .I1(datammpipeline),
        .I2(p_3_out),
        .I3(p_2_out),
        .I4(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I5(axi_aresetn),
        .O(\data_width_64.master_int[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2E22000000000000)) 
    \data_width_64.master_int[1]_i_1 
       (.I0(p_0_in0_in),
        .I1(datammpipeline),
        .I2(p_2_out),
        .I3(p_3_out),
        .I4(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I5(axi_aresetn),
        .O(\data_width_64.master_int[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    \data_width_64.master_int[1]_i_2 
       (.I0(m_axi_rlast),
        .I1(datatxpertlp[1]),
        .I2(datatxpertlp[0]),
        .I3(m_axi_rvalid),
        .I4(\gaf.gaf0.ram_afull_i_reg_0 ),
        .O(datammpipeline));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \data_width_64.master_int[1]_i_3 
       (.I0(m_axi_rresp[0]),
        .I1(\data_width_64.rrespsig_reg_n_0_[0] ),
        .O(p_2_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \data_width_64.master_int[1]_i_4 
       (.I0(m_axi_rresp[1]),
        .I1(\data_width_64.rrespsig_reg_n_0_[1] ),
        .O(p_3_out));
  FDRE \data_width_64.master_int_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.master_int[0]_i_1_n_0 ),
        .Q(p_0_in1_in),
        .R(1'b0));
  FDRE \data_width_64.master_int_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.master_int[1]_i_1_n_0 ),
        .Q(p_0_in0_in),
        .R(1'b0));
  FDRE \data_width_64.rddatasmsig_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\gaf.gaf0.ram_afull_i_reg ),
        .Q(\data_width_64.datatxpertlp_reg[1]_0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[0][0]_i_1 
       (.I0(\rrespsig[0]_49 [0]),
        .I1(\data_width_64.rresp[0][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[0] ),
        .I3(m_axi_rresp[0]),
        .I4(\data_width_64.rresp[0][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[0][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[0][1]_i_1 
       (.I0(\rrespsig[0]_49 [1]),
        .I1(\data_width_64.rresp[0][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[1] ),
        .I3(m_axi_rresp[1]),
        .I4(\data_width_64.rresp[0][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[0][1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00CE)) 
    \data_width_64.rresp[0][2]_i_1 
       (.I0(\rrespsig[0]_49 [2]),
        .I1(\data_width_64.rresp[0][2]_i_2_n_0 ),
        .I2(\data_width_64.rresp[0][2]_i_3_n_0 ),
        .I3(\data_width_64.rresp[0][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \data_width_64.rresp[0][2]_i_2 
       (.I0(\data_width_64.rresp[0][2]_i_5_n_0 ),
        .I1(m_axi_rvalid),
        .I2(axi_aresetn),
        .I3(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I4(m_axi_rlast),
        .O(\data_width_64.rresp[0][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \data_width_64.rresp[0][2]_i_3 
       (.I0(axi_aresetn),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .I2(\slwrreqpending_reg[0]_10 ),
        .I3(m_axi_rlast),
        .I4(\data_width_64.datammpipeline_reg[1]_0 ),
        .I5(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rresp[0][2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00020000AAAAAAAA)) 
    \data_width_64.rresp[0][2]_i_4 
       (.I0(axi_aresetn),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(compready[0]),
        .I3(compready[1]),
        .I4(p_1_out__0),
        .I5(sig_blk_lnk_up),
        .O(\data_width_64.rresp[0][2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \data_width_64.rresp[0][2]_i_5 
       (.I0(compready[0]),
        .I1(datatxpertlp[1]),
        .I2(datatxpertlp[0]),
        .I3(compready[1]),
        .I4(\gaf.gaf0.ram_afull_i_reg_0 ),
        .O(\data_width_64.rresp[0][2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \data_width_64.rresp[0][2]_i_6 
       (.I0(compready[0]),
        .I1(compready[1]),
        .O(\slwrreqpending_reg[0]_10 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'hBEFFFFBE)) 
    \data_width_64.rresp[0][2]_i_7 
       (.I0(\data_width_64.rrespsig_reg[1]_0 ),
        .I1(rdtargetpipeline[1]),
        .I2(compready[1]),
        .I3(rdtargetpipeline[0]),
        .I4(compready[0]),
        .O(p_1_out__0));
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[1][0]_i_1 
       (.I0(\rrespsig[1]_50 [0]),
        .I1(\data_width_64.rresp[1][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[0] ),
        .I3(m_axi_rresp[0]),
        .I4(\data_width_64.rresp[1][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[1][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[1][1]_i_1 
       (.I0(\rrespsig[1]_50 [1]),
        .I1(\data_width_64.rresp[1][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[1] ),
        .I3(m_axi_rresp[1]),
        .I4(\data_width_64.rresp[1][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[1][1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00CE)) 
    \data_width_64.rresp[1][2]_i_1 
       (.I0(\rrespsig[1]_50 [2]),
        .I1(\data_width_64.rresp[1][2]_i_2_n_0 ),
        .I2(\data_width_64.rresp[1][2]_i_3_n_0 ),
        .I3(\data_width_64.rresp[1][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[1][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \data_width_64.rresp[1][2]_i_2 
       (.I0(\gaf.gaf0.ram_afull_i_reg_2 ),
        .I1(\data_width_64.datammpipeline_reg[1]_0 ),
        .I2(compready[1]),
        .I3(\data_width_64.rresp[1][2]_i_6_n_0 ),
        .I4(axi_aresetn),
        .I5(compready[0]),
        .O(\data_width_64.rresp[1][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \data_width_64.rresp[1][2]_i_3 
       (.I0(axi_aresetn),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .I2(\data_width_64.rresp[1][2]_i_7_n_0 ),
        .I3(m_axi_rlast),
        .I4(\data_width_64.datammpipeline_reg[1]_0 ),
        .I5(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rresp[1][2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00200000AAAAAAAA)) 
    \data_width_64.rresp[1][2]_i_4 
       (.I0(axi_aresetn),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(compready[0]),
        .I3(compready[1]),
        .I4(p_1_out__0),
        .I5(sig_blk_lnk_up),
        .O(\data_width_64.rresp[1][2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.rresp[1][2]_i_6 
       (.I0(m_axi_rvalid),
        .I1(m_axi_rlast),
        .O(\data_width_64.rresp[1][2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.rresp[1][2]_i_7 
       (.I0(compready[0]),
        .I1(compready[1]),
        .O(\data_width_64.rresp[1][2]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[2][0]_i_1 
       (.I0(\rrespsig[2]_51 [0]),
        .I1(\data_width_64.rresp[2][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[0] ),
        .I3(m_axi_rresp[0]),
        .I4(\data_width_64.rresp[2][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[2][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[2][1]_i_1 
       (.I0(\rrespsig[2]_51 [1]),
        .I1(\data_width_64.rresp[2][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[1] ),
        .I3(m_axi_rresp[1]),
        .I4(\data_width_64.rresp[2][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[2][1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00CE)) 
    \data_width_64.rresp[2][2]_i_1 
       (.I0(\rrespsig[2]_51 [2]),
        .I1(\data_width_64.rresp[2][2]_i_2_n_0 ),
        .I2(\data_width_64.rresp[2][2]_i_3_n_0 ),
        .I3(\data_width_64.rresp[2][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[2][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \data_width_64.rresp[2][2]_i_2 
       (.I0(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(\data_width_64.rresp[2][2]_i_5_n_0 ),
        .I3(\data_width_64.rresp[1][2]_i_6_n_0 ),
        .I4(compready[1]),
        .I5(axi_aresetn),
        .O(\data_width_64.rresp[2][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \data_width_64.rresp[2][2]_i_3 
       (.I0(axi_aresetn),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .I2(\data_width_64.rresp[2][2]_i_6_n_0 ),
        .I3(m_axi_rlast),
        .I4(\data_width_64.datammpipeline_reg[1]_0 ),
        .I5(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rresp[2][2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00200000AAAAAAAA)) 
    \data_width_64.rresp[2][2]_i_4 
       (.I0(axi_aresetn),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(compready[1]),
        .I3(compready[0]),
        .I4(p_1_out__0),
        .I5(sig_blk_lnk_up),
        .O(\data_width_64.rresp[2][2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \data_width_64.rresp[2][2]_i_5 
       (.I0(datatxpertlp[0]),
        .I1(datatxpertlp[1]),
        .I2(compready[0]),
        .O(\data_width_64.rresp[2][2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.rresp[2][2]_i_6 
       (.I0(compready[1]),
        .I1(compready[0]),
        .O(\data_width_64.rresp[2][2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[3][0]_i_1 
       (.I0(\rrespsig[3]_52 [0]),
        .I1(\data_width_64.rresp[3][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[0] ),
        .I3(m_axi_rresp[0]),
        .I4(\data_width_64.rresp[3][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[3][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h0000EEE2)) 
    \data_width_64.rresp[3][1]_i_1 
       (.I0(\rrespsig[3]_52 [1]),
        .I1(\data_width_64.rresp[3][2]_i_3_n_0 ),
        .I2(\data_width_64.rrespsig_reg_n_0_[1] ),
        .I3(m_axi_rresp[1]),
        .I4(\data_width_64.rresp[3][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[3][1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00CE)) 
    \data_width_64.rresp[3][2]_i_1 
       (.I0(\rrespsig[3]_52 [2]),
        .I1(\data_width_64.rresp[3][2]_i_2_n_0 ),
        .I2(\data_width_64.rresp[3][2]_i_3_n_0 ),
        .I3(\data_width_64.rresp[3][2]_i_4_n_0 ),
        .O(\data_width_64.rresp[3][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \data_width_64.rresp[3][2]_i_2 
       (.I0(\data_width_64.rresp[3][2]_i_5_n_0 ),
        .I1(compready[1]),
        .I2(compready[0]),
        .I3(m_axi_rlast),
        .I4(axi_aresetn),
        .O(\data_width_64.rresp[3][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \data_width_64.rresp[3][2]_i_3 
       (.I0(axi_aresetn),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .I2(\slwrreqpending_reg[3]_11 ),
        .I3(m_axi_rlast),
        .I4(\data_width_64.datammpipeline_reg[1]_0 ),
        .I5(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rresp[3][2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h20000000AAAAAAAA)) 
    \data_width_64.rresp[3][2]_i_4 
       (.I0(axi_aresetn),
        .I1(\data_width_64.datatxpertlp_reg[1]_0 ),
        .I2(compready[0]),
        .I3(compready[1]),
        .I4(p_1_out__0),
        .I5(sig_blk_lnk_up),
        .O(\data_width_64.rresp[3][2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \data_width_64.rresp[3][2]_i_5 
       (.I0(datatxpertlp[1]),
        .I1(datatxpertlp[0]),
        .I2(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I3(m_axi_rvalid),
        .I4(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rresp[3][2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.rresp[3][2]_i_6 
       (.I0(compready[0]),
        .I1(compready[1]),
        .O(\slwrreqpending_reg[3]_11 ));
  FDRE \data_width_64.rresp_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[0][0]_i_1_n_0 ),
        .Q(\rrespsig[0]_49 [0]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[0][1]_i_1_n_0 ),
        .Q(\rrespsig[0]_49 [1]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[0][2]_i_1_n_0 ),
        .Q(\rrespsig[0]_49 [2]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[1][0]_i_1_n_0 ),
        .Q(\rrespsig[1]_50 [0]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[1][1]_i_1_n_0 ),
        .Q(\rrespsig[1]_50 [1]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[1][2]_i_1_n_0 ),
        .Q(\rrespsig[1]_50 [2]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[2][0]_i_1_n_0 ),
        .Q(\rrespsig[2]_51 [0]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[2][1]_i_1_n_0 ),
        .Q(\rrespsig[2]_51 [1]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[2][2]_i_1_n_0 ),
        .Q(\rrespsig[2]_51 [2]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[3][0]_i_1_n_0 ),
        .Q(\rrespsig[3]_52 [0]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[3][1]_i_1_n_0 ),
        .Q(\rrespsig[3]_52 [1]),
        .R(1'b0));
  FDRE \data_width_64.rresp_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rresp[3][2]_i_1_n_0 ),
        .Q(\rrespsig[3]_52 [2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.rrespdelayed_i_2 
       (.I0(\rrespsig[3]_52 [2]),
        .I1(\rrespsig[1]_50 [2]),
        .I2(cpltargetpipeline[0]),
        .I3(\rrespsig[2]_51 [2]),
        .I4(cpltargetpipeline[1]),
        .I5(\rrespsig[0]_49 [2]),
        .O(p_1_in79_in));
  LUT6 #(
    .INIT(64'hEA00EA000000EA00)) 
    \data_width_64.rrespsig[0]_i_1 
       (.I0(\data_width_64.rrespsig_reg_n_0_[0] ),
        .I1(\data_width_64.din[63]_i_1_n_0 ),
        .I2(m_axi_rresp[0]),
        .I3(axi_aresetn),
        .I4(\data_width_64.rrespsig_reg[1]_0 ),
        .I5(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rrespsig[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEA00EA000000EA00)) 
    \data_width_64.rrespsig[1]_i_1 
       (.I0(\data_width_64.rrespsig_reg_n_0_[1] ),
        .I1(\data_width_64.din[63]_i_1_n_0 ),
        .I2(m_axi_rresp[1]),
        .I3(axi_aresetn),
        .I4(\data_width_64.rrespsig_reg[1]_0 ),
        .I5(\data_width_64.datatxpertlp_reg[1]_0 ),
        .O(\data_width_64.rrespsig[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \data_width_64.rrespsig[1]_i_2 
       (.I0(compready[0]),
        .I1(sig_addrstreampipeline[0]),
        .I2(sig_addrstreampipeline[2]),
        .I3(compready[2]),
        .I4(sig_addrstreampipeline[1]),
        .I5(compready[1]),
        .O(\data_width_64.rrespsig_reg[1]_0 ));
  FDRE \data_width_64.rrespsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rrespsig[0]_i_1_n_0 ),
        .Q(\data_width_64.rrespsig_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \data_width_64.rrespsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rrespsig[1]_i_1_n_0 ),
        .Q(\data_width_64.rrespsig_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \data_width_64.single_beat_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rddatasmsig_reg_0 ),
        .Q(single_beat),
        .R(SR));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    datatxpertlp_ram_reg_0_3_0_0
       (.A0(sig_addrstreampipeline[0]),
        .A1(sig_addrstreampipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(p_3_in[0]),
        .DPO(p_0_out[0]),
        .DPRA0(compready[0]),
        .DPRA1(compready[1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(NLW_datatxpertlp_ram_reg_0_3_0_0_SPO_UNCONNECTED),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    datatxpertlp_ram_reg_0_3_1_1
       (.A0(sig_addrstreampipeline[0]),
        .A1(sig_addrstreampipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(p_3_in[1]),
        .DPO(p_0_out[1]),
        .DPRA0(compready[0]),
        .DPRA1(compready[1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(NLW_datatxpertlp_ram_reg_0_3_1_1_SPO_UNCONNECTED),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    \m_axi_araddr1[31]_i_2 
       (.I0(axi_aresetn),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .O(\m_axi_araddr1[31]_i_2_n_0 ));
  FDRE \m_axi_araddr1_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(m_axi_araddrtemp_reg_0_3_0_5_n_1),
        .Q(m_axi_araddr1[0]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[10]),
        .Q(m_axi_araddr1[10]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[11]),
        .Q(m_axi_araddr1[11]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[12]),
        .Q(m_axi_araddr1[12]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[13]),
        .Q(m_axi_araddr1[13]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[14]),
        .Q(m_axi_araddr1[14]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[15]),
        .Q(m_axi_araddr1[15]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[16]),
        .Q(m_axi_araddr1[16]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[17]),
        .Q(m_axi_araddr1[17]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[18]),
        .Q(m_axi_araddr1[18]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[19]),
        .Q(m_axi_araddr1[19]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(m_axi_araddrtemp_reg_0_3_0_5_n_0),
        .Q(m_axi_araddr1[1]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[20]),
        .Q(m_axi_araddr1[20]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[21]),
        .Q(m_axi_araddr1[21]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[22]),
        .Q(m_axi_araddr1[22]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[23]),
        .Q(m_axi_araddr1[23]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[24]),
        .Q(m_axi_araddr1[24]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[25]),
        .Q(m_axi_araddr1[25]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[26]),
        .Q(m_axi_araddr1[26]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[27]),
        .Q(m_axi_araddr1[27]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[28]),
        .Q(m_axi_araddr1[28]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[29]),
        .Q(m_axi_araddr1[29]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[2]),
        .Q(m_axi_araddr1[2]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[30]),
        .Q(m_axi_araddr1[30]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[31]),
        .Q(m_axi_araddr1[31]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[3]),
        .Q(m_axi_araddr1[3]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[4]),
        .Q(m_axi_araddr1[4]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[5]),
        .Q(m_axi_araddr1[5]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[6]),
        .Q(m_axi_araddr1[6]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[7]),
        .Q(m_axi_araddr1[7]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[8]),
        .Q(m_axi_araddr1[8]),
        .R(rdaddrsmsig_reg_3));
  FDRE \m_axi_araddr1_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[9]),
        .Q(m_axi_araddr1[9]),
        .R(rdaddrsmsig_reg_3));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axi_araddr2[13]_i_4 
       (.I0(L[11]),
        .O(\m_axi_araddr2[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00001F00)) 
    \m_axi_araddr2[31]_i_1 
       (.I0(p_0_in),
        .I1(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .I2(\data_width_64.wrreqpendsig_reg[0] ),
        .I3(axi_aresetn),
        .I4(\m_axi_arsize_reg[0]_0 ),
        .O(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[13]_i_1_n_7 ),
        .Q(m_axi_araddr2[10]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[13]_i_1_n_6 ),
        .Q(m_axi_araddr2[11]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[13]_i_1_n_5 ),
        .Q(m_axi_araddr2[12]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[13]_i_1_n_4 ),
        .Q(m_axi_araddr2[13]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  CARRY4 \m_axi_araddr2_reg[13]_i_1 
       (.CI(1'b0),
        .CO({\m_axi_araddr2_reg[13]_i_1_n_0 ,\m_axi_araddr2_reg[13]_i_1_n_1 ,\m_axi_araddr2_reg[13]_i_1_n_2 ,\m_axi_araddr2_reg[13]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,L[11],1'b0}),
        .O({\m_axi_araddr2_reg[13]_i_1_n_4 ,\m_axi_araddr2_reg[13]_i_1_n_5 ,\m_axi_araddr2_reg[13]_i_1_n_6 ,\NLW_m_axi_araddr2_reg[13]_i_1_O_UNCONNECTED [0]}),
        .S({L[13:12],\m_axi_araddr2[13]_i_4_n_0 ,L[10]}));
  FDRE \m_axi_araddr2_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[17]_i_1_n_7 ),
        .Q(m_axi_araddr2[14]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[17]_i_1_n_6 ),
        .Q(m_axi_araddr2[15]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[17]_i_1_n_5 ),
        .Q(m_axi_araddr2[16]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[17]_i_1_n_4 ),
        .Q(m_axi_araddr2[17]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  CARRY4 \m_axi_araddr2_reg[17]_i_1 
       (.CI(\m_axi_araddr2_reg[13]_i_1_n_0 ),
        .CO({\m_axi_araddr2_reg[17]_i_1_n_0 ,\m_axi_araddr2_reg[17]_i_1_n_1 ,\m_axi_araddr2_reg[17]_i_1_n_2 ,\m_axi_araddr2_reg[17]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr2_reg[17]_i_1_n_4 ,\m_axi_araddr2_reg[17]_i_1_n_5 ,\m_axi_araddr2_reg[17]_i_1_n_6 ,\m_axi_araddr2_reg[17]_i_1_n_7 }),
        .S(L[17:14]));
  FDRE \m_axi_araddr2_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[21]_i_1_n_7 ),
        .Q(m_axi_araddr2[18]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[21]_i_1_n_6 ),
        .Q(m_axi_araddr2[19]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[21]_i_1_n_5 ),
        .Q(m_axi_araddr2[20]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[21]_i_1_n_4 ),
        .Q(m_axi_araddr2[21]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  CARRY4 \m_axi_araddr2_reg[21]_i_1 
       (.CI(\m_axi_araddr2_reg[17]_i_1_n_0 ),
        .CO({\m_axi_araddr2_reg[21]_i_1_n_0 ,\m_axi_araddr2_reg[21]_i_1_n_1 ,\m_axi_araddr2_reg[21]_i_1_n_2 ,\m_axi_araddr2_reg[21]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr2_reg[21]_i_1_n_4 ,\m_axi_araddr2_reg[21]_i_1_n_5 ,\m_axi_araddr2_reg[21]_i_1_n_6 ,\m_axi_araddr2_reg[21]_i_1_n_7 }),
        .S(L[21:18]));
  FDRE \m_axi_araddr2_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[25]_i_1_n_7 ),
        .Q(m_axi_araddr2[22]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[25]_i_1_n_6 ),
        .Q(m_axi_araddr2[23]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[25]_i_1_n_5 ),
        .Q(m_axi_araddr2[24]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[25]_i_1_n_4 ),
        .Q(m_axi_araddr2[25]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  CARRY4 \m_axi_araddr2_reg[25]_i_1 
       (.CI(\m_axi_araddr2_reg[21]_i_1_n_0 ),
        .CO({\m_axi_araddr2_reg[25]_i_1_n_0 ,\m_axi_araddr2_reg[25]_i_1_n_1 ,\m_axi_araddr2_reg[25]_i_1_n_2 ,\m_axi_araddr2_reg[25]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr2_reg[25]_i_1_n_4 ,\m_axi_araddr2_reg[25]_i_1_n_5 ,\m_axi_araddr2_reg[25]_i_1_n_6 ,\m_axi_araddr2_reg[25]_i_1_n_7 }),
        .S(L[25:22]));
  FDRE \m_axi_araddr2_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[29]_i_1_n_7 ),
        .Q(m_axi_araddr2[26]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[29]_i_1_n_6 ),
        .Q(m_axi_araddr2[27]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[29]_i_1_n_5 ),
        .Q(m_axi_araddr2[28]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[29]_i_1_n_4 ),
        .Q(m_axi_araddr2[29]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  CARRY4 \m_axi_araddr2_reg[29]_i_1 
       (.CI(\m_axi_araddr2_reg[25]_i_1_n_0 ),
        .CO({\m_axi_araddr2_reg[29]_i_1_n_0 ,\m_axi_araddr2_reg[29]_i_1_n_1 ,\m_axi_araddr2_reg[29]_i_1_n_2 ,\m_axi_araddr2_reg[29]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr2_reg[29]_i_1_n_4 ,\m_axi_araddr2_reg[29]_i_1_n_5 ,\m_axi_araddr2_reg[29]_i_1_n_6 ,\m_axi_araddr2_reg[29]_i_1_n_7 }),
        .S(L[29:26]));
  FDRE \m_axi_araddr2_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[2]),
        .Q(m_axi_araddr2[2]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[31]_i_2_n_7 ),
        .Q(m_axi_araddr2[30]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr2_reg[31]_i_2_n_6 ),
        .Q(m_axi_araddr2[31]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  CARRY4 \m_axi_araddr2_reg[31]_i_2 
       (.CI(\m_axi_araddr2_reg[29]_i_1_n_0 ),
        .CO({\NLW_m_axi_araddr2_reg[31]_i_2_CO_UNCONNECTED [3:1],\m_axi_araddr2_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_m_axi_araddr2_reg[31]_i_2_O_UNCONNECTED [3:2],\m_axi_araddr2_reg[31]_i_2_n_6 ,\m_axi_araddr2_reg[31]_i_2_n_7 }),
        .S({1'b0,1'b0,L[31:30]}));
  FDRE \m_axi_araddr2_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[3]),
        .Q(m_axi_araddr2[3]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[4]),
        .Q(m_axi_araddr2[4]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[5]),
        .Q(m_axi_araddr2[5]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[6]),
        .Q(m_axi_araddr2[6]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[7]),
        .Q(m_axi_araddr2[7]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[8]),
        .Q(m_axi_araddr2[8]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  FDRE \m_axi_araddr2_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[9]),
        .Q(m_axi_araddr2[9]),
        .R(\m_axi_araddr2[31]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axi_araddr3[14]_i_4 
       (.I0(L[12]),
        .O(\m_axi_araddr3[14]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0070)) 
    \m_axi_araddr3[31]_i_1 
       (.I0(\data_width_64.wrreqpendsig_reg[0] ),
        .I1(p_0_in),
        .I2(axi_aresetn),
        .I3(\m_axi_arsize_reg[0]_0 ),
        .O(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[10]),
        .Q(\m_axi_araddr3_reg_n_0_[10] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[14]_i_1_n_7 ),
        .Q(\m_axi_araddr3_reg_n_0_[11] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[14]_i_1_n_6 ),
        .Q(\m_axi_araddr3_reg_n_0_[12] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[14]_i_1_n_5 ),
        .Q(\m_axi_araddr3_reg_n_0_[13] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[14]_i_1_n_4 ),
        .Q(\m_axi_araddr3_reg_n_0_[14] ),
        .R(m_axi_araddr3));
  CARRY4 \m_axi_araddr3_reg[14]_i_1 
       (.CI(1'b0),
        .CO({\m_axi_araddr3_reg[14]_i_1_n_0 ,\m_axi_araddr3_reg[14]_i_1_n_1 ,\m_axi_araddr3_reg[14]_i_1_n_2 ,\m_axi_araddr3_reg[14]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,L[12],1'b0}),
        .O({\m_axi_araddr3_reg[14]_i_1_n_4 ,\m_axi_araddr3_reg[14]_i_1_n_5 ,\m_axi_araddr3_reg[14]_i_1_n_6 ,\m_axi_araddr3_reg[14]_i_1_n_7 }),
        .S({L[14:13],\m_axi_araddr3[14]_i_4_n_0 ,L[11]}));
  FDRE \m_axi_araddr3_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[18]_i_1_n_7 ),
        .Q(\m_axi_araddr3_reg_n_0_[15] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[18]_i_1_n_6 ),
        .Q(\m_axi_araddr3_reg_n_0_[16] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[18]_i_1_n_5 ),
        .Q(\m_axi_araddr3_reg_n_0_[17] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[18]_i_1_n_4 ),
        .Q(\m_axi_araddr3_reg_n_0_[18] ),
        .R(m_axi_araddr3));
  CARRY4 \m_axi_araddr3_reg[18]_i_1 
       (.CI(\m_axi_araddr3_reg[14]_i_1_n_0 ),
        .CO({\m_axi_araddr3_reg[18]_i_1_n_0 ,\m_axi_araddr3_reg[18]_i_1_n_1 ,\m_axi_araddr3_reg[18]_i_1_n_2 ,\m_axi_araddr3_reg[18]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr3_reg[18]_i_1_n_4 ,\m_axi_araddr3_reg[18]_i_1_n_5 ,\m_axi_araddr3_reg[18]_i_1_n_6 ,\m_axi_araddr3_reg[18]_i_1_n_7 }),
        .S(L[18:15]));
  FDRE \m_axi_araddr3_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[22]_i_1_n_7 ),
        .Q(\m_axi_araddr3_reg_n_0_[19] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[22]_i_1_n_6 ),
        .Q(\m_axi_araddr3_reg_n_0_[20] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[22]_i_1_n_5 ),
        .Q(\m_axi_araddr3_reg_n_0_[21] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[22]_i_1_n_4 ),
        .Q(\m_axi_araddr3_reg_n_0_[22] ),
        .R(m_axi_araddr3));
  CARRY4 \m_axi_araddr3_reg[22]_i_1 
       (.CI(\m_axi_araddr3_reg[18]_i_1_n_0 ),
        .CO({\m_axi_araddr3_reg[22]_i_1_n_0 ,\m_axi_araddr3_reg[22]_i_1_n_1 ,\m_axi_araddr3_reg[22]_i_1_n_2 ,\m_axi_araddr3_reg[22]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr3_reg[22]_i_1_n_4 ,\m_axi_araddr3_reg[22]_i_1_n_5 ,\m_axi_araddr3_reg[22]_i_1_n_6 ,\m_axi_araddr3_reg[22]_i_1_n_7 }),
        .S(L[22:19]));
  FDRE \m_axi_araddr3_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[26]_i_1_n_7 ),
        .Q(\m_axi_araddr3_reg_n_0_[23] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[26]_i_1_n_6 ),
        .Q(\m_axi_araddr3_reg_n_0_[24] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[26]_i_1_n_5 ),
        .Q(\m_axi_araddr3_reg_n_0_[25] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[26]_i_1_n_4 ),
        .Q(\m_axi_araddr3_reg_n_0_[26] ),
        .R(m_axi_araddr3));
  CARRY4 \m_axi_araddr3_reg[26]_i_1 
       (.CI(\m_axi_araddr3_reg[22]_i_1_n_0 ),
        .CO({\m_axi_araddr3_reg[26]_i_1_n_0 ,\m_axi_araddr3_reg[26]_i_1_n_1 ,\m_axi_araddr3_reg[26]_i_1_n_2 ,\m_axi_araddr3_reg[26]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr3_reg[26]_i_1_n_4 ,\m_axi_araddr3_reg[26]_i_1_n_5 ,\m_axi_araddr3_reg[26]_i_1_n_6 ,\m_axi_araddr3_reg[26]_i_1_n_7 }),
        .S(L[26:23]));
  FDRE \m_axi_araddr3_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[30]_i_1_n_7 ),
        .Q(\m_axi_araddr3_reg_n_0_[27] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[30]_i_1_n_6 ),
        .Q(\m_axi_araddr3_reg_n_0_[28] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[30]_i_1_n_5 ),
        .Q(\m_axi_araddr3_reg_n_0_[29] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[2]),
        .Q(\m_axi_araddr3_reg_n_0_[2] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[30]_i_1_n_4 ),
        .Q(\m_axi_araddr3_reg_n_0_[30] ),
        .R(m_axi_araddr3));
  CARRY4 \m_axi_araddr3_reg[30]_i_1 
       (.CI(\m_axi_araddr3_reg[26]_i_1_n_0 ),
        .CO({\m_axi_araddr3_reg[30]_i_1_n_0 ,\m_axi_araddr3_reg[30]_i_1_n_1 ,\m_axi_araddr3_reg[30]_i_1_n_2 ,\m_axi_araddr3_reg[30]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr3_reg[30]_i_1_n_4 ,\m_axi_araddr3_reg[30]_i_1_n_5 ,\m_axi_araddr3_reg[30]_i_1_n_6 ,\m_axi_araddr3_reg[30]_i_1_n_7 }),
        .S(L[30:27]));
  FDRE \m_axi_araddr3_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr3_reg[31]_i_2_n_7 ),
        .Q(\m_axi_araddr3_reg_n_0_[31] ),
        .R(m_axi_araddr3));
  CARRY4 \m_axi_araddr3_reg[31]_i_2 
       (.CI(\m_axi_araddr3_reg[30]_i_1_n_0 ),
        .CO(\NLW_m_axi_araddr3_reg[31]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_m_axi_araddr3_reg[31]_i_2_O_UNCONNECTED [3:1],\m_axi_araddr3_reg[31]_i_2_n_7 }),
        .S({1'b0,1'b0,1'b0,L[31]}));
  FDRE \m_axi_araddr3_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[3]),
        .Q(\m_axi_araddr3_reg_n_0_[3] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[4]),
        .Q(\m_axi_araddr3_reg_n_0_[4] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[5]),
        .Q(\m_axi_araddr3_reg_n_0_[5] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[6]),
        .Q(\m_axi_araddr3_reg_n_0_[6] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[7]),
        .Q(\m_axi_araddr3_reg_n_0_[7] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[8]),
        .Q(\m_axi_araddr3_reg_n_0_[8] ),
        .R(m_axi_araddr3));
  FDRE \m_axi_araddr3_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[9]),
        .Q(\m_axi_araddr3_reg_n_0_[9] ),
        .R(m_axi_araddr3));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axi_araddr4[13]_i_3 
       (.I0(L[12]),
        .O(\m_axi_araddr4[13]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axi_araddr4[13]_i_4 
       (.I0(L[11]),
        .O(\m_axi_araddr4[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00007F00)) 
    \m_axi_araddr4[31]_i_1 
       (.I0(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .I1(\data_width_64.wrreqpendsig_reg[0] ),
        .I2(p_0_in),
        .I3(axi_aresetn),
        .I4(\m_axi_arsize_reg[0]_0 ),
        .O(p_0_in_1));
  FDRE \m_axi_araddr4_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[10]),
        .Q(\m_axi_araddr4_reg_n_0_[10] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[13]_i_1_n_6 ),
        .Q(\m_axi_araddr4_reg_n_0_[11] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[13]_i_1_n_5 ),
        .Q(\m_axi_araddr4_reg_n_0_[12] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[13]_i_1_n_4 ),
        .Q(\m_axi_araddr4_reg_n_0_[13] ),
        .R(p_0_in_1));
  CARRY4 \m_axi_araddr4_reg[13]_i_1 
       (.CI(1'b0),
        .CO({\m_axi_araddr4_reg[13]_i_1_n_0 ,\m_axi_araddr4_reg[13]_i_1_n_1 ,\m_axi_araddr4_reg[13]_i_1_n_2 ,\m_axi_araddr4_reg[13]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,L[12:11],1'b0}),
        .O({\m_axi_araddr4_reg[13]_i_1_n_4 ,\m_axi_araddr4_reg[13]_i_1_n_5 ,\m_axi_araddr4_reg[13]_i_1_n_6 ,\m_axi_araddr4_reg[13]_i_1_n_7 }),
        .S({L[13],\m_axi_araddr4[13]_i_3_n_0 ,\m_axi_araddr4[13]_i_4_n_0 ,L[10]}));
  FDRE \m_axi_araddr4_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[17]_i_1_n_7 ),
        .Q(\m_axi_araddr4_reg_n_0_[14] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[17]_i_1_n_6 ),
        .Q(\m_axi_araddr4_reg_n_0_[15] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[17]_i_1_n_5 ),
        .Q(\m_axi_araddr4_reg_n_0_[16] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[17]_i_1_n_4 ),
        .Q(\m_axi_araddr4_reg_n_0_[17] ),
        .R(p_0_in_1));
  CARRY4 \m_axi_araddr4_reg[17]_i_1 
       (.CI(\m_axi_araddr4_reg[13]_i_1_n_0 ),
        .CO({\m_axi_araddr4_reg[17]_i_1_n_0 ,\m_axi_araddr4_reg[17]_i_1_n_1 ,\m_axi_araddr4_reg[17]_i_1_n_2 ,\m_axi_araddr4_reg[17]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr4_reg[17]_i_1_n_4 ,\m_axi_araddr4_reg[17]_i_1_n_5 ,\m_axi_araddr4_reg[17]_i_1_n_6 ,\m_axi_araddr4_reg[17]_i_1_n_7 }),
        .S(L[17:14]));
  FDRE \m_axi_araddr4_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[21]_i_1_n_7 ),
        .Q(\m_axi_araddr4_reg_n_0_[18] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[21]_i_1_n_6 ),
        .Q(\m_axi_araddr4_reg_n_0_[19] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[21]_i_1_n_5 ),
        .Q(\m_axi_araddr4_reg_n_0_[20] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[21]_i_1_n_4 ),
        .Q(\m_axi_araddr4_reg_n_0_[21] ),
        .R(p_0_in_1));
  CARRY4 \m_axi_araddr4_reg[21]_i_1 
       (.CI(\m_axi_araddr4_reg[17]_i_1_n_0 ),
        .CO({\m_axi_araddr4_reg[21]_i_1_n_0 ,\m_axi_araddr4_reg[21]_i_1_n_1 ,\m_axi_araddr4_reg[21]_i_1_n_2 ,\m_axi_araddr4_reg[21]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr4_reg[21]_i_1_n_4 ,\m_axi_araddr4_reg[21]_i_1_n_5 ,\m_axi_araddr4_reg[21]_i_1_n_6 ,\m_axi_araddr4_reg[21]_i_1_n_7 }),
        .S(L[21:18]));
  FDRE \m_axi_araddr4_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[25]_i_1_n_7 ),
        .Q(\m_axi_araddr4_reg_n_0_[22] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[25]_i_1_n_6 ),
        .Q(\m_axi_araddr4_reg_n_0_[23] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[25]_i_1_n_5 ),
        .Q(\m_axi_araddr4_reg_n_0_[24] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[25]_i_1_n_4 ),
        .Q(\m_axi_araddr4_reg_n_0_[25] ),
        .R(p_0_in_1));
  CARRY4 \m_axi_araddr4_reg[25]_i_1 
       (.CI(\m_axi_araddr4_reg[21]_i_1_n_0 ),
        .CO({\m_axi_araddr4_reg[25]_i_1_n_0 ,\m_axi_araddr4_reg[25]_i_1_n_1 ,\m_axi_araddr4_reg[25]_i_1_n_2 ,\m_axi_araddr4_reg[25]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr4_reg[25]_i_1_n_4 ,\m_axi_araddr4_reg[25]_i_1_n_5 ,\m_axi_araddr4_reg[25]_i_1_n_6 ,\m_axi_araddr4_reg[25]_i_1_n_7 }),
        .S(L[25:22]));
  FDRE \m_axi_araddr4_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[29]_i_1_n_7 ),
        .Q(\m_axi_araddr4_reg_n_0_[26] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[29]_i_1_n_6 ),
        .Q(\m_axi_araddr4_reg_n_0_[27] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[29]_i_1_n_5 ),
        .Q(\m_axi_araddr4_reg_n_0_[28] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[29]_i_1_n_4 ),
        .Q(\m_axi_araddr4_reg_n_0_[29] ),
        .R(p_0_in_1));
  CARRY4 \m_axi_araddr4_reg[29]_i_1 
       (.CI(\m_axi_araddr4_reg[25]_i_1_n_0 ),
        .CO({\m_axi_araddr4_reg[29]_i_1_n_0 ,\m_axi_araddr4_reg[29]_i_1_n_1 ,\m_axi_araddr4_reg[29]_i_1_n_2 ,\m_axi_araddr4_reg[29]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\m_axi_araddr4_reg[29]_i_1_n_4 ,\m_axi_araddr4_reg[29]_i_1_n_5 ,\m_axi_araddr4_reg[29]_i_1_n_6 ,\m_axi_araddr4_reg[29]_i_1_n_7 }),
        .S(L[29:26]));
  FDRE \m_axi_araddr4_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[2]),
        .Q(\m_axi_araddr4_reg_n_0_[2] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[31]_i_2_n_7 ),
        .Q(\m_axi_araddr4_reg_n_0_[30] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(\m_axi_araddr4_reg[31]_i_2_n_6 ),
        .Q(\m_axi_araddr4_reg_n_0_[31] ),
        .R(p_0_in_1));
  CARRY4 \m_axi_araddr4_reg[31]_i_2 
       (.CI(\m_axi_araddr4_reg[29]_i_1_n_0 ),
        .CO({\NLW_m_axi_araddr4_reg[31]_i_2_CO_UNCONNECTED [3:1],\m_axi_araddr4_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_m_axi_araddr4_reg[31]_i_2_O_UNCONNECTED [3:2],\m_axi_araddr4_reg[31]_i_2_n_6 ,\m_axi_araddr4_reg[31]_i_2_n_7 }),
        .S({1'b0,1'b0,L[31:30]}));
  FDRE \m_axi_araddr4_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[3]),
        .Q(\m_axi_araddr4_reg_n_0_[3] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[4]),
        .Q(\m_axi_araddr4_reg_n_0_[4] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[5]),
        .Q(\m_axi_araddr4_reg_n_0_[5] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[6]),
        .Q(\m_axi_araddr4_reg_n_0_[6] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[7]),
        .Q(\m_axi_araddr4_reg_n_0_[7] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[8]),
        .Q(\m_axi_araddr4_reg_n_0_[8] ),
        .R(p_0_in_1));
  FDRE \m_axi_araddr4_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_araddr1[31]_i_2_n_0 ),
        .D(L[9]),
        .Q(\m_axi_araddr4_reg_n_0_[9] ),
        .R(p_0_in_1));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \m_axi_araddr[0]_i_1 
       (.I0(splitcntr[1]),
        .I1(m_axi_araddr1[0]),
        .I2(splitcntr[0]),
        .O(\m_axi_araddr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[10]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[10] ),
        .I1(m_axi_araddr2[10]),
        .I2(\m_axi_araddr3_reg_n_0_[10] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[10]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[11]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[11] ),
        .I1(m_axi_araddr2[11]),
        .I2(\m_axi_araddr3_reg_n_0_[11] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[11]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[12]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[12] ),
        .I1(m_axi_araddr2[12]),
        .I2(\m_axi_araddr3_reg_n_0_[12] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[12]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[13]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[13] ),
        .I1(m_axi_araddr2[13]),
        .I2(\m_axi_araddr3_reg_n_0_[13] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[13]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[14]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[14] ),
        .I1(m_axi_araddr2[14]),
        .I2(\m_axi_araddr3_reg_n_0_[14] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[14]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[15]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[15] ),
        .I1(m_axi_araddr2[15]),
        .I2(\m_axi_araddr3_reg_n_0_[15] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[15]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[16]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[16] ),
        .I1(m_axi_araddr2[16]),
        .I2(\m_axi_araddr3_reg_n_0_[16] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[16]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[17]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[17] ),
        .I1(m_axi_araddr2[17]),
        .I2(\m_axi_araddr3_reg_n_0_[17] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[17]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[18]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[18] ),
        .I1(m_axi_araddr2[18]),
        .I2(\m_axi_araddr3_reg_n_0_[18] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[18]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[19]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[19] ),
        .I1(m_axi_araddr2[19]),
        .I2(\m_axi_araddr3_reg_n_0_[19] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[19]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \m_axi_araddr[1]_i_1 
       (.I0(splitcntr[1]),
        .I1(m_axi_araddr1[1]),
        .I2(splitcntr[0]),
        .O(\m_axi_araddr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[20]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[20] ),
        .I1(m_axi_araddr2[20]),
        .I2(\m_axi_araddr3_reg_n_0_[20] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[20]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[21]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[21] ),
        .I1(m_axi_araddr2[21]),
        .I2(\m_axi_araddr3_reg_n_0_[21] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[21]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[22]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[22] ),
        .I1(m_axi_araddr2[22]),
        .I2(\m_axi_araddr3_reg_n_0_[22] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[22]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[23]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[23] ),
        .I1(m_axi_araddr2[23]),
        .I2(\m_axi_araddr3_reg_n_0_[23] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[23]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[24]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[24] ),
        .I1(m_axi_araddr2[24]),
        .I2(\m_axi_araddr3_reg_n_0_[24] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[24]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[25]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[25] ),
        .I1(m_axi_araddr2[25]),
        .I2(\m_axi_araddr3_reg_n_0_[25] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[25]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[26]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[26] ),
        .I1(m_axi_araddr2[26]),
        .I2(\m_axi_araddr3_reg_n_0_[26] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[26]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[27]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[27] ),
        .I1(m_axi_araddr2[27]),
        .I2(\m_axi_araddr3_reg_n_0_[27] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[27]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[28]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[28] ),
        .I1(m_axi_araddr2[28]),
        .I2(\m_axi_araddr3_reg_n_0_[28] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[28]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[29]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[29] ),
        .I1(m_axi_araddr2[29]),
        .I2(\m_axi_araddr3_reg_n_0_[29] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[29]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[2]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[2] ),
        .I1(m_axi_araddr2[2]),
        .I2(\m_axi_araddr3_reg_n_0_[2] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[2]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[30]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[30] ),
        .I1(m_axi_araddr2[30]),
        .I2(\m_axi_araddr3_reg_n_0_[30] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[30]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[31]_i_2 
       (.I0(\m_axi_araddr4_reg_n_0_[31] ),
        .I1(m_axi_araddr2[31]),
        .I2(\m_axi_araddr3_reg_n_0_[31] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[31]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[3]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[3] ),
        .I1(m_axi_araddr2[3]),
        .I2(\m_axi_araddr3_reg_n_0_[3] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[3]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[4]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[4] ),
        .I1(m_axi_araddr2[4]),
        .I2(\m_axi_araddr3_reg_n_0_[4] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[4]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[5]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[5] ),
        .I1(m_axi_araddr2[5]),
        .I2(\m_axi_araddr3_reg_n_0_[5] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[5]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[6]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[6] ),
        .I1(m_axi_araddr2[6]),
        .I2(\m_axi_araddr3_reg_n_0_[6] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[6]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[7]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[7] ),
        .I1(m_axi_araddr2[7]),
        .I2(\m_axi_araddr3_reg_n_0_[7] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[7]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[8]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[8] ),
        .I1(m_axi_araddr2[8]),
        .I2(\m_axi_araddr3_reg_n_0_[8] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[8]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_araddr[9]_i_1 
       (.I0(\m_axi_araddr4_reg_n_0_[9] ),
        .I1(m_axi_araddr2[9]),
        .I2(\m_axi_araddr3_reg_n_0_[9] ),
        .I3(splitcntr[1]),
        .I4(m_axi_araddr1[9]),
        .I5(splitcntr[0]),
        .O(\m_axi_araddr[9]_i_1_n_0 ));
  FDRE \m_axi_araddr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[0]_i_1_n_0 ),
        .Q(m_axi_araddr[0]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[10]_i_1_n_0 ),
        .Q(m_axi_araddr[10]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[11]_i_1_n_0 ),
        .Q(m_axi_araddr[11]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[12]_i_1_n_0 ),
        .Q(m_axi_araddr[12]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[13]_i_1_n_0 ),
        .Q(m_axi_araddr[13]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[14]_i_1_n_0 ),
        .Q(m_axi_araddr[14]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[15]_i_1_n_0 ),
        .Q(m_axi_araddr[15]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[16]_i_1_n_0 ),
        .Q(m_axi_araddr[16]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[17]_i_1_n_0 ),
        .Q(m_axi_araddr[17]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[18]_i_1_n_0 ),
        .Q(m_axi_araddr[18]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[19]_i_1_n_0 ),
        .Q(m_axi_araddr[19]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[1]_i_1_n_0 ),
        .Q(m_axi_araddr[1]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[20]_i_1_n_0 ),
        .Q(m_axi_araddr[20]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[21]_i_1_n_0 ),
        .Q(m_axi_araddr[21]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[22]_i_1_n_0 ),
        .Q(m_axi_araddr[22]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[23]_i_1_n_0 ),
        .Q(m_axi_araddr[23]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[24]_i_1_n_0 ),
        .Q(m_axi_araddr[24]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[25]_i_1_n_0 ),
        .Q(m_axi_araddr[25]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[26]_i_1_n_0 ),
        .Q(m_axi_araddr[26]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[27]_i_1_n_0 ),
        .Q(m_axi_araddr[27]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[28]_i_1_n_0 ),
        .Q(m_axi_araddr[28]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[29]_i_1_n_0 ),
        .Q(m_axi_araddr[29]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[2]_i_1_n_0 ),
        .Q(m_axi_araddr[2]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[30]_i_1_n_0 ),
        .Q(m_axi_araddr[30]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[31]_i_2_n_0 ),
        .Q(m_axi_araddr[31]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[3]_i_1_n_0 ),
        .Q(m_axi_araddr[3]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[4]_i_1_n_0 ),
        .Q(m_axi_araddr[4]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[5]_i_1_n_0 ),
        .Q(m_axi_araddr[5]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[6]_i_1_n_0 ),
        .Q(m_axi_araddr[6]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[7]_i_1_n_0 ),
        .Q(m_axi_araddr[7]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[8]_i_1_n_0 ),
        .Q(m_axi_araddr[8]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_araddr_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_araddr[9]_i_1_n_0 ),
        .Q(m_axi_araddr[9]),
        .R(rdaddrsmsig_reg_1));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_araddrtemp_reg_0_3_0_5
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(\AddrVar_reg[30]_1 [1:0]),
        .DIB(\AddrVar_reg[30]_1 [3:2]),
        .DIC(\AddrVar_reg[30]_1 [5:4]),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_araddrtemp_reg_0_3_0_5_n_0,m_axi_araddrtemp_reg_0_3_0_5_n_1}),
        .DOB(L[3:2]),
        .DOC(L[5:4]),
        .DOD(NLW_m_axi_araddrtemp_reg_0_3_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_araddrtemp_reg_0_3_12_17
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(\AddrVar_reg[30]_1 [13:12]),
        .DIB(\AddrVar_reg[30]_1 [15:14]),
        .DIC(\AddrVar_reg[30]_1 [17:16]),
        .DID({1'b0,1'b0}),
        .DOA(L[13:12]),
        .DOB(L[15:14]),
        .DOC(L[17:16]),
        .DOD(NLW_m_axi_araddrtemp_reg_0_3_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_araddrtemp_reg_0_3_18_23
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(\AddrVar_reg[30]_1 [19:18]),
        .DIB(\AddrVar_reg[30]_1 [21:20]),
        .DIC(\AddrVar_reg[30]_1 [23:22]),
        .DID({1'b0,1'b0}),
        .DOA(L[19:18]),
        .DOB(L[21:20]),
        .DOC(L[23:22]),
        .DOD(NLW_m_axi_araddrtemp_reg_0_3_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_araddrtemp_reg_0_3_24_29
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA({1'b0,1'b0}),
        .DIB({1'b0,\AddrVar_reg[30]_1 [24]}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(L[25:24]),
        .DOB(L[27:26]),
        .DOC(L[29:28]),
        .DOD(NLW_m_axi_araddrtemp_reg_0_3_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_araddrtemp_reg_0_3_30_31
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA({1'b0,\AddrVar_reg[30]_1 [25]}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(L[31:30]),
        .DOB(NLW_m_axi_araddrtemp_reg_0_3_30_31_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_m_axi_araddrtemp_reg_0_3_30_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_araddrtemp_reg_0_3_30_31_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_araddrtemp_reg_0_3_6_11
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(\AddrVar_reg[30]_1 [7:6]),
        .DIB(\AddrVar_reg[30]_1 [9:8]),
        .DIC(\AddrVar_reg[30]_1 [11:10]),
        .DID({1'b0,1'b0}),
        .DOA(L[7:6]),
        .DOB(L[9:8]),
        .DOC(L[11:10]),
        .DOD(NLW_m_axi_araddrtemp_reg_0_3_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  LUT5 #(
    .INIT(32'h22200000)) 
    \m_axi_arlen1[7]_i_1 
       (.I0(axi_aresetn),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .I2(p_0_in),
        .I3(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .I4(\data_width_64.wrreqpendsig_reg[0] ),
        .O(\m_axi_arlen1[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    \m_axi_arlen1[7]_i_2 
       (.I0(axi_aresetn),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .I2(\data_width_64.wrreqpendsig_reg[0] ),
        .O(\m_axi_arlen1[7]_i_2_n_0 ));
  FDSE \m_axi_arlen1_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_1),
        .Q(m_axi_arlen1[0]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_0),
        .Q(m_axi_arlen1[1]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_3),
        .Q(m_axi_arlen1[2]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_2),
        .Q(m_axi_arlen1[3]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_5),
        .Q(m_axi_arlen1[4]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_4),
        .Q(m_axi_arlen1[5]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_1),
        .Q(m_axi_arlen1[6]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  FDSE \m_axi_arlen1_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen1[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_0),
        .Q(m_axi_arlen1[7]),
        .S(\m_axi_arlen1[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2000)) 
    \m_axi_arlen2[7]_i_1 
       (.I0(axi_aresetn),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .I2(\data_width_64.wrreqpendsig_reg[0] ),
        .I3(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .O(\m_axi_arlen2[7]_i_1_n_0 ));
  FDSE \m_axi_arlen2_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_1),
        .Q(m_axi_arlen2[0]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_0),
        .Q(m_axi_arlen2[1]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_3),
        .Q(m_axi_arlen2[2]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_2),
        .Q(m_axi_arlen2[3]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_5),
        .Q(m_axi_arlen2[4]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_4),
        .Q(m_axi_arlen2[5]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_1),
        .Q(m_axi_arlen2[6]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen2_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen2[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_0),
        .Q(m_axi_arlen2[7]),
        .S(\m_axi_arlen3[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h20000000)) 
    \m_axi_arlen3[7]_i_1 
       (.I0(axi_aresetn),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .I2(p_0_in),
        .I3(\data_width_64.wrreqpendsig_reg[0] ),
        .I4(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .O(\m_axi_arlen3[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \m_axi_arlen3[7]_i_2 
       (.I0(axi_aresetn),
        .I1(\data_width_64.wrreqpendsig_reg[0] ),
        .I2(p_0_in),
        .I3(\m_axi_arsize_reg[0]_0 ),
        .O(\m_axi_arlen3[7]_i_2_n_0 ));
  FDSE \m_axi_arlen3_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_1),
        .Q(m_axi_arlen3[0]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_0),
        .Q(m_axi_arlen3[1]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_3),
        .Q(m_axi_arlen3[2]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_2),
        .Q(m_axi_arlen3[3]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_5),
        .Q(m_axi_arlen3[4]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_4),
        .Q(m_axi_arlen3[5]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_1),
        .Q(m_axi_arlen3[6]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  FDSE \m_axi_arlen3_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen3[7]_i_2_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_0),
        .Q(m_axi_arlen3[7]),
        .S(\m_axi_arlen3[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \m_axi_arlen4[7]_i_1 
       (.I0(axi_aresetn),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .I2(neqOp0_out),
        .I3(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .I4(\data_width_64.wrreqpendsig_reg[0]_0 ),
        .I5(p_0_in),
        .O(\m_axi_arlen4[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \m_axi_arlen4[7]_i_2 
       (.I0(addrmmpipeline[0]),
        .I1(sig_addrstreampipeline[0]),
        .I2(sig_addrstreampipeline[2]),
        .I3(addrmmpipeline[2]),
        .I4(sig_addrstreampipeline[1]),
        .I5(addrmmpipeline[1]),
        .O(neqOp0_out));
  FDRE \m_axi_arlen4_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_1),
        .Q(m_axi_arlen4[0]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_0),
        .Q(m_axi_arlen4[1]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_3),
        .Q(m_axi_arlen4[2]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_2),
        .Q(m_axi_arlen4[3]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_5),
        .Q(m_axi_arlen4[4]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_0_5_n_4),
        .Q(m_axi_arlen4[5]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_1),
        .Q(m_axi_arlen4[6]),
        .R(1'b0));
  FDRE \m_axi_arlen4_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arlen4[7]_i_1_n_0 ),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_0),
        .Q(m_axi_arlen4[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[0]_i_1 
       (.I0(m_axi_arlen4[0]),
        .I1(m_axi_arlen2[0]),
        .I2(m_axi_arlen3[0]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[0]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[1]_i_1 
       (.I0(m_axi_arlen4[1]),
        .I1(m_axi_arlen2[1]),
        .I2(m_axi_arlen3[1]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[1]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[2]_i_1 
       (.I0(m_axi_arlen4[2]),
        .I1(m_axi_arlen2[2]),
        .I2(m_axi_arlen3[2]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[2]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[3]_i_1 
       (.I0(m_axi_arlen4[3]),
        .I1(m_axi_arlen2[3]),
        .I2(m_axi_arlen3[3]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[3]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[4]_i_1 
       (.I0(m_axi_arlen4[4]),
        .I1(m_axi_arlen2[4]),
        .I2(m_axi_arlen3[4]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[4]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[5]_i_1 
       (.I0(m_axi_arlen4[5]),
        .I1(m_axi_arlen2[5]),
        .I2(m_axi_arlen3[5]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[5]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[6]_i_1 
       (.I0(m_axi_arlen4[6]),
        .I1(m_axi_arlen2[6]),
        .I2(m_axi_arlen3[6]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[6]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \m_axi_arlen[7]_i_1 
       (.I0(m_axi_arlen4[7]),
        .I1(m_axi_arlen2[7]),
        .I2(m_axi_arlen3[7]),
        .I3(splitcntr[1]),
        .I4(m_axi_arlen1[7]),
        .I5(splitcntr[0]),
        .O(\m_axi_arlen[7]_i_1_n_0 ));
  FDRE \m_axi_arlen_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[0]_i_1_n_0 ),
        .Q(m_axi_arlen[0]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[1]_i_1_n_0 ),
        .Q(m_axi_arlen[1]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[2]_i_1_n_0 ),
        .Q(m_axi_arlen[2]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[3]_i_1_n_0 ),
        .Q(m_axi_arlen[3]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[4]_i_1_n_0 ),
        .Q(m_axi_arlen[4]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[5]_i_1_n_0 ),
        .Q(m_axi_arlen[5]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[6]_i_1_n_0 ),
        .Q(m_axi_arlen[6]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arlen_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(\m_axi_arlen[7]_i_1_n_0 ),
        .Q(m_axi_arlen[7]),
        .R(rdaddrsmsig_reg_1));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_arlentemp_reg_0_3_0_5
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(\addrspipeline_reg[0]_0 [1:0]),
        .DIB(\addrspipeline_reg[0]_0 [3:2]),
        .DIC(\addrspipeline_reg[0]_0 [5:4]),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_arlentemp_reg_0_3_0_5_n_0,m_axi_arlentemp_reg_0_3_0_5_n_1}),
        .DOB({m_axi_arlentemp_reg_0_3_0_5_n_2,m_axi_arlentemp_reg_0_3_0_5_n_3}),
        .DOC({m_axi_arlentemp_reg_0_3_0_5_n_4,m_axi_arlentemp_reg_0_3_0_5_n_5}),
        .DOD(NLW_m_axi_arlentemp_reg_0_3_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    m_axi_arlentemp_reg_0_3_0_5_i_1
       (.I0(rdreq_reg),
        .I1(axi_aresetn),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_arlentemp_reg_0_3_6_9
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(\addrspipeline_reg[0]_0 [7:6]),
        .DIB({p_3_in[1],\addrspipeline_reg[0]_0 [8]}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_arlentemp_reg_0_3_6_9_n_0,m_axi_arlentemp_reg_0_3_6_9_n_1}),
        .DOB({p_0_in,m_axi_arlentemp_reg_0_3_6_9_n_3}),
        .DOC(NLW_m_axi_arlentemp_reg_0_3_6_9_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_arlentemp_reg_0_3_6_9_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  FDRE \m_axi_arprot_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(m_axi_arprot0[0]),
        .Q(m_axi_arprot[0]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arprot_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(m_axi_arprot0[1]),
        .Q(m_axi_arprot[1]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arprot_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(m_axi_arprot0[2]),
        .Q(m_axi_arprot[2]),
        .R(rdaddrsmsig_reg_1));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_arprottemp_reg_0_3_0_2
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA(ARProtVar[1:0]),
        .DIB({1'b0,ARProtVar[2]}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(m_axi_arprot0[1:0]),
        .DOB({NLW_m_axi_arprottemp_reg_0_3_0_2_DOB_UNCONNECTED[1],m_axi_arprot0[2]}),
        .DOC(NLW_m_axi_arprottemp_reg_0_3_0_2_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_arprottemp_reg_0_3_0_2_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  FDRE \m_axi_arsize_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(m_axi_arsize0[0]),
        .Q(m_axi_arsize[0]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arsize_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(m_axi_arsize0[1]),
        .Q(m_axi_arsize[1]),
        .R(rdaddrsmsig_reg_1));
  FDRE \m_axi_arsize_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_arsize_reg[0]_0 ),
        .D(m_axi_arsize0[2]),
        .Q(m_axi_arsize[2]),
        .R(rdaddrsmsig_reg_1));
  LUT6 #(
    .INIT(64'h0222AA0002220000)) 
    m_axi_arvalid_sig_i_1
       (.I0(axi_aresetn),
        .I1(rdaddrsmsig1__2),
        .I2(m_axi_arready),
        .I3(m_axi_arvalid),
        .I4(\m_axi_arsize_reg[0]_0 ),
        .I5(\data_width_64.wrreqpendsig_reg[0] ),
        .O(m_axi_arvalid_sig_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    m_axi_arvalid_sig_i_2
       (.I0(splitcntr[1]),
        .I1(splitcntr[0]),
        .I2(sig_blk_lnk_up),
        .I3(m_axi_arvalid),
        .O(rdaddrsmsig1__2));
  FDRE m_axi_arvalid_sig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axi_arvalid_sig_i_1_n_0),
        .Q(m_axi_arvalid),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awsizetemp_reg_0_3_0_2
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,sig_addrstreampipeline[1:0]}),
        .DIA({1'b1,p_1_in}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(m_axi_arsize0[1:0]),
        .DOB({NLW_m_axi_awsizetemp_reg_0_3_0_2_DOB_UNCONNECTED[1],m_axi_arsize0[2]}),
        .DOC(NLW_m_axi_awsizetemp_reg_0_3_0_2_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_awsizetemp_reg_0_3_0_2_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(m_axi_arlentemp_reg_0_3_0_5_i_1_n_0));
  LUT6 #(
    .INIT(64'h90090000FFFF6FF6)) 
    \orcplpipeline[0]_i_1 
       (.I0(compready[1]),
        .I1(\orcplpipeline_reg[1]_0 ),
        .I2(compready[2]),
        .I3(\orcplpipeline_reg[2]_0 ),
        .I4(compready[0]),
        .I5(\orcplpipeline_reg[0]_0 ),
        .O(\orcplpipeline_reg[0] ));
  LUT6 #(
    .INIT(64'hB33BCCCC33334CC4)) 
    \orcplpipeline[1]_i_1 
       (.I0(compready[0]),
        .I1(\orcplpipeline_reg[0]_0 ),
        .I2(\orcplpipeline_reg[2]_0 ),
        .I3(compready[2]),
        .I4(\orcplpipeline_reg[1]_0 ),
        .I5(compready[1]),
        .O(\orcplpipeline_reg[1] ));
  LUT6 #(
    .INIT(64'hBC34F0F03C3CF0F0)) 
    \orcplpipeline[2]_i_1 
       (.I0(compready[0]),
        .I1(\orcplpipeline_reg[0]_0 ),
        .I2(\orcplpipeline_reg[2]_0 ),
        .I3(compready[2]),
        .I4(\orcplpipeline_reg[1]_0 ),
        .I5(compready[1]),
        .O(\orcplpipeline_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'h6FF6)) 
    rdaddrsmsig_i_2
       (.I0(splitcntr[0]),
        .I1(splitcnt[0]),
        .I2(splitcntr[1]),
        .I3(splitcnt[1]),
        .O(rdaddrsmsig_reg_0));
  FDRE rdaddrsmsig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axi_arvalid_sig_reg_0),
        .Q(\m_axi_arsize_reg[0]_0 ),
        .R(SR));
  FDRE \splitcnt_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdaddrsmsig_reg_2),
        .D(m_axi_arlentemp_reg_0_3_6_9_n_3),
        .Q(splitcnt[0]),
        .R(SR));
  FDRE \splitcnt_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdaddrsmsig_reg_2),
        .D(p_0_in),
        .Q(splitcnt[1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h00006AAA)) 
    \splitcntr[0]_i_1 
       (.I0(splitcntr[0]),
        .I1(\m_axi_arsize_reg[0]_0 ),
        .I2(m_axi_arready),
        .I3(m_axi_arvalid),
        .I4(\splitcntr[1]_i_2_n_0 ),
        .O(\splitcntr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000006AAAAAAA)) 
    \splitcntr[1]_i_1 
       (.I0(splitcntr[1]),
        .I1(m_axi_arvalid),
        .I2(m_axi_arready),
        .I3(\m_axi_arsize_reg[0]_0 ),
        .I4(splitcntr[0]),
        .I5(\splitcntr[1]_i_2_n_0 ),
        .O(\splitcntr[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFD55)) 
    \splitcntr[1]_i_2 
       (.I0(axi_aresetn),
        .I1(rdaddrsmsig1__2),
        .I2(\splitcntr[1]_i_3_n_0 ),
        .I3(\m_axi_arsize_reg[0]_0 ),
        .O(\splitcntr[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8008000000008008)) 
    \splitcntr[1]_i_3 
       (.I0(m_axi_arready),
        .I1(m_axi_arvalid),
        .I2(splitcnt[1]),
        .I3(splitcntr[1]),
        .I4(splitcnt[0]),
        .I5(splitcntr[0]),
        .O(\splitcntr[1]_i_3_n_0 ));
  FDRE \splitcntr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\splitcntr[0]_i_1_n_0 ),
        .Q(splitcntr[0]),
        .R(1'b0));
  FDRE \splitcntr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\splitcntr[1]_i_1_n_0 ),
        .Q(splitcntr[1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    wr_ensig_i_1
       (.I0(dataensig_0),
        .I1(m_axi_rready),
        .I2(m_axi_rvalid),
        .O(wr_ensig_reg));
endmodule

(* ORIG_REF_NAME = "axi_mm_masterbridge_wr" *) 
module overlay1_axi_pcie_0_0_axi_mm_masterbridge_wr
   (m_axi_awvalid,
    \m_axi_awlen_reg[7]_0 ,
    \data_width_64.m_axi_wstrb_reg[7]_0 ,
    \master_int_reg[1]_0 ,
    m_axi_bready,
    \data_width_64.s_axis_cw_treadysig_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    \data_width_64.m_axi_wstrb_reg[4]_0 ,
    neqOp1_out,
    \data_width_64.wrdatasmsig_reg[1]_0 ,
    dataen8_out,
    neqOp0_out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    neqOp,
    \respmmpipeline_reg[0]_0 ,
    \respmmpipeline_reg[2]_0 ,
    \respmmpipeline_reg[1]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    m_axi_wdata,
    m_axi_wvalid,
    m_axi_awsize,
    m_axi_awprot,
    \master_int_reg[1]_1 ,
    p_1_in2_in,
    m_axi_awlen,
    m_axi_awaddr,
    m_axi_wstrb,
    \resetovrd.reset_reg[4] ,
    p_0_in,
    Q,
    axi_aresetn_0,
    m_axi_awvalidsig_reg_0,
    empty_fwft_i_reg,
    wrrespsmsig_reg_0,
    m_axi_breadysig_reg_0,
    out,
    sig_blk_lnk_up,
    m_axi_wready,
    empty_fwft_i_reg_0,
    sig_s_axis_cw_tlast,
    \data_width_64.tlpfmtsig_reg[0] ,
    axi_aresetn,
    \goreg_bm.dout_i_reg[64] ,
    m_axi_awready,
    E,
    p_1_in,
    minusOp,
    m_axi_bvalid,
    m_axi_bresp,
    \data_width_64.tlpaddrl_reg[22] ,
    s_axis_cw_tusersig,
    p_2_in,
    wrdatasmsig__1,
    \data_width_64.lastdwbesig_reg[3] );
  output m_axi_awvalid;
  output \m_axi_awlen_reg[7]_0 ;
  output \data_width_64.m_axi_wstrb_reg[7]_0 ;
  output \master_int_reg[1]_0 ;
  output m_axi_bready;
  output \data_width_64.s_axis_cw_treadysig_reg ;
  output \data_width_64.s_axis_cw_treadysig_reg_0 ;
  output \data_width_64.m_axi_wstrb_reg[4]_0 ;
  output neqOp1_out;
  output \data_width_64.wrdatasmsig_reg[1]_0 ;
  output dataen8_out;
  output neqOp0_out;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output neqOp;
  output \respmmpipeline_reg[0]_0 ;
  output \respmmpipeline_reg[2]_0 ;
  output \respmmpipeline_reg[1]_0 ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output [63:0]m_axi_wdata;
  output m_axi_wvalid;
  output [2:0]m_axi_awsize;
  output [2:0]m_axi_awprot;
  output \master_int_reg[1]_1 ;
  output p_1_in2_in;
  output [7:0]m_axi_awlen;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_wstrb;
  input \resetovrd.reset_reg[4] ;
  input p_0_in;
  input [3:0]Q;
  input axi_aresetn_0;
  input m_axi_awvalidsig_reg_0;
  input empty_fwft_i_reg;
  input wrrespsmsig_reg_0;
  input m_axi_breadysig_reg_0;
  input [1:0]out;
  input sig_blk_lnk_up;
  input m_axi_wready;
  input empty_fwft_i_reg_0;
  input sig_s_axis_cw_tlast;
  input \data_width_64.tlpfmtsig_reg[0] ;
  input axi_aresetn;
  input [64:0]\goreg_bm.dout_i_reg[64] ;
  input m_axi_awready;
  input [0:0]E;
  input [0:0]p_1_in;
  input [7:0]minusOp;
  input m_axi_bvalid;
  input [1:0]m_axi_bresp;
  input [22:0]\data_width_64.tlpaddrl_reg[22] ;
  input [1:0]s_axis_cw_tusersig;
  input p_2_in;
  input wrdatasmsig__1;
  input [3:0]\data_width_64.lastdwbesig_reg[3] ;

  wire [30:0]AddrVar;
  wire [0:0]E;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [6:0]L;
  wire [3:0]Q;
  wire [2:0]addrmmpipeline;
  wire \addrmmpipeline[0]_i_1_n_0 ;
  wire \addrmmpipeline[1]_i_1_n_0 ;
  wire \addrmmpipeline[2]_i_1_n_0 ;
  wire [2:0]addrspipeline;
  wire \addrspipeline[0]_i_1__0_n_0 ;
  wire \addrspipeline[1]_i_1__0_n_0 ;
  wire \addrspipeline[2]_i_1__0_n_0 ;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire \data_width_64.datammpipeline[0]_i_1_n_0 ;
  wire \data_width_64.datammpipeline[1]_i_1_n_0 ;
  wire \data_width_64.datammpipeline[2]_i_1_n_0 ;
  wire \data_width_64.datammpipeline[2]_i_2__0_n_0 ;
  wire [3:0]\data_width_64.lastdwbesig_reg[3] ;
  wire \data_width_64.m_axi_wstrb[0]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[1]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[2]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[3]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[3]_i_2_n_0 ;
  wire \data_width_64.m_axi_wstrb[3]_i_3_n_0 ;
  wire \data_width_64.m_axi_wstrb[4]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[5]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[6]_i_1_n_0 ;
  wire \data_width_64.m_axi_wstrb[7]_i_2_n_0 ;
  wire \data_width_64.m_axi_wstrb[7]_i_3_n_0 ;
  wire \data_width_64.m_axi_wstrb[7]_i_4_n_0 ;
  wire \data_width_64.m_axi_wstrb[7]_i_5_n_0 ;
  wire \data_width_64.m_axi_wstrb[7]_i_6_n_0 ;
  wire \data_width_64.m_axi_wstrb[7]_i_7_n_0 ;
  wire \data_width_64.m_axi_wstrb_reg[4]_0 ;
  wire \data_width_64.m_axi_wstrb_reg[7]_0 ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire \data_width_64.tlpfmtsig_reg[0] ;
  wire \data_width_64.tlplength_reg[0]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[1]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[1]_i_2_n_0 ;
  wire \data_width_64.tlplength_reg[2]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[3]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[3]_i_2_n_0 ;
  wire \data_width_64.tlplength_reg[3]_i_3_n_0 ;
  wire \data_width_64.tlplength_reg[4]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[4]_i_2_n_0 ;
  wire \data_width_64.tlplength_reg[4]_i_3_n_0 ;
  wire \data_width_64.tlplength_reg[5]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[5]_i_2_n_0 ;
  wire \data_width_64.tlplength_reg[5]_i_3_n_0 ;
  wire \data_width_64.tlplength_reg[6]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[6]_i_2_n_0 ;
  wire \data_width_64.tlplength_reg[7]_i_1_n_0 ;
  wire \data_width_64.tlplength_reg[7]_i_2_n_0 ;
  wire \data_width_64.tlplength_reg[7]_i_3_n_0 ;
  wire \data_width_64.tlplength_reg[7]_i_4_n_0 ;
  wire \data_width_64.tlplength_reg_reg_n_0_[0] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[1] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[2] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[3] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[4] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[5] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[6] ;
  wire \data_width_64.tlplength_reg_reg_n_0_[7] ;
  wire \data_width_64.wrdatasmsig[0]_i_1_n_0 ;
  wire \data_width_64.wrdatasmsig[1]_i_1_n_0 ;
  wire \data_width_64.wrdatasmsig_reg[1]_0 ;
  wire dataen8_out;
  wire [2:0]datammpipeline;
  wire empty_fwft_i_reg;
  wire empty_fwft_i_reg_0;
  wire eqOp;
  wire [64:0]\goreg_bm.dout_i_reg[64] ;
  wire lastdwbetemp_reg_0_3_0_3_n_0;
  wire lastdwbetemp_reg_0_3_0_3_n_1;
  wire lastdwbetemp_reg_0_3_0_3_n_2;
  wire lastdwbetemp_reg_0_3_0_3_n_3;
  wire [31:0]m_axi_awaddr;
  wire [2:2]m_axi_awaddr0;
  wire \m_axi_awaddr[31]_i_1_n_0 ;
  wire m_axi_awaddrsttemp_reg_0_3_0_0_n_0;
  wire m_axi_awaddrtemp_reg_0_3_0_5_i_2_n_0;
  wire m_axi_awaddrtemp_reg_0_3_0_5_i_3_n_0;
  wire m_axi_awaddrtemp_reg_0_3_0_5_i_6_n_0;
  wire m_axi_awaddrtemp_reg_0_3_0_5_i_7_n_0;
  wire m_axi_awaddrtemp_reg_0_3_0_5_n_0;
  wire m_axi_awaddrtemp_reg_0_3_0_5_n_1;
  wire m_axi_awaddrtemp_reg_0_3_0_5_n_2;
  wire m_axi_awaddrtemp_reg_0_3_0_5_n_4;
  wire m_axi_awaddrtemp_reg_0_3_0_5_n_5;
  wire m_axi_awaddrtemp_reg_0_3_12_17_i_1_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_i_2_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_i_3_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_i_4_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_i_5_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_i_6_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_n_0;
  wire m_axi_awaddrtemp_reg_0_3_12_17_n_1;
  wire m_axi_awaddrtemp_reg_0_3_12_17_n_2;
  wire m_axi_awaddrtemp_reg_0_3_12_17_n_3;
  wire m_axi_awaddrtemp_reg_0_3_12_17_n_4;
  wire m_axi_awaddrtemp_reg_0_3_12_17_n_5;
  wire m_axi_awaddrtemp_reg_0_3_18_23_i_1_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_i_2_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_i_3_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_i_4_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_i_5_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_i_6_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_n_0;
  wire m_axi_awaddrtemp_reg_0_3_18_23_n_1;
  wire m_axi_awaddrtemp_reg_0_3_18_23_n_2;
  wire m_axi_awaddrtemp_reg_0_3_18_23_n_3;
  wire m_axi_awaddrtemp_reg_0_3_18_23_n_4;
  wire m_axi_awaddrtemp_reg_0_3_18_23_n_5;
  wire m_axi_awaddrtemp_reg_0_3_24_29_i_1_n_0;
  wire m_axi_awaddrtemp_reg_0_3_24_29_n_0;
  wire m_axi_awaddrtemp_reg_0_3_24_29_n_1;
  wire m_axi_awaddrtemp_reg_0_3_24_29_n_2;
  wire m_axi_awaddrtemp_reg_0_3_24_29_n_3;
  wire m_axi_awaddrtemp_reg_0_3_24_29_n_4;
  wire m_axi_awaddrtemp_reg_0_3_24_29_n_5;
  wire m_axi_awaddrtemp_reg_0_3_30_31_i_1_n_0;
  wire m_axi_awaddrtemp_reg_0_3_30_31_n_0;
  wire m_axi_awaddrtemp_reg_0_3_30_31_n_1;
  wire m_axi_awaddrtemp_reg_0_3_6_11_i_1_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_i_2_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_i_3_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_i_4_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_i_5_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_i_6_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_n_0;
  wire m_axi_awaddrtemp_reg_0_3_6_11_n_1;
  wire m_axi_awaddrtemp_reg_0_3_6_11_n_2;
  wire m_axi_awaddrtemp_reg_0_3_6_11_n_3;
  wire m_axi_awaddrtemp_reg_0_3_6_11_n_4;
  wire m_axi_awaddrtemp_reg_0_3_6_11_n_5;
  wire [7:0]m_axi_awlen;
  wire \m_axi_awlen[0]_i_1_n_0 ;
  wire \m_axi_awlen[1]_i_1_n_0 ;
  wire \m_axi_awlen[2]_i_1_n_0 ;
  wire \m_axi_awlen[3]_i_1_n_0 ;
  wire \m_axi_awlen[4]_i_1_n_0 ;
  wire \m_axi_awlen[5]_i_1_n_0 ;
  wire \m_axi_awlen[6]_i_1_n_0 ;
  wire \m_axi_awlen[7]_i_1_n_0 ;
  wire \m_axi_awlen[7]_i_2_n_0 ;
  wire \m_axi_awlen_reg[7]_0 ;
  wire m_axi_awlensttemp_reg_0_3_0_5_n_0;
  wire m_axi_awlensttemp_reg_0_3_0_5_n_1;
  wire m_axi_awlensttemp_reg_0_3_0_5_n_2;
  wire m_axi_awlensttemp_reg_0_3_0_5_n_3;
  wire m_axi_awlensttemp_reg_0_3_0_5_n_4;
  wire m_axi_awlensttemp_reg_0_3_0_5_n_5;
  wire m_axi_awlensttemp_reg_0_3_6_7_n_0;
  wire m_axi_awlensttemp_reg_0_3_6_7_n_1;
  wire m_axi_awlentemp_reg_0_3_0_5_n_1;
  wire [2:0]m_axi_awprot;
  wire [2:0]m_axi_awprot0;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire [2:0]m_axi_awsize0;
  wire m_axi_awvalid;
  wire m_axi_awvalidsig_i_1_n_0;
  wire m_axi_awvalidsig_reg_0;
  wire m_axi_bready;
  wire m_axi_breadysig_reg_0;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [63:0]m_axi_wdata;
  wire m_axi_wready;
  wire [7:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire \master_int[0]_i_1_n_0 ;
  wire \master_int[1]_i_1_n_0 ;
  wire \master_int_reg[1]_0 ;
  wire \master_int_reg[1]_1 ;
  wire [7:0]minusOp;
  wire neqOp;
  wire neqOp0_out;
  wire neqOp1_out;
  wire [1:0]out;
  wire p_0_in;
  wire [3:0]p_0_out;
  wire [0:0]p_1_in;
  wire p_1_in2_in;
  wire p_2_in;
  wire [1:0]p_2_in_0;
  wire \resetovrd.reset_reg[4] ;
  wire \respmmpipeline[0]_i_1_n_0 ;
  wire \respmmpipeline[1]_i_1_n_0 ;
  wire \respmmpipeline[2]_i_1_n_0 ;
  wire \respmmpipeline_reg[0]_0 ;
  wire \respmmpipeline_reg[1]_0 ;
  wire \respmmpipeline_reg[2]_0 ;
  wire [1:0]s_axis_cw_tusersig;
  wire sig_blk_lnk_up;
  wire sig_s_axis_cw_tlast;
  wire [2:2]tlplength_reg;
  wire wrdatasmsig__1;
  wire \wrreqsetcnt[0]_i_1_n_0 ;
  wire \wrreqsetcnt[1]_i_1_n_0 ;
  wire \wrreqsetcnt[2]_i_1_n_0 ;
  wire [2:0]wrreqsetcnt_reg__0;
  wire wrrespsmsig_reg_0;
  wire [1:0]NLW_firstdwbetemp_reg_0_3_0_3_DOC_UNCONNECTED;
  wire [1:0]NLW_firstdwbetemp_reg_0_3_0_3_DOD_UNCONNECTED;
  wire [1:0]NLW_lastdwbetemp_reg_0_3_0_3_DOC_UNCONNECTED;
  wire [1:0]NLW_lastdwbetemp_reg_0_3_0_3_DOD_UNCONNECTED;
  wire NLW_m_axi_awaddrsttemp_reg_0_3_0_0_SPO_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_12_17_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_18_23_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_24_29_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_30_31_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_30_31_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_30_31_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awaddrtemp_reg_0_3_6_11_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlensttemp_reg_0_3_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlensttemp_reg_0_3_6_7_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlensttemp_reg_0_3_6_7_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlensttemp_reg_0_3_6_7_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlentemp_reg_0_3_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlentemp_reg_0_3_6_7_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlentemp_reg_0_3_6_7_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_awlentemp_reg_0_3_6_7_DOD_UNCONNECTED;
  wire [1:1]NLW_m_axi_awprottemp_reg_0_3_0_2_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_awprottemp_reg_0_3_0_2_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_awprottemp_reg_0_3_0_2_DOD_UNCONNECTED;
  wire [1:1]NLW_m_axi_awsizetemp_reg_0_3_0_2_DOB_UNCONNECTED;
  wire [1:0]NLW_m_axi_awsizetemp_reg_0_3_0_2_DOC_UNCONNECTED;
  wire [1:0]NLW_m_axi_awsizetemp_reg_0_3_0_2_DOD_UNCONNECTED;

  FDRE \AddrVar_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_i_3_n_0),
        .Q(AddrVar[0]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_i_6_n_0),
        .Q(AddrVar[10]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_i_5_n_0),
        .Q(AddrVar[11]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_i_2_n_0),
        .Q(AddrVar[12]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_i_1_n_0),
        .Q(AddrVar[13]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_i_4_n_0),
        .Q(AddrVar[14]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_i_3_n_0),
        .Q(AddrVar[15]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_i_6_n_0),
        .Q(AddrVar[16]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_i_5_n_0),
        .Q(AddrVar[17]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_i_2_n_0),
        .Q(AddrVar[18]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_i_1_n_0),
        .Q(AddrVar[19]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_i_2_n_0),
        .Q(AddrVar[1]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_i_4_n_0),
        .Q(AddrVar[20]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_i_3_n_0),
        .Q(AddrVar[21]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_i_6_n_0),
        .Q(AddrVar[22]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_i_5_n_0),
        .Q(AddrVar[23]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_i_1_n_0),
        .Q(AddrVar[26]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_2_in_0[0]),
        .Q(AddrVar[2]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_30_31_i_1_n_0),
        .Q(AddrVar[30]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_2_in_0[1]),
        .Q(AddrVar[3]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_i_7_n_0),
        .Q(AddrVar[4]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_i_6_n_0),
        .Q(AddrVar[5]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_i_2_n_0),
        .Q(AddrVar[6]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_i_1_n_0),
        .Q(AddrVar[7]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_i_4_n_0),
        .Q(AddrVar[8]),
        .R(axi_aresetn_0));
  FDRE \AddrVar_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_i_3_n_0),
        .Q(AddrVar[9]),
        .R(axi_aresetn_0));
  LUT4 #(
    .INIT(16'h00FD)) 
    \FSM_sequential_data_width_64.wrreqsmsig[1]_i_2 
       (.I0(wrreqsetcnt_reg__0[2]),
        .I1(wrreqsetcnt_reg__0[0]),
        .I2(wrreqsetcnt_reg__0[1]),
        .I3(E),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair633" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_9 
       (.I0(wrreqsetcnt_reg__0[1]),
        .I1(wrreqsetcnt_reg__0[0]),
        .I2(wrreqsetcnt_reg__0[2]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair628" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addrmmpipeline[0]_i_1 
       (.I0(m_axi_awvalid),
        .I1(m_axi_awready),
        .I2(\m_axi_awlen_reg[7]_0 ),
        .I3(addrmmpipeline[0]),
        .O(\addrmmpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair628" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \addrmmpipeline[1]_i_1 
       (.I0(addrmmpipeline[0]),
        .I1(\m_axi_awlen_reg[7]_0 ),
        .I2(m_axi_awready),
        .I3(m_axi_awvalid),
        .I4(addrmmpipeline[1]),
        .O(\addrmmpipeline[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \addrmmpipeline[2]_i_1 
       (.I0(addrmmpipeline[0]),
        .I1(addrmmpipeline[1]),
        .I2(\m_axi_awlen_reg[7]_0 ),
        .I3(m_axi_awready),
        .I4(m_axi_awvalid),
        .I5(addrmmpipeline[2]),
        .O(\addrmmpipeline[2]_i_1_n_0 ));
  FDRE \addrmmpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrmmpipeline[0]_i_1_n_0 ),
        .Q(addrmmpipeline[0]),
        .R(axi_aresetn_0));
  FDRE \addrmmpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrmmpipeline[1]_i_1_n_0 ),
        .Q(addrmmpipeline[1]),
        .R(axi_aresetn_0));
  FDRE \addrmmpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\addrmmpipeline[2]_i_1_n_0 ),
        .Q(addrmmpipeline[2]),
        .R(axi_aresetn_0));
  LUT1 #(
    .INIT(2'h1)) 
    \addrspipeline[0]_i_1__0 
       (.I0(addrspipeline[0]),
        .O(\addrspipeline[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair640" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addrspipeline[1]_i_1__0 
       (.I0(addrspipeline[0]),
        .I1(addrspipeline[1]),
        .O(\addrspipeline[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair640" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addrspipeline[2]_i_1__0 
       (.I0(addrspipeline[0]),
        .I1(addrspipeline[1]),
        .I2(addrspipeline[2]),
        .O(\addrspipeline[2]_i_1__0_n_0 ));
  FDRE \addrspipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\addrspipeline[0]_i_1__0_n_0 ),
        .Q(addrspipeline[0]),
        .R(axi_aresetn_0));
  FDRE \addrspipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\addrspipeline[1]_i_1__0_n_0 ),
        .Q(addrspipeline[1]),
        .R(axi_aresetn_0));
  FDRE \addrspipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\addrspipeline[2]_i_1__0_n_0 ),
        .Q(addrspipeline[2]),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h2020200020202020)) 
    \data_width_64.dataen_i_7 
       (.I0(sig_s_axis_cw_tlast),
        .I1(\data_width_64.tlpfmtsig_reg[0] ),
        .I2(sig_blk_lnk_up),
        .I3(wrreqsetcnt_reg__0[1]),
        .I4(wrreqsetcnt_reg__0[0]),
        .I5(wrreqsetcnt_reg__0[2]),
        .O(dataen8_out));
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.datammpipeline[0]_i_1 
       (.I0(\data_width_64.datammpipeline[2]_i_2__0_n_0 ),
        .I1(datammpipeline[0]),
        .O(\data_width_64.datammpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair634" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.datammpipeline[1]_i_1 
       (.I0(datammpipeline[0]),
        .I1(\data_width_64.datammpipeline[2]_i_2__0_n_0 ),
        .I2(datammpipeline[1]),
        .O(\data_width_64.datammpipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair634" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.datammpipeline[2]_i_1 
       (.I0(datammpipeline[0]),
        .I1(datammpipeline[1]),
        .I2(\data_width_64.datammpipeline[2]_i_2__0_n_0 ),
        .I3(datammpipeline[2]),
        .O(\data_width_64.datammpipeline[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \data_width_64.datammpipeline[2]_i_2__0 
       (.I0(\data_width_64.wrdatasmsig_reg[1]_0 ),
        .I1(\goreg_bm.dout_i_reg[64] [64]),
        .I2(\data_width_64.m_axi_wstrb_reg[7]_0 ),
        .I3(m_axi_wready),
        .I4(empty_fwft_i_reg_0),
        .I5(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .O(\data_width_64.datammpipeline[2]_i_2__0_n_0 ));
  FDRE \data_width_64.datammpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datammpipeline[0]_i_1_n_0 ),
        .Q(datammpipeline[0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datammpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datammpipeline[1]_i_1_n_0 ),
        .Q(datammpipeline[1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datammpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.datammpipeline[2]_i_1_n_0 ),
        .Q(datammpipeline[2]),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'hFF0FFF007D0F7D00)) 
    \data_width_64.m_axi_wstrb[0]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[3]_i_2_n_0 ),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(p_0_out[0]),
        .I5(lastdwbetemp_reg_0_3_0_3_n_1),
        .O(\data_width_64.m_axi_wstrb[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF007D0F7D00)) 
    \data_width_64.m_axi_wstrb[1]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[3]_i_2_n_0 ),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(p_0_out[1]),
        .I5(lastdwbetemp_reg_0_3_0_3_n_0),
        .O(\data_width_64.m_axi_wstrb[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF007D0F7D00)) 
    \data_width_64.m_axi_wstrb[2]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[3]_i_2_n_0 ),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(p_0_out[2]),
        .I5(lastdwbetemp_reg_0_3_0_3_n_3),
        .O(\data_width_64.m_axi_wstrb[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FFF007D0F7D00)) 
    \data_width_64.m_axi_wstrb[3]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[3]_i_2_n_0 ),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(p_0_out[3]),
        .I5(lastdwbetemp_reg_0_3_0_3_n_2),
        .O(\data_width_64.m_axi_wstrb[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_width_64.m_axi_wstrb[3]_i_2 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[4] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[5] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[7] ),
        .I3(\data_width_64.tlplength_reg_reg_n_0_[6] ),
        .I4(\data_width_64.m_axi_wstrb[3]_i_3_n_0 ),
        .O(\data_width_64.m_axi_wstrb[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair631" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \data_width_64.m_axi_wstrb[3]_i_3 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[3] ),
        .I3(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .O(\data_width_64.m_axi_wstrb[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBAAABAAABAAA)) 
    \data_width_64.m_axi_wstrb[4]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[7]_i_4_n_0 ),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(p_0_out[0]),
        .I4(lastdwbetemp_reg_0_3_0_3_n_1),
        .I5(\data_width_64.m_axi_wstrb[7]_i_5_n_0 ),
        .O(\data_width_64.m_axi_wstrb[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBAAABAAABAAA)) 
    \data_width_64.m_axi_wstrb[5]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[7]_i_4_n_0 ),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(p_0_out[1]),
        .I4(lastdwbetemp_reg_0_3_0_3_n_0),
        .I5(\data_width_64.m_axi_wstrb[7]_i_5_n_0 ),
        .O(\data_width_64.m_axi_wstrb[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBAAABAAABAAA)) 
    \data_width_64.m_axi_wstrb[6]_i_1 
       (.I0(\data_width_64.m_axi_wstrb[7]_i_4_n_0 ),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(p_0_out[2]),
        .I4(lastdwbetemp_reg_0_3_0_3_n_3),
        .I5(\data_width_64.m_axi_wstrb[7]_i_5_n_0 ),
        .O(\data_width_64.m_axi_wstrb[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000022E22222)) 
    \data_width_64.m_axi_wstrb[7]_i_2 
       (.I0(neqOp1_out),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(\data_width_64.m_axi_wstrb_reg[7]_0 ),
        .I3(empty_fwft_i_reg_0),
        .I4(m_axi_wready),
        .I5(\data_width_64.wrdatasmsig_reg[1]_0 ),
        .O(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBAAABAAABAAA)) 
    \data_width_64.m_axi_wstrb[7]_i_3 
       (.I0(\data_width_64.m_axi_wstrb[7]_i_4_n_0 ),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I3(p_0_out[3]),
        .I4(lastdwbetemp_reg_0_3_0_3_n_2),
        .I5(\data_width_64.m_axi_wstrb[7]_i_5_n_0 ),
        .O(\data_width_64.m_axi_wstrb[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h11110111BBBBABBB)) 
    \data_width_64.m_axi_wstrb[7]_i_4 
       (.I0(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I1(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I2(\data_width_64.m_axi_wstrb[7]_i_6_n_0 ),
        .I3(\data_width_64.m_axi_wstrb[7]_i_7_n_0 ),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .I5(\data_width_64.m_axi_wstrb[3]_i_2_n_0 ),
        .O(\data_width_64.m_axi_wstrb[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair638" *) 
  LUT4 #(
    .INIT(16'h0CD1)) 
    \data_width_64.m_axi_wstrb[7]_i_5 
       (.I0(eqOp),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I3(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .O(\data_width_64.m_axi_wstrb[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair637" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \data_width_64.m_axi_wstrb[7]_i_6 
       (.I0(m_axi_awlensttemp_reg_0_3_6_7_n_1),
        .I1(m_axi_awlensttemp_reg_0_3_6_7_n_0),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_4),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_5),
        .O(\data_width_64.m_axi_wstrb[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair627" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \data_width_64.m_axi_wstrb[7]_i_7 
       (.I0(m_axi_awlensttemp_reg_0_3_0_5_n_3),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_2),
        .O(\data_width_64.m_axi_wstrb[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair627" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \data_width_64.m_axi_wstrb[7]_i_8 
       (.I0(\data_width_64.m_axi_wstrb[7]_i_6_n_0 ),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_3),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_2),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .O(eqOp));
  FDRE \data_width_64.m_axi_wstrb_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[0]_i_1_n_0 ),
        .Q(m_axi_wstrb[0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[1]_i_1_n_0 ),
        .Q(m_axi_wstrb[1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[2]_i_1_n_0 ),
        .Q(m_axi_wstrb[2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[3]_i_1_n_0 ),
        .Q(m_axi_wstrb[3]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[4]_i_1_n_0 ),
        .Q(m_axi_wstrb[4]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[5]_i_1_n_0 ),
        .Q(m_axi_wstrb[5]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[6]_i_1_n_0 ),
        .Q(m_axi_wstrb[6]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wstrb_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axi_wstrb[7]_i_2_n_0 ),
        .D(\data_width_64.m_axi_wstrb[7]_i_3_n_0 ),
        .Q(m_axi_wstrb[7]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.m_axi_wvalidsig_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(empty_fwft_i_reg),
        .Q(\data_width_64.m_axi_wstrb_reg[7]_0 ),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h00000000FDFDFFFD)) 
    \data_width_64.s_axis_cw_treadysig_i_3 
       (.I0(wrreqsetcnt_reg__0[2]),
        .I1(wrreqsetcnt_reg__0[0]),
        .I2(wrreqsetcnt_reg__0[1]),
        .I3(out[1]),
        .I4(sig_blk_lnk_up),
        .I5(out[0]),
        .O(\data_width_64.s_axis_cw_treadysig_reg ));
  (* SOFT_HLUTNM = "soft_lutpair633" *) 
  LUT5 #(
    .INIT(32'hFFF4FFFF)) 
    \data_width_64.s_axis_cw_treadysig_i_5 
       (.I0(sig_blk_lnk_up),
        .I1(out[1]),
        .I2(wrreqsetcnt_reg__0[1]),
        .I3(wrreqsetcnt_reg__0[0]),
        .I4(wrreqsetcnt_reg__0[2]),
        .O(\data_width_64.s_axis_cw_treadysig_reg_0 ));
  LUT6 #(
    .INIT(64'h4474747474444444)) 
    \data_width_64.tlplength_reg[0]_i_1 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I1(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I2(neqOp1_out),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I4(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I5(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .O(\data_width_64.tlplength_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h90909F909F909090)) 
    \data_width_64.tlplength_reg[1]_i_1 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I2(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I3(neqOp1_out),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_3),
        .I5(\data_width_64.tlplength_reg[1]_i_2_n_0 ),
        .O(\data_width_64.tlplength_reg[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair638" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \data_width_64.tlplength_reg[1]_i_2 
       (.I0(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .O(\data_width_64.tlplength_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hE1FFE100E100E100)) 
    \data_width_64.tlplength_reg[2]_i_1 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(neqOp1_out),
        .I5(tlplength_reg),
        .O(\data_width_64.tlplength_reg[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair625" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \data_width_64.tlplength_reg[2]_i_2 
       (.I0(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_3),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_2),
        .O(tlplength_reg));
  LUT6 #(
    .INIT(64'h90909F909F909090)) 
    \data_width_64.tlplength_reg[3]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_i_2_n_0 ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[3] ),
        .I2(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I3(neqOp1_out),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_5),
        .I5(\data_width_64.tlplength_reg[3]_i_3_n_0 ),
        .O(\data_width_64.tlplength_reg[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair636" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \data_width_64.tlplength_reg[3]_i_2 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .O(\data_width_64.tlplength_reg[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair625" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.tlplength_reg[3]_i_3 
       (.I0(m_axi_awlensttemp_reg_0_3_0_5_n_2),
        .I1(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_3),
        .O(\data_width_64.tlplength_reg[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h90909F909F909090)) 
    \data_width_64.tlplength_reg[4]_i_1 
       (.I0(\data_width_64.tlplength_reg[4]_i_2_n_0 ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[4] ),
        .I2(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I3(neqOp1_out),
        .I4(m_axi_awlensttemp_reg_0_3_0_5_n_4),
        .I5(\data_width_64.tlplength_reg[4]_i_3_n_0 ),
        .O(\data_width_64.tlplength_reg[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair636" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_width_64.tlplength_reg[4]_i_2 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I3(\data_width_64.tlplength_reg_reg_n_0_[3] ),
        .O(\data_width_64.tlplength_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlplength_reg[4]_i_3 
       (.I0(m_axi_awlensttemp_reg_0_3_0_5_n_5),
        .I1(m_axi_awlensttemp_reg_0_3_0_5_n_3),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_0),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_1),
        .I4(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .I5(m_axi_awlensttemp_reg_0_3_0_5_n_2),
        .O(\data_width_64.tlplength_reg[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h90909F909F909090)) 
    \data_width_64.tlplength_reg[5]_i_1 
       (.I0(\data_width_64.tlplength_reg[5]_i_2_n_0 ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[5] ),
        .I2(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I3(neqOp1_out),
        .I4(m_axi_awlensttemp_reg_0_3_6_7_n_1),
        .I5(\data_width_64.tlplength_reg[5]_i_3_n_0 ),
        .O(\data_width_64.tlplength_reg[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair631" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \data_width_64.tlplength_reg[5]_i_2 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[3] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I3(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .I4(\data_width_64.tlplength_reg_reg_n_0_[4] ),
        .O(\data_width_64.tlplength_reg[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair637" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplength_reg[5]_i_3 
       (.I0(m_axi_awlensttemp_reg_0_3_0_5_n_4),
        .I1(\data_width_64.tlplength_reg[4]_i_3_n_0 ),
        .O(\data_width_64.tlplength_reg[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h90909F909F909090)) 
    \data_width_64.tlplength_reg[6]_i_1 
       (.I0(\data_width_64.tlplength_reg[7]_i_3_n_0 ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[6] ),
        .I2(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I3(neqOp1_out),
        .I4(m_axi_awlensttemp_reg_0_3_6_7_n_0),
        .I5(\data_width_64.tlplength_reg[6]_i_2_n_0 ),
        .O(\data_width_64.tlplength_reg[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair624" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \data_width_64.tlplength_reg[6]_i_2 
       (.I0(m_axi_awlensttemp_reg_0_3_6_7_n_1),
        .I1(\data_width_64.tlplength_reg[4]_i_3_n_0 ),
        .I2(m_axi_awlensttemp_reg_0_3_0_5_n_4),
        .O(\data_width_64.tlplength_reg[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h04005555)) 
    \data_width_64.tlplength_reg[7]_i_1 
       (.I0(\data_width_64.wrdatasmsig_reg[1]_0 ),
        .I1(m_axi_wready),
        .I2(empty_fwft_i_reg_0),
        .I3(\data_width_64.m_axi_wstrb_reg[7]_0 ),
        .I4(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .O(\data_width_64.tlplength_reg[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hE1FFE100)) 
    \data_width_64.tlplength_reg[7]_i_2 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[6] ),
        .I1(\data_width_64.tlplength_reg[7]_i_3_n_0 ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[7] ),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(\data_width_64.tlplength_reg[7]_i_4_n_0 ),
        .O(\data_width_64.tlplength_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \data_width_64.tlplength_reg[7]_i_3 
       (.I0(\data_width_64.tlplength_reg_reg_n_0_[4] ),
        .I1(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .I2(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .I3(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .I4(\data_width_64.tlplength_reg_reg_n_0_[3] ),
        .I5(\data_width_64.tlplength_reg_reg_n_0_[5] ),
        .O(\data_width_64.tlplength_reg[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair624" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.tlplength_reg[7]_i_4 
       (.I0(neqOp1_out),
        .I1(m_axi_awlensttemp_reg_0_3_6_7_n_1),
        .I2(\data_width_64.tlplength_reg[4]_i_3_n_0 ),
        .I3(m_axi_awlensttemp_reg_0_3_0_5_n_4),
        .I4(m_axi_awlensttemp_reg_0_3_6_7_n_0),
        .O(\data_width_64.tlplength_reg[7]_i_4_n_0 ));
  FDRE \data_width_64.tlplength_reg_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[0]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[0] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[1]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[1] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[2]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[2] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[3]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[3] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[4]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[4] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[5]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[5] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[6]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[6] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplength_reg_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength_reg[7]_i_1_n_0 ),
        .D(\data_width_64.tlplength_reg[7]_i_2_n_0 ),
        .Q(\data_width_64.tlplength_reg_reg_n_0_[7] ),
        .R(axi_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair632" *) 
  LUT4 #(
    .INIT(16'h2000)) 
    \data_width_64.wrdatasmsig[0]_i_1 
       (.I0(empty_fwft_i_reg_0),
        .I1(\data_width_64.wrdatasmsig_reg[1]_0 ),
        .I2(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I3(wrdatasmsig__1),
        .O(\data_width_64.wrdatasmsig[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair632" *) 
  LUT5 #(
    .INIT(32'h22303330)) 
    \data_width_64.wrdatasmsig[1]_i_1 
       (.I0(empty_fwft_i_reg_0),
        .I1(\data_width_64.wrdatasmsig_reg[1]_0 ),
        .I2(neqOp1_out),
        .I3(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .I4(wrdatasmsig__1),
        .O(\data_width_64.wrdatasmsig[1]_i_1_n_0 ));
  FDRE \data_width_64.wrdatasmsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.wrdatasmsig[0]_i_1_n_0 ),
        .Q(\data_width_64.wrdatasmsig_reg[1]_0 ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.wrdatasmsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.wrdatasmsig[1]_i_1_n_0 ),
        .Q(\data_width_64.m_axi_wstrb_reg[4]_0 ),
        .R(axi_aresetn_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M firstdwbetemp_reg_0_3_0_3
       (.ADDRA({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA(Q[1:0]),
        .DIB(Q[3:2]),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(p_0_out[1:0]),
        .DOB(p_0_out[3:2]),
        .DOC(NLW_firstdwbetemp_reg_0_3_0_3_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_firstdwbetemp_reg_0_3_0_3_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M lastdwbetemp_reg_0_3_0_3
       (.ADDRA({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA(\data_width_64.lastdwbesig_reg[3] [1:0]),
        .DIB(\data_width_64.lastdwbesig_reg[3] [3:2]),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({lastdwbetemp_reg_0_3_0_3_n_0,lastdwbetemp_reg_0_3_0_3_n_1}),
        .DOB({lastdwbetemp_reg_0_3_0_3_n_2,lastdwbetemp_reg_0_3_0_3_n_3}),
        .DOC(NLW_lastdwbetemp_reg_0_3_0_3_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_lastdwbetemp_reg_0_3_0_3_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT3 #(
    .INIT(8'h57)) 
    \m_axi_awaddr[31]_i_1 
       (.I0(axi_aresetn),
        .I1(neqOp0_out),
        .I2(\m_axi_awlen_reg[7]_0 ),
        .O(\m_axi_awaddr[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \m_axi_awaddr[31]_i_2 
       (.I0(addrmmpipeline[0]),
        .I1(addrspipeline[0]),
        .I2(addrspipeline[2]),
        .I3(addrmmpipeline[2]),
        .I4(addrspipeline[1]),
        .I5(addrmmpipeline[1]),
        .O(neqOp0_out));
  FDRE \m_axi_awaddr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_n_1),
        .Q(m_axi_awaddr[0]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_n_5),
        .Q(m_axi_awaddr[10]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_n_4),
        .Q(m_axi_awaddr[11]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_n_1),
        .Q(m_axi_awaddr[12]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_n_0),
        .Q(m_axi_awaddr[13]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_n_3),
        .Q(m_axi_awaddr[14]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_n_2),
        .Q(m_axi_awaddr[15]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_n_5),
        .Q(m_axi_awaddr[16]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_12_17_n_4),
        .Q(m_axi_awaddr[17]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_n_1),
        .Q(m_axi_awaddr[18]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_n_0),
        .Q(m_axi_awaddr[19]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_n_0),
        .Q(m_axi_awaddr[1]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_n_3),
        .Q(m_axi_awaddr[20]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_n_2),
        .Q(m_axi_awaddr[21]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_n_5),
        .Q(m_axi_awaddr[22]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_18_23_n_4),
        .Q(m_axi_awaddr[23]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_n_1),
        .Q(m_axi_awaddr[24]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_n_0),
        .Q(m_axi_awaddr[25]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_n_3),
        .Q(m_axi_awaddr[26]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_n_2),
        .Q(m_axi_awaddr[27]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_n_5),
        .Q(m_axi_awaddr[28]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_24_29_n_4),
        .Q(m_axi_awaddr[29]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddr0),
        .Q(m_axi_awaddr[2]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_30_31_n_1),
        .Q(m_axi_awaddr[30]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_30_31_n_0),
        .Q(m_axi_awaddr[31]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_n_2),
        .Q(m_axi_awaddr[3]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_n_5),
        .Q(m_axi_awaddr[4]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_0_5_n_4),
        .Q(m_axi_awaddr[5]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_n_1),
        .Q(m_axi_awaddr[6]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_n_0),
        .Q(m_axi_awaddr[7]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_n_3),
        .Q(m_axi_awaddr[8]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awaddr_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awaddrtemp_reg_0_3_6_11_n_2),
        .Q(m_axi_awaddr[9]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    m_axi_awaddrsttemp_reg_0_3_0_0
       (.A0(addrspipeline[0]),
        .A1(addrspipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(p_2_in_0[0]),
        .DPO(m_axi_awaddrsttemp_reg_0_3_0_0_n_0),
        .DPRA0(datammpipeline[0]),
        .DPRA1(datammpipeline[1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(NLW_m_axi_awaddrsttemp_reg_0_3_0_0_SPO_UNCONNECTED),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awaddrtemp_reg_0_3_0_5
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({m_axi_awaddrtemp_reg_0_3_0_5_i_2_n_0,m_axi_awaddrtemp_reg_0_3_0_5_i_3_n_0}),
        .DIB(p_2_in_0),
        .DIC({m_axi_awaddrtemp_reg_0_3_0_5_i_6_n_0,m_axi_awaddrtemp_reg_0_3_0_5_i_7_n_0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awaddrtemp_reg_0_3_0_5_n_0,m_axi_awaddrtemp_reg_0_3_0_5_n_1}),
        .DOB({m_axi_awaddrtemp_reg_0_3_0_5_n_2,m_axi_awaddr0}),
        .DOC({m_axi_awaddrtemp_reg_0_3_0_5_n_4,m_axi_awaddrtemp_reg_0_3_0_5_n_5}),
        .DOD(NLW_m_axi_awaddrtemp_reg_0_3_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_2
       (.I0(\data_width_64.tlpaddrl_reg[22] [1]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[1]),
        .O(m_axi_awaddrtemp_reg_0_3_0_5_i_2_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_3
       (.I0(\data_width_64.tlpaddrl_reg[22] [0]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[0]),
        .O(m_axi_awaddrtemp_reg_0_3_0_5_i_3_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_4
       (.I0(\data_width_64.tlpaddrl_reg[22] [3]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[3]),
        .O(p_2_in_0[1]));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_5
       (.I0(\data_width_64.tlpaddrl_reg[22] [2]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[2]),
        .O(p_2_in_0[0]));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_6
       (.I0(\data_width_64.tlpaddrl_reg[22] [5]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[5]),
        .O(m_axi_awaddrtemp_reg_0_3_0_5_i_6_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_7
       (.I0(\data_width_64.tlpaddrl_reg[22] [4]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[4]),
        .O(m_axi_awaddrtemp_reg_0_3_0_5_i_7_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awaddrtemp_reg_0_3_12_17
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({m_axi_awaddrtemp_reg_0_3_12_17_i_1_n_0,m_axi_awaddrtemp_reg_0_3_12_17_i_2_n_0}),
        .DIB({m_axi_awaddrtemp_reg_0_3_12_17_i_3_n_0,m_axi_awaddrtemp_reg_0_3_12_17_i_4_n_0}),
        .DIC({m_axi_awaddrtemp_reg_0_3_12_17_i_5_n_0,m_axi_awaddrtemp_reg_0_3_12_17_i_6_n_0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awaddrtemp_reg_0_3_12_17_n_0,m_axi_awaddrtemp_reg_0_3_12_17_n_1}),
        .DOB({m_axi_awaddrtemp_reg_0_3_12_17_n_2,m_axi_awaddrtemp_reg_0_3_12_17_n_3}),
        .DOC({m_axi_awaddrtemp_reg_0_3_12_17_n_4,m_axi_awaddrtemp_reg_0_3_12_17_n_5}),
        .DOD(NLW_m_axi_awaddrtemp_reg_0_3_12_17_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_12_17_i_1
       (.I0(\data_width_64.tlpaddrl_reg[22] [13]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[13]),
        .O(m_axi_awaddrtemp_reg_0_3_12_17_i_1_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_12_17_i_2
       (.I0(\data_width_64.tlpaddrl_reg[22] [12]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[12]),
        .O(m_axi_awaddrtemp_reg_0_3_12_17_i_2_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_12_17_i_3
       (.I0(\data_width_64.tlpaddrl_reg[22] [15]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[15]),
        .O(m_axi_awaddrtemp_reg_0_3_12_17_i_3_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_12_17_i_4
       (.I0(\data_width_64.tlpaddrl_reg[22] [14]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[14]),
        .O(m_axi_awaddrtemp_reg_0_3_12_17_i_4_n_0));
  LUT5 #(
    .INIT(32'h000000E4)) 
    m_axi_awaddrtemp_reg_0_3_12_17_i_5
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[17]),
        .I2(\data_width_64.tlpaddrl_reg[22] [17]),
        .I3(s_axis_cw_tusersig[1]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_12_17_i_5_n_0));
  LUT5 #(
    .INIT(32'h0000FE02)) 
    m_axi_awaddrtemp_reg_0_3_12_17_i_6
       (.I0(AddrVar[16]),
        .I1(s_axis_cw_tusersig[1]),
        .I2(s_axis_cw_tusersig[0]),
        .I3(\data_width_64.tlpaddrl_reg[22] [16]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_12_17_i_6_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awaddrtemp_reg_0_3_18_23
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({m_axi_awaddrtemp_reg_0_3_18_23_i_1_n_0,m_axi_awaddrtemp_reg_0_3_18_23_i_2_n_0}),
        .DIB({m_axi_awaddrtemp_reg_0_3_18_23_i_3_n_0,m_axi_awaddrtemp_reg_0_3_18_23_i_4_n_0}),
        .DIC({m_axi_awaddrtemp_reg_0_3_18_23_i_5_n_0,m_axi_awaddrtemp_reg_0_3_18_23_i_6_n_0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awaddrtemp_reg_0_3_18_23_n_0,m_axi_awaddrtemp_reg_0_3_18_23_n_1}),
        .DOB({m_axi_awaddrtemp_reg_0_3_18_23_n_2,m_axi_awaddrtemp_reg_0_3_18_23_n_3}),
        .DOC({m_axi_awaddrtemp_reg_0_3_18_23_n_4,m_axi_awaddrtemp_reg_0_3_18_23_n_5}),
        .DOD(NLW_m_axi_awaddrtemp_reg_0_3_18_23_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT5 #(
    .INIT(32'h000000E4)) 
    m_axi_awaddrtemp_reg_0_3_18_23_i_1
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[19]),
        .I2(\data_width_64.tlpaddrl_reg[22] [19]),
        .I3(s_axis_cw_tusersig[1]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_18_23_i_1_n_0));
  LUT5 #(
    .INIT(32'h000000E4)) 
    m_axi_awaddrtemp_reg_0_3_18_23_i_2
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[18]),
        .I2(\data_width_64.tlpaddrl_reg[22] [18]),
        .I3(s_axis_cw_tusersig[1]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_18_23_i_2_n_0));
  LUT5 #(
    .INIT(32'h0000FFB8)) 
    m_axi_awaddrtemp_reg_0_3_18_23_i_3
       (.I0(\data_width_64.tlpaddrl_reg[22] [21]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(AddrVar[21]),
        .I3(s_axis_cw_tusersig[1]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_18_23_i_3_n_0));
  LUT5 #(
    .INIT(32'h000000E4)) 
    m_axi_awaddrtemp_reg_0_3_18_23_i_4
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[20]),
        .I2(\data_width_64.tlpaddrl_reg[22] [20]),
        .I3(s_axis_cw_tusersig[1]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_18_23_i_4_n_0));
  LUT4 #(
    .INIT(16'h00F4)) 
    m_axi_awaddrtemp_reg_0_3_18_23_i_5
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[23]),
        .I2(s_axis_cw_tusersig[1]),
        .I3(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_18_23_i_5_n_0));
  LUT5 #(
    .INIT(32'h000000E4)) 
    m_axi_awaddrtemp_reg_0_3_18_23_i_6
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[22]),
        .I2(\data_width_64.tlpaddrl_reg[22] [22]),
        .I3(s_axis_cw_tusersig[1]),
        .I4(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_18_23_i_6_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awaddrtemp_reg_0_3_24_29
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({1'b0,1'b0}),
        .DIB({1'b0,m_axi_awaddrtemp_reg_0_3_24_29_i_1_n_0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awaddrtemp_reg_0_3_24_29_n_0,m_axi_awaddrtemp_reg_0_3_24_29_n_1}),
        .DOB({m_axi_awaddrtemp_reg_0_3_24_29_n_2,m_axi_awaddrtemp_reg_0_3_24_29_n_3}),
        .DOC({m_axi_awaddrtemp_reg_0_3_24_29_n_4,m_axi_awaddrtemp_reg_0_3_24_29_n_5}),
        .DOD(NLW_m_axi_awaddrtemp_reg_0_3_24_29_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT4 #(
    .INIT(16'h00F4)) 
    m_axi_awaddrtemp_reg_0_3_24_29_i_1
       (.I0(s_axis_cw_tusersig[0]),
        .I1(AddrVar[26]),
        .I2(s_axis_cw_tusersig[1]),
        .I3(p_2_in),
        .O(m_axi_awaddrtemp_reg_0_3_24_29_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awaddrtemp_reg_0_3_30_31
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({1'b0,m_axi_awaddrtemp_reg_0_3_30_31_i_1_n_0}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awaddrtemp_reg_0_3_30_31_n_0,m_axi_awaddrtemp_reg_0_3_30_31_n_1}),
        .DOB(NLW_m_axi_awaddrtemp_reg_0_3_30_31_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_m_axi_awaddrtemp_reg_0_3_30_31_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_awaddrtemp_reg_0_3_30_31_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT4 #(
    .INIT(16'hEFEE)) 
    m_axi_awaddrtemp_reg_0_3_30_31_i_1
       (.I0(s_axis_cw_tusersig[1]),
        .I1(p_2_in),
        .I2(s_axis_cw_tusersig[0]),
        .I3(AddrVar[30]),
        .O(m_axi_awaddrtemp_reg_0_3_30_31_i_1_n_0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awaddrtemp_reg_0_3_6_11
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({m_axi_awaddrtemp_reg_0_3_6_11_i_1_n_0,m_axi_awaddrtemp_reg_0_3_6_11_i_2_n_0}),
        .DIB({m_axi_awaddrtemp_reg_0_3_6_11_i_3_n_0,m_axi_awaddrtemp_reg_0_3_6_11_i_4_n_0}),
        .DIC({m_axi_awaddrtemp_reg_0_3_6_11_i_5_n_0,m_axi_awaddrtemp_reg_0_3_6_11_i_6_n_0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awaddrtemp_reg_0_3_6_11_n_0,m_axi_awaddrtemp_reg_0_3_6_11_n_1}),
        .DOB({m_axi_awaddrtemp_reg_0_3_6_11_n_2,m_axi_awaddrtemp_reg_0_3_6_11_n_3}),
        .DOC({m_axi_awaddrtemp_reg_0_3_6_11_n_4,m_axi_awaddrtemp_reg_0_3_6_11_n_5}),
        .DOD(NLW_m_axi_awaddrtemp_reg_0_3_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_6_11_i_1
       (.I0(\data_width_64.tlpaddrl_reg[22] [7]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[7]),
        .O(m_axi_awaddrtemp_reg_0_3_6_11_i_1_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_6_11_i_2
       (.I0(\data_width_64.tlpaddrl_reg[22] [6]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[6]),
        .O(m_axi_awaddrtemp_reg_0_3_6_11_i_2_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_6_11_i_3
       (.I0(\data_width_64.tlpaddrl_reg[22] [9]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[9]),
        .O(m_axi_awaddrtemp_reg_0_3_6_11_i_3_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_6_11_i_4
       (.I0(\data_width_64.tlpaddrl_reg[22] [8]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[8]),
        .O(m_axi_awaddrtemp_reg_0_3_6_11_i_4_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_6_11_i_5
       (.I0(\data_width_64.tlpaddrl_reg[22] [11]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[11]),
        .O(m_axi_awaddrtemp_reg_0_3_6_11_i_5_n_0));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    m_axi_awaddrtemp_reg_0_3_6_11_i_6
       (.I0(\data_width_64.tlpaddrl_reg[22] [10]),
        .I1(s_axis_cw_tusersig[0]),
        .I2(p_2_in),
        .I3(s_axis_cw_tusersig[1]),
        .I4(AddrVar[10]),
        .O(m_axi_awaddrtemp_reg_0_3_6_11_i_6_n_0));
  LUT3 #(
    .INIT(8'h6A)) 
    \m_axi_awlen[0]_i_1 
       (.I0(L[0]),
        .I1(m_axi_awaddr0),
        .I2(m_axi_awlentemp_reg_0_3_0_5_n_1),
        .O(\m_axi_awlen[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair626" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \m_axi_awlen[1]_i_1 
       (.I0(L[0]),
        .I1(m_axi_awlentemp_reg_0_3_0_5_n_1),
        .I2(m_axi_awaddr0),
        .I3(L[1]),
        .O(\m_axi_awlen[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair626" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \m_axi_awlen[2]_i_1 
       (.I0(m_axi_awaddr0),
        .I1(m_axi_awlentemp_reg_0_3_0_5_n_1),
        .I2(L[0]),
        .I3(L[1]),
        .I4(L[2]),
        .O(\m_axi_awlen[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \m_axi_awlen[3]_i_1 
       (.I0(L[1]),
        .I1(L[0]),
        .I2(m_axi_awlentemp_reg_0_3_0_5_n_1),
        .I3(m_axi_awaddr0),
        .I4(L[2]),
        .I5(L[3]),
        .O(\m_axi_awlen[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair639" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \m_axi_awlen[4]_i_1 
       (.I0(\m_axi_awlen[7]_i_2_n_0 ),
        .I1(L[4]),
        .O(\m_axi_awlen[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair639" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \m_axi_awlen[5]_i_1 
       (.I0(\m_axi_awlen[7]_i_2_n_0 ),
        .I1(L[4]),
        .I2(L[5]),
        .O(\m_axi_awlen[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair635" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \m_axi_awlen[6]_i_1 
       (.I0(L[4]),
        .I1(\m_axi_awlen[7]_i_2_n_0 ),
        .I2(L[5]),
        .I3(L[6]),
        .O(\m_axi_awlen[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair635" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \m_axi_awlen[7]_i_1 
       (.I0(L[6]),
        .I1(L[4]),
        .I2(\m_axi_awlen[7]_i_2_n_0 ),
        .I3(L[5]),
        .O(\m_axi_awlen[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \m_axi_awlen[7]_i_2 
       (.I0(L[3]),
        .I1(L[1]),
        .I2(L[0]),
        .I3(m_axi_awlentemp_reg_0_3_0_5_n_1),
        .I4(m_axi_awaddr0),
        .I5(L[2]),
        .O(\m_axi_awlen[7]_i_2_n_0 ));
  FDRE \m_axi_awlen_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[0]_i_1_n_0 ),
        .Q(m_axi_awlen[0]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[1]_i_1_n_0 ),
        .Q(m_axi_awlen[1]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[2]_i_1_n_0 ),
        .Q(m_axi_awlen[2]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[3]_i_1_n_0 ),
        .Q(m_axi_awlen[3]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[4]_i_1_n_0 ),
        .Q(m_axi_awlen[4]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[5]_i_1_n_0 ),
        .Q(m_axi_awlen[5]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[6]_i_1_n_0 ),
        .Q(m_axi_awlen[6]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awlen_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(\m_axi_awlen[7]_i_1_n_0 ),
        .Q(m_axi_awlen[7]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awlensttemp_reg_0_3_0_5
       (.ADDRA({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA(minusOp[1:0]),
        .DIB(minusOp[3:2]),
        .DIC(minusOp[5:4]),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awlensttemp_reg_0_3_0_5_n_0,m_axi_awlensttemp_reg_0_3_0_5_n_1}),
        .DOB({m_axi_awlensttemp_reg_0_3_0_5_n_2,m_axi_awlensttemp_reg_0_3_0_5_n_3}),
        .DOC({m_axi_awlensttemp_reg_0_3_0_5_n_4,m_axi_awlensttemp_reg_0_3_0_5_n_5}),
        .DOD(NLW_m_axi_awlensttemp_reg_0_3_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awlensttemp_reg_0_3_6_7
       (.ADDRA({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,datammpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA(minusOp[7:6]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({m_axi_awlensttemp_reg_0_3_6_7_n_0,m_axi_awlensttemp_reg_0_3_6_7_n_1}),
        .DOB(NLW_m_axi_awlensttemp_reg_0_3_6_7_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_m_axi_awlensttemp_reg_0_3_6_7_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_awlensttemp_reg_0_3_6_7_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awlentemp_reg_0_3_0_5
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA(minusOp[1:0]),
        .DIB(minusOp[3:2]),
        .DIC(minusOp[5:4]),
        .DID({1'b0,1'b0}),
        .DOA({L[0],m_axi_awlentemp_reg_0_3_0_5_n_1}),
        .DOB(L[2:1]),
        .DOC(L[4:3]),
        .DOD(NLW_m_axi_awlentemp_reg_0_3_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awlentemp_reg_0_3_6_7
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA(minusOp[7:6]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(L[6:5]),
        .DOB(NLW_m_axi_awlentemp_reg_0_3_6_7_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_m_axi_awlentemp_reg_0_3_6_7_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_awlentemp_reg_0_3_6_7_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  FDRE \m_axi_awprot_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awprot0[0]),
        .Q(m_axi_awprot[0]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awprot_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awprot0[1]),
        .Q(m_axi_awprot[1]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awprot_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awprot0[2]),
        .Q(m_axi_awprot[2]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awprottemp_reg_0_3_0_2
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({1'b0,1'b0}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(m_axi_awprot0[1:0]),
        .DOB({NLW_m_axi_awprottemp_reg_0_3_0_2_DOB_UNCONNECTED[1],m_axi_awprot0[2]}),
        .DOC(NLW_m_axi_awprottemp_reg_0_3_0_2_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_awprottemp_reg_0_3_0_2_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  FDRE \m_axi_awsize_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awsize0[0]),
        .Q(m_axi_awsize[0]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awsize_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awsize0[1]),
        .Q(m_axi_awsize[1]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  FDRE \m_axi_awsize_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axi_awlen_reg[7]_0 ),
        .D(m_axi_awsize0[2]),
        .Q(m_axi_awsize[2]),
        .R(\m_axi_awaddr[31]_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M m_axi_awsizetemp_reg_0_3_0_2
       (.ADDRA({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRB({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRC({1'b0,1'b0,1'b0,addrmmpipeline[1:0]}),
        .ADDRD({1'b0,1'b0,1'b0,addrspipeline[1:0]}),
        .DIA({1'b1,p_1_in}),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(m_axi_awsize0[1:0]),
        .DOB({NLW_m_axi_awsizetemp_reg_0_3_0_2_DOB_UNCONNECTED[1],m_axi_awsize0[2]}),
        .DOC(NLW_m_axi_awsizetemp_reg_0_3_0_2_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_m_axi_awsizetemp_reg_0_3_0_2_DOD_UNCONNECTED[1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(p_0_in));
  LUT4 #(
    .INIT(16'h7000)) 
    m_axi_awvalidsig_i_1
       (.I0(m_axi_awready),
        .I1(m_axi_awvalid),
        .I2(axi_aresetn),
        .I3(\m_axi_awlen_reg[7]_0 ),
        .O(m_axi_awvalidsig_i_1_n_0));
  FDRE m_axi_awvalidsig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axi_awvalidsig_i_1_n_0),
        .Q(m_axi_awvalid),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    m_axi_breadysig_i_2
       (.I0(\respmmpipeline_reg[0]_0 ),
        .I1(addrspipeline[0]),
        .I2(addrspipeline[2]),
        .I3(\respmmpipeline_reg[2]_0 ),
        .I4(addrspipeline[1]),
        .I5(\respmmpipeline_reg[1]_0 ),
        .O(neqOp));
  FDRE m_axi_breadysig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axi_breadysig_reg_0),
        .Q(m_axi_bready),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair672" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[0]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [0]),
        .O(m_axi_wdata[0]));
  (* SOFT_HLUTNM = "soft_lutpair666" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[10]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [10]),
        .O(m_axi_wdata[10]));
  (* SOFT_HLUTNM = "soft_lutpair667" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[11]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [11]),
        .O(m_axi_wdata[11]));
  (* SOFT_HLUTNM = "soft_lutpair667" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[12]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [12]),
        .O(m_axi_wdata[12]));
  (* SOFT_HLUTNM = "soft_lutpair666" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[13]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [13]),
        .O(m_axi_wdata[13]));
  (* SOFT_HLUTNM = "soft_lutpair662" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[14]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [14]),
        .O(m_axi_wdata[14]));
  (* SOFT_HLUTNM = "soft_lutpair665" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[15]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [15]),
        .O(m_axi_wdata[15]));
  (* SOFT_HLUTNM = "soft_lutpair665" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[16]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [16]),
        .O(m_axi_wdata[16]));
  (* SOFT_HLUTNM = "soft_lutpair664" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[17]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [17]),
        .O(m_axi_wdata[17]));
  (* SOFT_HLUTNM = "soft_lutpair664" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[18]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [18]),
        .O(m_axi_wdata[18]));
  (* SOFT_HLUTNM = "soft_lutpair663" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[19]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [19]),
        .O(m_axi_wdata[19]));
  (* SOFT_HLUTNM = "soft_lutpair672" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[1]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [1]),
        .O(m_axi_wdata[1]));
  (* SOFT_HLUTNM = "soft_lutpair663" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[20]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [20]),
        .O(m_axi_wdata[20]));
  (* SOFT_HLUTNM = "soft_lutpair662" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[21]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [21]),
        .O(m_axi_wdata[21]));
  (* SOFT_HLUTNM = "soft_lutpair661" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[22]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [22]),
        .O(m_axi_wdata[22]));
  (* SOFT_HLUTNM = "soft_lutpair658" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[23]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [23]),
        .O(m_axi_wdata[23]));
  (* SOFT_HLUTNM = "soft_lutpair661" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[24]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [24]),
        .O(m_axi_wdata[24]));
  (* SOFT_HLUTNM = "soft_lutpair660" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[25]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [25]),
        .O(m_axi_wdata[25]));
  (* SOFT_HLUTNM = "soft_lutpair660" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[26]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [26]),
        .O(m_axi_wdata[26]));
  (* SOFT_HLUTNM = "soft_lutpair659" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[27]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [27]),
        .O(m_axi_wdata[27]));
  (* SOFT_HLUTNM = "soft_lutpair659" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[28]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [28]),
        .O(m_axi_wdata[28]));
  (* SOFT_HLUTNM = "soft_lutpair658" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[29]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [29]),
        .O(m_axi_wdata[29]));
  (* SOFT_HLUTNM = "soft_lutpair671" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[2]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [2]),
        .O(m_axi_wdata[2]));
  (* SOFT_HLUTNM = "soft_lutpair657" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[30]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [30]),
        .O(m_axi_wdata[30]));
  (* SOFT_HLUTNM = "soft_lutpair649" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[31]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [31]),
        .O(m_axi_wdata[31]));
  (* SOFT_HLUTNM = "soft_lutpair657" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[32]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [32]),
        .O(m_axi_wdata[32]));
  (* SOFT_HLUTNM = "soft_lutpair656" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[33]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [33]),
        .O(m_axi_wdata[33]));
  (* SOFT_HLUTNM = "soft_lutpair656" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[34]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [34]),
        .O(m_axi_wdata[34]));
  (* SOFT_HLUTNM = "soft_lutpair655" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[35]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [35]),
        .O(m_axi_wdata[35]));
  (* SOFT_HLUTNM = "soft_lutpair655" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[36]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [36]),
        .O(m_axi_wdata[36]));
  (* SOFT_HLUTNM = "soft_lutpair654" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[37]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [37]),
        .O(m_axi_wdata[37]));
  (* SOFT_HLUTNM = "soft_lutpair654" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[38]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [38]),
        .O(m_axi_wdata[38]));
  (* SOFT_HLUTNM = "soft_lutpair653" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[39]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [39]),
        .O(m_axi_wdata[39]));
  (* SOFT_HLUTNM = "soft_lutpair671" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[3]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [3]),
        .O(m_axi_wdata[3]));
  (* SOFT_HLUTNM = "soft_lutpair653" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[40]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [40]),
        .O(m_axi_wdata[40]));
  (* SOFT_HLUTNM = "soft_lutpair652" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[41]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [41]),
        .O(m_axi_wdata[41]));
  (* SOFT_HLUTNM = "soft_lutpair652" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[42]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [42]),
        .O(m_axi_wdata[42]));
  (* SOFT_HLUTNM = "soft_lutpair651" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[43]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [43]),
        .O(m_axi_wdata[43]));
  (* SOFT_HLUTNM = "soft_lutpair651" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[44]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [44]),
        .O(m_axi_wdata[44]));
  (* SOFT_HLUTNM = "soft_lutpair650" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[45]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [45]),
        .O(m_axi_wdata[45]));
  (* SOFT_HLUTNM = "soft_lutpair650" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[46]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [46]),
        .O(m_axi_wdata[46]));
  (* SOFT_HLUTNM = "soft_lutpair649" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[47]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [47]),
        .O(m_axi_wdata[47]));
  (* SOFT_HLUTNM = "soft_lutpair648" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[48]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [48]),
        .O(m_axi_wdata[48]));
  (* SOFT_HLUTNM = "soft_lutpair641" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[49]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [49]),
        .O(m_axi_wdata[49]));
  (* SOFT_HLUTNM = "soft_lutpair670" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[4]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [4]),
        .O(m_axi_wdata[4]));
  (* SOFT_HLUTNM = "soft_lutpair648" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[50]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [50]),
        .O(m_axi_wdata[50]));
  (* SOFT_HLUTNM = "soft_lutpair647" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[51]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [51]),
        .O(m_axi_wdata[51]));
  (* SOFT_HLUTNM = "soft_lutpair647" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[52]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [52]),
        .O(m_axi_wdata[52]));
  (* SOFT_HLUTNM = "soft_lutpair646" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[53]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [53]),
        .O(m_axi_wdata[53]));
  (* SOFT_HLUTNM = "soft_lutpair646" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[54]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [54]),
        .O(m_axi_wdata[54]));
  (* SOFT_HLUTNM = "soft_lutpair645" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[55]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [55]),
        .O(m_axi_wdata[55]));
  (* SOFT_HLUTNM = "soft_lutpair645" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[56]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [56]),
        .O(m_axi_wdata[56]));
  (* SOFT_HLUTNM = "soft_lutpair644" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[57]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [57]),
        .O(m_axi_wdata[57]));
  (* SOFT_HLUTNM = "soft_lutpair644" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[58]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [58]),
        .O(m_axi_wdata[58]));
  (* SOFT_HLUTNM = "soft_lutpair643" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[59]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [59]),
        .O(m_axi_wdata[59]));
  (* SOFT_HLUTNM = "soft_lutpair670" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[5]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [5]),
        .O(m_axi_wdata[5]));
  (* SOFT_HLUTNM = "soft_lutpair643" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[60]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [60]),
        .O(m_axi_wdata[60]));
  (* SOFT_HLUTNM = "soft_lutpair642" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[61]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [61]),
        .O(m_axi_wdata[61]));
  (* SOFT_HLUTNM = "soft_lutpair642" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[62]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [62]),
        .O(m_axi_wdata[62]));
  (* SOFT_HLUTNM = "soft_lutpair641" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[63]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [63]),
        .O(m_axi_wdata[63]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \m_axi_wdata[63]_INST_0_i_1 
       (.I0(datammpipeline[0]),
        .I1(addrspipeline[0]),
        .I2(addrspipeline[2]),
        .I3(datammpipeline[2]),
        .I4(addrspipeline[1]),
        .I5(datammpipeline[1]),
        .O(neqOp1_out));
  (* SOFT_HLUTNM = "soft_lutpair668" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[6]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [6]),
        .O(m_axi_wdata[6]));
  (* SOFT_HLUTNM = "soft_lutpair669" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[7]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [7]),
        .O(m_axi_wdata[7]));
  (* SOFT_HLUTNM = "soft_lutpair669" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[8]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [8]),
        .O(m_axi_wdata[8]));
  (* SOFT_HLUTNM = "soft_lutpair668" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_wdata[9]_INST_0 
       (.I0(neqOp1_out),
        .I1(\goreg_bm.dout_i_reg[64] [9]),
        .O(m_axi_wdata[9]));
  LUT2 #(
    .INIT(4'h2)) 
    m_axi_wvalid_INST_0
       (.I0(\data_width_64.m_axi_wstrb_reg[7]_0 ),
        .I1(empty_fwft_i_reg_0),
        .O(m_axi_wvalid));
  LUT6 #(
    .INIT(64'hEAAA000000000000)) 
    \master_int[0]_i_1 
       (.I0(p_1_in2_in),
        .I1(m_axi_bvalid),
        .I2(m_axi_bresp[1]),
        .I3(m_axi_bresp[0]),
        .I4(\master_int_reg[1]_0 ),
        .I5(axi_aresetn),
        .O(\master_int[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAEA000000000000)) 
    \master_int[1]_i_1 
       (.I0(\master_int_reg[1]_1 ),
        .I1(m_axi_bvalid),
        .I2(m_axi_bresp[1]),
        .I3(m_axi_bresp[0]),
        .I4(\master_int_reg[1]_0 ),
        .I5(axi_aresetn),
        .O(\master_int[1]_i_1_n_0 ));
  FDRE \master_int_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\master_int[0]_i_1_n_0 ),
        .Q(p_1_in2_in),
        .R(1'b0));
  FDRE \master_int_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\master_int[1]_i_1_n_0 ),
        .Q(\master_int_reg[1]_1 ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h78)) 
    \respmmpipeline[0]_i_1 
       (.I0(\master_int_reg[1]_0 ),
        .I1(m_axi_bvalid),
        .I2(\respmmpipeline_reg[0]_0 ),
        .O(\respmmpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair630" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \respmmpipeline[1]_i_1 
       (.I0(\respmmpipeline_reg[0]_0 ),
        .I1(m_axi_bvalid),
        .I2(\master_int_reg[1]_0 ),
        .I3(\respmmpipeline_reg[1]_0 ),
        .O(\respmmpipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair630" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \respmmpipeline[2]_i_1 
       (.I0(\respmmpipeline_reg[0]_0 ),
        .I1(\respmmpipeline_reg[1]_0 ),
        .I2(m_axi_bvalid),
        .I3(\master_int_reg[1]_0 ),
        .I4(\respmmpipeline_reg[2]_0 ),
        .O(\respmmpipeline[2]_i_1_n_0 ));
  FDRE \respmmpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\respmmpipeline[0]_i_1_n_0 ),
        .Q(\respmmpipeline_reg[0]_0 ),
        .R(axi_aresetn_0));
  FDRE \respmmpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\respmmpipeline[1]_i_1_n_0 ),
        .Q(\respmmpipeline_reg[1]_0 ),
        .R(axi_aresetn_0));
  FDRE \respmmpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\respmmpipeline[2]_i_1_n_0 ),
        .Q(\respmmpipeline_reg[2]_0 ),
        .R(axi_aresetn_0));
  FDRE wraddrsmsig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axi_awvalidsig_reg_0),
        .Q(\m_axi_awlen_reg[7]_0 ),
        .R(axi_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair629" *) 
  LUT4 #(
    .INIT(16'h8778)) 
    \wrreqsetcnt[0]_i_1 
       (.I0(m_axi_bvalid),
        .I1(m_axi_bready),
        .I2(E),
        .I3(wrreqsetcnt_reg__0[0]),
        .O(\wrreqsetcnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair629" *) 
  LUT5 #(
    .INIT(32'hE7771888)) 
    \wrreqsetcnt[1]_i_1 
       (.I0(wrreqsetcnt_reg__0[0]),
        .I1(E),
        .I2(m_axi_bready),
        .I3(m_axi_bvalid),
        .I4(wrreqsetcnt_reg__0[1]),
        .O(\wrreqsetcnt[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFE7F7F7F01808080)) 
    \wrreqsetcnt[2]_i_1 
       (.I0(wrreqsetcnt_reg__0[0]),
        .I1(wrreqsetcnt_reg__0[1]),
        .I2(E),
        .I3(m_axi_bready),
        .I4(m_axi_bvalid),
        .I5(wrreqsetcnt_reg__0[2]),
        .O(\wrreqsetcnt[2]_i_1_n_0 ));
  FDRE \wrreqsetcnt_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\wrreqsetcnt[0]_i_1_n_0 ),
        .Q(wrreqsetcnt_reg__0[0]),
        .R(axi_aresetn_0));
  FDRE \wrreqsetcnt_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\wrreqsetcnt[1]_i_1_n_0 ),
        .Q(wrreqsetcnt_reg__0[1]),
        .R(axi_aresetn_0));
  FDRE \wrreqsetcnt_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\wrreqsetcnt[2]_i_1_n_0 ),
        .Q(wrreqsetcnt_reg__0[2]),
        .R(axi_aresetn_0));
  FDRE wrrespsmsig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(wrrespsmsig_reg_0),
        .Q(\master_int_reg[1]_0 ),
        .R(axi_aresetn_0));
endmodule

(* ORIG_REF_NAME = "axi_mm_s_masterbridge" *) 
module overlay1_axi_pcie_0_0_axi_mm_s_masterbridge
   (\data_width_64.rdtargetpipeline_reg[0]_rep ,
    out,
    \gaf.gaf0.ram_afull_i_reg ,
    s_axis_cc_tvalid_q_reg,
    s_axis_tx_tlast_d_reg,
    rdreq_reg_0,
    \data_width_64.wrpendflush_reg[0][3] ,
    \data_width_64.tlpaddrlow_reg[0] ,
    \data_width_64.lnkdowndataflush_reg ,
    s_axis_cc_tvalid_q_reg_0,
    sig_s_axis_cr_tready,
    s_axis_tx_tlast_d_reg_0,
    almost_fullsig,
    emptysig,
    wrensig_reg,
    \data_width_64.datain_reg[64] ,
    E,
    \data_width_64.s_axis_cw_tdatatemp_reg[8] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[33] ,
    \data_width_64.padzeroes_reg ,
    wrensig_reg_0,
    \end_point.ctl_user_intr_d_reg[8] ,
    dataensig,
    m_axi_awvalid,
    wraddrsmsig,
    m_axi_wvalidsig,
    wrrespsmsig,
    m_axi_bready,
    \data_width_64.datatxpertlp_reg[1] ,
    \m_axi_arsize_reg[0] ,
    single_beat,
    m_axi_rready,
    dataensig_0,
    rdreq_reg_1,
    s_axis_cw_treadysig,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    \data_width_64.s_axis_cw_treadysig_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ,
    \data_width_64.wrreqsetsig_reg ,
    \data_width_64.padzeroes_reg_0 ,
    \data_width_64.dataen_reg ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.dataen_reg_1 ,
    \data_width_64.dataoffset_reg ,
    \data_width_64.addroffset_reg ,
    delaylast,
    \m_axi_awsize_reg[1] ,
    addroffset,
    \data_width_64.delaylast_reg ,
    \data_width_64.delaylast_reg_0 ,
    \data_width_64.addroffset_reg_0 ,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.tagsig_reg[0]_0 ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.m_axis_cc_tvalid_nd_reg_0 ,
    \data_width_64.m_axis_cc_tdatatemp64_reg[0] ,
    \data_width_64.m_axis_cc_tdata_h_reg[45] ,
    sig_m_axis_cc_tvalid,
    sig_m_axis_cc_tlast,
    \np_ok_mode.rdndreqpipeline_d_reg[2] ,
    \np_ok_mode.rdndreqpipeline_d_reg[0] ,
    \np_ok_mode.rdndreqpipeline_d_reg[1] ,
    \length_offset_reg[6] ,
    \np_ok_mode.rdreqpipeline_d_reg[2] ,
    \np_ok_mode.rdreqpipeline_d_reg[0] ,
    \np_ok_mode.rdreqpipeline_d_reg[1] ,
    \ctlplength_reg[2,3][0] ,
    \ctlplength_reg[2,2][0] ,
    \ctlplength_reg[2,1][0] ,
    \ctlplength_reg[2,0][0] ,
    \length_offset_reg[2] ,
    \length_offset_reg[6]_0 ,
    \length_offset_reg[7] ,
    \length_offset_reg[8] ,
    \length_offset_reg[9] ,
    \length_offset_reg[10] ,
    \length_offset_reg[11] ,
    \data_width_64.cpldsplitcounttemp_reg[4] ,
    \data_width_64.cpldsplitcounttemp_reg[3] ,
    \data_width_64.cpldsplitcounttemp_reg[4]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[1] ,
    \data_width_64.cpldsplitcounttemp_reg[1]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[2] ,
    \data_width_64.cpldsplitcounttemp_reg[2]_0 ,
    R,
    rdreq_reg_2,
    \ctlplength_reg[2,0][9] ,
    \ctlplength_reg[2,0][6] ,
    \data_width_64.m_axis_cc_tdata_h_reg[10] ,
    \data_width_64.m_axis_cc_tdata_h_reg[11] ,
    \data_width_64.m_axis_cc_tdata_h_reg[14] ,
    \data_width_64.m_axis_cc_tdata_h_reg[15] ,
    \data_width_64.m_axis_cc_tdata_h_reg[16] ,
    \data_width_64.m_axis_cc_tdata_h_reg[17] ,
    \data_width_64.m_axis_cc_tdata_h_reg[18] ,
    \data_width_64.m_axis_cc_tdata_h_reg[19] ,
    \data_width_64.m_axis_cc_tdata_h_reg[23] ,
    \data_width_64.m_axis_cc_tdata_h_reg[24] ,
    \data_width_64.m_axis_cc_tdata_h_reg[25] ,
    \data_width_64.m_axis_cc_tdata_h_reg[26] ,
    \data_width_64.m_axis_cc_tdata_h_reg[27] ,
    \data_width_64.m_axis_cc_tdata_h_reg[28] ,
    \data_width_64.m_axis_cc_tdata_h_reg[29] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \length_offset_reg[9]_0 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[9]_1 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[9]_2 ,
    \length_offset_reg[11]_2 ,
    O,
    \length_offset_reg[11]_3 ,
    \length_offset_reg[2]_0 ,
    \data_width_64.m_axi_wstrb_reg[4] ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    \data_width_64.wrdatasmsig_reg[1] ,
    rdaddrsmsig010_out__0,
    rdaddrsmsig1__2,
    m_axi_arvalid,
    \data_width_64.datammpipeline_reg[1] ,
    neqOp__0,
    neqOp0_out,
    neqOp,
    rdaddrsmsig_reg,
    neqOp0_out_1,
    \s_axis_tx_tstrb_d_reg[7] ,
    \s_axis_tx_tdata_d_reg[63] ,
    request_completed,
    s_axis_tx_tvalid_d_reg,
    s_axis_tx_tlast_d_reg_1,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ,
    m_axi_wdata,
    \ctlpbytecount_reg[1,0][11] ,
    \ctlpbytecount_reg[1,0][7] ,
    \ctlpbytecount_reg[1,0][9] ,
    \ctlpbytecount_reg[1,0][8] ,
    \ctlpbytecount_reg[1,0][5] ,
    \ctlpbytecount_reg[1,0][4] ,
    m_axi_wvalid,
    \data_width_64.m_axi_rready_reg ,
    \data_width_64.dataen_reg_2 ,
    \m_axis_cw_tuser_reg[2] ,
    m_axi_awsize,
    m_axi_awprot,
    p_1_in,
    p_1_in2_in,
    m_axi_awlen,
    m_axi_arsize,
    m_axi_arprot,
    m_axi_araddr,
    m_axi_arlen,
    p_0_in0_in,
    p_0_in1_in,
    m_axi_awaddr,
    m_axi_wstrb,
    \resetovrd.reset_reg[4] ,
    tlpfmtsig,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    sig_blk_lnk_up,
    m_axis_cw_tlast_reg,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ,
    \data_width_64.padzeroes_reg_1 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[3] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ,
    m_axi_awvalidsig_reg,
    empty_fwft_i_reg,
    wrrespsmsig_reg,
    m_axi_breadysig_reg,
    \gaf.gaf0.ram_afull_i_reg_0 ,
    m_axi_arvalid_sig_reg,
    \data_width_64.rddatasmsig_reg ,
    \data_width_64.single_beat_reg ,
    \data_width_64.single_beat_reg_0 ,
    rdorder_reg_0,
    Q,
    sig_s_axis_cw_tlast,
    \m_axis_cw_tdata_reg[14] ,
    neqOp_0,
    m_axis_cw_tlast_reg_0,
    cw_full,
    sig_s_axis_cw_tvalid,
    s_axis_cw_treadysig34_out,
    user_lnk_up_mux_reg,
    cw_full_reg,
    p_49_out,
    user_lnk_up_mux_reg_0,
    s_axis_cw_treadysig45_out,
    p_1_out,
    \gaf.gaf0.ram_afull_i_reg_1 ,
    m_axis_cw_tlast_reg_1,
    eqOp,
    \m_axis_cw_tdata_reg[29] ,
    \gaf.gaf0.ram_afull_i_reg_2 ,
    cw_full_reg_0,
    delaylast40_out,
    padzeroes11_out,
    reg_tready_reg,
    s_axis_cr_tready_sig106_out,
    \m_axis_cr_tdata_reg[30] ,
    cr_full,
    sig_s_axis_cr_tlast,
    axi_aresetn,
    user_lnk_up_mux_reg_1,
    user_lnk_up_mux_reg_2,
    user_lnk_up_mux_reg_3,
    tlprequesterid,
    sig_m_axis_cc_tready,
    \end_point.psr_reg[2] ,
    p_76_out,
    s_axis_tx_tready,
    \end_point.psr_reg[2]_0 ,
    m_axis_cc_tvalid_d50_out,
    badreadreq,
    eqOp56_in,
    cfg_dev_control_max_payload,
    user_lnk_up_mux_reg_4,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \cfg_bus_number_d_reg[7] ,
    \cfg_device_number_d_reg[4] ,
    \cfg_function_number_d_reg[2] ,
    \m_axis_cr_tdata_reg[63] ,
    sig_s_axis_cr_tvalid,
    m_axi_wready,
    m_axi_arready,
    m_axi_rlast,
    m_axi_rvalid,
    p_0_in,
    m_axi_awready,
    \m_axis_cr_tuser_reg[6] ,
    \data_width_64.tlplength_reg[3][0] ,
    \m_axis_cr_tuser_reg[3] ,
    \m_axis_cw_tdata_reg[14]_0 ,
    \m_axis_cw_tdata_reg[7] ,
    m_axi_bvalid,
    m_axi_bresp,
    \m_axis_cw_tuser_reg[6] ,
    \m_axis_cw_tdata_reg[22] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    D,
    \cpldsplitsm_reg[1] ,
    \length_offset_reg[9]_3 ,
    \ctargetpipeline_reg[1] ,
    \cpldsplitsm_reg[1]_0 ,
    \ctargetpipeline_reg[1]_0 ,
    \m_axis_cr_tdata_reg[22] ,
    \m_axis_cr_tdata_reg[6] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    user_lnk_up_mux_reg_5,
    m_axi_rresp,
    m_axi_rdata,
    cpldsplitcount0_out,
    p_3_in);
  output \data_width_64.rdtargetpipeline_reg[0]_rep ;
  output [3:0]out;
  output \gaf.gaf0.ram_afull_i_reg ;
  output s_axis_cc_tvalid_q_reg;
  output s_axis_tx_tlast_d_reg;
  output rdreq_reg_0;
  output \data_width_64.wrpendflush_reg[0][3] ;
  output \data_width_64.tlpaddrlow_reg[0] ;
  output \data_width_64.lnkdowndataflush_reg ;
  output s_axis_cc_tvalid_q_reg_0;
  output sig_s_axis_cr_tready;
  output s_axis_tx_tlast_d_reg_0;
  output almost_fullsig;
  output emptysig;
  output wrensig_reg;
  output \data_width_64.datain_reg[64] ;
  output [0:0]E;
  output \data_width_64.s_axis_cw_tdatatemp_reg[8] ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[33] ;
  output \data_width_64.padzeroes_reg ;
  output wrensig_reg_0;
  output [0:0]\end_point.ctl_user_intr_d_reg[8] ;
  output dataensig;
  output m_axi_awvalid;
  output wraddrsmsig;
  output m_axi_wvalidsig;
  output wrrespsmsig;
  output m_axi_bready;
  output \data_width_64.datatxpertlp_reg[1] ;
  output \m_axi_arsize_reg[0] ;
  output single_beat;
  output m_axi_rready;
  output dataensig_0;
  output rdreq_reg_1;
  output s_axis_cw_treadysig;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output \data_width_64.s_axis_cw_treadysig_reg ;
  output \data_width_64.s_axis_cw_treadysig_reg_0 ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ;
  output \data_width_64.wrreqsetsig_reg ;
  output \data_width_64.padzeroes_reg_0 ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.dataen_reg_1 ;
  output \data_width_64.dataoffset_reg ;
  output \data_width_64.addroffset_reg ;
  output delaylast;
  output [0:0]\m_axi_awsize_reg[1] ;
  output addroffset;
  output \data_width_64.delaylast_reg ;
  output \data_width_64.delaylast_reg_0 ;
  output \data_width_64.addroffset_reg_0 ;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.tagsig_reg[0]_0 ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg_0 ;
  output \data_width_64.m_axis_cc_tdatatemp64_reg[0] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  output sig_m_axis_cc_tvalid;
  output sig_m_axis_cc_tlast;
  output \np_ok_mode.rdndreqpipeline_d_reg[2] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[0] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[1] ;
  output [1:0]\length_offset_reg[6] ;
  output \np_ok_mode.rdreqpipeline_d_reg[2] ;
  output \np_ok_mode.rdreqpipeline_d_reg[0] ;
  output \np_ok_mode.rdreqpipeline_d_reg[1] ;
  output [0:0]\ctlplength_reg[2,3][0] ;
  output [0:0]\ctlplength_reg[2,2][0] ;
  output [0:0]\ctlplength_reg[2,1][0] ;
  output [0:0]\ctlplength_reg[2,0][0] ;
  output \length_offset_reg[2] ;
  output \length_offset_reg[6]_0 ;
  output \length_offset_reg[7] ;
  output \length_offset_reg[8] ;
  output \length_offset_reg[9] ;
  output \length_offset_reg[10] ;
  output \length_offset_reg[11] ;
  output [2:0]\data_width_64.cpldsplitcounttemp_reg[4] ;
  output \data_width_64.cpldsplitcounttemp_reg[3] ;
  output \data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[1] ;
  output \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[2] ;
  output \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  output [6:0]R;
  output rdreq_reg_2;
  output \ctlplength_reg[2,0][9] ;
  output \ctlplength_reg[2,0][6] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[10] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[11] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[14] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[15] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[16] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[17] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[18] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[19] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[23] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[24] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[25] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[26] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[27] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[28] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[29] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output [3:0]\length_offset_reg[9]_0 ;
  output [1:0]\length_offset_reg[11]_0 ;
  output [3:0]\length_offset_reg[9]_1 ;
  output [1:0]\length_offset_reg[11]_1 ;
  output [3:0]\length_offset_reg[9]_2 ;
  output [1:0]\length_offset_reg[11]_2 ;
  output [3:0]O;
  output [1:0]\length_offset_reg[11]_3 ;
  output \length_offset_reg[2]_0 ;
  output \data_width_64.m_axi_wstrb_reg[4] ;
  output m_axi_wlast;
  output [0:0]\data_width_64.m_axi_wvalidsig_reg ;
  output \data_width_64.wrdatasmsig_reg[1] ;
  output rdaddrsmsig010_out__0;
  output rdaddrsmsig1__2;
  output m_axi_arvalid;
  output \data_width_64.datammpipeline_reg[1] ;
  output neqOp__0;
  output neqOp0_out;
  output neqOp;
  output rdaddrsmsig_reg;
  output neqOp0_out_1;
  output \s_axis_tx_tstrb_d_reg[7] ;
  output [63:0]\s_axis_tx_tdata_d_reg[63] ;
  output request_completed;
  output s_axis_tx_tvalid_d_reg;
  output s_axis_tx_tlast_d_reg_1;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  output [63:0]m_axi_wdata;
  output \ctlpbytecount_reg[1,0][11] ;
  output \ctlpbytecount_reg[1,0][7] ;
  output \ctlpbytecount_reg[1,0][9] ;
  output \ctlpbytecount_reg[1,0][8] ;
  output \ctlpbytecount_reg[1,0][5] ;
  output \ctlpbytecount_reg[1,0][4] ;
  output m_axi_wvalid;
  output \data_width_64.m_axi_rready_reg ;
  output \data_width_64.dataen_reg_2 ;
  output \m_axis_cw_tuser_reg[2] ;
  output [2:0]m_axi_awsize;
  output [2:0]m_axi_awprot;
  output p_1_in;
  output p_1_in2_in;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_arsize;
  output [2:0]m_axi_arprot;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output p_0_in0_in;
  output p_0_in1_in;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_wstrb;
  input \resetovrd.reset_reg[4] ;
  input [0:0]tlpfmtsig;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input sig_blk_lnk_up;
  input m_axis_cw_tlast_reg;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ;
  input \data_width_64.padzeroes_reg_1 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[3] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ;
  input m_axi_awvalidsig_reg;
  input empty_fwft_i_reg;
  input wrrespsmsig_reg;
  input m_axi_breadysig_reg;
  input \gaf.gaf0.ram_afull_i_reg_0 ;
  input m_axi_arvalid_sig_reg;
  input \data_width_64.rddatasmsig_reg ;
  input \data_width_64.single_beat_reg ;
  input \data_width_64.single_beat_reg_0 ;
  input rdorder_reg_0;
  input [63:0]Q;
  input sig_s_axis_cw_tlast;
  input \m_axis_cw_tdata_reg[14] ;
  input neqOp_0;
  input m_axis_cw_tlast_reg_0;
  input cw_full;
  input sig_s_axis_cw_tvalid;
  input s_axis_cw_treadysig34_out;
  input user_lnk_up_mux_reg;
  input cw_full_reg;
  input p_49_out;
  input user_lnk_up_mux_reg_0;
  input s_axis_cw_treadysig45_out;
  input p_1_out;
  input \gaf.gaf0.ram_afull_i_reg_1 ;
  input m_axis_cw_tlast_reg_1;
  input eqOp;
  input \m_axis_cw_tdata_reg[29] ;
  input \gaf.gaf0.ram_afull_i_reg_2 ;
  input cw_full_reg_0;
  input delaylast40_out;
  input padzeroes11_out;
  input reg_tready_reg;
  input s_axis_cr_tready_sig106_out;
  input \m_axis_cr_tdata_reg[30] ;
  input cr_full;
  input sig_s_axis_cr_tlast;
  input axi_aresetn;
  input user_lnk_up_mux_reg_1;
  input user_lnk_up_mux_reg_2;
  input user_lnk_up_mux_reg_3;
  input tlprequesterid;
  input sig_m_axis_cc_tready;
  input \end_point.psr_reg[2] ;
  input p_76_out;
  input s_axis_tx_tready;
  input \end_point.psr_reg[2]_0 ;
  input m_axis_cc_tvalid_d50_out;
  input badreadreq;
  input eqOp56_in;
  input [2:0]cfg_dev_control_max_payload;
  input user_lnk_up_mux_reg_4;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [7:0]\cfg_bus_number_d_reg[7] ;
  input [4:0]\cfg_device_number_d_reg[4] ;
  input [2:0]\cfg_function_number_d_reg[2] ;
  input [55:0]\m_axis_cr_tdata_reg[63] ;
  input sig_s_axis_cr_tvalid;
  input m_axi_wready;
  input m_axi_arready;
  input m_axi_rlast;
  input m_axi_rvalid;
  input p_0_in;
  input m_axi_awready;
  input [2:0]\m_axis_cr_tuser_reg[6] ;
  input \data_width_64.tlplength_reg[3][0] ;
  input \m_axis_cr_tuser_reg[3] ;
  input [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  input [31:0]\m_axis_cw_tdata_reg[7] ;
  input m_axi_bvalid;
  input [1:0]m_axi_bresp;
  input [2:0]\m_axis_cw_tuser_reg[6] ;
  input [22:0]\m_axis_cw_tdata_reg[22] ;
  input [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input [5:0]D;
  input \cpldsplitsm_reg[1] ;
  input [1:0]\length_offset_reg[9]_3 ;
  input \ctargetpipeline_reg[1] ;
  input \cpldsplitsm_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_0 ;
  input [20:0]\m_axis_cr_tdata_reg[22] ;
  input [4:0]\m_axis_cr_tdata_reg[6] ;
  input [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input [15:0]\data_width_64.m_axis_cc_tvalid_d_reg ;
  input user_lnk_up_mux_reg_5;
  input [1:0]m_axi_rresp;
  input [63:0]m_axi_rdata;
  input cpldsplitcount0_out;
  input [3:0]p_3_in;

  wire [5:0]D;
  wire [0:0]E;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[3] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire addroffset;
  wire almost_fullsig;
  wire axi_aresetn;
  wire badreadreq;
  wire [7:0]\cfg_bus_number_d_reg[7] ;
  wire [2:0]cfg_dev_control_max_payload;
  wire [4:0]\cfg_device_number_d_reg[4] ;
  wire [2:0]\cfg_function_number_d_reg[2] ;
  wire \comp_axi_mm_masterbridge_rd/neqOp0_out ;
  wire comp_axi_mm_s_masterbridge_rd_n_182;
  wire comp_axi_mm_s_masterbridge_rd_n_187;
  wire comp_axi_mm_s_masterbridge_rd_n_188;
  wire comp_axi_mm_s_masterbridge_rd_n_189;
  wire comp_axi_mm_s_masterbridge_rd_n_190;
  wire comp_axi_mm_s_masterbridge_rd_n_191;
  wire comp_axi_mm_s_masterbridge_rd_n_192;
  wire comp_axi_mm_s_masterbridge_rd_n_193;
  wire comp_axi_mm_s_masterbridge_rd_n_194;
  wire comp_axi_mm_s_masterbridge_rd_n_195;
  wire comp_axi_mm_s_masterbridge_rd_n_196;
  wire comp_axi_mm_s_masterbridge_rd_n_197;
  wire comp_axi_mm_s_masterbridge_wr_n_44;
  wire comp_axi_mm_s_masterbridge_wr_n_49;
  wire comp_axi_mm_s_masterbridge_wr_n_50;
  wire comp_axi_mm_s_masterbridge_wr_n_51;
  wire comp_axi_mm_s_masterbridge_wr_n_52;
  wire comp_axi_mm_s_masterbridge_wr_n_53;
  wire comp_axi_mm_s_masterbridge_wr_n_54;
  wire comp_axi_mm_s_masterbridge_wr_n_56;
  wire comp_axi_mm_s_masterbridge_wr_n_57;
  wire cpldsplitcount0_out;
  wire \cpldsplitsm_reg[1] ;
  wire \cpldsplitsm_reg[1]_0 ;
  wire [0:3]cplpendcpl;
  wire cr_full;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctlpbytecount_reg[1,0][11] ;
  wire \ctlpbytecount_reg[1,0][4] ;
  wire \ctlpbytecount_reg[1,0][5] ;
  wire \ctlpbytecount_reg[1,0][7] ;
  wire \ctlpbytecount_reg[1,0][8] ;
  wire \ctlpbytecount_reg[1,0][9] ;
  wire [0:0]\ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][6] ;
  wire \ctlplength_reg[2,0][9] ;
  wire [0:0]\ctlplength_reg[2,1][0] ;
  wire [0:0]\ctlplength_reg[2,2][0] ;
  wire [0:0]\ctlplength_reg[2,3][0] ;
  wire cw_full;
  wire cw_full_reg;
  wire cw_full_reg_0;
  wire \data_width_64.addroffset_reg ;
  wire \data_width_64.addroffset_reg_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[1] ;
  wire \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[2] ;
  wire \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[3] ;
  wire [2:0]\data_width_64.cpldsplitcounttemp_reg[4] ;
  wire \data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.dataen_reg_1 ;
  wire \data_width_64.dataen_reg_2 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.datatxpertlp_reg[1] ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.delaylast_reg_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire \data_width_64.m_axi_rready_reg ;
  wire \data_width_64.m_axi_wstrb_reg[4] ;
  wire [0:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[10] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[11] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[14] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[15] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[16] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[17] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[18] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[19] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[23] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[24] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[25] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[26] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[27] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[28] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[29] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  wire \data_width_64.m_axis_cc_tdatatemp64_reg[0] ;
  wire [15:0]\data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg_0 ;
  wire \data_width_64.padzeroes_reg ;
  wire \data_width_64.padzeroes_reg_0 ;
  wire \data_width_64.padzeroes_reg_1 ;
  wire \data_width_64.rddatasmsig_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire \data_width_64.rdtargetpipeline_reg[0]_rep ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[33] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[8] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.single_beat_reg ;
  wire \data_width_64.single_beat_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tagsig_reg[0]_0 ;
  wire \data_width_64.tlpaddrlow_reg[0] ;
  wire \data_width_64.tlplength_reg[3][0] ;
  wire \data_width_64.wrdatasmsig_reg[1] ;
  wire \data_width_64.wrpendflush_reg[0][3] ;
  wire \data_width_64.wrreqsetsig_reg ;
  wire dataensig;
  wire dataensig_0;
  wire delaylast;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire emptysig;
  wire [0:0]\end_point.ctl_user_intr_d_reg[8] ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire eqOp;
  wire eqOp56_in;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_1 ;
  wire \gaf.gaf0.ram_afull_i_reg_2 ;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[11] ;
  wire [1:0]\length_offset_reg[11]_0 ;
  wire [1:0]\length_offset_reg[11]_1 ;
  wire [1:0]\length_offset_reg[11]_2 ;
  wire [1:0]\length_offset_reg[11]_3 ;
  wire \length_offset_reg[2] ;
  wire \length_offset_reg[2]_0 ;
  wire [1:0]\length_offset_reg[6] ;
  wire \length_offset_reg[6]_0 ;
  wire \length_offset_reg[7] ;
  wire \length_offset_reg[8] ;
  wire \length_offset_reg[9] ;
  wire [3:0]\length_offset_reg[9]_0 ;
  wire [3:0]\length_offset_reg[9]_1 ;
  wire [3:0]\length_offset_reg[9]_2 ;
  wire [1:0]\length_offset_reg[9]_3 ;
  wire [31:0]m_axi_araddr;
  wire [7:0]m_axi_arlen;
  wire [2:0]m_axi_arprot;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire \m_axi_arsize_reg[0] ;
  wire m_axi_arvalid;
  wire m_axi_arvalid_sig_reg;
  wire [31:0]m_axi_awaddr;
  wire [7:0]m_axi_awlen;
  wire [2:0]m_axi_awprot;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire [0:0]\m_axi_awsize_reg[1] ;
  wire m_axi_awvalid;
  wire m_axi_awvalidsig_reg;
  wire m_axi_bready;
  wire m_axi_breadysig_reg;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [63:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [7:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire m_axi_wvalidsig;
  wire m_axis_cc_tvalid_d50_out;
  wire [20:0]\m_axis_cr_tdata_reg[22] ;
  wire \m_axis_cr_tdata_reg[30] ;
  wire [55:0]\m_axis_cr_tdata_reg[63] ;
  wire [4:0]\m_axis_cr_tdata_reg[6] ;
  wire \m_axis_cr_tuser_reg[3] ;
  wire [2:0]\m_axis_cr_tuser_reg[6] ;
  wire \m_axis_cw_tdata_reg[14] ;
  wire [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  wire [22:0]\m_axis_cw_tdata_reg[22] ;
  wire \m_axis_cw_tdata_reg[29] ;
  wire [31:0]\m_axis_cw_tdata_reg[7] ;
  wire m_axis_cw_tlast_reg;
  wire m_axis_cw_tlast_reg_0;
  wire m_axis_cw_tlast_reg_1;
  wire \m_axis_cw_tuser_reg[2] ;
  wire [2:0]\m_axis_cw_tuser_reg[6] ;
  wire neqOp;
  wire neqOp0_out;
  wire neqOp0_out_1;
  wire neqOp_0;
  wire neqOp__0;
  wire \np_ok_mode.rdndreqpipeline_d_reg[0] ;
  wire \np_ok_mode.rdndreqpipeline_d_reg[1] ;
  wire \np_ok_mode.rdndreqpipeline_d_reg[2] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[0] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[1] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[2] ;
  wire \orcplpipeline_reg_n_0_[0] ;
  wire \orcplpipeline_reg_n_0_[1] ;
  wire \orcplpipeline_reg_n_0_[2] ;
  wire \orrdreqpipeline_reg_n_0_[0] ;
  wire \orrdreqpipeline_reg_n_0_[1] ;
  wire \orrdreqpipeline_reg_n_0_[2] ;
  wire [3:0]out;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_49_out;
  wire p_76_out;
  wire padzeroes11_out;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire rdaddrsmsig010_out__0;
  wire rdaddrsmsig1__2;
  wire rdaddrsmsig_reg;
  wire rdorder_reg_0;
  wire rdreq_reg_0;
  wire rdreq_reg_1;
  wire rdreq_reg_2;
  wire rdreq_reg_n_0;
  wire reg_tready_reg;
  wire request_completed;
  wire \resetovrd.reset_reg[4] ;
  wire s_axis_cc_tvalid_q_reg;
  wire s_axis_cc_tvalid_q_reg_0;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [63:0]\s_axis_tx_tdata_d_reg[63] ;
  wire s_axis_tx_tlast_d_reg;
  wire s_axis_tx_tlast_d_reg_0;
  wire s_axis_tx_tlast_d_reg_1;
  wire s_axis_tx_tready;
  wire \s_axis_tx_tstrb_d_reg[7] ;
  wire s_axis_tx_tvalid_d_reg;
  wire sig_blk_lnk_up;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire sig_s_axis_cr_tlast;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tlast;
  wire sig_s_axis_cw_tvalid;
  wire single_beat;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;
  wire user_lnk_up_mux_reg_2;
  wire user_lnk_up_mux_reg_3;
  wire user_lnk_up_mux_reg_4;
  wire user_lnk_up_mux_reg_5;
  wire wraddrsmsig;
  wire wrensig_reg;
  wire wrensig_reg_0;
  wire wrrespsmsig;
  wire wrrespsmsig_reg;

  overlay1_axi_pcie_0_0_axi_mm_s_masterbridge_rd comp_axi_mm_s_masterbridge_rd
       (.D(D),
        .E(\m_axi_arsize_reg[0] ),
        .O(O),
        .Q(\length_offset_reg[6] ),
        .R(R),
        .SR(comp_axi_mm_s_masterbridge_wr_n_57),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .\cfg_bus_number_d_reg[7] (\cfg_bus_number_d_reg[7] ),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .\cfg_device_number_d_reg[4] (\cfg_device_number_d_reg[4] ),
        .\cfg_function_number_d_reg[2] (\cfg_function_number_d_reg[2] ),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\cpldsplitsm_reg[1]_0 (\cpldsplitsm_reg[1]_0 ),
        .cplpendcpl(cplpendcpl),
        .\cplpendcpl_reg[0] (comp_axi_mm_s_masterbridge_rd_n_197),
        .\cplpendcpl_reg[1] (comp_axi_mm_s_masterbridge_rd_n_196),
        .\cplpendcpl_reg[2] (comp_axi_mm_s_masterbridge_rd_n_195),
        .\cplpendcpl_reg[3] (comp_axi_mm_s_masterbridge_rd_n_182),
        .\cplpendcpl_reg[3]_0 (comp_axi_mm_s_masterbridge_rd_n_194),
        .cr_full(cr_full),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlpbytecount_reg[1,0][4] (\ctlpbytecount_reg[1,0][4] ),
        .\ctlpbytecount_reg[1,0][5] (\ctlpbytecount_reg[1,0][5] ),
        .\ctlpbytecount_reg[1,0][7] (\ctlpbytecount_reg[1,0][7] ),
        .\ctlpbytecount_reg[1,0][8] (\ctlpbytecount_reg[1,0][8] ),
        .\ctlpbytecount_reg[1,0][9] (\ctlpbytecount_reg[1,0][9] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][6] (\ctlplength_reg[2,0][6] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][0] (\ctlplength_reg[2,1][0] ),
        .\ctlplength_reg[2,2][0] (\ctlplength_reg[2,2][0] ),
        .\ctlplength_reg[2,3][0] (\ctlplength_reg[2,3][0] ),
        .\data_width_64.cpldsplitcounttemp_reg[1] (\data_width_64.cpldsplitcounttemp_reg[1] ),
        .\data_width_64.cpldsplitcounttemp_reg[1]_0 (\data_width_64.cpldsplitcounttemp_reg[1]_0 ),
        .\data_width_64.cpldsplitcounttemp_reg[2] (\data_width_64.cpldsplitcounttemp_reg[2] ),
        .\data_width_64.cpldsplitcounttemp_reg[2]_0 (\data_width_64.cpldsplitcounttemp_reg[2]_0 ),
        .\data_width_64.cpldsplitcounttemp_reg[3] (\data_width_64.cpldsplitcounttemp_reg[3] ),
        .\data_width_64.cpldsplitcounttemp_reg[4] (\data_width_64.cpldsplitcounttemp_reg[4] ),
        .\data_width_64.cpldsplitcounttemp_reg[4]_0 (\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg_2 ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.datatxpertlp_reg[1] (\data_width_64.datatxpertlp_reg[1] ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axi_rready_reg (\data_width_64.m_axi_rready_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[10] (\data_width_64.m_axis_cc_tdata_h_reg[10] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[11] (\data_width_64.m_axis_cc_tdata_h_reg[11] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[14] (\data_width_64.m_axis_cc_tdata_h_reg[14] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[15] (\data_width_64.m_axis_cc_tdata_h_reg[15] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[16] (\data_width_64.m_axis_cc_tdata_h_reg[16] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[17] (\data_width_64.m_axis_cc_tdata_h_reg[17] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[18] (\data_width_64.m_axis_cc_tdata_h_reg[18] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[19] (\data_width_64.m_axis_cc_tdata_h_reg[19] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[23] (\data_width_64.m_axis_cc_tdata_h_reg[23] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[24] (\data_width_64.m_axis_cc_tdata_h_reg[24] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[25] (\data_width_64.m_axis_cc_tdata_h_reg[25] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[26] (\data_width_64.m_axis_cc_tdata_h_reg[26] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[27] (\data_width_64.m_axis_cc_tdata_h_reg[27] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[28] (\data_width_64.m_axis_cc_tdata_h_reg[28] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[29] (\data_width_64.m_axis_cc_tdata_h_reg[29] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[45] (\data_width_64.m_axis_cc_tdata_h_reg[45] ),
        .\data_width_64.m_axis_cc_tdatatemp64_reg[0] (\data_width_64.m_axis_cc_tdatatemp64_reg[0] ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg_0 (\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdtargetpipeline_reg[0]_rep (\data_width_64.rdtargetpipeline_reg[0]_rep ),
        .\data_width_64.rrespsig_reg[1] (neqOp__0),
        .\data_width_64.single_beat_reg (\data_width_64.single_beat_reg ),
        .\data_width_64.single_beat_reg_0 (\data_width_64.single_beat_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0]_0 ),
        .\data_width_64.tagsig_reg[0]_0 (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tlpaddrlow_reg[0] (\data_width_64.tlpaddrlow_reg[0] ),
        .\data_width_64.tlplength_reg[3][0] (\data_width_64.tlplength_reg[3][0] ),
        .\data_width_64.wrpendflush_reg[0][3] (\data_width_64.wrpendflush_reg[0][3] ),
        .\data_width_64.wrreqpendsig_reg[0] (comp_axi_mm_s_masterbridge_wr_n_52),
        .\data_width_64.wrreqpendsig_reg[0]_0 (rdreq_reg_2),
        .\data_width_64.wrreqpendsig_reg[0]_1 (rdaddrsmsig010_out__0),
        .\data_width_64.wrreqpendsig_reg[1] (comp_axi_mm_s_masterbridge_wr_n_54),
        .\data_width_64.wrreqpendsig_reg[2] (comp_axi_mm_s_masterbridge_wr_n_53),
        .dataensig_0(dataensig_0),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .eqOp56_in(eqOp56_in),
        .\gaf.gaf0.ram_afull_i_reg (almost_fullsig),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg_0 ),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[11]_3 (\length_offset_reg[11]_3 ),
        .\length_offset_reg[2] (\length_offset_reg[2] ),
        .\length_offset_reg[2]_0 (\length_offset_reg[2]_0 ),
        .\length_offset_reg[6] (\length_offset_reg[6]_0 ),
        .\length_offset_reg[7] (\length_offset_reg[7] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .\length_offset_reg[9] (\length_offset_reg[9] ),
        .\length_offset_reg[9]_0 (\length_offset_reg[9]_0 ),
        .\length_offset_reg[9]_1 (\length_offset_reg[9]_1 ),
        .\length_offset_reg[9]_2 (\length_offset_reg[9]_2 ),
        .\length_offset_reg[9]_3 (\length_offset_reg[9]_3 ),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_arvalid_sig_reg(m_axi_arvalid_sig_reg),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .\m_axis_cr_tdata_reg[22] (\m_axis_cr_tdata_reg[22] ),
        .\m_axis_cr_tdata_reg[30] (\m_axis_cr_tdata_reg[30] ),
        .\m_axis_cr_tdata_reg[63] (\m_axis_cr_tdata_reg[63] ),
        .\m_axis_cr_tdata_reg[6] (\m_axis_cr_tdata_reg[6] ),
        .\m_axis_cr_tuser_reg[3] (\m_axis_cr_tuser_reg[3] ),
        .\m_axis_cr_tuser_reg[6] (\m_axis_cr_tuser_reg[6] ),
        .neqOp0_out(\comp_axi_mm_masterbridge_rd/neqOp0_out ),
        .neqOp0_out_1(neqOp0_out_1),
        .\np_ok_mode.rdndreqpipeline_d_reg[0] (\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .\np_ok_mode.rdndreqpipeline_d_reg[1] (\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .\np_ok_mode.rdndreqpipeline_d_reg[2] (\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .\np_ok_mode.rdreqpipeline_d_reg[0] (\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .\np_ok_mode.rdreqpipeline_d_reg[1] (\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .\np_ok_mode.rdreqpipeline_d_reg[2] (\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .\orcplpipeline_reg[0] (comp_axi_mm_s_masterbridge_rd_n_193),
        .\orcplpipeline_reg[0]_0 (\orcplpipeline_reg_n_0_[0] ),
        .\orcplpipeline_reg[1] (comp_axi_mm_s_masterbridge_rd_n_192),
        .\orcplpipeline_reg[1]_0 (\orcplpipeline_reg_n_0_[1] ),
        .\orcplpipeline_reg[2] (comp_axi_mm_s_masterbridge_rd_n_191),
        .\orcplpipeline_reg[2]_0 (\orcplpipeline_reg_n_0_[2] ),
        .\orrdreqpipeline_reg[0] (comp_axi_mm_s_masterbridge_rd_n_190),
        .\orrdreqpipeline_reg[0]_0 (\orrdreqpipeline_reg_n_0_[0] ),
        .\orrdreqpipeline_reg[1] (comp_axi_mm_s_masterbridge_rd_n_189),
        .\orrdreqpipeline_reg[1]_0 (\orrdreqpipeline_reg_n_0_[1] ),
        .\orrdreqpipeline_reg[2] (comp_axi_mm_s_masterbridge_rd_n_188),
        .\orrdreqpipeline_reg[2]_0 (\orrdreqpipeline_reg_n_0_[2] ),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_3_in(p_3_in),
        .p_76_out(p_76_out),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .rdaddrsmsig1__2(rdaddrsmsig1__2),
        .rdaddrsmsig_reg(rdaddrsmsig_reg),
        .rdaddrsmsig_reg_0(comp_axi_mm_s_masterbridge_wr_n_56),
        .rdaddrsmsig_reg_1(comp_axi_mm_s_masterbridge_wr_n_44),
        .rdorder_reg(rdreq_reg_1),
        .rdreq_reg(rdreq_reg_0),
        .rdreq_reg_0(comp_axi_mm_s_masterbridge_rd_n_187),
        .rdreq_reg_1(rdreq_reg_n_0),
        .reg_tready_reg(reg_tready_reg),
        .request_completed(request_completed),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .\respmmpipeline_reg[0] (comp_axi_mm_s_masterbridge_wr_n_49),
        .\respmmpipeline_reg[1] (comp_axi_mm_s_masterbridge_wr_n_51),
        .\respmmpipeline_reg[2] (comp_axi_mm_s_masterbridge_wr_n_50),
        .s_axis_cc_tvalid_q_reg(s_axis_cc_tvalid_q_reg),
        .s_axis_cc_tvalid_q_reg_0(s_axis_cc_tvalid_q_reg_0),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .\s_axis_tx_tdata_d_reg[63] (\s_axis_tx_tdata_d_reg[63] ),
        .s_axis_tx_tlast_d_reg(s_axis_tx_tlast_d_reg),
        .s_axis_tx_tlast_d_reg_0(s_axis_tx_tlast_d_reg_0),
        .s_axis_tx_tlast_d_reg_1(s_axis_tx_tlast_d_reg_1),
        .s_axis_tx_tready(s_axis_tx_tready),
        .\s_axis_tx_tstrb_d_reg[7] (\s_axis_tx_tstrb_d_reg[7] ),
        .s_axis_tx_tvalid_d_reg(s_axis_tx_tvalid_d_reg),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .sig_s_axis_cr_tlast(sig_s_axis_cr_tlast),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .single_beat(single_beat),
        .tlprequesterid(tlprequesterid),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg_1),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_2),
        .user_lnk_up_mux_reg_1(user_lnk_up_mux_reg_3),
        .user_lnk_up_mux_reg_2(user_lnk_up_mux_reg_4),
        .user_lnk_up_mux_reg_3(user_lnk_up_mux_reg_5));
  overlay1_axi_pcie_0_0_axi_mm_s_masterbridge_wr comp_axi_mm_s_masterbridge_wr
       (.\AddrVar_reg[0] (E),
        .E(wraddrsmsig),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[3] (\FSM_sequential_data_width_64.wrreqsmsig_reg[3] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ),
        .Q(Q),
        .SR(comp_axi_mm_s_masterbridge_wr_n_57),
        .addroffset(addroffset),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(\data_width_64.rdtargetpipeline_reg[0]_rep ),
        .cw_full(cw_full),
        .cw_full_reg(cw_full_reg),
        .cw_full_reg_0(cw_full_reg_0),
        .\data_width_64.addroffset_reg (\data_width_64.addroffset_reg ),
        .\data_width_64.addroffset_reg_0 (\data_width_64.addroffset_reg_0 ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.dataen_reg_1 (\data_width_64.dataen_reg_1 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.delaylast_reg_0 (\data_width_64.delaylast_reg_0 ),
        .\data_width_64.m_axi_wstrb_reg[4] (\data_width_64.m_axi_wstrb_reg[4] ),
        .\data_width_64.m_axi_wstrb_reg[7] (m_axi_wvalidsig),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\data_width_64.padzeroes_reg (\data_width_64.padzeroes_reg ),
        .\data_width_64.padzeroes_reg_0 (\data_width_64.padzeroes_reg_0 ),
        .\data_width_64.padzeroes_reg_1 (\data_width_64.padzeroes_reg_1 ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[33] (\data_width_64.s_axis_cw_tdatatemp_reg[33] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[8] (\data_width_64.s_axis_cw_tdatatemp_reg[8] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 (\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.wrdatasmsig_reg[1] (\data_width_64.wrdatasmsig_reg[1] ),
        .\data_width_64.wrpendingsig_reg[1][0] (comp_axi_mm_s_masterbridge_wr_n_52),
        .\data_width_64.wrpendingsig_reg[1][1] (comp_axi_mm_s_masterbridge_wr_n_54),
        .\data_width_64.wrpendingsig_reg[1][2] (comp_axi_mm_s_masterbridge_wr_n_53),
        .\data_width_64.wrreqsetsig_reg (\data_width_64.wrreqsetsig_reg ),
        .dataensig(dataensig),
        .delaylast(delaylast),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.ctl_user_intr_d_reg[8] (\end_point.ctl_user_intr_d_reg[8] ),
        .eqOp(eqOp),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg_1 ),
        .\gaf.gaf0.ram_afull_i_reg_1 (\gaf.gaf0.ram_afull_i_reg_2 ),
        .\gpregsm1.curr_fwft_state_reg[1] (emptysig),
        .\m_axi_araddr1_reg[0] (comp_axi_mm_s_masterbridge_wr_n_44),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .\m_axi_awsize_reg[1] (\m_axi_awsize_reg[1] ),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_awvalidsig_reg(m_axi_awvalidsig_reg),
        .m_axi_bready(m_axi_bready),
        .m_axi_breadysig_reg(m_axi_breadysig_reg),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wvalid(m_axi_wvalid),
        .\m_axis_cw_tdata_reg[14] (\m_axis_cw_tdata_reg[14] ),
        .\m_axis_cw_tdata_reg[14]_0 (\m_axis_cw_tdata_reg[14]_0 ),
        .\m_axis_cw_tdata_reg[22] (\m_axis_cw_tdata_reg[22] ),
        .\m_axis_cw_tdata_reg[29] (\m_axis_cw_tdata_reg[29] ),
        .\m_axis_cw_tdata_reg[7] (\m_axis_cw_tdata_reg[7] ),
        .m_axis_cw_tlast_reg(m_axis_cw_tlast_reg),
        .m_axis_cw_tlast_reg_0(m_axis_cw_tlast_reg_0),
        .m_axis_cw_tlast_reg_1(m_axis_cw_tlast_reg_1),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .\m_axis_cw_tuser_reg[6] (\m_axis_cw_tuser_reg[6] ),
        .\master_int_reg[1] (wrrespsmsig),
        .neqOp(neqOp),
        .neqOp0_out(neqOp0_out),
        .neqOp0_out_0(\comp_axi_mm_masterbridge_rd/neqOp0_out ),
        .neqOp_0(neqOp_0),
        .out(out),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_49_out(p_49_out),
        .padzeroes11_out(padzeroes11_out),
        .rdaddrsmsig_reg(\m_axi_arsize_reg[0] ),
        .rdreq_reg(rdreq_reg_2),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .\respmmpipeline_reg[0] (comp_axi_mm_s_masterbridge_wr_n_49),
        .\respmmpipeline_reg[1] (comp_axi_mm_s_masterbridge_wr_n_51),
        .\respmmpipeline_reg[2] (comp_axi_mm_s_masterbridge_wr_n_50),
        .s_axis_cw_treadysig(s_axis_cw_treadysig),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_s_axis_cw_tlast(sig_s_axis_cw_tlast),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .\splitcnt_reg[1] (rdaddrsmsig010_out__0),
        .\splitcnt_reg[1]_0 (comp_axi_mm_s_masterbridge_wr_n_56),
        .tlpfmtsig(tlpfmtsig),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_0),
        .wrensig_reg_0(wrensig_reg),
        .wrensig_reg_1(wrensig_reg_0),
        .wrrespsmsig_reg(wrrespsmsig_reg));
  FDRE \cplpendcpl_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_197),
        .Q(cplpendcpl[0]),
        .R(comp_axi_mm_s_masterbridge_rd_n_182));
  FDRE \cplpendcpl_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_196),
        .Q(cplpendcpl[1]),
        .R(comp_axi_mm_s_masterbridge_rd_n_182));
  FDRE \cplpendcpl_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_195),
        .Q(cplpendcpl[2]),
        .R(comp_axi_mm_s_masterbridge_rd_n_182));
  FDRE \cplpendcpl_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_194),
        .Q(cplpendcpl[3]),
        .R(comp_axi_mm_s_masterbridge_rd_n_182));
  FDRE \orcplpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_193),
        .Q(\orcplpipeline_reg_n_0_[0] ),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
  FDRE \orcplpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_192),
        .Q(\orcplpipeline_reg_n_0_[1] ),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
  FDRE \orcplpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_191),
        .Q(\orcplpipeline_reg_n_0_[2] ),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
  FDRE \orrdreqpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_190),
        .Q(\orrdreqpipeline_reg_n_0_[0] ),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
  FDRE \orrdreqpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_189),
        .Q(\orrdreqpipeline_reg_n_0_[1] ),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
  FDRE \orrdreqpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_188),
        .Q(\orrdreqpipeline_reg_n_0_[2] ),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
  FDRE rdorder_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(rdorder_reg_0),
        .Q(rdreq_reg_1),
        .R(1'b0));
  FDRE rdreq_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_s_masterbridge_rd_n_187),
        .Q(rdreq_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_mm_s_masterbridge_rd" *) 
module overlay1_axi_pcie_0_0_axi_mm_s_masterbridge_rd
   (\data_width_64.rdtargetpipeline_reg[0]_rep ,
    s_axis_cc_tvalid_q_reg,
    s_axis_tx_tlast_d_reg,
    rdreq_reg,
    \data_width_64.wrpendflush_reg[0][3] ,
    \data_width_64.tlpaddrlow_reg[0] ,
    \data_width_64.lnkdowndataflush_reg ,
    s_axis_cc_tvalid_q_reg_0,
    sig_s_axis_cr_tready,
    s_axis_tx_tlast_d_reg_0,
    \gaf.gaf0.ram_afull_i_reg ,
    \data_width_64.datatxpertlp_reg[1] ,
    E,
    single_beat,
    m_axi_rready,
    dataensig_0,
    \data_width_64.tagsig_reg[0] ,
    \np_ok_mode.rdndreqpipeline_d_reg[2] ,
    \np_ok_mode.rdndreqpipeline_d_reg[0] ,
    \np_ok_mode.rdndreqpipeline_d_reg[1] ,
    \np_ok_mode.rdreqpipeline_d_reg[2] ,
    \np_ok_mode.rdreqpipeline_d_reg[0] ,
    \np_ok_mode.rdreqpipeline_d_reg[1] ,
    \data_width_64.tagsig_reg[0]_0 ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.m_axis_cc_tvalid_nd_reg_0 ,
    \data_width_64.m_axis_cc_tdatatemp64_reg[0] ,
    \data_width_64.m_axis_cc_tdata_h_reg[45] ,
    sig_m_axis_cc_tvalid,
    sig_m_axis_cc_tlast,
    Q,
    \ctlplength_reg[2,3][0] ,
    \ctlplength_reg[2,2][0] ,
    \ctlplength_reg[2,1][0] ,
    \ctlplength_reg[2,0][0] ,
    \length_offset_reg[2] ,
    \length_offset_reg[6] ,
    \length_offset_reg[7] ,
    \length_offset_reg[8] ,
    \length_offset_reg[9] ,
    \length_offset_reg[10] ,
    \length_offset_reg[11] ,
    \data_width_64.cpldsplitcounttemp_reg[4] ,
    \data_width_64.cpldsplitcounttemp_reg[3] ,
    \data_width_64.cpldsplitcounttemp_reg[4]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[1] ,
    \data_width_64.cpldsplitcounttemp_reg[1]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[2] ,
    \data_width_64.cpldsplitcounttemp_reg[2]_0 ,
    R,
    \ctlplength_reg[2,0][9] ,
    \ctlplength_reg[2,0][6] ,
    \data_width_64.m_axis_cc_tdata_h_reg[10] ,
    \data_width_64.m_axis_cc_tdata_h_reg[11] ,
    \data_width_64.m_axis_cc_tdata_h_reg[14] ,
    \data_width_64.m_axis_cc_tdata_h_reg[15] ,
    \data_width_64.m_axis_cc_tdata_h_reg[16] ,
    \data_width_64.m_axis_cc_tdata_h_reg[17] ,
    \data_width_64.m_axis_cc_tdata_h_reg[18] ,
    \data_width_64.m_axis_cc_tdata_h_reg[19] ,
    \data_width_64.m_axis_cc_tdata_h_reg[23] ,
    \data_width_64.m_axis_cc_tdata_h_reg[24] ,
    \data_width_64.m_axis_cc_tdata_h_reg[25] ,
    \data_width_64.m_axis_cc_tdata_h_reg[26] ,
    \data_width_64.m_axis_cc_tdata_h_reg[27] ,
    \data_width_64.m_axis_cc_tdata_h_reg[28] ,
    \data_width_64.m_axis_cc_tdata_h_reg[29] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \length_offset_reg[9]_0 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[9]_1 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[9]_2 ,
    \length_offset_reg[11]_2 ,
    O,
    \length_offset_reg[11]_3 ,
    \length_offset_reg[2]_0 ,
    neqOp0_out,
    rdaddrsmsig1__2,
    m_axi_arvalid,
    \data_width_64.datammpipeline_reg[1] ,
    \data_width_64.rrespsig_reg[1] ,
    rdaddrsmsig_reg,
    neqOp0_out_1,
    \s_axis_tx_tstrb_d_reg[7] ,
    \s_axis_tx_tdata_d_reg[63] ,
    request_completed,
    s_axis_tx_tvalid_d_reg,
    s_axis_tx_tlast_d_reg_1,
    \ctlpbytecount_reg[1,0][11] ,
    \ctlpbytecount_reg[1,0][7] ,
    \ctlpbytecount_reg[1,0][9] ,
    \ctlpbytecount_reg[1,0][8] ,
    \cplpendcpl_reg[3] ,
    \ctlpbytecount_reg[1,0][5] ,
    \ctlpbytecount_reg[1,0][4] ,
    \data_width_64.m_axi_rready_reg ,
    \data_width_64.dataen_reg ,
    rdreq_reg_0,
    \orrdreqpipeline_reg[2] ,
    \orrdreqpipeline_reg[1] ,
    \orrdreqpipeline_reg[0] ,
    \orcplpipeline_reg[2] ,
    \orcplpipeline_reg[1] ,
    \orcplpipeline_reg[0] ,
    \cplpendcpl_reg[3]_0 ,
    \cplpendcpl_reg[2] ,
    \cplpendcpl_reg[1] ,
    \cplpendcpl_reg[0] ,
    m_axi_arsize,
    m_axi_arprot,
    m_axi_araddr,
    m_axi_arlen,
    p_0_in0_in,
    p_0_in1_in,
    \resetovrd.reset_reg[4] ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    sig_blk_lnk_up,
    \gaf.gaf0.ram_afull_i_reg_0 ,
    m_axi_arvalid_sig_reg,
    \data_width_64.rddatasmsig_reg ,
    \data_width_64.single_beat_reg ,
    \data_width_64.single_beat_reg_0 ,
    \m_axis_cr_tuser_reg[3] ,
    eqOp56_in,
    sig_m_axis_cc_tready,
    m_axis_cc_tvalid_d50_out,
    p_76_out,
    reg_tready_reg,
    s_axis_cr_tready_sig106_out,
    \m_axis_cr_tdata_reg[30] ,
    cr_full,
    sig_s_axis_cr_tlast,
    axi_aresetn,
    user_lnk_up_mux_reg,
    user_lnk_up_mux_reg_0,
    user_lnk_up_mux_reg_1,
    tlprequesterid,
    \end_point.psr_reg[2] ,
    s_axis_tx_tready,
    \end_point.psr_reg[2]_0 ,
    badreadreq,
    cfg_dev_control_max_payload,
    user_lnk_up_mux_reg_2,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \cfg_bus_number_d_reg[7] ,
    \cfg_device_number_d_reg[4] ,
    \cfg_function_number_d_reg[2] ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.wrreqpendsig_reg[2] ,
    \data_width_64.wrreqpendsig_reg[1] ,
    \m_axis_cr_tdata_reg[63] ,
    sig_s_axis_cr_tvalid,
    cplpendcpl,
    \data_width_64.wrreqpendsig_reg[0]_0 ,
    \respmmpipeline_reg[0] ,
    \respmmpipeline_reg[2] ,
    \respmmpipeline_reg[1] ,
    \orrdreqpipeline_reg[0]_0 ,
    \orrdreqpipeline_reg[2]_0 ,
    \orrdreqpipeline_reg[1]_0 ,
    \data_width_64.wrreqpendsig_reg[0]_1 ,
    m_axi_arready,
    m_axi_rlast,
    m_axi_rvalid,
    \orcplpipeline_reg[0]_0 ,
    \orcplpipeline_reg[2]_0 ,
    \orcplpipeline_reg[1]_0 ,
    p_0_in,
    rdorder_reg,
    rdreq_reg_1,
    \m_axis_cr_tuser_reg[6] ,
    \data_width_64.tlplength_reg[3][0] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    D,
    \cpldsplitsm_reg[1] ,
    \length_offset_reg[9]_3 ,
    \ctargetpipeline_reg[1] ,
    \cpldsplitsm_reg[1]_0 ,
    \ctargetpipeline_reg[1]_0 ,
    \m_axis_cr_tdata_reg[22] ,
    \m_axis_cr_tdata_reg[6] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    user_lnk_up_mux_reg_3,
    SR,
    rdaddrsmsig_reg_0,
    m_axi_rresp,
    m_axi_rdata,
    cpldsplitcount0_out,
    p_3_in,
    rdaddrsmsig_reg_1);
  output \data_width_64.rdtargetpipeline_reg[0]_rep ;
  output s_axis_cc_tvalid_q_reg;
  output s_axis_tx_tlast_d_reg;
  output rdreq_reg;
  output \data_width_64.wrpendflush_reg[0][3] ;
  output \data_width_64.tlpaddrlow_reg[0] ;
  output \data_width_64.lnkdowndataflush_reg ;
  output s_axis_cc_tvalid_q_reg_0;
  output sig_s_axis_cr_tready;
  output s_axis_tx_tlast_d_reg_0;
  output \gaf.gaf0.ram_afull_i_reg ;
  output \data_width_64.datatxpertlp_reg[1] ;
  output [0:0]E;
  output single_beat;
  output m_axi_rready;
  output dataensig_0;
  output \data_width_64.tagsig_reg[0] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[2] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[0] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[1] ;
  output \np_ok_mode.rdreqpipeline_d_reg[2] ;
  output \np_ok_mode.rdreqpipeline_d_reg[0] ;
  output \np_ok_mode.rdreqpipeline_d_reg[1] ;
  output \data_width_64.tagsig_reg[0]_0 ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg_0 ;
  output \data_width_64.m_axis_cc_tdatatemp64_reg[0] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  output sig_m_axis_cc_tvalid;
  output sig_m_axis_cc_tlast;
  output [1:0]Q;
  output \ctlplength_reg[2,3][0] ;
  output \ctlplength_reg[2,2][0] ;
  output \ctlplength_reg[2,1][0] ;
  output \ctlplength_reg[2,0][0] ;
  output \length_offset_reg[2] ;
  output \length_offset_reg[6] ;
  output \length_offset_reg[7] ;
  output \length_offset_reg[8] ;
  output \length_offset_reg[9] ;
  output \length_offset_reg[10] ;
  output \length_offset_reg[11] ;
  output [2:0]\data_width_64.cpldsplitcounttemp_reg[4] ;
  output \data_width_64.cpldsplitcounttemp_reg[3] ;
  output \data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[1] ;
  output \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[2] ;
  output \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  output [6:0]R;
  output \ctlplength_reg[2,0][9] ;
  output \ctlplength_reg[2,0][6] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[10] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[11] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[14] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[15] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[16] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[17] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[18] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[19] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[23] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[24] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[25] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[26] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[27] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[28] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[29] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output [3:0]\length_offset_reg[9]_0 ;
  output [1:0]\length_offset_reg[11]_0 ;
  output [3:0]\length_offset_reg[9]_1 ;
  output [1:0]\length_offset_reg[11]_1 ;
  output [3:0]\length_offset_reg[9]_2 ;
  output [1:0]\length_offset_reg[11]_2 ;
  output [3:0]O;
  output [1:0]\length_offset_reg[11]_3 ;
  output \length_offset_reg[2]_0 ;
  output neqOp0_out;
  output rdaddrsmsig1__2;
  output m_axi_arvalid;
  output \data_width_64.datammpipeline_reg[1] ;
  output \data_width_64.rrespsig_reg[1] ;
  output rdaddrsmsig_reg;
  output neqOp0_out_1;
  output \s_axis_tx_tstrb_d_reg[7] ;
  output [63:0]\s_axis_tx_tdata_d_reg[63] ;
  output request_completed;
  output s_axis_tx_tvalid_d_reg;
  output s_axis_tx_tlast_d_reg_1;
  output \ctlpbytecount_reg[1,0][11] ;
  output \ctlpbytecount_reg[1,0][7] ;
  output \ctlpbytecount_reg[1,0][9] ;
  output \ctlpbytecount_reg[1,0][8] ;
  output \cplpendcpl_reg[3] ;
  output \ctlpbytecount_reg[1,0][5] ;
  output \ctlpbytecount_reg[1,0][4] ;
  output \data_width_64.m_axi_rready_reg ;
  output \data_width_64.dataen_reg ;
  output rdreq_reg_0;
  output \orrdreqpipeline_reg[2] ;
  output \orrdreqpipeline_reg[1] ;
  output \orrdreqpipeline_reg[0] ;
  output \orcplpipeline_reg[2] ;
  output \orcplpipeline_reg[1] ;
  output \orcplpipeline_reg[0] ;
  output \cplpendcpl_reg[3]_0 ;
  output \cplpendcpl_reg[2] ;
  output \cplpendcpl_reg[1] ;
  output \cplpendcpl_reg[0] ;
  output [2:0]m_axi_arsize;
  output [2:0]m_axi_arprot;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output p_0_in0_in;
  output p_0_in1_in;
  input \resetovrd.reset_reg[4] ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input sig_blk_lnk_up;
  input \gaf.gaf0.ram_afull_i_reg_0 ;
  input m_axi_arvalid_sig_reg;
  input \data_width_64.rddatasmsig_reg ;
  input \data_width_64.single_beat_reg ;
  input \data_width_64.single_beat_reg_0 ;
  input \m_axis_cr_tuser_reg[3] ;
  input eqOp56_in;
  input sig_m_axis_cc_tready;
  input m_axis_cc_tvalid_d50_out;
  input p_76_out;
  input reg_tready_reg;
  input s_axis_cr_tready_sig106_out;
  input \m_axis_cr_tdata_reg[30] ;
  input cr_full;
  input sig_s_axis_cr_tlast;
  input axi_aresetn;
  input user_lnk_up_mux_reg;
  input user_lnk_up_mux_reg_0;
  input user_lnk_up_mux_reg_1;
  input tlprequesterid;
  input \end_point.psr_reg[2] ;
  input s_axis_tx_tready;
  input \end_point.psr_reg[2]_0 ;
  input badreadreq;
  input [2:0]cfg_dev_control_max_payload;
  input user_lnk_up_mux_reg_2;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [7:0]\cfg_bus_number_d_reg[7] ;
  input [4:0]\cfg_device_number_d_reg[4] ;
  input [2:0]\cfg_function_number_d_reg[2] ;
  input \data_width_64.wrreqpendsig_reg[0] ;
  input \data_width_64.wrreqpendsig_reg[2] ;
  input \data_width_64.wrreqpendsig_reg[1] ;
  input [55:0]\m_axis_cr_tdata_reg[63] ;
  input sig_s_axis_cr_tvalid;
  input [0:3]cplpendcpl;
  input \data_width_64.wrreqpendsig_reg[0]_0 ;
  input \respmmpipeline_reg[0] ;
  input \respmmpipeline_reg[2] ;
  input \respmmpipeline_reg[1] ;
  input \orrdreqpipeline_reg[0]_0 ;
  input \orrdreqpipeline_reg[2]_0 ;
  input \orrdreqpipeline_reg[1]_0 ;
  input \data_width_64.wrreqpendsig_reg[0]_1 ;
  input m_axi_arready;
  input m_axi_rlast;
  input m_axi_rvalid;
  input \orcplpipeline_reg[0]_0 ;
  input \orcplpipeline_reg[2]_0 ;
  input \orcplpipeline_reg[1]_0 ;
  input p_0_in;
  input rdorder_reg;
  input rdreq_reg_1;
  input [2:0]\m_axis_cr_tuser_reg[6] ;
  input \data_width_64.tlplength_reg[3][0] ;
  input [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input [5:0]D;
  input \cpldsplitsm_reg[1] ;
  input [1:0]\length_offset_reg[9]_3 ;
  input \ctargetpipeline_reg[1] ;
  input \cpldsplitsm_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_0 ;
  input [20:0]\m_axis_cr_tdata_reg[22] ;
  input [4:0]\m_axis_cr_tdata_reg[6] ;
  input [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input [15:0]\data_width_64.m_axis_cc_tvalid_d_reg ;
  input user_lnk_up_mux_reg_3;
  input [0:0]SR;
  input [0:0]rdaddrsmsig_reg_0;
  input [1:0]m_axi_rresp;
  input [63:0]m_axi_rdata;
  input cpldsplitcount0_out;
  input [3:0]p_3_in;
  input [0:0]rdaddrsmsig_reg_1;

  wire [30:0]AddrVar;
  wire [5:0]D;
  wire [0:0]E;
  wire [3:0]O;
  wire [1:0]Q;
  wire [6:0]R;
  wire [0:0]SR;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch_i_1_n_0;
  wire [7:0]\cfg_bus_number_d_reg[7] ;
  wire [2:0]cfg_dev_control_max_payload;
  wire [4:0]\cfg_device_number_d_reg[4] ;
  wire [2:0]\cfg_function_number_d_reg[2] ;
  wire comp_axi_mm_masterbridge_rd_n_100;
  wire comp_axi_mm_masterbridge_rd_n_101;
  wire comp_axi_mm_masterbridge_rd_n_102;
  wire comp_axi_mm_masterbridge_rd_n_15;
  wire comp_axi_mm_masterbridge_rd_n_5;
  wire comp_axi_mm_masterbridge_rd_n_7;
  wire comp_axi_mm_masterbridge_rd_n_8;
  wire comp_axi_s_masterbridge_rd_n_10;
  wire comp_axi_s_masterbridge_rd_n_102;
  wire comp_axi_s_masterbridge_rd_n_103;
  wire comp_axi_s_masterbridge_rd_n_104;
  wire comp_axi_s_masterbridge_rd_n_105;
  wire comp_axi_s_masterbridge_rd_n_106;
  wire comp_axi_s_masterbridge_rd_n_107;
  wire comp_axi_s_masterbridge_rd_n_108;
  wire comp_axi_s_masterbridge_rd_n_109;
  wire comp_axi_s_masterbridge_rd_n_110;
  wire comp_axi_s_masterbridge_rd_n_111;
  wire comp_axi_s_masterbridge_rd_n_112;
  wire comp_axi_s_masterbridge_rd_n_113;
  wire comp_axi_s_masterbridge_rd_n_13;
  wire comp_axi_s_masterbridge_rd_n_132;
  wire comp_axi_s_masterbridge_rd_n_133;
  wire comp_axi_s_masterbridge_rd_n_134;
  wire comp_axi_s_masterbridge_rd_n_135;
  wire comp_axi_s_masterbridge_rd_n_136;
  wire comp_axi_s_masterbridge_rd_n_137;
  wire comp_axi_s_masterbridge_rd_n_138;
  wire comp_axi_s_masterbridge_rd_n_139;
  wire comp_axi_s_masterbridge_rd_n_140;
  wire comp_axi_s_masterbridge_rd_n_141;
  wire comp_axi_s_masterbridge_rd_n_142;
  wire comp_axi_s_masterbridge_rd_n_143;
  wire comp_axi_s_masterbridge_rd_n_144;
  wire comp_axi_s_masterbridge_rd_n_145;
  wire comp_axi_s_masterbridge_rd_n_146;
  wire comp_axi_s_masterbridge_rd_n_147;
  wire comp_axi_s_masterbridge_rd_n_148;
  wire comp_axi_s_masterbridge_rd_n_16;
  wire comp_axi_s_masterbridge_rd_n_17;
  wire comp_axi_s_masterbridge_rd_n_174;
  wire comp_axi_s_masterbridge_rd_n_175;
  wire comp_axi_s_masterbridge_rd_n_176;
  wire comp_axi_s_masterbridge_rd_n_177;
  wire comp_axi_s_masterbridge_rd_n_178;
  wire comp_axi_s_masterbridge_rd_n_179;
  wire comp_axi_s_masterbridge_rd_n_18;
  wire comp_axi_s_masterbridge_rd_n_180;
  wire comp_axi_s_masterbridge_rd_n_181;
  wire comp_axi_s_masterbridge_rd_n_182;
  wire comp_axi_s_masterbridge_rd_n_183;
  wire comp_axi_s_masterbridge_rd_n_185;
  wire comp_axi_s_masterbridge_rd_n_186;
  wire comp_axi_s_masterbridge_rd_n_187;
  wire comp_axi_s_masterbridge_rd_n_188;
  wire comp_axi_s_masterbridge_rd_n_189;
  wire comp_axi_s_masterbridge_rd_n_19;
  wire comp_axi_s_masterbridge_rd_n_190;
  wire comp_axi_s_masterbridge_rd_n_191;
  wire comp_axi_s_masterbridge_rd_n_192;
  wire comp_axi_s_masterbridge_rd_n_193;
  wire comp_axi_s_masterbridge_rd_n_194;
  wire comp_axi_s_masterbridge_rd_n_195;
  wire comp_axi_s_masterbridge_rd_n_196;
  wire comp_axi_s_masterbridge_rd_n_197;
  wire comp_axi_s_masterbridge_rd_n_198;
  wire comp_axi_s_masterbridge_rd_n_199;
  wire comp_axi_s_masterbridge_rd_n_20;
  wire comp_axi_s_masterbridge_rd_n_200;
  wire comp_axi_s_masterbridge_rd_n_201;
  wire comp_axi_s_masterbridge_rd_n_202;
  wire comp_axi_s_masterbridge_rd_n_203;
  wire comp_axi_s_masterbridge_rd_n_204;
  wire comp_axi_s_masterbridge_rd_n_205;
  wire comp_axi_s_masterbridge_rd_n_206;
  wire comp_axi_s_masterbridge_rd_n_207;
  wire comp_axi_s_masterbridge_rd_n_208;
  wire comp_axi_s_masterbridge_rd_n_209;
  wire comp_axi_s_masterbridge_rd_n_21;
  wire comp_axi_s_masterbridge_rd_n_210;
  wire comp_axi_s_masterbridge_rd_n_211;
  wire comp_axi_s_masterbridge_rd_n_213;
  wire comp_axi_s_masterbridge_rd_n_22;
  wire comp_axi_s_masterbridge_rd_n_23;
  wire comp_axi_s_masterbridge_rd_n_28;
  wire comp_axi_s_masterbridge_rd_n_284;
  wire comp_axi_s_masterbridge_rd_n_285;
  wire comp_axi_s_masterbridge_rd_n_286;
  wire comp_axi_s_masterbridge_rd_n_287;
  wire comp_axi_s_masterbridge_rd_n_288;
  wire comp_axi_s_masterbridge_rd_n_29;
  wire comp_axi_s_masterbridge_rd_n_294;
  wire comp_axi_s_masterbridge_rd_n_297;
  wire comp_axi_s_masterbridge_rd_n_31;
  wire comp_axi_s_masterbridge_rd_n_34;
  wire comp_axi_s_masterbridge_rd_n_35;
  wire comp_axi_s_masterbridge_rd_n_36;
  wire comp_axi_s_masterbridge_rd_n_37;
  wire comp_axi_s_masterbridge_rd_n_39;
  wire comp_axi_s_masterbridge_rd_n_42;
  wire comp_axi_s_masterbridge_rd_n_44;
  wire comp_axi_s_masterbridge_rd_n_45;
  wire comp_axi_s_masterbridge_rd_n_46;
  wire comp_axi_s_masterbridge_rd_n_48;
  wire comp_axi_s_masterbridge_rd_n_53;
  wire comp_axi_s_masterbridge_rd_n_54;
  wire comp_axi_s_masterbridge_rd_n_58;
  wire comp_axi_s_masterbridge_rd_n_72;
  wire comp_axi_s_masterbridge_rd_n_73;
  wire comp_axi_s_masterbridge_rd_n_76;
  wire comp_axi_s_masterbridge_rd_n_77;
  wire comp_axi_s_masterbridge_rd_n_78;
  wire comp_read_data_fifo_n_10;
  wire comp_read_data_fifo_n_11;
  wire comp_read_data_fifo_n_12;
  wire comp_read_data_fifo_n_13;
  wire comp_read_data_fifo_n_14;
  wire comp_read_data_fifo_n_15;
  wire comp_read_data_fifo_n_16;
  wire comp_read_data_fifo_n_17;
  wire comp_read_data_fifo_n_18;
  wire comp_read_data_fifo_n_19;
  wire comp_read_data_fifo_n_2;
  wire comp_read_data_fifo_n_20;
  wire comp_read_data_fifo_n_3;
  wire comp_read_data_fifo_n_4;
  wire comp_read_data_fifo_n_5;
  wire comp_read_data_fifo_n_6;
  wire comp_read_data_fifo_n_7;
  wire comp_read_data_fifo_n_8;
  wire comp_read_data_fifo_n_85;
  wire comp_read_data_fifo_n_86;
  wire comp_read_data_fifo_n_87;
  wire comp_read_data_fifo_n_88;
  wire comp_read_data_fifo_n_89;
  wire comp_read_data_fifo_n_9;
  wire comp_read_data_fifo_n_90;
  wire comp_read_data_fifo_n_91;
  wire comp_read_data_fifo_n_92;
  wire comp_read_data_fifo_n_93;
  wire comp_read_data_fifo_n_94;
  wire comp_read_data_fifo_n_95;
  wire comp_read_data_fifo_n_96;
  wire comp_read_data_fifo_n_97;
  wire comp_read_data_fifo_n_99;
  wire cpldsplitcount0_out;
  wire \cpldsplitsm_reg[1] ;
  wire \cpldsplitsm_reg[1]_0 ;
  wire [1:0]cplndtargetpipeline;
  wire [0:3]cplpendcpl;
  wire \cplpendcpl_reg[0] ;
  wire \cplpendcpl_reg[1] ;
  wire \cplpendcpl_reg[2] ;
  wire \cplpendcpl_reg[3] ;
  wire \cplpendcpl_reg[3]_0 ;
  wire [1:0]cpltargetpipeline;
  wire cr_full;
  wire [0:0]ctargetpipeline;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctlpbytecount_reg[1,0][11] ;
  wire \ctlpbytecount_reg[1,0][4] ;
  wire \ctlpbytecount_reg[1,0][5] ;
  wire \ctlpbytecount_reg[1,0][7] ;
  wire \ctlpbytecount_reg[1,0][8] ;
  wire \ctlpbytecount_reg[1,0][9] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][6] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][0] ;
  wire \ctlplength_reg[2,2][0] ;
  wire \ctlplength_reg[2,3][0] ;
  wire data_phase;
  wire \data_width_64.badreadreq_i_1_n_0 ;
  wire \data_width_64.corruptdataflush_i_1_n_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[1] ;
  wire \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[2] ;
  wire \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[3] ;
  wire [2:0]\data_width_64.cpldsplitcounttemp_reg[4] ;
  wire \data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.cplpacket1_i_1_n_0 ;
  wire \data_width_64.data_phase_i_1_n_0 ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire \data_width_64.datatxpertlp_reg[1] ;
  wire \data_width_64.dis_rden_i_1_n_0 ;
  wire \data_width_64.lnkdowndataflush_i_1_n_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire \data_width_64.m_axi_rready_reg ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[10] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[11] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[14] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[15] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[16] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[17] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[18] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[19] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[23] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[24] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[25] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[26] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[27] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[28] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[29] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  wire \data_width_64.m_axis_cc_tdata_nd[45]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[46]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[47]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdatatemp64_reg[0] ;
  wire \data_width_64.m_axis_cc_tlast_d_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tvalid_d_i_1_n_0 ;
  wire [15:0]\data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg_0 ;
  wire \data_width_64.rd_en_sig_i_1_n_0 ;
  wire \data_width_64.rddatasmsig_reg ;
  wire \data_width_64.rdndreqpipelineincr_i_1_n_0 ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire \data_width_64.rdreqpipelinedecr_i_1_n_0 ;
  wire \data_width_64.rdreqpipelineincr_i_1_n_0 ;
  wire \data_width_64.rdtargetpipeline_reg[0]_rep ;
  wire \data_width_64.rrespdelayed_i_1_n_0 ;
  wire \data_width_64.rrespsig_reg[1] ;
  wire \data_width_64.s_axis_cr_tready_sig_i_1_n_0 ;
  wire \data_width_64.single_beat_reg ;
  wire \data_width_64.single_beat_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tagsig_reg[0]_0 ;
  wire \data_width_64.tlpaddrlow_reg[0] ;
  wire \data_width_64.tlplength_reg[3][0] ;
  wire \data_width_64.wrpendflush_reg[0][3] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.wrreqpendsig_reg[0]_0 ;
  wire \data_width_64.wrreqpendsig_reg[0]_1 ;
  wire \data_width_64.wrreqpendsig_reg[1] ;
  wire \data_width_64.wrreqpendsig_reg[2] ;
  wire \data_width_64.zerolenreadreq_i_1_n_0 ;
  wire dataensig_0;
  wire [63:0]dinsig;
  wire [63:0]doutsig;
  wire emptysig;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire eqOp56_in;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[11] ;
  wire [1:0]\length_offset_reg[11]_0 ;
  wire [1:0]\length_offset_reg[11]_1 ;
  wire [1:0]\length_offset_reg[11]_2 ;
  wire [1:0]\length_offset_reg[11]_3 ;
  wire \length_offset_reg[2] ;
  wire \length_offset_reg[2]_0 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[7] ;
  wire \length_offset_reg[8] ;
  wire \length_offset_reg[9] ;
  wire [3:0]\length_offset_reg[9]_0 ;
  wire [3:0]\length_offset_reg[9]_1 ;
  wire [3:0]\length_offset_reg[9]_2 ;
  wire [1:0]\length_offset_reg[9]_3 ;
  wire [31:0]m_axi_araddr;
  wire [7:0]m_axi_arlen;
  wire [2:0]m_axi_arprot;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire m_axi_arvalid_sig_reg;
  wire [63:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire m_axis_cc_tlast_d19_out;
  wire m_axis_cc_tvalid_d50_out;
  wire [20:0]\m_axis_cr_tdata_reg[22] ;
  wire \m_axis_cr_tdata_reg[30] ;
  wire [55:0]\m_axis_cr_tdata_reg[63] ;
  wire [4:0]\m_axis_cr_tdata_reg[6] ;
  wire \m_axis_cr_tuser_reg[3] ;
  wire [2:0]\m_axis_cr_tuser_reg[6] ;
  wire neqOp0_out;
  wire neqOp0_out_1;
  wire neqOp2_out;
  wire \np_ok_mode.rdndreqpipeline_d_reg[0] ;
  wire \np_ok_mode.rdndreqpipeline_d_reg[1] ;
  wire \np_ok_mode.rdndreqpipeline_d_reg[2] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[0] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[1] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[2] ;
  wire \orcplpipeline_reg[0] ;
  wire \orcplpipeline_reg[0]_0 ;
  wire \orcplpipeline_reg[1] ;
  wire \orcplpipeline_reg[1]_0 ;
  wire \orcplpipeline_reg[2] ;
  wire \orcplpipeline_reg[2]_0 ;
  wire \orrdreqpipeline_reg[0] ;
  wire \orrdreqpipeline_reg[0]_0 ;
  wire \orrdreqpipeline_reg[1] ;
  wire \orrdreqpipeline_reg[1]_0 ;
  wire \orrdreqpipeline_reg[2] ;
  wire \orrdreqpipeline_reg[2]_0 ;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire p_0_in66_in;
  wire p_1_in79_in;
  wire p_1_in__28;
  wire p_2_in;
  wire [3:0]p_3_in;
  wire [0:0]p_3_in_0;
  wire p_76_out;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire rd_ensig;
  wire rdaddrsmsig1__2;
  wire rdaddrsmsig_reg;
  wire [0:0]rdaddrsmsig_reg_0;
  wire [0:0]rdaddrsmsig_reg_1;
  wire rdndreqpipelineincr;
  wire rdorder_reg;
  wire rdreq_ordernotreq;
  wire rdreq_reg;
  wire rdreq_reg_0;
  wire rdreq_reg_1;
  wire [1:0]rdtargetpipeline;
  wire reg_tready_reg;
  wire request_completed;
  wire \resetovrd.reset_reg[4] ;
  wire \respmmpipeline_reg[0] ;
  wire \respmmpipeline_reg[1] ;
  wire \respmmpipeline_reg[2] ;
  wire rrespdelayed;
  wire s_axis_cc_tvalid_q_reg;
  wire s_axis_cc_tvalid_q_reg_0;
  wire s_axis_cr_tready_sig;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cr_tready_sig61_out;
  wire [63:0]\s_axis_tx_tdata_d_reg[63] ;
  wire s_axis_tx_tlast_d_reg;
  wire s_axis_tx_tlast_d_reg_0;
  wire s_axis_tx_tlast_d_reg_1;
  wire s_axis_tx_tready;
  wire \s_axis_tx_tstrb_d_reg[7] ;
  wire s_axis_tx_tvalid_d_reg;
  wire [2:0]sig_addrstreampipeline;
  wire sig_blk_lnk_up;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire sig_s_axis_cr_tlast;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire single_beat;
  wire tlprequesterid;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;
  wire user_lnk_up_mux_reg_2;
  wire user_lnk_up_mux_reg_3;
  wire wr_ensig;

  LUT5 #(
    .INIT(32'hBAAB0000)) 
    blk_lnk_up_latch_i_1
       (.I0(rdreq_reg),
        .I1(comp_axi_s_masterbridge_rd_n_113),
        .I2(cpltargetpipeline[0]),
        .I3(ctargetpipeline),
        .I4(sig_blk_lnk_up),
        .O(blk_lnk_up_latch_i_1_n_0));
  overlay1_axi_pcie_0_0_axi_mm_masterbridge_rd comp_axi_mm_masterbridge_rd
       (.ARProtVar({comp_axi_s_masterbridge_rd_n_286,comp_axi_s_masterbridge_rd_n_287,comp_axi_s_masterbridge_rd_n_288}),
        .\ARProtVar_reg[0]_0 (comp_axi_mm_masterbridge_rd_n_102),
        .\ARProtVar_reg[1]_0 (comp_axi_mm_masterbridge_rd_n_101),
        .\ARProtVar_reg[2]_0 (comp_axi_mm_masterbridge_rd_n_100),
        .\AddrVar_reg[30]_0 ({AddrVar[30],AddrVar[26],AddrVar[23:0]}),
        .\AddrVar_reg[30]_1 ({comp_axi_s_masterbridge_rd_n_186,comp_axi_s_masterbridge_rd_n_187,comp_axi_s_masterbridge_rd_n_188,comp_axi_s_masterbridge_rd_n_189,comp_axi_s_masterbridge_rd_n_190,comp_axi_s_masterbridge_rd_n_191,comp_axi_s_masterbridge_rd_n_192,comp_axi_s_masterbridge_rd_n_193,comp_axi_s_masterbridge_rd_n_194,comp_axi_s_masterbridge_rd_n_195,comp_axi_s_masterbridge_rd_n_196,comp_axi_s_masterbridge_rd_n_197,comp_axi_s_masterbridge_rd_n_198,comp_axi_s_masterbridge_rd_n_199,comp_axi_s_masterbridge_rd_n_200,comp_axi_s_masterbridge_rd_n_201,comp_axi_s_masterbridge_rd_n_202,comp_axi_s_masterbridge_rd_n_203,comp_axi_s_masterbridge_rd_n_204,comp_axi_s_masterbridge_rd_n_205,comp_axi_s_masterbridge_rd_n_206,comp_axi_s_masterbridge_rd_n_207,comp_axi_s_masterbridge_rd_n_208,comp_axi_s_masterbridge_rd_n_209,comp_axi_s_masterbridge_rd_n_210,comp_axi_s_masterbridge_rd_n_211}),
        .D(comp_axi_mm_masterbridge_rd_n_5),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (dinsig),
        .Q({doutsig[53],doutsig[21]}),
        .SR(\data_width_64.rdtargetpipeline_reg[0]_rep ),
        .\addrspipeline_reg[0]_0 ({comp_axi_s_masterbridge_rd_n_174,comp_axi_s_masterbridge_rd_n_175,comp_axi_s_masterbridge_rd_n_176,comp_axi_s_masterbridge_rd_n_177,comp_axi_s_masterbridge_rd_n_178,comp_axi_s_masterbridge_rd_n_179,comp_axi_s_masterbridge_rd_n_180,comp_axi_s_masterbridge_rd_n_181,comp_axi_s_masterbridge_rd_n_182}),
        .axi_aresetn(axi_aresetn),
        .cplpendcpl(cplpendcpl),
        .\cplpendcpl_reg[0] (\cplpendcpl_reg[0] ),
        .\cplpendcpl_reg[1] (\cplpendcpl_reg[1] ),
        .\cplpendcpl_reg[2] (\cplpendcpl_reg[2] ),
        .\cplpendcpl_reg[3] (\cplpendcpl_reg[3]_0 ),
        .cpltargetpipeline(cpltargetpipeline),
        .\data_width_64.datammpipeline_reg[1]_0 (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.datatxpertlp_reg[1]_0 (\data_width_64.datatxpertlp_reg[1] ),
        .\data_width_64.m_axi_rready_reg_0 (\data_width_64.m_axi_rready_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[45] (\data_width_64.m_axis_cc_tdata_h_reg[45] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[47] (comp_axi_mm_masterbridge_rd_n_7),
        .\data_width_64.m_axis_cc_tdata_h_reg[47]_0 (comp_axi_mm_masterbridge_rd_n_8),
        .\data_width_64.rddatasmsig_reg_0 (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rrespsig_reg[1]_0 (\data_width_64.rrespsig_reg[1] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][0] (comp_axi_s_masterbridge_rd_n_213),
        .\data_width_64.single_beat_reg_0 (\data_width_64.single_beat_reg ),
        .\data_width_64.single_beat_reg_1 (\data_width_64.single_beat_reg_0 ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0]_1 ),
        .\data_width_64.wrreqpendsig_reg[0]_0 (\data_width_64.wrreqpendsig_reg[0]_0 ),
        .dataensig_0(dataensig_0),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg ),
        .\gaf.gaf0.ram_afull_i_reg_1 (comp_read_data_fifo_n_99),
        .\gaf.gaf0.ram_afull_i_reg_2 (comp_read_data_fifo_n_97),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .\m_axi_arsize_reg[0]_0 (E),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_arvalid_sig_reg_0(m_axi_arvalid_sig_reg),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .neqOp0_out(neqOp0_out),
        .\orcplpipeline_reg[0] (\orcplpipeline_reg[0] ),
        .\orcplpipeline_reg[0]_0 (\orcplpipeline_reg[0]_0 ),
        .\orcplpipeline_reg[1] (\orcplpipeline_reg[1] ),
        .\orcplpipeline_reg[1]_0 (\orcplpipeline_reg[1]_0 ),
        .\orcplpipeline_reg[2] (\orcplpipeline_reg[2] ),
        .\orcplpipeline_reg[2]_0 (\orcplpipeline_reg[2]_0 ),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_1_in(comp_axi_s_masterbridge_rd_n_185),
        .p_1_in79_in(p_1_in79_in),
        .p_1_in__28(p_1_in__28),
        .p_2_in(p_2_in),
        .p_3_in({comp_axi_s_masterbridge_rd_n_183,p_3_in_0}),
        .p_76_out(p_76_out),
        .rdaddrsmsig1__2(rdaddrsmsig1__2),
        .rdaddrsmsig_reg_0(rdaddrsmsig_reg),
        .rdaddrsmsig_reg_1(SR),
        .rdaddrsmsig_reg_2(rdaddrsmsig_reg_0),
        .rdaddrsmsig_reg_3(rdaddrsmsig_reg_1),
        .rdreq_reg(rdreq_reg_1),
        .rdtargetpipeline(rdtargetpipeline),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .sig_addrstreampipeline(sig_addrstreampipeline),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .single_beat(single_beat),
        .wr_ensig_reg(comp_axi_mm_masterbridge_rd_n_15));
  overlay1_axi_pcie_0_0_axi_s_masterbridge_rd comp_axi_s_masterbridge_rd
       (.ARProtVar({comp_axi_s_masterbridge_rd_n_286,comp_axi_s_masterbridge_rd_n_287,comp_axi_s_masterbridge_rd_n_288}),
        .\ARProtVar_reg[0] (comp_axi_mm_masterbridge_rd_n_102),
        .\ARProtVar_reg[1] (comp_axi_mm_masterbridge_rd_n_101),
        .\ARProtVar_reg[2] (comp_axi_mm_masterbridge_rd_n_100),
        .\AddrVar_reg[16] (comp_axi_s_masterbridge_rd_n_213),
        .\AddrVar_reg[30] ({comp_axi_s_masterbridge_rd_n_186,comp_axi_s_masterbridge_rd_n_187,comp_axi_s_masterbridge_rd_n_188,comp_axi_s_masterbridge_rd_n_189,comp_axi_s_masterbridge_rd_n_190,comp_axi_s_masterbridge_rd_n_191,comp_axi_s_masterbridge_rd_n_192,comp_axi_s_masterbridge_rd_n_193,comp_axi_s_masterbridge_rd_n_194,comp_axi_s_masterbridge_rd_n_195,comp_axi_s_masterbridge_rd_n_196,comp_axi_s_masterbridge_rd_n_197,comp_axi_s_masterbridge_rd_n_198,comp_axi_s_masterbridge_rd_n_199,comp_axi_s_masterbridge_rd_n_200,comp_axi_s_masterbridge_rd_n_201,comp_axi_s_masterbridge_rd_n_202,comp_axi_s_masterbridge_rd_n_203,comp_axi_s_masterbridge_rd_n_204,comp_axi_s_masterbridge_rd_n_205,comp_axi_s_masterbridge_rd_n_206,comp_axi_s_masterbridge_rd_n_207,comp_axi_s_masterbridge_rd_n_208,comp_axi_s_masterbridge_rd_n_209,comp_axi_s_masterbridge_rd_n_210,comp_axi_s_masterbridge_rd_n_211}),
        .\AddrVar_reg[30]_0 ({AddrVar[30],AddrVar[26],AddrVar[23:0]}),
        .D({\data_width_64.wrreqpendsig_reg[2] ,\data_width_64.wrreqpendsig_reg[1] ,\data_width_64.wrreqpendsig_reg[0] }),
        .E(\ctlplength_reg[2,3][0] ),
        .O(O),
        .Q(p_0_in66_in),
        .R(R),
        .SR(\data_width_64.rdtargetpipeline_reg[0]_rep ),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch_reg_0(comp_axi_s_masterbridge_rd_n_113),
        .blk_lnk_up_latch_reg_1(blk_lnk_up_latch_i_1_n_0),
        .\cfg_bus_number_d_reg[7] (\cfg_bus_number_d_reg[7] ),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .\cfg_device_number_d_reg[4] (\cfg_device_number_d_reg[4] ),
        .\cfg_function_number_d_reg[2] (\cfg_function_number_d_reg[2] ),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1]_0 (\cpldsplitsm_reg[1] ),
        .\cpldsplitsm_reg[1]_1 (\cpldsplitsm_reg[1]_0 ),
        .cplpendcpl(cplpendcpl),
        .\cplpendcpl_reg[3] (\cplpendcpl_reg[3] ),
        .cr_full(cr_full),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_1 (\ctargetpipeline_reg[1]_0 ),
        .\ctlpbytecount_reg[1,0][11]_0 (\ctlpbytecount_reg[1,0][11] ),
        .\ctlpbytecount_reg[1,0][4]_0 (\ctlpbytecount_reg[1,0][4] ),
        .\ctlpbytecount_reg[1,0][5]_0 (\ctlpbytecount_reg[1,0][5] ),
        .\ctlpbytecount_reg[1,0][7]_0 (\ctlpbytecount_reg[1,0][7] ),
        .\ctlpbytecount_reg[1,0][8]_0 (\ctlpbytecount_reg[1,0][8] ),
        .\ctlpbytecount_reg[1,0][9]_0 (\ctlpbytecount_reg[1,0][9] ),
        .\ctlplength_reg[2,0][0]_0 (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][6]_0 (\ctlplength_reg[2,0][6] ),
        .\ctlplength_reg[2,0][9]_0 (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][0]_0 (\ctlplength_reg[2,1][0] ),
        .\ctlplength_reg[2,2][0]_0 (\ctlplength_reg[2,2][0] ),
        .data_phase(data_phase),
        .\data_width_64.badreadreq_reg_0 (comp_axi_s_masterbridge_rd_n_53),
        .\data_width_64.corruptdataflush_reg_0 (comp_axi_s_masterbridge_rd_n_18),
        .\data_width_64.corruptdataflush_reg_1 (comp_axi_s_masterbridge_rd_n_45),
        .\data_width_64.corruptdataflush_reg_2 (comp_axi_s_masterbridge_rd_n_294),
        .\data_width_64.cpldsplitcounttemp_reg[1]_0 (\data_width_64.cpldsplitcounttemp_reg[1] ),
        .\data_width_64.cpldsplitcounttemp_reg[1]_1 (\data_width_64.cpldsplitcounttemp_reg[1]_0 ),
        .\data_width_64.cpldsplitcounttemp_reg[2]_0 (\data_width_64.cpldsplitcounttemp_reg[2] ),
        .\data_width_64.cpldsplitcounttemp_reg[2]_1 (\data_width_64.cpldsplitcounttemp_reg[2]_0 ),
        .\data_width_64.cpldsplitcounttemp_reg[3]_0 (\data_width_64.cpldsplitcounttemp_reg[3] ),
        .\data_width_64.cpldsplitcounttemp_reg[4]_0 (ctargetpipeline),
        .\data_width_64.cpldsplitcounttemp_reg[4]_1 (cpltargetpipeline),
        .\data_width_64.cpldsplitcounttemp_reg[4]_2 (\data_width_64.cpldsplitcounttemp_reg[4] ),
        .\data_width_64.cpldsplitcounttemp_reg[4]_3 (\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .\data_width_64.cplndstatuscode_reg[0][2]_0 ({comp_axi_s_masterbridge_rd_n_76,comp_axi_s_masterbridge_rd_n_77,comp_axi_s_masterbridge_rd_n_78}),
        .\data_width_64.cplndstatuscode_reg[1][2]_0 ({comp_axi_s_masterbridge_rd_n_110,comp_axi_s_masterbridge_rd_n_111,comp_axi_s_masterbridge_rd_n_112}),
        .\data_width_64.cplndstatuscode_reg[2][2]_0 ({comp_axi_s_masterbridge_rd_n_107,comp_axi_s_masterbridge_rd_n_108,comp_axi_s_masterbridge_rd_n_109}),
        .\data_width_64.cplndstatuscode_reg[3][0]_0 (\data_width_64.m_axis_cc_tdata_nd[45]_i_2_n_0 ),
        .\data_width_64.cplndstatuscode_reg[3][1]_0 (\data_width_64.m_axis_cc_tdata_nd[46]_i_2_n_0 ),
        .\data_width_64.cplndstatuscode_reg[3][2]_0 ({comp_axi_s_masterbridge_rd_n_104,comp_axi_s_masterbridge_rd_n_105,comp_axi_s_masterbridge_rd_n_106}),
        .\data_width_64.cplndstatuscode_reg[3][2]_1 (\data_width_64.m_axis_cc_tdata_nd[47]_i_2_n_0 ),
        .\data_width_64.cplndtargetpipeline_reg[2]_0 (cplndtargetpipeline),
        .\data_width_64.cplndtlpsmsig_reg[1]_0 (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.cplpacket1_reg_0 (comp_axi_s_masterbridge_rd_n_148),
        .\data_width_64.cpltlpsmsig_reg[0]_0 (comp_axi_s_masterbridge_rd_n_19),
        .\data_width_64.cpltlpsmsig_reg[0]_1 (\data_width_64.lnkdowndataflush_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[0]_2 (\data_width_64.m_axis_cc_tvalid_d_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[1]_0 (\data_width_64.rrespdelayed_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[1]_1 (\data_width_64.rdreqpipelinedecr_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[1]_2 (\data_width_64.m_axis_cc_tlast_d_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[1]_3 (\data_width_64.rd_en_sig_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[2]_0 (comp_axi_s_masterbridge_rd_n_20),
        .\data_width_64.cpltlpsmsig_reg[2]_1 (comp_axi_s_masterbridge_rd_n_22),
        .\data_width_64.cpltlpsmsig_reg[2]_2 (\data_width_64.cplpacket1_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[2]_3 (\data_width_64.data_phase_i_1_n_0 ),
        .\data_width_64.cpltlpsmsig_reg[2]_4 (\data_width_64.dis_rden_i_1_n_0 ),
        .\data_width_64.dis_rden_reg_0 (comp_axi_s_masterbridge_rd_n_17),
        .\data_width_64.dis_rden_reg_1 (comp_axi_s_masterbridge_rd_n_35),
        .\data_width_64.dis_rden_reg_2 (comp_axi_s_masterbridge_rd_n_46),
        .\data_width_64.linkdownflushdepth_reg[0]_0 (comp_axi_s_masterbridge_rd_n_44),
        .\data_width_64.lnkdowndataflush_reg_0 (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.lnkdowndataflush_reg_1 (comp_axi_s_masterbridge_rd_n_73),
        .\data_width_64.lnkdowndataflush_reg_2 (comp_axi_s_masterbridge_rd_n_102),
        .\data_width_64.lnkdowndataflush_reg_3 (comp_axi_s_masterbridge_rd_n_103),
        .\data_width_64.m_axis_cc_tdata_h_reg[0]_0 (comp_axi_s_masterbridge_rd_n_13),
        .\data_width_64.m_axis_cc_tdata_h_reg[10]_0 (\data_width_64.m_axis_cc_tdata_h_reg[10] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[11]_0 (\data_width_64.m_axis_cc_tdata_h_reg[11] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[14]_0 (\data_width_64.m_axis_cc_tdata_h_reg[14] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[15]_0 (\data_width_64.m_axis_cc_tdata_h_reg[15] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[16]_0 (\data_width_64.m_axis_cc_tdata_h_reg[16] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[17]_0 (\data_width_64.m_axis_cc_tdata_h_reg[17] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[18]_0 (\data_width_64.m_axis_cc_tdata_h_reg[18] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[19]_0 (\data_width_64.m_axis_cc_tdata_h_reg[19] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[23]_0 (\data_width_64.m_axis_cc_tdata_h_reg[23] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[24]_0 (\data_width_64.m_axis_cc_tdata_h_reg[24] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[25]_0 (\data_width_64.m_axis_cc_tdata_h_reg[25] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[26]_0 (\data_width_64.m_axis_cc_tdata_h_reg[26] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[27]_0 (\data_width_64.m_axis_cc_tdata_h_reg[27] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[28]_0 (\data_width_64.m_axis_cc_tdata_h_reg[28] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[29]_0 (\data_width_64.m_axis_cc_tdata_h_reg[29] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[48]_0 (comp_axi_s_masterbridge_rd_n_132),
        .\data_width_64.m_axis_cc_tdata_h_reg[49]_0 (comp_axi_s_masterbridge_rd_n_133),
        .\data_width_64.m_axis_cc_tdata_h_reg[50]_0 (comp_axi_s_masterbridge_rd_n_134),
        .\data_width_64.m_axis_cc_tdata_h_reg[51]_0 (comp_axi_s_masterbridge_rd_n_135),
        .\data_width_64.m_axis_cc_tdata_h_reg[52]_0 (comp_axi_s_masterbridge_rd_n_136),
        .\data_width_64.m_axis_cc_tdata_h_reg[53]_0 (comp_axi_s_masterbridge_rd_n_137),
        .\data_width_64.m_axis_cc_tdata_h_reg[54]_0 (comp_axi_s_masterbridge_rd_n_138),
        .\data_width_64.m_axis_cc_tdata_h_reg[55]_0 (comp_axi_s_masterbridge_rd_n_139),
        .\data_width_64.m_axis_cc_tdata_h_reg[56]_0 (comp_axi_s_masterbridge_rd_n_140),
        .\data_width_64.m_axis_cc_tdata_h_reg[57]_0 (comp_axi_s_masterbridge_rd_n_141),
        .\data_width_64.m_axis_cc_tdata_h_reg[58]_0 (comp_axi_s_masterbridge_rd_n_142),
        .\data_width_64.m_axis_cc_tdata_h_reg[59]_0 (comp_axi_s_masterbridge_rd_n_143),
        .\data_width_64.m_axis_cc_tdata_h_reg[60]_0 (comp_axi_s_masterbridge_rd_n_144),
        .\data_width_64.m_axis_cc_tdata_h_reg[61]_0 (comp_axi_s_masterbridge_rd_n_145),
        .\data_width_64.m_axis_cc_tdata_h_reg[62]_0 (comp_axi_s_masterbridge_rd_n_146),
        .\data_width_64.m_axis_cc_tdata_h_reg[63]_0 (comp_axi_s_masterbridge_rd_n_147),
        .\data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 (\data_width_64.m_axis_cc_tdatatemp64_reg[0] ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (comp_axi_s_masterbridge_rd_n_39),
        .\data_width_64.m_axis_cc_tlast_d_reg_1 (comp_axi_s_masterbridge_rd_n_285),
        .\data_width_64.m_axis_cc_tvalid_d_reg_0 (comp_axi_s_masterbridge_rd_n_36),
        .\data_width_64.m_axis_cc_tvalid_d_reg_1 (comp_axi_s_masterbridge_rd_n_48),
        .\data_width_64.m_axis_cc_tvalid_d_reg_2 (comp_axi_s_masterbridge_rd_n_284),
        .\data_width_64.m_axis_cc_tvalid_nd_reg_0 (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg_1 (\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .\data_width_64.rd_en_sig_reg_0 (comp_axi_s_masterbridge_rd_n_16),
        .\data_width_64.rd_en_sig_reg_1 (comp_axi_s_masterbridge_rd_n_37),
        .\data_width_64.rd_en_sig_reg_2 (comp_axi_s_masterbridge_rd_n_42),
        .\data_width_64.rdndreqpipelineincr_reg_0 (comp_axi_s_masterbridge_rd_n_29),
        .\data_width_64.rdndtlpaddrlow_reg[0]_0 (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdreqpipelinedecr_reg_0 (comp_axi_s_masterbridge_rd_n_34),
        .\data_width_64.rdreqpipelinedecr_reg_1 (comp_axi_s_masterbridge_rd_n_297),
        .\data_width_64.rdreqpipelineincr_reg_0 (comp_axi_s_masterbridge_rd_n_28),
        .\data_width_64.rdreqsmsig_reg[1]_0 (\data_width_64.badreadreq_i_1_n_0 ),
        .\data_width_64.rdreqsmsig_reg[1]_1 (\data_width_64.rdreqpipelineincr_i_1_n_0 ),
        .\data_width_64.rdreqsmsig_reg[1]_2 (\data_width_64.s_axis_cr_tready_sig_i_1_n_0 ),
        .\data_width_64.rdreqsmsig_reg[2]_0 (comp_axi_s_masterbridge_rd_n_23),
        .\data_width_64.rdreqsmsig_reg[2]_1 (\data_width_64.rdndreqpipelineincr_i_1_n_0 ),
        .\data_width_64.rdreqsmsig_reg[2]_2 (\data_width_64.zerolenreadreq_i_1_n_0 ),
        .\data_width_64.rdtargetpipeline_reg[1]_0 (rdtargetpipeline),
        .\data_width_64.rdtlpaddrltemp_reg[0]_0 (comp_axi_s_masterbridge_rd_n_72),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.m_axis_cc_tdata_h_reg[45] ),
        .\data_width_64.s_axis_cr_tready_sig_reg_0 (comp_axi_s_masterbridge_rd_n_58),
        .\data_width_64.tagsig_reg[0]_0 (\data_width_64.tagsig_reg[0]_0 ),
        .\data_width_64.tagsig_reg[0]_1 (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tlpaddrlow_reg[0]_0 (\data_width_64.tlpaddrlow_reg[0] ),
        .\data_width_64.tlplength_reg[3][0]_0 (\data_width_64.tlplength_reg[3][0] ),
        .\data_width_64.tlplengthcntr_reg[0]_0 (comp_axi_s_masterbridge_rd_n_21),
        .\data_width_64.wrpendflush_reg[0][3]_0 (\data_width_64.wrpendflush_reg[0][3] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0]_0 ),
        .\data_width_64.zerolenreadreq_reg_0 (comp_axi_s_masterbridge_rd_n_31),
        .\data_width_64.zerolenreadreq_reg_1 (comp_axi_s_masterbridge_rd_n_54),
        .empty_fwft_i_reg(\data_width_64.corruptdataflush_i_1_n_0 ),
        .emptysig(emptysig),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .eqOp56_in(eqOp56_in),
        .\goreg_bm.dout_i_reg[16] (comp_read_data_fifo_n_88),
        .\goreg_bm.dout_i_reg[17] (comp_read_data_fifo_n_87),
        .\goreg_bm.dout_i_reg[18] (comp_read_data_fifo_n_86),
        .\goreg_bm.dout_i_reg[19] (comp_read_data_fifo_n_85),
        .\goreg_bm.dout_i_reg[24] (comp_read_data_fifo_n_96),
        .\goreg_bm.dout_i_reg[25] (comp_read_data_fifo_n_95),
        .\goreg_bm.dout_i_reg[26] (comp_read_data_fifo_n_94),
        .\goreg_bm.dout_i_reg[27] (comp_read_data_fifo_n_93),
        .\goreg_bm.dout_i_reg[28] (comp_read_data_fifo_n_92),
        .\goreg_bm.dout_i_reg[29] (comp_read_data_fifo_n_91),
        .\goreg_bm.dout_i_reg[30] (comp_read_data_fifo_n_90),
        .\goreg_bm.dout_i_reg[31] (comp_read_data_fifo_n_89),
        .\goreg_bm.dout_i_reg[39] ({comp_read_data_fifo_n_2,comp_read_data_fifo_n_3,comp_read_data_fifo_n_4,comp_read_data_fifo_n_5,comp_read_data_fifo_n_6,comp_read_data_fifo_n_7,comp_read_data_fifo_n_8,comp_read_data_fifo_n_9,comp_read_data_fifo_n_10,comp_read_data_fifo_n_11,comp_read_data_fifo_n_12,comp_read_data_fifo_n_13,comp_read_data_fifo_n_14,comp_read_data_fifo_n_15,comp_read_data_fifo_n_16,comp_read_data_fifo_n_17,comp_read_data_fifo_n_18,comp_read_data_fifo_n_19,comp_axi_mm_masterbridge_rd_n_5,comp_read_data_fifo_n_20,\data_width_64.m_axis_cc_tvalid_d_reg }),
        .\goreg_bm.dout_i_reg[63] (doutsig),
        .\length_offset_reg[10]_0 (\length_offset_reg[10] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11] ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_3 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[11]_4 (\length_offset_reg[11]_3 ),
        .\length_offset_reg[11]_5 (p_3_in),
        .\length_offset_reg[2]_0 (\length_offset_reg[2] ),
        .\length_offset_reg[2]_1 (\length_offset_reg[2]_0 ),
        .\length_offset_reg[6]_0 (Q),
        .\length_offset_reg[6]_1 (\length_offset_reg[6] ),
        .\length_offset_reg[7]_0 (\length_offset_reg[7] ),
        .\length_offset_reg[8]_0 (\length_offset_reg[8] ),
        .\length_offset_reg[9]_0 (\length_offset_reg[9] ),
        .\length_offset_reg[9]_1 (\length_offset_reg[9]_0 ),
        .\length_offset_reg[9]_2 (\length_offset_reg[9]_1 ),
        .\length_offset_reg[9]_3 (\length_offset_reg[9]_2 ),
        .\length_offset_reg[9]_4 (\length_offset_reg[9]_3 ),
        .\m_axi_arlen4_reg[7] ({comp_axi_s_masterbridge_rd_n_174,comp_axi_s_masterbridge_rd_n_175,comp_axi_s_masterbridge_rd_n_176,comp_axi_s_masterbridge_rd_n_177,comp_axi_s_masterbridge_rd_n_178,comp_axi_s_masterbridge_rd_n_179,comp_axi_s_masterbridge_rd_n_180,comp_axi_s_masterbridge_rd_n_181,comp_axi_s_masterbridge_rd_n_182}),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .m_axis_cc_tlast_d19_out(m_axis_cc_tlast_d19_out),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .\m_axis_cr_tdata_reg[22] (\m_axis_cr_tdata_reg[22] ),
        .\m_axis_cr_tdata_reg[30] (\m_axis_cr_tdata_reg[30] ),
        .\m_axis_cr_tdata_reg[63] (\m_axis_cr_tdata_reg[63] ),
        .\m_axis_cr_tdata_reg[6] (\m_axis_cr_tdata_reg[6] ),
        .\m_axis_cr_tuser_reg[6] (\m_axis_cr_tuser_reg[6] ),
        .neqOp0_out_1(neqOp0_out_1),
        .neqOp2_out(neqOp2_out),
        .\np_ok_mode.rdndreqpipeline_d_reg[0] (\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .\np_ok_mode.rdndreqpipeline_d_reg[1] (\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .\np_ok_mode.rdndreqpipeline_d_reg[2] (\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .\np_ok_mode.rdreqpipeline_d_reg[0] (\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .\np_ok_mode.rdreqpipeline_d_reg[1] (\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .\np_ok_mode.rdreqpipeline_d_reg[2] (\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .\orrdreqpipeline_reg[0] (\orrdreqpipeline_reg[0] ),
        .\orrdreqpipeline_reg[0]_0 (\orrdreqpipeline_reg[0]_0 ),
        .\orrdreqpipeline_reg[1] (\orrdreqpipeline_reg[1] ),
        .\orrdreqpipeline_reg[1]_0 (\orrdreqpipeline_reg[1]_0 ),
        .\orrdreqpipeline_reg[2] (\orrdreqpipeline_reg[2] ),
        .\orrdreqpipeline_reg[2]_0 (\orrdreqpipeline_reg[2]_0 ),
        .p_0_in(p_0_in),
        .p_1_in(comp_axi_s_masterbridge_rd_n_185),
        .p_1_in79_in(p_1_in79_in),
        .p_1_in__28(p_1_in__28),
        .p_2_in(p_2_in),
        .p_3_in({comp_axi_s_masterbridge_rd_n_183,p_3_in_0}),
        .p_76_out(p_76_out),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (D),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .rd_ensig(rd_ensig),
        .\rd_req_32_64.rdreqpipeline_reg[2]_0 (comp_axi_s_masterbridge_rd_n_10),
        .rdndreqpipelineincr(rdndreqpipelineincr),
        .rdorder_reg(rdorder_reg),
        .rdreq_ordernotreq(rdreq_ordernotreq),
        .rdreq_reg(rdreq_reg),
        .rdreq_reg_0(rdreq_reg_0),
        .reg_tready_reg(reg_tready_reg),
        .request_completed(request_completed),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .\respmmpipeline_reg[0] (\respmmpipeline_reg[0] ),
        .\respmmpipeline_reg[1] (\respmmpipeline_reg[1] ),
        .\respmmpipeline_reg[2] (\respmmpipeline_reg[2] ),
        .rrespdelayed(rrespdelayed),
        .s_axis_cc_tvalid_q_reg(s_axis_cc_tvalid_q_reg),
        .s_axis_cc_tvalid_q_reg_0(s_axis_cc_tvalid_q_reg_0),
        .s_axis_cr_tready_sig(s_axis_cr_tready_sig),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cr_tready_sig61_out(s_axis_cr_tready_sig61_out),
        .\s_axis_tx_tdata_d_reg[63] (\s_axis_tx_tdata_d_reg[63] ),
        .s_axis_tx_tlast_d_reg(s_axis_tx_tlast_d_reg),
        .s_axis_tx_tlast_d_reg_0(s_axis_tx_tlast_d_reg_0),
        .s_axis_tx_tlast_d_reg_1(s_axis_tx_tlast_d_reg_1),
        .s_axis_tx_tready(s_axis_tx_tready),
        .\s_axis_tx_tstrb_d_reg[7] (\s_axis_tx_tstrb_d_reg[7] ),
        .s_axis_tx_tvalid_d_reg(s_axis_tx_tvalid_d_reg),
        .sig_addrstreampipeline(sig_addrstreampipeline),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .sig_s_axis_cr_tlast(sig_s_axis_cr_tlast),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .tlprequesterid(tlprequesterid),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_0),
        .user_lnk_up_mux_reg_1(user_lnk_up_mux_reg_1),
        .user_lnk_up_mux_reg_2(user_lnk_up_mux_reg_2),
        .user_lnk_up_mux_reg_3(user_lnk_up_mux_reg_3));
  overlay1_axi_pcie_0_0_sync_fifo_fg__parameterized0 comp_read_data_fifo
       (.Q(doutsig),
        .SR(\data_width_64.rdtargetpipeline_reg[0]_rep ),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.cplpacket1_reg (comp_axi_s_masterbridge_rd_n_13),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (comp_read_data_fifo_n_99),
        .\data_width_64.din_reg[63] (dinsig),
        .\data_width_64.m_axis_cc_tdata_h_reg[32] (comp_read_data_fifo_n_96),
        .\data_width_64.m_axis_cc_tdata_h_reg[33] (comp_read_data_fifo_n_95),
        .\data_width_64.m_axis_cc_tdata_h_reg[34] (comp_read_data_fifo_n_94),
        .\data_width_64.m_axis_cc_tdata_h_reg[35] (comp_read_data_fifo_n_93),
        .\data_width_64.m_axis_cc_tdata_h_reg[36] (comp_read_data_fifo_n_92),
        .\data_width_64.m_axis_cc_tdata_h_reg[37] (comp_read_data_fifo_n_91),
        .\data_width_64.m_axis_cc_tdata_h_reg[38] (comp_read_data_fifo_n_90),
        .\data_width_64.m_axis_cc_tdata_h_reg[39] (comp_read_data_fifo_n_89),
        .\data_width_64.m_axis_cc_tdata_h_reg[40] (comp_read_data_fifo_n_88),
        .\data_width_64.m_axis_cc_tdata_h_reg[41] (comp_read_data_fifo_n_87),
        .\data_width_64.m_axis_cc_tdata_h_reg[42] (comp_read_data_fifo_n_86),
        .\data_width_64.m_axis_cc_tdata_h_reg[43] (comp_read_data_fifo_n_85),
        .\data_width_64.m_axis_cc_tdata_h_reg[63] ({comp_read_data_fifo_n_2,comp_read_data_fifo_n_3,comp_read_data_fifo_n_4,comp_read_data_fifo_n_5,comp_read_data_fifo_n_6,comp_read_data_fifo_n_7,comp_read_data_fifo_n_8,comp_read_data_fifo_n_9,comp_read_data_fifo_n_10,comp_read_data_fifo_n_11,comp_read_data_fifo_n_12,comp_read_data_fifo_n_13,comp_read_data_fifo_n_14,comp_read_data_fifo_n_15,comp_read_data_fifo_n_16,comp_read_data_fifo_n_17,comp_read_data_fifo_n_18,comp_read_data_fifo_n_19,comp_read_data_fifo_n_20}),
        .\data_width_64.rddatasmsig_reg (\data_width_64.datatxpertlp_reg[1] ),
        .\data_width_64.rdtlpaddrltemp_reg[2] (p_0_in66_in),
        .\data_width_64.rresp_reg[1][2] (comp_read_data_fifo_n_97),
        .\data_width_64.rresp_reg[3][0] (comp_axi_mm_masterbridge_rd_n_8),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.m_axis_cc_tdata_h_reg[45] ),
        .\data_width_64.rresp_reg[3][1]_0 (comp_axi_mm_masterbridge_rd_n_7),
        .\data_width_64.tlpcompleterid_reg[3][0] (comp_axi_s_masterbridge_rd_n_132),
        .\data_width_64.tlpcompleterid_reg[3][10] (comp_axi_s_masterbridge_rd_n_142),
        .\data_width_64.tlpcompleterid_reg[3][11] (comp_axi_s_masterbridge_rd_n_143),
        .\data_width_64.tlpcompleterid_reg[3][12] (comp_axi_s_masterbridge_rd_n_144),
        .\data_width_64.tlpcompleterid_reg[3][13] (comp_axi_s_masterbridge_rd_n_145),
        .\data_width_64.tlpcompleterid_reg[3][14] (comp_axi_s_masterbridge_rd_n_146),
        .\data_width_64.tlpcompleterid_reg[3][15] (comp_axi_s_masterbridge_rd_n_147),
        .\data_width_64.tlpcompleterid_reg[3][1] (comp_axi_s_masterbridge_rd_n_133),
        .\data_width_64.tlpcompleterid_reg[3][2] (comp_axi_s_masterbridge_rd_n_134),
        .\data_width_64.tlpcompleterid_reg[3][3] (comp_axi_s_masterbridge_rd_n_135),
        .\data_width_64.tlpcompleterid_reg[3][4] (comp_axi_s_masterbridge_rd_n_136),
        .\data_width_64.tlpcompleterid_reg[3][5] (comp_axi_s_masterbridge_rd_n_137),
        .\data_width_64.tlpcompleterid_reg[3][6] (comp_axi_s_masterbridge_rd_n_138),
        .\data_width_64.tlpcompleterid_reg[3][7] (comp_axi_s_masterbridge_rd_n_139),
        .\data_width_64.tlpcompleterid_reg[3][8] (comp_axi_s_masterbridge_rd_n_140),
        .\data_width_64.tlpcompleterid_reg[3][9] (comp_axi_s_masterbridge_rd_n_141),
        .emptysig(emptysig),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .p_76_out(p_76_out),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wr_ensig(wr_ensig));
  LUT5 #(
    .INIT(32'hBABF8A80)) 
    \data_width_64.badreadreq_i_1 
       (.I0(\m_axis_cr_tuser_reg[3] ),
        .I1(comp_axi_s_masterbridge_rd_n_31),
        .I2(comp_axi_s_masterbridge_rd_n_23),
        .I3(comp_axi_s_masterbridge_rd_n_53),
        .I4(\data_width_64.wrpendflush_reg[0][3] ),
        .O(\data_width_64.badreadreq_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8000000)) 
    \data_width_64.corruptdataflush_i_1 
       (.I0(emptysig),
        .I1(comp_axi_s_masterbridge_rd_n_19),
        .I2(p_76_out),
        .I3(comp_axi_s_masterbridge_rd_n_294),
        .I4(comp_axi_s_masterbridge_rd_n_45),
        .I5(comp_axi_s_masterbridge_rd_n_18),
        .O(\data_width_64.corruptdataflush_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2F222FFF20222000)) 
    \data_width_64.cplpacket1_i_1 
       (.I0(neqOp2_out),
        .I1(comp_axi_s_masterbridge_rd_n_22),
        .I2(comp_axi_s_masterbridge_rd_n_44),
        .I3(comp_axi_s_masterbridge_rd_n_19),
        .I4(comp_axi_s_masterbridge_rd_n_148),
        .I5(comp_axi_s_masterbridge_rd_n_13),
        .O(\data_width_64.cplpacket1_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFF04000000)) 
    \data_width_64.data_phase_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_35),
        .I1(comp_axi_s_masterbridge_rd_n_22),
        .I2(comp_axi_s_masterbridge_rd_n_19),
        .I3(m_axis_cc_tvalid_d50_out),
        .I4(comp_axi_s_masterbridge_rd_n_20),
        .I5(data_phase),
        .O(\data_width_64.data_phase_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF1F00000010)) 
    \data_width_64.dis_rden_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_35),
        .I1(m_axis_cc_tdata_d1),
        .I2(comp_axi_s_masterbridge_rd_n_22),
        .I3(comp_axi_s_masterbridge_rd_n_19),
        .I4(comp_axi_s_masterbridge_rd_n_46),
        .I5(comp_axi_s_masterbridge_rd_n_17),
        .O(\data_width_64.dis_rden_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFABFB0000A808)) 
    \data_width_64.lnkdowndataflush_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_102),
        .I1(comp_axi_s_masterbridge_rd_n_103),
        .I2(comp_axi_s_masterbridge_rd_n_19),
        .I3(comp_axi_s_masterbridge_rd_n_73),
        .I4(comp_axi_s_masterbridge_rd_n_22),
        .I5(\data_width_64.lnkdowndataflush_reg ),
        .O(\data_width_64.lnkdowndataflush_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[45]_i_2 
       (.I0(comp_axi_s_masterbridge_rd_n_106),
        .I1(comp_axi_s_masterbridge_rd_n_112),
        .I2(cplndtargetpipeline[0]),
        .I3(comp_axi_s_masterbridge_rd_n_109),
        .I4(cplndtargetpipeline[1]),
        .I5(comp_axi_s_masterbridge_rd_n_78),
        .O(\data_width_64.m_axis_cc_tdata_nd[45]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[46]_i_2 
       (.I0(comp_axi_s_masterbridge_rd_n_105),
        .I1(comp_axi_s_masterbridge_rd_n_111),
        .I2(cplndtargetpipeline[0]),
        .I3(comp_axi_s_masterbridge_rd_n_108),
        .I4(cplndtargetpipeline[1]),
        .I5(comp_axi_s_masterbridge_rd_n_77),
        .O(\data_width_64.m_axis_cc_tdata_nd[46]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[47]_i_2 
       (.I0(comp_axi_s_masterbridge_rd_n_104),
        .I1(comp_axi_s_masterbridge_rd_n_110),
        .I2(cplndtargetpipeline[0]),
        .I3(comp_axi_s_masterbridge_rd_n_107),
        .I4(cplndtargetpipeline[1]),
        .I5(comp_axi_s_masterbridge_rd_n_76),
        .O(\data_width_64.m_axis_cc_tdata_nd[47]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA808FFFFA8080000)) 
    \data_width_64.m_axis_cc_tlast_d_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_20),
        .I1(m_axis_cc_tlast_d19_out),
        .I2(comp_axi_s_masterbridge_rd_n_22),
        .I3(comp_axi_s_masterbridge_rd_n_285),
        .I4(comp_axi_s_masterbridge_rd_n_39),
        .I5(s_axis_tx_tlast_d_reg_0),
        .O(\data_width_64.m_axis_cc_tlast_d_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBABFBFBF8A808080)) 
    \data_width_64.m_axis_cc_tvalid_d_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_284),
        .I1(comp_axi_s_masterbridge_rd_n_36),
        .I2(comp_axi_s_masterbridge_rd_n_19),
        .I3(comp_axi_s_masterbridge_rd_n_20),
        .I4(comp_axi_s_masterbridge_rd_n_48),
        .I5(s_axis_cc_tvalid_q_reg_0),
        .O(\data_width_64.m_axis_cc_tvalid_d_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \data_width_64.rd_en_sig_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_21),
        .I1(comp_axi_s_masterbridge_rd_n_20),
        .I2(comp_axi_s_masterbridge_rd_n_42),
        .I3(comp_axi_s_masterbridge_rd_n_22),
        .I4(comp_axi_s_masterbridge_rd_n_37),
        .I5(comp_axi_s_masterbridge_rd_n_16),
        .O(\data_width_64.rd_en_sig_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAA2FFFFAAA20000)) 
    \data_width_64.rdndreqpipelineincr_i_1 
       (.I0(\data_width_64.tagsig_reg[0] ),
        .I1(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .I2(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I3(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .I4(comp_axi_s_masterbridge_rd_n_29),
        .I5(rdndreqpipelineincr),
        .O(\data_width_64.rdndreqpipelineincr_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \data_width_64.rdreqpipelinedecr_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_34),
        .I1(comp_axi_s_masterbridge_rd_n_20),
        .I2(comp_axi_s_masterbridge_rd_n_22),
        .I3(sig_m_axis_cc_tready),
        .I4(comp_axi_s_masterbridge_rd_n_297),
        .I5(comp_axi_s_masterbridge_rd_n_10),
        .O(\data_width_64.rdreqpipelinedecr_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAA2FFFFAAA20000)) 
    \data_width_64.rdreqpipelineincr_i_1 
       (.I0(comp_axi_s_masterbridge_rd_n_23),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I3(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .I4(comp_axi_s_masterbridge_rd_n_28),
        .I5(rdreq_ordernotreq),
        .O(\data_width_64.rdreqpipelineincr_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFCBFB00000808)) 
    \data_width_64.rrespdelayed_i_1 
       (.I0(p_1_in79_in),
        .I1(comp_axi_s_masterbridge_rd_n_20),
        .I2(comp_axi_s_masterbridge_rd_n_19),
        .I3(comp_axi_s_masterbridge_rd_n_72),
        .I4(comp_axi_s_masterbridge_rd_n_22),
        .I5(rrespdelayed),
        .O(\data_width_64.rrespdelayed_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \data_width_64.s_axis_cr_tready_sig_i_1 
       (.I0(s_axis_cr_tready_sig61_out),
        .I1(comp_axi_s_masterbridge_rd_n_23),
        .I2(\data_width_64.tagsig_reg[0] ),
        .I3(comp_axi_s_masterbridge_rd_n_58),
        .I4(s_axis_cr_tready_sig),
        .I5(sig_s_axis_cr_tready),
        .O(\data_width_64.s_axis_cr_tready_sig_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2F222FFF20222000)) 
    \data_width_64.zerolenreadreq_i_1 
       (.I0(eqOp56_in),
        .I1(\data_width_64.tagsig_reg[0] ),
        .I2(comp_axi_s_masterbridge_rd_n_31),
        .I3(comp_axi_s_masterbridge_rd_n_23),
        .I4(comp_axi_s_masterbridge_rd_n_54),
        .I5(\data_width_64.tlpaddrlow_reg[0] ),
        .O(\data_width_64.zerolenreadreq_i_1_n_0 ));
  FDRE wr_ensig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_mm_masterbridge_rd_n_15),
        .Q(wr_ensig),
        .R(\data_width_64.rdtargetpipeline_reg[0]_rep ));
endmodule

(* ORIG_REF_NAME = "axi_mm_s_masterbridge_wr" *) 
module overlay1_axi_pcie_0_0_axi_mm_s_masterbridge_wr
   (out,
    \gaf.gaf0.ram_afull_i_reg ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    wrensig_reg_0,
    \data_width_64.datain_reg[64] ,
    \AddrVar_reg[0] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[8] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[33] ,
    \data_width_64.padzeroes_reg ,
    wrensig_reg_1,
    \end_point.ctl_user_intr_d_reg[8] ,
    dataensig,
    m_axi_awvalid,
    E,
    \data_width_64.m_axi_wstrb_reg[7] ,
    \master_int_reg[1] ,
    m_axi_bready,
    s_axis_cw_treadysig,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    \data_width_64.s_axis_cw_treadysig_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ,
    \data_width_64.wrreqsetsig_reg ,
    \data_width_64.padzeroes_reg_0 ,
    \data_width_64.dataen_reg ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.dataen_reg_1 ,
    \data_width_64.dataoffset_reg ,
    \data_width_64.addroffset_reg ,
    delaylast,
    \m_axi_awsize_reg[1] ,
    addroffset,
    \data_width_64.delaylast_reg ,
    \data_width_64.delaylast_reg_0 ,
    \data_width_64.addroffset_reg_0 ,
    \data_width_64.m_axi_wstrb_reg[4] ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    \data_width_64.wrdatasmsig_reg[1] ,
    \m_axi_araddr1_reg[0] ,
    \splitcnt_reg[1] ,
    rdreq_reg,
    neqOp0_out,
    neqOp,
    \respmmpipeline_reg[0] ,
    \respmmpipeline_reg[2] ,
    \respmmpipeline_reg[1] ,
    \data_width_64.wrpendingsig_reg[1][0] ,
    \data_width_64.wrpendingsig_reg[1][2] ,
    \data_width_64.wrpendingsig_reg[1][1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ,
    \splitcnt_reg[1]_0 ,
    SR,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ,
    m_axi_wdata,
    m_axi_wvalid,
    \m_axis_cw_tuser_reg[2] ,
    m_axi_awsize,
    m_axi_awprot,
    p_1_in,
    p_1_in2_in,
    m_axi_awlen,
    m_axi_awaddr,
    m_axi_wstrb,
    \resetovrd.reset_reg[4] ,
    axi_aresetn_0,
    tlpfmtsig,
    m_axis_cw_tlast_reg,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ,
    \data_width_64.padzeroes_reg_1 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[3] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ,
    m_axi_awvalidsig_reg,
    empty_fwft_i_reg,
    wrrespsmsig_reg,
    m_axi_breadysig_reg,
    Q,
    sig_s_axis_cw_tlast,
    \m_axis_cw_tdata_reg[14] ,
    neqOp_0,
    m_axis_cw_tlast_reg_0,
    cw_full,
    sig_blk_lnk_up,
    sig_s_axis_cw_tvalid,
    s_axis_cw_treadysig34_out,
    user_lnk_up_mux_reg,
    cw_full_reg,
    p_49_out,
    user_lnk_up_mux_reg_0,
    s_axis_cw_treadysig45_out,
    p_1_out,
    \gaf.gaf0.ram_afull_i_reg_0 ,
    m_axis_cw_tlast_reg_1,
    eqOp,
    \m_axis_cw_tdata_reg[29] ,
    \gaf.gaf0.ram_afull_i_reg_1 ,
    cw_full_reg_0,
    delaylast40_out,
    padzeroes11_out,
    m_axi_wready,
    axi_aresetn,
    rdaddrsmsig_reg,
    neqOp0_out_0,
    m_axi_awready,
    \m_axis_cw_tdata_reg[14]_0 ,
    \m_axis_cw_tdata_reg[7] ,
    m_axi_bvalid,
    m_axi_bresp,
    \m_axis_cw_tuser_reg[6] ,
    \m_axis_cw_tdata_reg[22] );
  output [3:0]out;
  output \gaf.gaf0.ram_afull_i_reg ;
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output wrensig_reg_0;
  output \data_width_64.datain_reg[64] ;
  output \AddrVar_reg[0] ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[8] ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[33] ;
  output \data_width_64.padzeroes_reg ;
  output wrensig_reg_1;
  output [0:0]\end_point.ctl_user_intr_d_reg[8] ;
  output dataensig;
  output m_axi_awvalid;
  output [0:0]E;
  output \data_width_64.m_axi_wstrb_reg[7] ;
  output \master_int_reg[1] ;
  output m_axi_bready;
  output s_axis_cw_treadysig;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output \data_width_64.s_axis_cw_treadysig_reg ;
  output \data_width_64.s_axis_cw_treadysig_reg_0 ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ;
  output \data_width_64.wrreqsetsig_reg ;
  output \data_width_64.padzeroes_reg_0 ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.dataen_reg_1 ;
  output \data_width_64.dataoffset_reg ;
  output \data_width_64.addroffset_reg ;
  output delaylast;
  output [0:0]\m_axi_awsize_reg[1] ;
  output addroffset;
  output \data_width_64.delaylast_reg ;
  output \data_width_64.delaylast_reg_0 ;
  output \data_width_64.addroffset_reg_0 ;
  output \data_width_64.m_axi_wstrb_reg[4] ;
  output m_axi_wlast;
  output [0:0]\data_width_64.m_axi_wvalidsig_reg ;
  output \data_width_64.wrdatasmsig_reg[1] ;
  output [0:0]\m_axi_araddr1_reg[0] ;
  output \splitcnt_reg[1] ;
  output rdreq_reg;
  output neqOp0_out;
  output neqOp;
  output \respmmpipeline_reg[0] ;
  output \respmmpipeline_reg[2] ;
  output \respmmpipeline_reg[1] ;
  output \data_width_64.wrpendingsig_reg[1][0] ;
  output \data_width_64.wrpendingsig_reg[1][2] ;
  output \data_width_64.wrpendingsig_reg[1][1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  output [0:0]\splitcnt_reg[1]_0 ;
  output [0:0]SR;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  output [63:0]m_axi_wdata;
  output m_axi_wvalid;
  output \m_axis_cw_tuser_reg[2] ;
  output [2:0]m_axi_awsize;
  output [2:0]m_axi_awprot;
  output p_1_in;
  output p_1_in2_in;
  output [7:0]m_axi_awlen;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_wstrb;
  input \resetovrd.reset_reg[4] ;
  input axi_aresetn_0;
  input [0:0]tlpfmtsig;
  input m_axis_cw_tlast_reg;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ;
  input \data_width_64.padzeroes_reg_1 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[3] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ;
  input m_axi_awvalidsig_reg;
  input empty_fwft_i_reg;
  input wrrespsmsig_reg;
  input m_axi_breadysig_reg;
  input [63:0]Q;
  input sig_s_axis_cw_tlast;
  input \m_axis_cw_tdata_reg[14] ;
  input neqOp_0;
  input m_axis_cw_tlast_reg_0;
  input cw_full;
  input sig_blk_lnk_up;
  input sig_s_axis_cw_tvalid;
  input s_axis_cw_treadysig34_out;
  input user_lnk_up_mux_reg;
  input cw_full_reg;
  input p_49_out;
  input user_lnk_up_mux_reg_0;
  input s_axis_cw_treadysig45_out;
  input p_1_out;
  input \gaf.gaf0.ram_afull_i_reg_0 ;
  input m_axis_cw_tlast_reg_1;
  input eqOp;
  input \m_axis_cw_tdata_reg[29] ;
  input \gaf.gaf0.ram_afull_i_reg_1 ;
  input cw_full_reg_0;
  input delaylast40_out;
  input padzeroes11_out;
  input m_axi_wready;
  input axi_aresetn;
  input [0:0]rdaddrsmsig_reg;
  input neqOp0_out_0;
  input m_axi_awready;
  input [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  input [31:0]\m_axis_cw_tdata_reg[7] ;
  input m_axi_bvalid;
  input [1:0]m_axi_bresp;
  input [2:0]\m_axis_cw_tuser_reg[6] ;
  input [22:0]\m_axis_cw_tdata_reg[22] ;

  wire \AddrVar_reg[0] ;
  wire [0:0]E;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[3] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ;
  wire [63:0]Q;
  wire [0:0]SR;
  wire addroffset;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire comp_axi_mm_masterbridge_wr_n_6;
  wire comp_axi_s_masterbridge_wr_n_129;
  wire comp_axi_s_masterbridge_wr_n_130;
  wire comp_axi_s_masterbridge_wr_n_131;
  wire comp_axi_s_masterbridge_wr_n_132;
  wire comp_axi_s_masterbridge_wr_n_133;
  wire comp_axi_s_masterbridge_wr_n_134;
  wire comp_axi_s_masterbridge_wr_n_135;
  wire comp_axi_s_masterbridge_wr_n_136;
  wire comp_axi_s_masterbridge_wr_n_137;
  wire comp_axi_s_masterbridge_wr_n_138;
  wire comp_axi_s_masterbridge_wr_n_139;
  wire comp_axi_s_masterbridge_wr_n_140;
  wire comp_axi_s_masterbridge_wr_n_141;
  wire comp_axi_s_masterbridge_wr_n_142;
  wire comp_axi_s_masterbridge_wr_n_143;
  wire comp_axi_s_masterbridge_wr_n_144;
  wire comp_axi_s_masterbridge_wr_n_145;
  wire comp_axi_s_masterbridge_wr_n_146;
  wire comp_axi_s_masterbridge_wr_n_147;
  wire comp_axi_s_masterbridge_wr_n_148;
  wire comp_axi_s_masterbridge_wr_n_149;
  wire comp_axi_s_masterbridge_wr_n_150;
  wire comp_axi_s_masterbridge_wr_n_151;
  wire comp_axi_s_masterbridge_wr_n_36;
  wire comp_axi_s_masterbridge_wr_n_37;
  wire comp_axi_s_masterbridge_wr_n_38;
  wire comp_axi_s_masterbridge_wr_n_39;
  wire comp_axi_s_masterbridge_wr_n_4;
  wire comp_axi_s_masterbridge_wr_n_40;
  wire comp_axi_s_masterbridge_wr_n_41;
  wire comp_axi_s_masterbridge_wr_n_42;
  wire comp_axi_s_masterbridge_wr_n_43;
  wire comp_axi_s_masterbridge_wr_n_44;
  wire comp_axi_s_masterbridge_wr_n_51;
  wire comp_axi_s_masterbridge_wr_n_53;
  wire comp_axi_s_masterbridge_wr_n_54;
  wire comp_axi_s_masterbridge_wr_n_55;
  wire comp_write_data_fifo_n_10;
  wire comp_write_data_fifo_n_11;
  wire comp_write_data_fifo_n_12;
  wire comp_write_data_fifo_n_13;
  wire comp_write_data_fifo_n_14;
  wire comp_write_data_fifo_n_15;
  wire comp_write_data_fifo_n_16;
  wire comp_write_data_fifo_n_17;
  wire comp_write_data_fifo_n_18;
  wire comp_write_data_fifo_n_19;
  wire comp_write_data_fifo_n_2;
  wire comp_write_data_fifo_n_20;
  wire comp_write_data_fifo_n_21;
  wire comp_write_data_fifo_n_22;
  wire comp_write_data_fifo_n_23;
  wire comp_write_data_fifo_n_24;
  wire comp_write_data_fifo_n_25;
  wire comp_write_data_fifo_n_26;
  wire comp_write_data_fifo_n_27;
  wire comp_write_data_fifo_n_28;
  wire comp_write_data_fifo_n_29;
  wire comp_write_data_fifo_n_30;
  wire comp_write_data_fifo_n_31;
  wire comp_write_data_fifo_n_32;
  wire comp_write_data_fifo_n_33;
  wire comp_write_data_fifo_n_34;
  wire comp_write_data_fifo_n_35;
  wire comp_write_data_fifo_n_36;
  wire comp_write_data_fifo_n_37;
  wire comp_write_data_fifo_n_38;
  wire comp_write_data_fifo_n_39;
  wire comp_write_data_fifo_n_40;
  wire comp_write_data_fifo_n_41;
  wire comp_write_data_fifo_n_42;
  wire comp_write_data_fifo_n_43;
  wire comp_write_data_fifo_n_44;
  wire comp_write_data_fifo_n_45;
  wire comp_write_data_fifo_n_46;
  wire comp_write_data_fifo_n_47;
  wire comp_write_data_fifo_n_48;
  wire comp_write_data_fifo_n_49;
  wire comp_write_data_fifo_n_5;
  wire comp_write_data_fifo_n_50;
  wire comp_write_data_fifo_n_51;
  wire comp_write_data_fifo_n_52;
  wire comp_write_data_fifo_n_53;
  wire comp_write_data_fifo_n_54;
  wire comp_write_data_fifo_n_55;
  wire comp_write_data_fifo_n_56;
  wire comp_write_data_fifo_n_57;
  wire comp_write_data_fifo_n_58;
  wire comp_write_data_fifo_n_59;
  wire comp_write_data_fifo_n_6;
  wire comp_write_data_fifo_n_60;
  wire comp_write_data_fifo_n_61;
  wire comp_write_data_fifo_n_62;
  wire comp_write_data_fifo_n_63;
  wire comp_write_data_fifo_n_64;
  wire comp_write_data_fifo_n_65;
  wire comp_write_data_fifo_n_66;
  wire comp_write_data_fifo_n_67;
  wire comp_write_data_fifo_n_68;
  wire comp_write_data_fifo_n_7;
  wire comp_write_data_fifo_n_8;
  wire comp_write_data_fifo_n_9;
  wire cw_full;
  wire cw_full_reg;
  wire cw_full_reg_0;
  wire \data_width_64.addroffset_reg ;
  wire \data_width_64.addroffset_reg_0 ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.dataen_reg_1 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.delaylast_reg_0 ;
  wire \data_width_64.m_axi_wstrb_reg[4] ;
  wire \data_width_64.m_axi_wstrb_reg[7] ;
  wire [0:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.padzeroes_reg ;
  wire \data_width_64.padzeroes_reg_0 ;
  wire \data_width_64.padzeroes_reg_1 ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[33] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[8] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.wrdatasmsig_reg[1] ;
  wire \data_width_64.wrpendingsig_reg[1][0] ;
  wire \data_width_64.wrpendingsig_reg[1][1] ;
  wire \data_width_64.wrpendingsig_reg[1][2] ;
  wire \data_width_64.wrreqsetsig_reg ;
  wire dataen8_out;
  wire dataensig;
  wire [64:0]datainsig;
  wire delaylast;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire [0:0]\end_point.ctl_user_intr_d_reg[8] ;
  wire eqOp;
  wire [3:0]firstdwbesig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_1 ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire [3:0]lastdwbesig;
  wire [0:0]\m_axi_araddr1_reg[0] ;
  wire [31:0]m_axi_awaddr;
  wire [7:0]m_axi_awlen;
  wire [2:0]m_axi_awprot;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire [0:0]\m_axi_awsize_reg[1] ;
  wire m_axi_awvalid;
  wire m_axi_awvalidsig_reg;
  wire m_axi_bready;
  wire m_axi_breadysig_reg;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [63:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [7:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire \m_axis_cw_tdata_reg[14] ;
  wire [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  wire [22:0]\m_axis_cw_tdata_reg[22] ;
  wire \m_axis_cw_tdata_reg[29] ;
  wire [31:0]\m_axis_cw_tdata_reg[7] ;
  wire m_axis_cw_tlast_reg;
  wire m_axis_cw_tlast_reg_0;
  wire m_axis_cw_tlast_reg_1;
  wire \m_axis_cw_tuser_reg[2] ;
  wire [2:0]\m_axis_cw_tuser_reg[6] ;
  wire \master_int_reg[1] ;
  wire neqOp;
  wire neqOp0_out;
  wire neqOp0_out_0;
  wire neqOp1_out;
  wire neqOp_0;
  wire [3:0]out;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire p_2_in;
  wire p_49_out;
  wire padzeroes11_out;
  wire [0:0]rdaddrsmsig_reg;
  wire rdreq_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \respmmpipeline_reg[0] ;
  wire \respmmpipeline_reg[1] ;
  wire \respmmpipeline_reg[2] ;
  wire s_axis_cw_treadysig;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [1:0]s_axis_cw_tusersig;
  wire sig_blk_lnk_up;
  wire sig_s_axis_cw_tlast;
  wire sig_s_axis_cw_tvalid;
  wire \splitcnt_reg[1] ;
  wire [0:0]\splitcnt_reg[1]_0 ;
  wire [0:0]tlpfmtsig;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire wrdatasmsig__1;
  wire wrensig;
  wire wrensig0;
  wire wrensig_reg_0;
  wire wrensig_reg_1;
  wire wrrespsmsig_reg;

  overlay1_axi_pcie_0_0_axi_mm_masterbridge_wr comp_axi_mm_masterbridge_wr
       (.E(\AddrVar_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ),
        .Q(firstdwbesig),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.lastdwbesig_reg[3] (lastdwbesig),
        .\data_width_64.m_axi_wstrb_reg[4]_0 (\data_width_64.m_axi_wstrb_reg[4] ),
        .\data_width_64.m_axi_wstrb_reg[7]_0 (\data_width_64.m_axi_wstrb_reg[7] ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (comp_axi_mm_masterbridge_wr_n_6),
        .\data_width_64.tlpaddrl_reg[22] ({comp_axi_s_masterbridge_wr_n_129,comp_axi_s_masterbridge_wr_n_130,comp_axi_s_masterbridge_wr_n_131,comp_axi_s_masterbridge_wr_n_132,comp_axi_s_masterbridge_wr_n_133,comp_axi_s_masterbridge_wr_n_134,comp_axi_s_masterbridge_wr_n_135,comp_axi_s_masterbridge_wr_n_136,comp_axi_s_masterbridge_wr_n_137,comp_axi_s_masterbridge_wr_n_138,comp_axi_s_masterbridge_wr_n_139,comp_axi_s_masterbridge_wr_n_140,comp_axi_s_masterbridge_wr_n_141,comp_axi_s_masterbridge_wr_n_142,comp_axi_s_masterbridge_wr_n_143,comp_axi_s_masterbridge_wr_n_144,comp_axi_s_masterbridge_wr_n_145,comp_axi_s_masterbridge_wr_n_146,comp_axi_s_masterbridge_wr_n_147,comp_axi_s_masterbridge_wr_n_148,comp_axi_s_masterbridge_wr_n_149,comp_axi_s_masterbridge_wr_n_150,comp_axi_s_masterbridge_wr_n_151}),
        .\data_width_64.tlpfmtsig_reg[0] (comp_axi_s_masterbridge_wr_n_4),
        .\data_width_64.wrdatasmsig_reg[1]_0 (\data_width_64.wrdatasmsig_reg[1] ),
        .dataen8_out(dataen8_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .empty_fwft_i_reg_0(\gpregsm1.curr_fwft_state_reg[1] ),
        .\goreg_bm.dout_i_reg[64] ({\data_width_64.m_axi_wvalidsig_reg ,comp_write_data_fifo_n_5,comp_write_data_fifo_n_6,comp_write_data_fifo_n_7,comp_write_data_fifo_n_8,comp_write_data_fifo_n_9,comp_write_data_fifo_n_10,comp_write_data_fifo_n_11,comp_write_data_fifo_n_12,comp_write_data_fifo_n_13,comp_write_data_fifo_n_14,comp_write_data_fifo_n_15,comp_write_data_fifo_n_16,comp_write_data_fifo_n_17,comp_write_data_fifo_n_18,comp_write_data_fifo_n_19,comp_write_data_fifo_n_20,comp_write_data_fifo_n_21,comp_write_data_fifo_n_22,comp_write_data_fifo_n_23,comp_write_data_fifo_n_24,comp_write_data_fifo_n_25,comp_write_data_fifo_n_26,comp_write_data_fifo_n_27,comp_write_data_fifo_n_28,comp_write_data_fifo_n_29,comp_write_data_fifo_n_30,comp_write_data_fifo_n_31,comp_write_data_fifo_n_32,comp_write_data_fifo_n_33,comp_write_data_fifo_n_34,comp_write_data_fifo_n_35,comp_write_data_fifo_n_36,comp_write_data_fifo_n_37,comp_write_data_fifo_n_38,comp_write_data_fifo_n_39,comp_write_data_fifo_n_40,comp_write_data_fifo_n_41,comp_write_data_fifo_n_42,comp_write_data_fifo_n_43,comp_write_data_fifo_n_44,comp_write_data_fifo_n_45,comp_write_data_fifo_n_46,comp_write_data_fifo_n_47,comp_write_data_fifo_n_48,comp_write_data_fifo_n_49,comp_write_data_fifo_n_50,comp_write_data_fifo_n_51,comp_write_data_fifo_n_52,comp_write_data_fifo_n_53,comp_write_data_fifo_n_54,comp_write_data_fifo_n_55,comp_write_data_fifo_n_56,comp_write_data_fifo_n_57,comp_write_data_fifo_n_58,comp_write_data_fifo_n_59,comp_write_data_fifo_n_60,comp_write_data_fifo_n_61,comp_write_data_fifo_n_62,comp_write_data_fifo_n_63,comp_write_data_fifo_n_64,comp_write_data_fifo_n_65,comp_write_data_fifo_n_66,comp_write_data_fifo_n_67,comp_write_data_fifo_n_68}),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awlen(m_axi_awlen),
        .\m_axi_awlen_reg[7]_0 (E),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_awvalidsig_reg_0(m_axi_awvalidsig_reg),
        .m_axi_bready(m_axi_bready),
        .m_axi_breadysig_reg_0(m_axi_breadysig_reg),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wvalid(m_axi_wvalid),
        .\master_int_reg[1]_0 (\master_int_reg[1] ),
        .\master_int_reg[1]_1 (p_1_in),
        .minusOp({comp_axi_s_masterbridge_wr_n_36,comp_axi_s_masterbridge_wr_n_37,comp_axi_s_masterbridge_wr_n_38,comp_axi_s_masterbridge_wr_n_39,comp_axi_s_masterbridge_wr_n_40,comp_axi_s_masterbridge_wr_n_41,comp_axi_s_masterbridge_wr_n_42,comp_axi_s_masterbridge_wr_n_43}),
        .neqOp(neqOp),
        .neqOp0_out(neqOp0_out),
        .neqOp1_out(neqOp1_out),
        .out(out[2:1]),
        .p_0_in(comp_axi_s_masterbridge_wr_n_51),
        .p_1_in(comp_axi_s_masterbridge_wr_n_44),
        .p_1_in2_in(p_1_in2_in),
        .p_2_in(p_2_in),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .\respmmpipeline_reg[0]_0 (\respmmpipeline_reg[0] ),
        .\respmmpipeline_reg[1]_0 (\respmmpipeline_reg[1] ),
        .\respmmpipeline_reg[2]_0 (\respmmpipeline_reg[2] ),
        .s_axis_cw_tusersig(s_axis_cw_tusersig),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_s_axis_cw_tlast(sig_s_axis_cw_tlast),
        .wrdatasmsig__1(wrdatasmsig__1),
        .wrrespsmsig_reg_0(wrrespsmsig_reg));
  overlay1_axi_pcie_0_0_axi_s_masterbridge_wr comp_axi_s_masterbridge_wr
       (.\AddrVar_reg[22] ({comp_axi_s_masterbridge_wr_n_129,comp_axi_s_masterbridge_wr_n_130,comp_axi_s_masterbridge_wr_n_131,comp_axi_s_masterbridge_wr_n_132,comp_axi_s_masterbridge_wr_n_133,comp_axi_s_masterbridge_wr_n_134,comp_axi_s_masterbridge_wr_n_135,comp_axi_s_masterbridge_wr_n_136,comp_axi_s_masterbridge_wr_n_137,comp_axi_s_masterbridge_wr_n_138,comp_axi_s_masterbridge_wr_n_139,comp_axi_s_masterbridge_wr_n_140,comp_axi_s_masterbridge_wr_n_141,comp_axi_s_masterbridge_wr_n_142,comp_axi_s_masterbridge_wr_n_143,comp_axi_s_masterbridge_wr_n_144,comp_axi_s_masterbridge_wr_n_145,comp_axi_s_masterbridge_wr_n_146,comp_axi_s_masterbridge_wr_n_147,comp_axi_s_masterbridge_wr_n_148,comp_axi_s_masterbridge_wr_n_149,comp_axi_s_masterbridge_wr_n_150,comp_axi_s_masterbridge_wr_n_151}),
        .\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (datainsig),
        .E(\AddrVar_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (comp_axi_s_masterbridge_wr_n_4),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_2 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[3] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ),
        .Q(Q),
        .SR(SR),
        .addroffset(addroffset),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .cw_full(cw_full),
        .cw_full_reg(cw_full_reg),
        .cw_full_reg_0(cw_full_reg_0),
        .\data_width_64.addroffset_reg_0 (\data_width_64.addroffset_reg ),
        .\data_width_64.addroffset_reg_1 (\data_width_64.addroffset_reg_0 ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_1 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.dataen_reg_2 (\data_width_64.dataen_reg_1 ),
        .\data_width_64.datain_reg[64]_0 (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg ),
        .\data_width_64.delaylast_reg_0 (\data_width_64.delaylast_reg ),
        .\data_width_64.delaylast_reg_1 (\data_width_64.delaylast_reg_0 ),
        .\data_width_64.m_axi_wstrb_reg[1] (firstdwbesig),
        .\data_width_64.m_axi_wstrb_reg[1]_0 (lastdwbesig),
        .\data_width_64.padzeroes_reg_0 (\data_width_64.padzeroes_reg ),
        .\data_width_64.padzeroes_reg_1 (\data_width_64.padzeroes_reg_0 ),
        .\data_width_64.padzeroes_reg_2 (\data_width_64.padzeroes_reg_1 ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 (\data_width_64.s_axis_cw_tdatatemp_reg[33] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 (\data_width_64.s_axis_cw_tdatatemp_reg[8] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[8]_1 (\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .\data_width_64.s_axis_cw_tlasttemp_reg_0 (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.wrpendingsig_reg[1][0] (\data_width_64.wrpendingsig_reg[1][0] ),
        .\data_width_64.wrpendingsig_reg[1][1] (\data_width_64.wrpendingsig_reg[1][1] ),
        .\data_width_64.wrpendingsig_reg[1][2] (\data_width_64.wrpendingsig_reg[1][2] ),
        .\data_width_64.wrreqsetsig_reg_0 (\data_width_64.wrreqsetsig_reg ),
        .dataen8_out(dataen8_out),
        .dataensig(dataensig),
        .delaylast(delaylast),
        .delaylast40_out(delaylast40_out),
        .\end_point.ctl_user_intr_d_reg[8] (\end_point.ctl_user_intr_d_reg[8] ),
        .eqOp(eqOp),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg_1 (\gaf.gaf0.ram_afull_i_reg_1 ),
        .\gaf.gaf0.ram_afull_i_reg_2 (comp_write_data_fifo_n_2),
        .\m_axi_araddr1_reg[0] (\m_axi_araddr1_reg[0] ),
        .\m_axi_awsize_reg[1] (\m_axi_awsize_reg[1] ),
        .\m_axis_cw_tdata_reg[14] (\m_axis_cw_tdata_reg[14] ),
        .\m_axis_cw_tdata_reg[14]_0 (\m_axis_cw_tdata_reg[14]_0 ),
        .\m_axis_cw_tdata_reg[22] (\m_axis_cw_tdata_reg[22] ),
        .\m_axis_cw_tdata_reg[29] (\m_axis_cw_tdata_reg[29] ),
        .\m_axis_cw_tdata_reg[7] (\m_axis_cw_tdata_reg[7] ),
        .m_axis_cw_tlast_reg(m_axis_cw_tlast_reg),
        .m_axis_cw_tlast_reg_0(m_axis_cw_tlast_reg_0),
        .m_axis_cw_tlast_reg_1(m_axis_cw_tlast_reg_1),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .\m_axis_cw_tuser_reg[6] (\m_axis_cw_tuser_reg[6] ),
        .minusOp({comp_axi_s_masterbridge_wr_n_36,comp_axi_s_masterbridge_wr_n_37,comp_axi_s_masterbridge_wr_n_38,comp_axi_s_masterbridge_wr_n_39,comp_axi_s_masterbridge_wr_n_40,comp_axi_s_masterbridge_wr_n_41,comp_axi_s_masterbridge_wr_n_42,comp_axi_s_masterbridge_wr_n_43}),
        .neqOp0_out_0(neqOp0_out_0),
        .neqOp_0(neqOp_0),
        .out(out),
        .p_0_in(comp_axi_s_masterbridge_wr_n_51),
        .p_1_in(comp_axi_s_masterbridge_wr_n_44),
        .p_1_out(p_1_out),
        .p_2_in(p_2_in),
        .p_49_out(p_49_out),
        .padzeroes11_out(padzeroes11_out),
        .rdaddrsmsig_reg(rdaddrsmsig_reg),
        .rdreq_reg(rdreq_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .\respmmpipeline_reg[0] (\respmmpipeline_reg[0] ),
        .\respmmpipeline_reg[1] (\respmmpipeline_reg[1] ),
        .\respmmpipeline_reg[2] (\respmmpipeline_reg[2] ),
        .s_axis_cw_treadysig(s_axis_cw_treadysig),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .s_axis_cw_tusersig(s_axis_cw_tusersig),
        .\s_axis_cw_tusersig_reg[0] (comp_axi_s_masterbridge_wr_n_55),
        .\s_axis_cw_tusersig_reg[1] (comp_axi_s_masterbridge_wr_n_54),
        .\s_axis_cw_tusersig_reg[2] (comp_axi_s_masterbridge_wr_n_53),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_s_axis_cw_tlast(sig_s_axis_cw_tlast),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .\splitcnt_reg[1] (\splitcnt_reg[1] ),
        .\splitcnt_reg[1]_0 (\splitcnt_reg[1]_0 ),
        .tlpfmtsig(tlpfmtsig),
        .user_lnk_up_mux_reg(comp_axi_mm_masterbridge_wr_n_6),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_1(user_lnk_up_mux_reg_0),
        .wrensig0(wrensig0),
        .wrensig_reg(wrensig_reg_0),
        .wrensig_reg_0(wrensig_reg_1),
        .\wrreqsetcnt_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ));
  overlay1_axi_pcie_0_0_sync_fifo_fg comp_write_data_fifo
       (.Q(Q[34]),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.datain_reg[64] (datainsig),
        .\data_width_64.delaylast_reg (comp_write_data_fifo_n_2),
        .\data_width_64.m_axi_wvalidsig_reg ({\data_width_64.m_axi_wvalidsig_reg ,comp_write_data_fifo_n_5,comp_write_data_fifo_n_6,comp_write_data_fifo_n_7,comp_write_data_fifo_n_8,comp_write_data_fifo_n_9,comp_write_data_fifo_n_10,comp_write_data_fifo_n_11,comp_write_data_fifo_n_12,comp_write_data_fifo_n_13,comp_write_data_fifo_n_14,comp_write_data_fifo_n_15,comp_write_data_fifo_n_16,comp_write_data_fifo_n_17,comp_write_data_fifo_n_18,comp_write_data_fifo_n_19,comp_write_data_fifo_n_20,comp_write_data_fifo_n_21,comp_write_data_fifo_n_22,comp_write_data_fifo_n_23,comp_write_data_fifo_n_24,comp_write_data_fifo_n_25,comp_write_data_fifo_n_26,comp_write_data_fifo_n_27,comp_write_data_fifo_n_28,comp_write_data_fifo_n_29,comp_write_data_fifo_n_30,comp_write_data_fifo_n_31,comp_write_data_fifo_n_32,comp_write_data_fifo_n_33,comp_write_data_fifo_n_34,comp_write_data_fifo_n_35,comp_write_data_fifo_n_36,comp_write_data_fifo_n_37,comp_write_data_fifo_n_38,comp_write_data_fifo_n_39,comp_write_data_fifo_n_40,comp_write_data_fifo_n_41,comp_write_data_fifo_n_42,comp_write_data_fifo_n_43,comp_write_data_fifo_n_44,comp_write_data_fifo_n_45,comp_write_data_fifo_n_46,comp_write_data_fifo_n_47,comp_write_data_fifo_n_48,comp_write_data_fifo_n_49,comp_write_data_fifo_n_50,comp_write_data_fifo_n_51,comp_write_data_fifo_n_52,comp_write_data_fifo_n_53,comp_write_data_fifo_n_54,comp_write_data_fifo_n_55,comp_write_data_fifo_n_56,comp_write_data_fifo_n_57,comp_write_data_fifo_n_58,comp_write_data_fifo_n_59,comp_write_data_fifo_n_60,comp_write_data_fifo_n_61,comp_write_data_fifo_n_62,comp_write_data_fifo_n_63,comp_write_data_fifo_n_64,comp_write_data_fifo_n_65,comp_write_data_fifo_n_66,comp_write_data_fifo_n_67,comp_write_data_fifo_n_68}),
        .\data_width_64.m_axi_wvalidsig_reg_0 (\data_width_64.m_axi_wstrb_reg[7] ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .neqOp1_out(neqOp1_out),
        .out(out[0]),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wrdatasmsig__1(wrdatasmsig__1),
        .wrensig(wrensig));
  FDRE \s_axis_cw_tusersig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_s_masterbridge_wr_n_55),
        .Q(s_axis_cw_tusersig[0]),
        .R(axi_aresetn_0));
  FDRE \s_axis_cw_tusersig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_s_masterbridge_wr_n_54),
        .Q(s_axis_cw_tusersig[1]),
        .R(axi_aresetn_0));
  FDRE \s_axis_cw_tusersig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(comp_axi_s_masterbridge_wr_n_53),
        .Q(p_2_in),
        .R(axi_aresetn_0));
  FDRE wrensig_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(wrensig0),
        .Q(wrensig),
        .R(axi_aresetn_0));
endmodule

(* AXI_ACLK_LOOPBACK = "FALSE" *) (* C_AXIBAR2PCIEBAR_0 = "32'b01000000000000000000000000000000" *) (* C_AXIBAR2PCIEBAR_1 = "32'b00000000000000000000000000000000" *) 
(* C_AXIBAR2PCIEBAR_2 = "32'b00000000000000000000000000000000" *) (* C_AXIBAR2PCIEBAR_3 = "32'b00000000000000000000000000000000" *) (* C_AXIBAR2PCIEBAR_4 = "32'b00000000000000000000000000000000" *) 
(* C_AXIBAR2PCIEBAR_5 = "32'b00000000000000000000000000000000" *) (* C_AXIBAR_0 = "32'b00100000000000000000000000000000" *) (* C_AXIBAR_1 = "32'b11111111111111111111111111111111" *) 
(* C_AXIBAR_2 = "32'b11111111111111111111111111111111" *) (* C_AXIBAR_3 = "32'b11111111111111111111111111111111" *) (* C_AXIBAR_4 = "32'b11111111111111111111111111111111" *) 
(* C_AXIBAR_5 = "32'b11111111111111111111111111111111" *) (* C_AXIBAR_AS_0 = "0" *) (* C_AXIBAR_AS_1 = "1" *) 
(* C_AXIBAR_AS_2 = "0" *) (* C_AXIBAR_AS_3 = "0" *) (* C_AXIBAR_AS_4 = "0" *) 
(* C_AXIBAR_AS_5 = "0" *) (* C_AXIBAR_HIGHADDR_0 = "32'b00101111111111111111111111111111" *) (* C_AXIBAR_HIGHADDR_1 = "32'b00000000000000000000000000000000" *) 
(* C_AXIBAR_HIGHADDR_2 = "32'b00000000000000000000000000000000" *) (* C_AXIBAR_HIGHADDR_3 = "32'b00000000000000000000000000000000" *) (* C_AXIBAR_HIGHADDR_4 = "32'b00000000000000000000000000000000" *) 
(* C_AXIBAR_HIGHADDR_5 = "32'b00000000000000000000000000000000" *) (* C_AXIBAR_NUM = "1" *) (* C_BASEADDR = "32'b00000000000000000000000000000000" *) 
(* C_CLASS_CODE = "32'b00000000000001011000000000000000" *) (* C_COMP_TIMEOUT = "0" *) (* C_DEVICE = "xc7a50t" *) 
(* C_DEVICE_ID = "32'b00000000000000000111000000100001" *) (* C_EP_LINK_PARTNER_RCB = "0" *) (* C_FAMILY = "artix7" *) 
(* C_HIGHADDR = "32'b00000000000111111111111111111111" *) (* C_INCLUDE_BAROFFSET_REG = "1" *) (* C_INCLUDE_RC = "0" *) 
(* C_INSTANCE = "overlay1_axi_pcie_0_0" *) (* C_INTERRUPT_PIN = "0" *) (* C_MAX_LINK_SPEED = "1" *) 
(* C_MSI_DECODE_ENABLE = "TRUE" *) (* C_M_AXI_ADDR_WIDTH = "32" *) (* C_M_AXI_DATA_WIDTH = "64" *) 
(* C_NO_OF_LANES = "1" *) (* C_NUM_MSI_REQ = "0" *) (* C_PCIEBAR2AXIBAR_0 = "32'b00000000000000000000000000000000" *) 
(* C_PCIEBAR2AXIBAR_0_SEC = "1" *) (* C_PCIEBAR2AXIBAR_1 = "32'b01000100101000000000000000000000" *) (* C_PCIEBAR2AXIBAR_1_SEC = "1" *) 
(* C_PCIEBAR2AXIBAR_2 = "32'b01000000000000000000000000000000" *) (* C_PCIEBAR2AXIBAR_2_SEC = "1" *) (* C_PCIEBAR_AS = "1" *) 
(* C_PCIEBAR_LEN_0 = "23" *) (* C_PCIEBAR_LEN_1 = "17" *) (* C_PCIEBAR_LEN_2 = "16" *) 
(* C_PCIEBAR_NUM = "3" *) (* C_PCIE_BLK_LOCN = "0" *) (* C_PCIE_CAP_SLOT_IMPLEMENTED = "0" *) 
(* C_PCIE_USE_MODE = "1.0" *) (* C_REF_CLK_FREQ = "0" *) (* C_REV_ID = "32'b00000000000000000000000000000000" *) 
(* C_RP_BAR_HIDE = "FALSE" *) (* C_SLOT_CLOCK_CONFIG = "TRUE" *) (* C_SPEED = "-2" *) 
(* C_SUBSYSTEM_ID = "32'b00000000000000000000000000000111" *) (* C_SUBSYSTEM_VENDOR_ID = "32'b00000000000000000001000011101110" *) (* C_S_AXI_ADDR_WIDTH = "32" *) 
(* C_S_AXI_DATA_WIDTH = "64" *) (* C_S_AXI_ID_WIDTH = "4" *) (* C_S_AXI_SUPPORTS_NARROW_BURST = "1" *) 
(* C_TRN_NP_FC = "FALSE" *) (* C_VENDOR_ID = "32'b00000000000000000001000011101110" *) (* C_XLNX_REF_BOARD = "NONE" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* EXT_CH_GT_DRP = "FALSE" *) (* EXT_PIPE_INTERFACE = "FALSE" *) 
(* NO_SLV_ERR = "FALSE" *) (* ORIG_REF_NAME = "axi_pcie" *) (* PCIE_EXT_CLK = "FALSE" *) 
(* PCIE_EXT_GT_COMMON = "FALSE" *) (* SHARED_LOGIC_IN_CORE = "TRUE" *) (* TRANSCEIVER_CTRL_STATUS_PORTS = "TRUE" *) 
module overlay1_axi_pcie_0_0_axi_pcie
   (axi_aclk,
    axi_aresetn,
    axi_aclk_out,
    axi_ctl_aclk,
    axi_ctl_aclk_out,
    mmcm_lock,
    interrupt_out,
    INTX_MSI_Request,
    INTX_MSI_Grant,
    MSI_enable,
    MSI_Vector_Num,
    MSI_Vector_Width,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awregion,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arregion,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awprot,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arprot,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_rvalid,
    m_axi_rready,
    pci_exp_txp,
    pci_exp_txn,
    pci_exp_rxp,
    pci_exp_rxn,
    REFCLK,
    s_axi_ctl_awaddr,
    s_axi_ctl_awvalid,
    s_axi_ctl_awready,
    s_axi_ctl_wdata,
    s_axi_ctl_wstrb,
    s_axi_ctl_wvalid,
    s_axi_ctl_wready,
    s_axi_ctl_bresp,
    s_axi_ctl_bvalid,
    s_axi_ctl_bready,
    s_axi_ctl_araddr,
    s_axi_ctl_arvalid,
    s_axi_ctl_arready,
    s_axi_ctl_rdata,
    s_axi_ctl_rresp,
    s_axi_ctl_rvalid,
    s_axi_ctl_rready,
    qpll_drp_crscode,
    qpll_drp_fsm,
    qpll_drp_done,
    qpll_drp_reset,
    qpll_qplllock,
    qpll_qplloutclk,
    qpll_qplloutrefclk,
    qpll_qplld,
    qpll_qpllreset,
    qpll_drp_clk,
    qpll_drp_rst_n,
    qpll_drp_ovrd,
    qpll_drp_gen3,
    qpll_drp_start,
    pipe_txprbssel,
    pipe_rxprbssel,
    pipe_txprbsforceerr,
    pipe_rxprbscntreset,
    pipe_loopback,
    pipe_txinhibit,
    pipe_rxprbserr,
    pipe_rst_fsm,
    pipe_qrst_fsm,
    pipe_rate_fsm,
    pipe_sync_fsm_tx,
    pipe_sync_fsm_rx,
    pipe_drp_fsm,
    pipe_rst_idle,
    pipe_qrst_idle,
    pipe_rate_idle,
    pipe_eyescandataerror,
    pipe_rxstatus,
    pipe_dmonitorout,
    pipe_cpll_lock,
    pipe_qpll_lock,
    pipe_rxpmaresetdone,
    pipe_rxbufstatus,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_txdlysresetdone,
    pipe_rxphaligndone,
    pipe_rxdlysresetdone,
    pipe_rxsyncdone,
    pipe_rxdisperr,
    pipe_rxnotintable,
    pipe_rxcommadet,
    gt_ch_drp_rdy,
    pipe_debug_0,
    pipe_debug_1,
    pipe_debug_2,
    pipe_debug_3,
    pipe_debug_4,
    pipe_debug_5,
    pipe_debug_6,
    pipe_debug_7,
    pipe_debug_8,
    pipe_debug_9,
    pipe_debug,
    common_commands_in,
    pipe_rx_0_sigs,
    pipe_rx_1_sigs,
    pipe_rx_2_sigs,
    pipe_rx_3_sigs,
    pipe_rx_4_sigs,
    pipe_rx_5_sigs,
    pipe_rx_6_sigs,
    pipe_rx_7_sigs,
    common_commands_out,
    pipe_tx_0_sigs,
    pipe_tx_1_sigs,
    pipe_tx_2_sigs,
    pipe_tx_3_sigs,
    pipe_tx_4_sigs,
    pipe_tx_5_sigs,
    pipe_tx_6_sigs,
    pipe_tx_7_sigs,
    int_pclk_out_slave,
    int_rxusrclk_out,
    int_dclk_out,
    int_userclk1_out,
    int_userclk2_out,
    int_oobclk_out,
    int_mmcm_lock_out,
    int_qplllock_out,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    int_rxoutclk_out,
    int_pclk_sel_slave,
    ext_ch_gt_drpclk,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpen,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe,
    ext_ch_gt_drpdo,
    ext_ch_gt_drprdy,
    clk_fab_refclk,
    clk_pclk,
    clk_rxusrclk,
    clk_dclk,
    clk_userclk1,
    clk_userclk2,
    clk_oobclk_in,
    clk_mmcm_lock,
    clk_txoutclk,
    clk_rxoutclk,
    clk_pclk_sel,
    pipe_mmcm_rst_n,
    clk_gen3);
  input axi_aclk;
  input axi_aresetn;
  output axi_aclk_out;
  input axi_ctl_aclk;
  output axi_ctl_aclk_out;
  output mmcm_lock;
  output interrupt_out;
  input INTX_MSI_Request;
  output INTX_MSI_Grant;
  output MSI_enable;
  input [4:0]MSI_Vector_Num;
  output [2:0]MSI_Vector_Width;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [3:0]s_axi_awregion;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [3:0]s_axi_arregion;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [2:0]m_axi_awprot;
  output m_axi_awvalid;
  input m_axi_awready;
  output m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output m_axi_wvalid;
  input m_axi_wready;
  input [1:0]m_axi_bresp;
  input m_axi_bvalid;
  output m_axi_bready;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [2:0]m_axi_arprot;
  output m_axi_arvalid;
  input m_axi_arready;
  output m_axi_arlock;
  output [3:0]m_axi_arcache;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input m_axi_rvalid;
  output m_axi_rready;
  output [0:0]pci_exp_txp;
  output [0:0]pci_exp_txn;
  input [0:0]pci_exp_rxp;
  input [0:0]pci_exp_rxn;
  input REFCLK;
  input [31:0]s_axi_ctl_awaddr;
  input s_axi_ctl_awvalid;
  output s_axi_ctl_awready;
  input [31:0]s_axi_ctl_wdata;
  input [3:0]s_axi_ctl_wstrb;
  input s_axi_ctl_wvalid;
  output s_axi_ctl_wready;
  output [1:0]s_axi_ctl_bresp;
  output s_axi_ctl_bvalid;
  input s_axi_ctl_bready;
  input [31:0]s_axi_ctl_araddr;
  input s_axi_ctl_arvalid;
  output s_axi_ctl_arready;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]s_axi_ctl_rresp;
  output s_axi_ctl_rvalid;
  input s_axi_ctl_rready;
  input [11:0]qpll_drp_crscode;
  input [17:0]qpll_drp_fsm;
  input [1:0]qpll_drp_done;
  input [1:0]qpll_drp_reset;
  input [1:0]qpll_qplllock;
  input [1:0]qpll_qplloutclk;
  input [1:0]qpll_qplloutrefclk;
  output [1:0]qpll_qplld;
  output [1:0]qpll_qpllreset;
  output [1:0]qpll_drp_clk;
  output [1:0]qpll_drp_rst_n;
  output [1:0]qpll_drp_ovrd;
  output [1:0]qpll_drp_gen3;
  output [1:0]qpll_drp_start;
  input [2:0]pipe_txprbssel;
  input [2:0]pipe_rxprbssel;
  input pipe_txprbsforceerr;
  input pipe_rxprbscntreset;
  input [2:0]pipe_loopback;
  input [0:0]pipe_txinhibit;
  output [0:0]pipe_rxprbserr;
  output [4:0]pipe_rst_fsm;
  output [11:0]pipe_qrst_fsm;
  output [4:0]pipe_rate_fsm;
  output [5:0]pipe_sync_fsm_tx;
  output [6:0]pipe_sync_fsm_rx;
  output [6:0]pipe_drp_fsm;
  output pipe_rst_idle;
  output pipe_qrst_idle;
  output pipe_rate_idle;
  output [0:0]pipe_eyescandataerror;
  output [2:0]pipe_rxstatus;
  output [14:0]pipe_dmonitorout;
  output [0:0]pipe_cpll_lock;
  output [0:0]pipe_qpll_lock;
  output [0:0]pipe_rxpmaresetdone;
  output [2:0]pipe_rxbufstatus;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxdlysresetdone;
  output [0:0]pipe_rxsyncdone;
  output [7:0]pipe_rxdisperr;
  output [7:0]pipe_rxnotintable;
  output [0:0]pipe_rxcommadet;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]pipe_debug_0;
  output [0:0]pipe_debug_1;
  output [0:0]pipe_debug_2;
  output [0:0]pipe_debug_3;
  output [0:0]pipe_debug_4;
  output [0:0]pipe_debug_5;
  output [0:0]pipe_debug_6;
  output [0:0]pipe_debug_7;
  output [0:0]pipe_debug_8;
  output [0:0]pipe_debug_9;
  output [31:0]pipe_debug;
  input [11:0]common_commands_in;
  input [24:0]pipe_rx_0_sigs;
  input [24:0]pipe_rx_1_sigs;
  input [24:0]pipe_rx_2_sigs;
  input [24:0]pipe_rx_3_sigs;
  input [24:0]pipe_rx_4_sigs;
  input [24:0]pipe_rx_5_sigs;
  input [24:0]pipe_rx_6_sigs;
  input [24:0]pipe_rx_7_sigs;
  output [11:0]common_commands_out;
  output [24:0]pipe_tx_0_sigs;
  output [24:0]pipe_tx_1_sigs;
  output [24:0]pipe_tx_2_sigs;
  output [24:0]pipe_tx_3_sigs;
  output [24:0]pipe_tx_4_sigs;
  output [24:0]pipe_tx_5_sigs;
  output [24:0]pipe_tx_6_sigs;
  output [24:0]pipe_tx_7_sigs;
  output int_pclk_out_slave;
  output int_rxusrclk_out;
  output int_dclk_out;
  output int_userclk1_out;
  output int_userclk2_out;
  output int_oobclk_out;
  output int_mmcm_lock_out;
  output [1:0]int_qplllock_out;
  output [1:0]int_qplloutclk_out;
  output [1:0]int_qplloutrefclk_out;
  output [0:0]int_rxoutclk_out;
  input [0:0]int_pclk_sel_slave;
  output ext_ch_gt_drpclk;
  input [8:0]ext_ch_gt_drpaddr;
  input [0:0]ext_ch_gt_drpen;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;
  output [15:0]ext_ch_gt_drpdo;
  output [0:0]ext_ch_gt_drprdy;
  input [0:0]clk_fab_refclk;
  input clk_pclk;
  input clk_rxusrclk;
  input clk_dclk;
  input clk_userclk1;
  input clk_userclk2;
  input clk_oobclk_in;
  input clk_mmcm_lock;
  output clk_txoutclk;
  output [0:0]clk_rxoutclk;
  output [0:0]clk_pclk_sel;
  input pipe_mmcm_rst_n;
  output clk_gen3;

  wire \<const0> ;
  wire \<const1> ;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire [4:0]MSI_Vector_Num;
  wire [2:0]MSI_Vector_Width;
  wire MSI_enable;
  wire REFCLK;
  wire axi_aresetn;
  wire [0:0]clk_pclk_sel;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire \comp_AXI_MM_S_MasterBridge/blk_lnk_up_latch ;
  wire [6:6]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/R ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/badreadreq ;
  wire [11:0]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlpbytecount[1,0] ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,1] ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,2] ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,3] ;
  wire [7:5]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[1,3] ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp56_in ;
  wire [11:6]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/length_offset ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/m_axis_cc_tdata1 ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/m_axis_cc_tvalid_d50_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/neqOp ;
  wire [7:5]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_0_in1_in ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_76_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/s_axis_cr_tready_sig106_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/tlprequesterid ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/almost_fullsig ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/delaylast40_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/eqOp ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/neqOp ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/neqOp7_in ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/p_1_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/p_49_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/padzeroes11_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig34_out ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig45_out ;
  wire [0:0]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/tlpfmtsig ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ;
  wire [0:0]\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/tlplengthsig ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/treadydataenadjustsig ;
  wire \comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/wrreqsetsig ;
  wire \comp_AXI_MM_S_MasterBridge/p_0_in0_in ;
  wire \comp_AXI_MM_S_MasterBridge/p_0_in1_in ;
  wire \comp_AXI_MM_S_MasterBridge/p_1_in ;
  wire \comp_AXI_MM_S_MasterBridge/p_1_in2_in ;
  wire comp_axi_enhanced_pcie_n_158;
  wire comp_axi_enhanced_pcie_n_160;
  wire comp_axi_enhanced_pcie_n_162;
  wire comp_axi_enhanced_pcie_n_163;
  wire comp_axi_enhanced_pcie_n_164;
  wire comp_axi_enhanced_pcie_n_166;
  wire comp_axi_enhanced_pcie_n_167;
  wire comp_axi_enhanced_pcie_n_168;
  wire comp_axi_enhanced_pcie_n_169;
  wire comp_axi_enhanced_pcie_n_170;
  wire comp_axi_enhanced_pcie_n_171;
  wire comp_axi_enhanced_pcie_n_172;
  wire comp_axi_enhanced_pcie_n_173;
  wire comp_axi_enhanced_pcie_n_174;
  wire comp_axi_enhanced_pcie_n_175;
  wire comp_axi_enhanced_pcie_n_176;
  wire comp_axi_enhanced_pcie_n_177;
  wire comp_axi_enhanced_pcie_n_178;
  wire comp_axi_enhanced_pcie_n_179;
  wire comp_axi_enhanced_pcie_n_180;
  wire comp_axi_enhanced_pcie_n_181;
  wire comp_axi_enhanced_pcie_n_182;
  wire comp_axi_enhanced_pcie_n_183;
  wire comp_axi_enhanced_pcie_n_184;
  wire comp_axi_enhanced_pcie_n_185;
  wire comp_axi_enhanced_pcie_n_186;
  wire comp_axi_enhanced_pcie_n_187;
  wire comp_axi_enhanced_pcie_n_188;
  wire comp_axi_enhanced_pcie_n_189;
  wire comp_axi_enhanced_pcie_n_247;
  wire comp_axi_enhanced_pcie_n_248;
  wire comp_axi_enhanced_pcie_n_249;
  wire comp_axi_enhanced_pcie_n_252;
  wire comp_axi_enhanced_pcie_n_253;
  wire comp_axi_enhanced_pcie_n_254;
  wire comp_axi_enhanced_pcie_n_255;
  wire comp_axi_enhanced_pcie_n_256;
  wire comp_axi_enhanced_pcie_n_257;
  wire comp_axi_enhanced_pcie_n_258;
  wire comp_axi_enhanced_pcie_n_259;
  wire comp_axi_enhanced_pcie_n_260;
  wire comp_axi_enhanced_pcie_n_261;
  wire comp_axi_enhanced_pcie_n_262;
  wire comp_axi_enhanced_pcie_n_263;
  wire comp_axi_enhanced_pcie_n_264;
  wire comp_axi_enhanced_pcie_n_265;
  wire comp_axi_enhanced_pcie_n_266;
  wire comp_axi_enhanced_pcie_n_267;
  wire comp_axi_enhanced_pcie_n_268;
  wire comp_axi_enhanced_pcie_n_269;
  wire comp_axi_enhanced_pcie_n_270;
  wire comp_axi_enhanced_pcie_n_274;
  wire comp_axi_enhanced_pcie_n_275;
  wire comp_axi_enhanced_pcie_n_276;
  wire comp_axi_enhanced_pcie_n_277;
  wire comp_axi_enhanced_pcie_n_278;
  wire comp_axi_enhanced_pcie_n_279;
  wire comp_axi_enhanced_pcie_n_289;
  wire comp_axi_enhanced_pcie_n_290;
  wire comp_axi_enhanced_pcie_n_291;
  wire comp_axi_enhanced_pcie_n_292;
  wire comp_axi_enhanced_pcie_n_294;
  wire comp_axi_enhanced_pcie_n_301;
  wire comp_axi_enhanced_pcie_n_302;
  wire comp_axi_enhanced_pcie_n_303;
  wire comp_axi_enhanced_pcie_n_304;
  wire comp_axi_enhanced_pcie_n_305;
  wire comp_axi_enhanced_pcie_n_306;
  wire comp_axi_enhanced_pcie_n_307;
  wire comp_axi_enhanced_pcie_n_308;
  wire comp_axi_enhanced_pcie_n_309;
  wire comp_axi_enhanced_pcie_n_310;
  wire comp_axi_enhanced_pcie_n_311;
  wire comp_axi_enhanced_pcie_n_312;
  wire comp_axi_enhanced_pcie_n_313;
  wire comp_axi_enhanced_pcie_n_314;
  wire comp_axi_enhanced_pcie_n_315;
  wire comp_axi_enhanced_pcie_n_316;
  wire comp_axi_enhanced_pcie_n_317;
  wire comp_axi_enhanced_pcie_n_318;
  wire comp_axi_enhanced_pcie_n_319;
  wire comp_axi_enhanced_pcie_n_320;
  wire comp_axi_enhanced_pcie_n_321;
  wire comp_axi_enhanced_pcie_n_332;
  wire comp_axi_enhanced_pcie_n_333;
  wire comp_axi_enhanced_pcie_n_336;
  wire comp_axi_enhanced_pcie_n_338;
  wire comp_axi_enhanced_pcie_n_344;
  wire comp_axi_enhanced_pcie_n_345;
  wire comp_axi_enhanced_pcie_n_346;
  wire comp_axi_enhanced_pcie_n_347;
  wire comp_axi_enhanced_pcie_n_348;
  wire comp_axi_enhanced_pcie_n_349;
  wire comp_axi_enhanced_pcie_n_350;
  wire comp_axi_enhanced_pcie_n_351;
  wire comp_axi_enhanced_pcie_n_352;
  wire comp_axi_enhanced_pcie_n_353;
  wire comp_axi_enhanced_pcie_n_354;
  wire comp_axi_enhanced_pcie_n_355;
  wire comp_axi_enhanced_pcie_n_356;
  wire comp_axi_enhanced_pcie_n_357;
  wire comp_axi_enhanced_pcie_n_358;
  wire comp_axi_enhanced_pcie_n_359;
  wire comp_axi_enhanced_pcie_n_360;
  wire comp_axi_enhanced_pcie_n_361;
  wire comp_axi_enhanced_pcie_n_362;
  wire comp_axi_enhanced_pcie_n_363;
  wire comp_axi_enhanced_pcie_n_364;
  wire comp_axi_enhanced_pcie_n_365;
  wire comp_axi_enhanced_pcie_n_366;
  wire comp_axi_enhanced_pcie_n_367;
  wire comp_axi_enhanced_pcie_n_368;
  wire comp_axi_enhanced_pcie_n_369;
  wire comp_axi_enhanced_pcie_n_370;
  wire comp_axi_enhanced_pcie_n_371;
  wire comp_axi_enhanced_pcie_n_372;
  wire comp_axi_enhanced_pcie_n_373;
  wire comp_axi_enhanced_pcie_n_374;
  wire comp_axi_enhanced_pcie_n_375;
  wire comp_axi_enhanced_pcie_n_392;
  wire comp_axi_enhanced_pcie_n_393;
  wire comp_axi_enhanced_pcie_n_395;
  wire comp_axi_enhanced_pcie_n_396;
  wire comp_axi_enhanced_pcie_n_397;
  wire comp_axi_enhanced_pcie_n_398;
  wire comp_axi_enhanced_pcie_n_399;
  wire comp_axi_enhanced_pcie_n_400;
  wire comp_axi_enhanced_pcie_n_401;
  wire comp_axi_enhanced_pcie_n_402;
  wire comp_axi_enhanced_pcie_n_403;
  wire comp_axi_enhanced_pcie_n_404;
  wire comp_axi_enhanced_pcie_n_405;
  wire comp_axi_enhanced_pcie_n_406;
  wire comp_axi_enhanced_pcie_n_407;
  wire comp_axi_enhanced_pcie_n_408;
  wire comp_axi_enhanced_pcie_n_409;
  wire comp_axi_enhanced_pcie_n_413;
  wire comp_axi_enhanced_pcie_n_418;
  wire comp_axi_enhanced_pcie_n_419;
  wire comp_axi_enhanced_pcie_n_424;
  wire comp_axi_enhanced_pcie_n_425;
  wire comp_axi_enhanced_pcie_n_426;
  wire comp_axi_enhanced_pcie_n_427;
  wire comp_axi_enhanced_pcie_n_428;
  wire comp_axi_enhanced_pcie_n_436;
  wire comp_axi_enhanced_pcie_n_437;
  wire comp_axi_enhanced_pcie_n_90;
  wire comp_axi_enhanced_pcie_n_92;
  wire comp_axi_pcie_mm_s_n_0;
  wire comp_axi_pcie_mm_s_n_10;
  wire comp_axi_pcie_mm_s_n_100;
  wire comp_axi_pcie_mm_s_n_101;
  wire comp_axi_pcie_mm_s_n_102;
  wire comp_axi_pcie_mm_s_n_103;
  wire comp_axi_pcie_mm_s_n_104;
  wire comp_axi_pcie_mm_s_n_105;
  wire comp_axi_pcie_mm_s_n_106;
  wire comp_axi_pcie_mm_s_n_107;
  wire comp_axi_pcie_mm_s_n_108;
  wire comp_axi_pcie_mm_s_n_109;
  wire comp_axi_pcie_mm_s_n_11;
  wire comp_axi_pcie_mm_s_n_110;
  wire comp_axi_pcie_mm_s_n_111;
  wire comp_axi_pcie_mm_s_n_112;
  wire comp_axi_pcie_mm_s_n_113;
  wire comp_axi_pcie_mm_s_n_114;
  wire comp_axi_pcie_mm_s_n_115;
  wire comp_axi_pcie_mm_s_n_116;
  wire comp_axi_pcie_mm_s_n_117;
  wire comp_axi_pcie_mm_s_n_118;
  wire comp_axi_pcie_mm_s_n_119;
  wire comp_axi_pcie_mm_s_n_12;
  wire comp_axi_pcie_mm_s_n_120;
  wire comp_axi_pcie_mm_s_n_121;
  wire comp_axi_pcie_mm_s_n_123;
  wire comp_axi_pcie_mm_s_n_14;
  wire comp_axi_pcie_mm_s_n_143;
  wire comp_axi_pcie_mm_s_n_180;
  wire comp_axi_pcie_mm_s_n_189;
  wire comp_axi_pcie_mm_s_n_19;
  wire comp_axi_pcie_mm_s_n_190;
  wire comp_axi_pcie_mm_s_n_191;
  wire comp_axi_pcie_mm_s_n_192;
  wire comp_axi_pcie_mm_s_n_2;
  wire comp_axi_pcie_mm_s_n_21;
  wire comp_axi_pcie_mm_s_n_257;
  wire comp_axi_pcie_mm_s_n_258;
  wire comp_axi_pcie_mm_s_n_259;
  wire comp_axi_pcie_mm_s_n_260;
  wire comp_axi_pcie_mm_s_n_261;
  wire comp_axi_pcie_mm_s_n_262;
  wire comp_axi_pcie_mm_s_n_264;
  wire comp_axi_pcie_mm_s_n_3;
  wire comp_axi_pcie_mm_s_n_33;
  wire comp_axi_pcie_mm_s_n_35;
  wire comp_axi_pcie_mm_s_n_36;
  wire comp_axi_pcie_mm_s_n_37;
  wire comp_axi_pcie_mm_s_n_38;
  wire comp_axi_pcie_mm_s_n_4;
  wire comp_axi_pcie_mm_s_n_40;
  wire comp_axi_pcie_mm_s_n_41;
  wire comp_axi_pcie_mm_s_n_47;
  wire comp_axi_pcie_mm_s_n_48;
  wire comp_axi_pcie_mm_s_n_55;
  wire comp_axi_pcie_mm_s_n_56;
  wire comp_axi_pcie_mm_s_n_57;
  wire comp_axi_pcie_mm_s_n_58;
  wire comp_axi_pcie_mm_s_n_59;
  wire comp_axi_pcie_mm_s_n_6;
  wire comp_axi_pcie_mm_s_n_61;
  wire comp_axi_pcie_mm_s_n_62;
  wire comp_axi_pcie_mm_s_n_64;
  wire comp_axi_pcie_mm_s_n_65;
  wire comp_axi_pcie_mm_s_n_66;
  wire comp_axi_pcie_mm_s_n_67;
  wire comp_axi_pcie_mm_s_n_68;
  wire comp_axi_pcie_mm_s_n_69;
  wire comp_axi_pcie_mm_s_n_7;
  wire comp_axi_pcie_mm_s_n_70;
  wire comp_axi_pcie_mm_s_n_71;
  wire comp_axi_pcie_mm_s_n_72;
  wire comp_axi_pcie_mm_s_n_73;
  wire comp_axi_pcie_mm_s_n_74;
  wire comp_axi_pcie_mm_s_n_75;
  wire comp_axi_pcie_mm_s_n_76;
  wire comp_axi_pcie_mm_s_n_77;
  wire comp_axi_pcie_mm_s_n_78;
  wire comp_axi_pcie_mm_s_n_79;
  wire comp_axi_pcie_mm_s_n_80;
  wire comp_axi_pcie_mm_s_n_81;
  wire comp_axi_pcie_mm_s_n_82;
  wire comp_axi_pcie_mm_s_n_83;
  wire comp_axi_pcie_mm_s_n_84;
  wire comp_axi_pcie_mm_s_n_85;
  wire comp_axi_pcie_mm_s_n_86;
  wire comp_axi_pcie_mm_s_n_87;
  wire comp_axi_pcie_mm_s_n_88;
  wire comp_axi_pcie_mm_s_n_89;
  wire comp_axi_pcie_mm_s_n_9;
  wire comp_axi_pcie_mm_s_n_90;
  wire comp_axi_pcie_mm_s_n_91;
  wire comp_axi_pcie_mm_s_n_92;
  wire comp_axi_pcie_mm_s_n_93;
  wire comp_axi_pcie_mm_s_n_94;
  wire comp_axi_pcie_mm_s_n_95;
  wire comp_axi_pcie_mm_s_n_96;
  wire comp_axi_pcie_mm_s_n_97;
  wire comp_axi_pcie_mm_s_n_98;
  wire comp_axi_pcie_mm_s_n_99;
  wire [3:2]\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/cfg_inst/s_axi_ctl_araddr_ipic_bridge ;
  wire [3:2]\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/cfg_inst/s_axi_ctl_awaddr_ipic_bridge ;
  wire \comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/rx_inst/rx_demux_inst/cr_full ;
  wire \comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/rx_inst/rx_demux_inst/cw_full ;
  wire [63:0]\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in ;
  wire \comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/s_axis_tx_tready ;
  wire \comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/tx_arbiter/p_0_in ;
  wire \comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/tx_arbiter/request_completed ;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [0:0]gt_ch_drp_rdy;
  wire int_dclk_out;
  wire int_oobclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire [0:0]\^int_qplllock_out ;
  wire [0:0]\^int_qplloutclk_out ;
  wire [0:0]\^int_qplloutrefclk_out ;
  wire int_userclk1_out;
  wire interrupt_out;
  wire [8:6]interrupt_vector;
  wire intx_msi_request_1d;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire \length_offset_reg[2]_i_2_n_0 ;
  wire [31:0]m_axi_araddr;
  wire [7:0]m_axi_arlen;
  wire [2:0]m_axi_arprot;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [7:0]m_axi_awlen;
  wire [2:0]m_axi_awprot;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [63:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [7:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire mmcm_lock;
  wire [4:0]msi_vector_num_1d;
  wire [4:0]msi_vector_num_2d;
  wire \np_ok_mode.pipe_latency_cntr[0]_i_1_n_0 ;
  wire \np_ok_mode.pipe_latency_cntr[1]_i_1_n_0 ;
  wire \np_ok_mode.pipe_latency_cntr[2]_i_1_n_0 ;
  wire \np_ok_mode.pipe_latency_cntr[3]_i_1_n_0 ;
  wire \np_ok_mode.pipe_latency_cntr[3]_i_2_n_0 ;
  wire \np_ok_mode.rx_np_okSM[1]_i_3_n_0 ;
  wire \np_ok_mode.rx_np_okSM_reg_n_0_[0] ;
  wire \np_ok_mode.rx_np_okSM_reg_n_0_[1] ;
  wire \np_ok_mode.rx_np_ok_cntr[0]_i_1_n_0 ;
  wire \np_ok_mode.rx_np_ok_cntr[1]_i_1_n_0 ;
  wire \np_ok_mode.rx_np_ok_cntr[2]_i_1_n_0 ;
  wire \np_ok_mode.rx_np_ok_cntr[3]_i_1_n_0 ;
  wire \np_ok_mode.rx_np_ok_cntr[3]_i_2_n_0 ;
  wire \np_ok_mode.rx_np_ok_cntr[3]_i_3_n_0 ;
  wire \np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ;
  wire \np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ;
  wire \np_ok_mode.rx_np_ok_cntr_reg_n_0_[2] ;
  wire \np_ok_mode.rx_np_ok_cntr_reg_n_0_[3] ;
  wire p_0_in;
  wire p_3_out;
  wire p_6_in;
  wire p_6_out;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\^pipe_drp_fsm ;
  wire [0:0]pipe_eyescandataerror;
  wire [3:0]pipe_latency_cntr;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [3:0]\^pipe_qrst_fsm ;
  wire pipe_qrst_idle;
  wire [3:0]\^pipe_rate_fsm ;
  wire pipe_rate_idle;
  wire [3:0]\^pipe_rst_fsm ;
  wire pipe_rst_idle;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]\^pipe_rxdisperr ;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]\^pipe_rxnotintable ;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire [0:0]\^pipe_sync_fsm_rx ;
  wire [5:0]pipe_sync_fsm_tx;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire rate_in_reg1_reg0;
  wire [2:0]rdndreqpipeline;
  wire [2:0]rdndreqpipeline_d;
  wire [2:0]rdreqpipeline;
  wire [2:0]rdreqpipeline_d;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire rx_np_ok_int;
  wire [31:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [31:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire sig_Bus2IP_CS;
  wire [31:0]sig_Bus2IP_Data;
  wire sig_Bus2IP_RNW;
  wire [31:0]sig_IP2Bus_Data;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire [7:0]sig_blk_bus_number;
  wire [7:5]sig_blk_dcontrol;
  wire [4:0]sig_blk_device_number;
  wire [2:0]sig_blk_function_number;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire [7:0]sig_blk_interrupt_di;
  wire sig_blk_lnk_up;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [63:0]sig_s_axis_cr_tdata;
  wire sig_s_axis_cr_tlast;
  wire sig_s_axis_cr_tready;
  wire [6:2]sig_s_axis_cr_tuser;
  wire sig_s_axis_cr_tvalid;
  wire [63:0]sig_s_axis_cw_tdata;
  wire sig_s_axis_cw_tlast;
  wire [6:2]sig_s_axis_cw_tuser;
  wire sig_s_axis_cw_tvalid;

  assign axi_aclk_out = int_userclk1_out;
  assign axi_ctl_aclk_out = int_userclk1_out;
  assign clk_gen3 = \<const0> ;
  assign common_commands_out[11] = \<const0> ;
  assign common_commands_out[10] = \<const0> ;
  assign common_commands_out[9] = \<const0> ;
  assign common_commands_out[8] = \<const0> ;
  assign common_commands_out[7] = \<const0> ;
  assign common_commands_out[6] = \<const0> ;
  assign common_commands_out[5] = \<const0> ;
  assign common_commands_out[4] = \<const0> ;
  assign common_commands_out[3] = \<const0> ;
  assign common_commands_out[2] = \<const0> ;
  assign common_commands_out[1] = \<const0> ;
  assign common_commands_out[0] = \<const0> ;
  assign ext_ch_gt_drpclk = int_dclk_out;
  assign int_mmcm_lock_out = mmcm_lock;
  assign int_qplllock_out[1] = \<const0> ;
  assign int_qplllock_out[0] = \^int_qplllock_out [0];
  assign int_qplloutclk_out[1] = \<const0> ;
  assign int_qplloutclk_out[0] = \^int_qplloutclk_out [0];
  assign int_qplloutrefclk_out[1] = \<const0> ;
  assign int_qplloutrefclk_out[0] = \^int_qplloutrefclk_out [0];
  assign int_rxoutclk_out[0] = \<const0> ;
  assign int_rxusrclk_out = int_oobclk_out;
  assign int_userclk2_out = int_userclk1_out;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const1> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const1> ;
  assign m_axi_arcache[0] = \<const1> ;
  assign m_axi_arlock = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const1> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const1> ;
  assign m_axi_awcache[0] = \<const1> ;
  assign m_axi_awlock = \<const0> ;
  assign pipe_cpll_lock[0] = \<const0> ;
  assign pipe_debug[31] = \<const0> ;
  assign pipe_debug[30] = \<const0> ;
  assign pipe_debug[29] = \<const0> ;
  assign pipe_debug[28] = \<const0> ;
  assign pipe_debug[27] = \<const0> ;
  assign pipe_debug[26] = \<const0> ;
  assign pipe_debug[25] = \<const0> ;
  assign pipe_debug[24] = \<const0> ;
  assign pipe_debug[23] = \<const0> ;
  assign pipe_debug[22] = \<const0> ;
  assign pipe_debug[21] = \<const0> ;
  assign pipe_debug[20] = \<const0> ;
  assign pipe_debug[19] = \<const0> ;
  assign pipe_debug[18] = \<const0> ;
  assign pipe_debug[17] = \<const0> ;
  assign pipe_debug[16] = \<const0> ;
  assign pipe_debug[15] = \<const0> ;
  assign pipe_debug[14] = \<const0> ;
  assign pipe_debug[13] = \<const0> ;
  assign pipe_debug[12] = \<const0> ;
  assign pipe_debug[11] = \<const0> ;
  assign pipe_debug[10] = \<const0> ;
  assign pipe_debug[9] = \<const0> ;
  assign pipe_debug[8] = \<const0> ;
  assign pipe_debug[7] = \<const0> ;
  assign pipe_debug[6] = \<const0> ;
  assign pipe_debug[5] = \<const0> ;
  assign pipe_debug[4] = \<const0> ;
  assign pipe_debug[3] = \<const0> ;
  assign pipe_debug[2] = \<const0> ;
  assign pipe_debug[1] = \<const0> ;
  assign pipe_debug[0] = \<const0> ;
  assign pipe_debug_0[0] = \<const0> ;
  assign pipe_debug_1[0] = \<const0> ;
  assign pipe_debug_2[0] = \<const0> ;
  assign pipe_debug_3[0] = \<const0> ;
  assign pipe_debug_4[0] = \<const0> ;
  assign pipe_debug_5[0] = \<const0> ;
  assign pipe_debug_6[0] = \<const0> ;
  assign pipe_debug_7[0] = \<const0> ;
  assign pipe_debug_8[0] = \<const0> ;
  assign pipe_debug_9[0] = \<const0> ;
  assign pipe_drp_fsm[6] = \<const0> ;
  assign pipe_drp_fsm[5] = \<const0> ;
  assign pipe_drp_fsm[4] = \<const0> ;
  assign pipe_drp_fsm[3] = \<const0> ;
  assign pipe_drp_fsm[2:0] = \^pipe_drp_fsm [2:0];
  assign pipe_qpll_lock[0] = \^int_qplllock_out [0];
  assign pipe_qrst_fsm[11] = \<const0> ;
  assign pipe_qrst_fsm[10] = \<const0> ;
  assign pipe_qrst_fsm[9] = \<const0> ;
  assign pipe_qrst_fsm[8] = \<const0> ;
  assign pipe_qrst_fsm[7] = \<const0> ;
  assign pipe_qrst_fsm[6] = \<const0> ;
  assign pipe_qrst_fsm[5] = \<const0> ;
  assign pipe_qrst_fsm[4] = \<const0> ;
  assign pipe_qrst_fsm[3:0] = \^pipe_qrst_fsm [3:0];
  assign pipe_rate_fsm[4] = \<const0> ;
  assign pipe_rate_fsm[3:0] = \^pipe_rate_fsm [3:0];
  assign pipe_rst_fsm[4] = \<const0> ;
  assign pipe_rst_fsm[3:0] = \^pipe_rst_fsm [3:0];
  assign pipe_rxdisperr[7] = \<const0> ;
  assign pipe_rxdisperr[6] = \<const0> ;
  assign pipe_rxdisperr[5] = \<const0> ;
  assign pipe_rxdisperr[4] = \<const0> ;
  assign pipe_rxdisperr[3:0] = \^pipe_rxdisperr [3:0];
  assign pipe_rxnotintable[7] = \<const0> ;
  assign pipe_rxnotintable[6] = \<const0> ;
  assign pipe_rxnotintable[5] = \<const0> ;
  assign pipe_rxnotintable[4] = \<const0> ;
  assign pipe_rxnotintable[3:0] = \^pipe_rxnotintable [3:0];
  assign pipe_sync_fsm_rx[6] = \<const0> ;
  assign pipe_sync_fsm_rx[5] = \<const0> ;
  assign pipe_sync_fsm_rx[4] = \<const0> ;
  assign pipe_sync_fsm_rx[3] = \<const0> ;
  assign pipe_sync_fsm_rx[2] = \<const0> ;
  assign pipe_sync_fsm_rx[1] = \<const0> ;
  assign pipe_sync_fsm_rx[0] = \^pipe_sync_fsm_rx [0];
  assign pipe_tx_0_sigs[24] = \<const0> ;
  assign pipe_tx_0_sigs[23] = \<const0> ;
  assign pipe_tx_0_sigs[22] = \<const0> ;
  assign pipe_tx_0_sigs[21] = \<const0> ;
  assign pipe_tx_0_sigs[20] = \<const0> ;
  assign pipe_tx_0_sigs[19] = \<const0> ;
  assign pipe_tx_0_sigs[18] = \<const0> ;
  assign pipe_tx_0_sigs[17] = \<const0> ;
  assign pipe_tx_0_sigs[16] = \<const0> ;
  assign pipe_tx_0_sigs[15] = \<const0> ;
  assign pipe_tx_0_sigs[14] = \<const0> ;
  assign pipe_tx_0_sigs[13] = \<const0> ;
  assign pipe_tx_0_sigs[12] = \<const0> ;
  assign pipe_tx_0_sigs[11] = \<const0> ;
  assign pipe_tx_0_sigs[10] = \<const0> ;
  assign pipe_tx_0_sigs[9] = \<const0> ;
  assign pipe_tx_0_sigs[8] = \<const0> ;
  assign pipe_tx_0_sigs[7] = \<const0> ;
  assign pipe_tx_0_sigs[6] = \<const0> ;
  assign pipe_tx_0_sigs[5] = \<const0> ;
  assign pipe_tx_0_sigs[4] = \<const0> ;
  assign pipe_tx_0_sigs[3] = \<const0> ;
  assign pipe_tx_0_sigs[2] = \<const0> ;
  assign pipe_tx_0_sigs[1] = \<const0> ;
  assign pipe_tx_0_sigs[0] = \<const0> ;
  assign pipe_tx_1_sigs[24] = \<const0> ;
  assign pipe_tx_1_sigs[23] = \<const0> ;
  assign pipe_tx_1_sigs[22] = \<const0> ;
  assign pipe_tx_1_sigs[21] = \<const0> ;
  assign pipe_tx_1_sigs[20] = \<const0> ;
  assign pipe_tx_1_sigs[19] = \<const0> ;
  assign pipe_tx_1_sigs[18] = \<const0> ;
  assign pipe_tx_1_sigs[17] = \<const0> ;
  assign pipe_tx_1_sigs[16] = \<const0> ;
  assign pipe_tx_1_sigs[15] = \<const0> ;
  assign pipe_tx_1_sigs[14] = \<const0> ;
  assign pipe_tx_1_sigs[13] = \<const0> ;
  assign pipe_tx_1_sigs[12] = \<const0> ;
  assign pipe_tx_1_sigs[11] = \<const0> ;
  assign pipe_tx_1_sigs[10] = \<const0> ;
  assign pipe_tx_1_sigs[9] = \<const0> ;
  assign pipe_tx_1_sigs[8] = \<const0> ;
  assign pipe_tx_1_sigs[7] = \<const0> ;
  assign pipe_tx_1_sigs[6] = \<const0> ;
  assign pipe_tx_1_sigs[5] = \<const0> ;
  assign pipe_tx_1_sigs[4] = \<const0> ;
  assign pipe_tx_1_sigs[3] = \<const0> ;
  assign pipe_tx_1_sigs[2] = \<const0> ;
  assign pipe_tx_1_sigs[1] = \<const0> ;
  assign pipe_tx_1_sigs[0] = \<const0> ;
  assign pipe_tx_2_sigs[24] = \<const0> ;
  assign pipe_tx_2_sigs[23] = \<const0> ;
  assign pipe_tx_2_sigs[22] = \<const0> ;
  assign pipe_tx_2_sigs[21] = \<const0> ;
  assign pipe_tx_2_sigs[20] = \<const0> ;
  assign pipe_tx_2_sigs[19] = \<const0> ;
  assign pipe_tx_2_sigs[18] = \<const0> ;
  assign pipe_tx_2_sigs[17] = \<const0> ;
  assign pipe_tx_2_sigs[16] = \<const0> ;
  assign pipe_tx_2_sigs[15] = \<const0> ;
  assign pipe_tx_2_sigs[14] = \<const0> ;
  assign pipe_tx_2_sigs[13] = \<const0> ;
  assign pipe_tx_2_sigs[12] = \<const0> ;
  assign pipe_tx_2_sigs[11] = \<const0> ;
  assign pipe_tx_2_sigs[10] = \<const0> ;
  assign pipe_tx_2_sigs[9] = \<const0> ;
  assign pipe_tx_2_sigs[8] = \<const0> ;
  assign pipe_tx_2_sigs[7] = \<const0> ;
  assign pipe_tx_2_sigs[6] = \<const0> ;
  assign pipe_tx_2_sigs[5] = \<const0> ;
  assign pipe_tx_2_sigs[4] = \<const0> ;
  assign pipe_tx_2_sigs[3] = \<const0> ;
  assign pipe_tx_2_sigs[2] = \<const0> ;
  assign pipe_tx_2_sigs[1] = \<const0> ;
  assign pipe_tx_2_sigs[0] = \<const0> ;
  assign pipe_tx_3_sigs[24] = \<const0> ;
  assign pipe_tx_3_sigs[23] = \<const0> ;
  assign pipe_tx_3_sigs[22] = \<const0> ;
  assign pipe_tx_3_sigs[21] = \<const0> ;
  assign pipe_tx_3_sigs[20] = \<const0> ;
  assign pipe_tx_3_sigs[19] = \<const0> ;
  assign pipe_tx_3_sigs[18] = \<const0> ;
  assign pipe_tx_3_sigs[17] = \<const0> ;
  assign pipe_tx_3_sigs[16] = \<const0> ;
  assign pipe_tx_3_sigs[15] = \<const0> ;
  assign pipe_tx_3_sigs[14] = \<const0> ;
  assign pipe_tx_3_sigs[13] = \<const0> ;
  assign pipe_tx_3_sigs[12] = \<const0> ;
  assign pipe_tx_3_sigs[11] = \<const0> ;
  assign pipe_tx_3_sigs[10] = \<const0> ;
  assign pipe_tx_3_sigs[9] = \<const0> ;
  assign pipe_tx_3_sigs[8] = \<const0> ;
  assign pipe_tx_3_sigs[7] = \<const0> ;
  assign pipe_tx_3_sigs[6] = \<const0> ;
  assign pipe_tx_3_sigs[5] = \<const0> ;
  assign pipe_tx_3_sigs[4] = \<const0> ;
  assign pipe_tx_3_sigs[3] = \<const0> ;
  assign pipe_tx_3_sigs[2] = \<const0> ;
  assign pipe_tx_3_sigs[1] = \<const0> ;
  assign pipe_tx_3_sigs[0] = \<const0> ;
  assign pipe_tx_4_sigs[24] = \<const0> ;
  assign pipe_tx_4_sigs[23] = \<const0> ;
  assign pipe_tx_4_sigs[22] = \<const0> ;
  assign pipe_tx_4_sigs[21] = \<const0> ;
  assign pipe_tx_4_sigs[20] = \<const0> ;
  assign pipe_tx_4_sigs[19] = \<const0> ;
  assign pipe_tx_4_sigs[18] = \<const0> ;
  assign pipe_tx_4_sigs[17] = \<const0> ;
  assign pipe_tx_4_sigs[16] = \<const0> ;
  assign pipe_tx_4_sigs[15] = \<const0> ;
  assign pipe_tx_4_sigs[14] = \<const0> ;
  assign pipe_tx_4_sigs[13] = \<const0> ;
  assign pipe_tx_4_sigs[12] = \<const0> ;
  assign pipe_tx_4_sigs[11] = \<const0> ;
  assign pipe_tx_4_sigs[10] = \<const0> ;
  assign pipe_tx_4_sigs[9] = \<const0> ;
  assign pipe_tx_4_sigs[8] = \<const0> ;
  assign pipe_tx_4_sigs[7] = \<const0> ;
  assign pipe_tx_4_sigs[6] = \<const0> ;
  assign pipe_tx_4_sigs[5] = \<const0> ;
  assign pipe_tx_4_sigs[4] = \<const0> ;
  assign pipe_tx_4_sigs[3] = \<const0> ;
  assign pipe_tx_4_sigs[2] = \<const0> ;
  assign pipe_tx_4_sigs[1] = \<const0> ;
  assign pipe_tx_4_sigs[0] = \<const0> ;
  assign pipe_tx_5_sigs[24] = \<const0> ;
  assign pipe_tx_5_sigs[23] = \<const0> ;
  assign pipe_tx_5_sigs[22] = \<const0> ;
  assign pipe_tx_5_sigs[21] = \<const0> ;
  assign pipe_tx_5_sigs[20] = \<const0> ;
  assign pipe_tx_5_sigs[19] = \<const0> ;
  assign pipe_tx_5_sigs[18] = \<const0> ;
  assign pipe_tx_5_sigs[17] = \<const0> ;
  assign pipe_tx_5_sigs[16] = \<const0> ;
  assign pipe_tx_5_sigs[15] = \<const0> ;
  assign pipe_tx_5_sigs[14] = \<const0> ;
  assign pipe_tx_5_sigs[13] = \<const0> ;
  assign pipe_tx_5_sigs[12] = \<const0> ;
  assign pipe_tx_5_sigs[11] = \<const0> ;
  assign pipe_tx_5_sigs[10] = \<const0> ;
  assign pipe_tx_5_sigs[9] = \<const0> ;
  assign pipe_tx_5_sigs[8] = \<const0> ;
  assign pipe_tx_5_sigs[7] = \<const0> ;
  assign pipe_tx_5_sigs[6] = \<const0> ;
  assign pipe_tx_5_sigs[5] = \<const0> ;
  assign pipe_tx_5_sigs[4] = \<const0> ;
  assign pipe_tx_5_sigs[3] = \<const0> ;
  assign pipe_tx_5_sigs[2] = \<const0> ;
  assign pipe_tx_5_sigs[1] = \<const0> ;
  assign pipe_tx_5_sigs[0] = \<const0> ;
  assign pipe_tx_6_sigs[24] = \<const0> ;
  assign pipe_tx_6_sigs[23] = \<const0> ;
  assign pipe_tx_6_sigs[22] = \<const0> ;
  assign pipe_tx_6_sigs[21] = \<const0> ;
  assign pipe_tx_6_sigs[20] = \<const0> ;
  assign pipe_tx_6_sigs[19] = \<const0> ;
  assign pipe_tx_6_sigs[18] = \<const0> ;
  assign pipe_tx_6_sigs[17] = \<const0> ;
  assign pipe_tx_6_sigs[16] = \<const0> ;
  assign pipe_tx_6_sigs[15] = \<const0> ;
  assign pipe_tx_6_sigs[14] = \<const0> ;
  assign pipe_tx_6_sigs[13] = \<const0> ;
  assign pipe_tx_6_sigs[12] = \<const0> ;
  assign pipe_tx_6_sigs[11] = \<const0> ;
  assign pipe_tx_6_sigs[10] = \<const0> ;
  assign pipe_tx_6_sigs[9] = \<const0> ;
  assign pipe_tx_6_sigs[8] = \<const0> ;
  assign pipe_tx_6_sigs[7] = \<const0> ;
  assign pipe_tx_6_sigs[6] = \<const0> ;
  assign pipe_tx_6_sigs[5] = \<const0> ;
  assign pipe_tx_6_sigs[4] = \<const0> ;
  assign pipe_tx_6_sigs[3] = \<const0> ;
  assign pipe_tx_6_sigs[2] = \<const0> ;
  assign pipe_tx_6_sigs[1] = \<const0> ;
  assign pipe_tx_6_sigs[0] = \<const0> ;
  assign pipe_tx_7_sigs[24] = \<const0> ;
  assign pipe_tx_7_sigs[23] = \<const0> ;
  assign pipe_tx_7_sigs[22] = \<const0> ;
  assign pipe_tx_7_sigs[21] = \<const0> ;
  assign pipe_tx_7_sigs[20] = \<const0> ;
  assign pipe_tx_7_sigs[19] = \<const0> ;
  assign pipe_tx_7_sigs[18] = \<const0> ;
  assign pipe_tx_7_sigs[17] = \<const0> ;
  assign pipe_tx_7_sigs[16] = \<const0> ;
  assign pipe_tx_7_sigs[15] = \<const0> ;
  assign pipe_tx_7_sigs[14] = \<const0> ;
  assign pipe_tx_7_sigs[13] = \<const0> ;
  assign pipe_tx_7_sigs[12] = \<const0> ;
  assign pipe_tx_7_sigs[11] = \<const0> ;
  assign pipe_tx_7_sigs[10] = \<const0> ;
  assign pipe_tx_7_sigs[9] = \<const0> ;
  assign pipe_tx_7_sigs[8] = \<const0> ;
  assign pipe_tx_7_sigs[7] = \<const0> ;
  assign pipe_tx_7_sigs[6] = \<const0> ;
  assign pipe_tx_7_sigs[5] = \<const0> ;
  assign pipe_tx_7_sigs[4] = \<const0> ;
  assign pipe_tx_7_sigs[3] = \<const0> ;
  assign pipe_tx_7_sigs[2] = \<const0> ;
  assign pipe_tx_7_sigs[1] = \<const0> ;
  assign pipe_tx_7_sigs[0] = \<const0> ;
  assign qpll_drp_clk[1] = \<const0> ;
  assign qpll_drp_clk[0] = \<const0> ;
  assign qpll_drp_gen3[1] = \<const0> ;
  assign qpll_drp_gen3[0] = \<const0> ;
  assign qpll_drp_ovrd[1] = \<const0> ;
  assign qpll_drp_ovrd[0] = \<const0> ;
  assign qpll_drp_rst_n[1] = \<const0> ;
  assign qpll_drp_rst_n[0] = \<const0> ;
  assign qpll_drp_start[1] = \<const0> ;
  assign qpll_drp_start[0] = \<const0> ;
  assign qpll_qplld[1] = \<const0> ;
  assign qpll_qplld[0] = \<const0> ;
  assign qpll_qpllreset[1] = \<const0> ;
  assign qpll_qpllreset[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_ctl_awready = s_axi_ctl_wready;
  assign s_axi_ctl_bresp[1] = \<const0> ;
  assign s_axi_ctl_bresp[0] = \<const0> ;
  assign s_axi_ctl_rresp[1] = \<const0> ;
  assign s_axi_ctl_rresp[0] = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  GND GND
       (.G(\<const0> ));
  FDRE INTX_state_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_425),
        .Q(INTX_state),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  VCC VCC
       (.P(\<const1> ));
  overlay1_axi_pcie_0_0_axi_enhanced_pcie comp_axi_enhanced_pcie
       (.CLK(int_dclk_out),
        .D(comp_axi_enhanced_pcie_n_160),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (comp_axi_enhanced_pcie_n_158),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (comp_axi_enhanced_pcie_n_162),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (comp_axi_pcie_mm_s_n_191),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ({comp_axi_pcie_mm_s_n_2,comp_axi_pcie_mm_s_n_3,comp_axi_pcie_mm_s_n_4}),
        .INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .INTX_state(INTX_state),
        .INTX_state_reg(comp_axi_enhanced_pcie_n_425),
        .INTX_state_reg_0(p_0_in),
        .\IP2Bus_Data_reg[31] (sig_IP2Bus_Data),
        .IP2Bus_RdAck_reg(comp_axi_enhanced_pcie_n_92),
        .IP2Bus_WrAck_reg(comp_axi_enhanced_pcie_n_90),
        .MSI_Vector_Width(MSI_Vector_Width),
        .O({comp_axi_pcie_mm_s_n_115,comp_axi_pcie_mm_s_n_116,comp_axi_pcie_mm_s_n_117,comp_axi_pcie_mm_s_n_118}),
        .Q(sig_s_axis_cw_tdata),
        .R({comp_axi_pcie_mm_s_n_56,comp_axi_pcie_mm_s_n_57,comp_axi_pcie_mm_s_n_58,comp_axi_pcie_mm_s_n_59,\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/R ,comp_axi_pcie_mm_s_n_61,comp_axi_pcie_mm_s_n_62}),
        .REFCLK(REFCLK),
        .UNCONN_IN({1'b0,rate_in_reg1_reg0}),
        .UNCONN_IN_0({1'b0,rate_in_reg1_reg0}),
        .almost_fullsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/almost_fullsig ),
        .axi_aresetn(axi_aresetn),
        .badreadreq(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/badreadreq ),
        .blk_lnk_up_latch(\comp_AXI_MM_S_MasterBridge/blk_lnk_up_latch ),
        .cfg_dev_control_max_payload(sig_blk_dcontrol),
        .cfg_interrupt_di({sig_blk_interrupt_di[7],sig_blk_interrupt_di[4:0]}),
        .cfg_interrupt_msienable(MSI_enable),
        .clk_pclk_sel(clk_pclk_sel),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .cpldsplitcount0_out(comp_axi_enhanced_pcie_n_407),
        .\cpldsplitsm_reg[1] ({comp_axi_pcie_mm_s_n_47,comp_axi_pcie_mm_s_n_48}),
        .cr_full(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/rx_inst/rx_demux_inst/cr_full ),
        .\ctargetpipeline_reg[1] (comp_axi_pcie_mm_s_n_262),
        .\ctargetpipeline_reg[1]_0 (comp_axi_pcie_mm_s_n_261),
        .\ctargetpipeline_reg[1]_1 (comp_axi_pcie_mm_s_n_258),
        .\ctargetpipeline_reg[1]_2 (comp_axi_pcie_mm_s_n_260),
        .\ctargetpipeline_reg[1]_3 (comp_axi_pcie_mm_s_n_259),
        .\ctargetpipeline_reg[1]_4 (comp_axi_pcie_mm_s_n_257),
        .\ctargetpipeline_reg[1]_5 (comp_axi_pcie_mm_s_n_55),
        .\ctlpbytecount_reg[1,0][11] ({\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlpbytecount[1,0] [11:4],\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlpbytecount[1,0] [1:0]}),
        .\ctlplength[0,1] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,1] ),
        .\ctlplength[0,2] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,2] ),
        .\ctlplength[0,3] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,3] ),
        .\ctlplength_reg[1,3][8] ({comp_axi_enhanced_pcie_n_294,\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[1,3] }),
        .\ctlplength_reg[2,0][0] (comp_axi_enhanced_pcie_n_279),
        .\ctlplength_reg[2,0][9] (comp_axi_enhanced_pcie_n_406),
        .\ctlplength_reg[2,1][9] (comp_axi_enhanced_pcie_n_405),
        .\ctlplength_reg[2,2][9] (comp_axi_enhanced_pcie_n_404),
        .\ctlplength_reg[2,3][9] (comp_axi_enhanced_pcie_n_403),
        .cw_full(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/rx_inst/rx_demux_inst/cw_full ),
        .\data_width_64.badreadreq_reg (comp_axi_enhanced_pcie_n_409),
        .\data_width_64.badreadreq_reg_0 (comp_axi_pcie_mm_s_n_37),
        .\data_width_64.badreadreq_reg_1 (comp_axi_pcie_mm_s_n_9),
        .\data_width_64.cplndtlpsmsig_reg[1] (comp_axi_pcie_mm_s_n_38),
        .\data_width_64.dataen_reg (comp_axi_enhanced_pcie_n_333),
        .\data_width_64.dataen_reg_0 (comp_axi_enhanced_pcie_n_400),
        .\data_width_64.dataoffset_reg (comp_axi_enhanced_pcie_n_418),
        .\data_width_64.dataoffset_reg_0 (comp_axi_pcie_mm_s_n_21),
        .\data_width_64.delaylast_reg (comp_axi_enhanced_pcie_n_338),
        .\data_width_64.lastdwbesig_reg[0] (comp_axi_enhanced_pcie_n_413),
        .\data_width_64.lnkdowndataflush_reg (comp_axi_pcie_mm_s_n_11),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] ({comp_axi_enhanced_pcie_n_255,comp_axi_enhanced_pcie_n_256,comp_axi_enhanced_pcie_n_257,comp_axi_enhanced_pcie_n_258,comp_axi_enhanced_pcie_n_259,comp_axi_enhanced_pcie_n_260,comp_axi_enhanced_pcie_n_261,comp_axi_enhanced_pcie_n_262,comp_axi_enhanced_pcie_n_263,comp_axi_enhanced_pcie_n_264,comp_axi_enhanced_pcie_n_265,comp_axi_enhanced_pcie_n_266,comp_axi_enhanced_pcie_n_267,comp_axi_enhanced_pcie_n_268,comp_axi_enhanced_pcie_n_269,comp_axi_enhanced_pcie_n_270}),
        .\data_width_64.m_axis_cc_tlast_d_reg (comp_axi_pcie_mm_s_n_190),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (comp_axi_pcie_mm_s_n_14),
        .\data_width_64.m_axis_cc_tlast_nd_reg (comp_axi_pcie_mm_s_n_7),
        .\data_width_64.m_axis_cc_tvalid_d_reg (comp_axi_pcie_mm_s_n_12),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (comp_axi_pcie_mm_s_n_6),
        .\data_width_64.master_int_reg (comp_axi_enhanced_pcie_n_163),
        .\data_width_64.master_int_reg_0 (interrupt_vector),
        .\data_width_64.rdndreqpipelinedecr_reg (comp_axi_enhanced_pcie_n_402),
        .\data_width_64.rdndtlpaddrlow_reg[0] (comp_axi_enhanced_pcie_n_249),
        .\data_width_64.rdndtlpaddrlow_reg[6] ({comp_axi_enhanced_pcie_n_274,comp_axi_enhanced_pcie_n_275,comp_axi_enhanced_pcie_n_276,comp_axi_enhanced_pcie_n_277,comp_axi_enhanced_pcie_n_278}),
        .\data_width_64.rdreqpipelinedecr_reg (comp_axi_enhanced_pcie_n_401),
        .\data_width_64.rdreqpipelineincr_reg (comp_axi_enhanced_pcie_n_248),
        .\data_width_64.rdreqsmsig_reg[0] (comp_axi_enhanced_pcie_n_189),
        .\data_width_64.rdreqsmsig_reg[0]_0 (comp_axi_pcie_mm_s_n_35),
        .\data_width_64.rdreqsmsig_reg[2] (comp_axi_pcie_mm_s_n_36),
        .\data_width_64.requesteridsig_reg[15] ({sig_s_axis_cr_tdata[63:32],sig_s_axis_cr_tdata[29],sig_s_axis_cr_tdata[22:0]}),
        .\data_width_64.rresp_reg[3][1] (comp_axi_pcie_mm_s_n_41),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] ({sig_s_axis_cr_tuser[6],sig_s_axis_cr_tuser[4],sig_s_axis_cr_tuser[2]}),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] ({comp_axi_enhanced_pcie_n_344,comp_axi_enhanced_pcie_n_345,comp_axi_enhanced_pcie_n_346,comp_axi_enhanced_pcie_n_347,comp_axi_enhanced_pcie_n_348,comp_axi_enhanced_pcie_n_349,comp_axi_enhanced_pcie_n_350,comp_axi_enhanced_pcie_n_351,comp_axi_enhanced_pcie_n_352,comp_axi_enhanced_pcie_n_353,comp_axi_enhanced_pcie_n_354,comp_axi_enhanced_pcie_n_355,comp_axi_enhanced_pcie_n_356,comp_axi_enhanced_pcie_n_357,comp_axi_enhanced_pcie_n_358,comp_axi_enhanced_pcie_n_359,comp_axi_enhanced_pcie_n_360,comp_axi_enhanced_pcie_n_361,comp_axi_enhanced_pcie_n_362,comp_axi_enhanced_pcie_n_363,comp_axi_enhanced_pcie_n_364,comp_axi_enhanced_pcie_n_365,comp_axi_enhanced_pcie_n_366,comp_axi_enhanced_pcie_n_367,comp_axi_enhanced_pcie_n_368,comp_axi_enhanced_pcie_n_369,comp_axi_enhanced_pcie_n_370,comp_axi_enhanced_pcie_n_371,comp_axi_enhanced_pcie_n_372,comp_axi_enhanced_pcie_n_373,comp_axi_enhanced_pcie_n_374,comp_axi_enhanced_pcie_n_375}),
        .\data_width_64.s_axis_cw_tlasttemp_reg (comp_axi_enhanced_pcie_n_332),
        .\data_width_64.s_axis_cw_treadysig_reg (comp_axi_pcie_mm_s_n_19),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (comp_axi_pcie_mm_s_n_264),
        .\data_width_64.tagsig_reg[0] (comp_axi_enhanced_pcie_n_408),
        .\data_width_64.tempdatareg_reg[0] (comp_axi_enhanced_pcie_n_336),
        .\data_width_64.tlpaddrl_reg[22] ({comp_axi_enhanced_pcie_n_166,comp_axi_enhanced_pcie_n_167,comp_axi_enhanced_pcie_n_168,comp_axi_enhanced_pcie_n_169,comp_axi_enhanced_pcie_n_170,comp_axi_enhanced_pcie_n_171,comp_axi_enhanced_pcie_n_172,comp_axi_enhanced_pcie_n_173,comp_axi_enhanced_pcie_n_174,comp_axi_enhanced_pcie_n_175,comp_axi_enhanced_pcie_n_176,comp_axi_enhanced_pcie_n_177,comp_axi_enhanced_pcie_n_178,comp_axi_enhanced_pcie_n_179,comp_axi_enhanced_pcie_n_180,comp_axi_enhanced_pcie_n_181,comp_axi_enhanced_pcie_n_182,comp_axi_enhanced_pcie_n_183,comp_axi_enhanced_pcie_n_184,comp_axi_enhanced_pcie_n_185,comp_axi_enhanced_pcie_n_186,comp_axi_enhanced_pcie_n_187,comp_axi_enhanced_pcie_n_188}),
        .\data_width_64.tlpaddrlow_reg[22] ({comp_axi_enhanced_pcie_n_301,comp_axi_enhanced_pcie_n_302,comp_axi_enhanced_pcie_n_303,comp_axi_enhanced_pcie_n_304,comp_axi_enhanced_pcie_n_305,comp_axi_enhanced_pcie_n_306,comp_axi_enhanced_pcie_n_307,comp_axi_enhanced_pcie_n_308,comp_axi_enhanced_pcie_n_309,comp_axi_enhanced_pcie_n_310,comp_axi_enhanced_pcie_n_311,comp_axi_enhanced_pcie_n_312,comp_axi_enhanced_pcie_n_313,comp_axi_enhanced_pcie_n_314,comp_axi_enhanced_pcie_n_315,comp_axi_enhanced_pcie_n_316,comp_axi_enhanced_pcie_n_317,comp_axi_enhanced_pcie_n_318,comp_axi_enhanced_pcie_n_319,comp_axi_enhanced_pcie_n_320,comp_axi_enhanced_pcie_n_321}),
        .\data_width_64.tlpbytecount_reg[0][0] (comp_axi_enhanced_pcie_n_247),
        .\data_width_64.tlpcompleterid_reg[2][15] (sig_blk_bus_number),
        .\data_width_64.tlpcompleterid_reg[2][2] (sig_blk_function_number),
        .\data_width_64.tlpcompleterid_reg[2][7] (sig_blk_device_number),
        .\data_width_64.tlplength_reg[3][4] (comp_axi_pcie_mm_s_n_74),
        .\data_width_64.tlplength_reg[3][6] ({comp_axi_pcie_mm_s_n_109,comp_axi_pcie_mm_s_n_110,comp_axi_pcie_mm_s_n_111,comp_axi_pcie_mm_s_n_112}),
        .\data_width_64.tlplength_reg[3][6]_0 ({comp_axi_pcie_mm_s_n_103,comp_axi_pcie_mm_s_n_104,comp_axi_pcie_mm_s_n_105,comp_axi_pcie_mm_s_n_106}),
        .\data_width_64.tlplength_reg[3][6]_1 ({comp_axi_pcie_mm_s_n_97,comp_axi_pcie_mm_s_n_98,comp_axi_pcie_mm_s_n_99,comp_axi_pcie_mm_s_n_100}),
        .\data_width_64.tlplength_reg[3][7] ({comp_axi_pcie_mm_s_n_119,comp_axi_pcie_mm_s_n_120}),
        .\data_width_64.tlplength_reg[3][7]_0 ({comp_axi_pcie_mm_s_n_113,comp_axi_pcie_mm_s_n_114}),
        .\data_width_64.tlplength_reg[3][7]_1 ({comp_axi_pcie_mm_s_n_107,comp_axi_pcie_mm_s_n_108}),
        .\data_width_64.tlplength_reg[3][7]_2 ({comp_axi_pcie_mm_s_n_101,comp_axi_pcie_mm_s_n_102}),
        .\data_width_64.tlplengthcntr_reg[0] (comp_axi_enhanced_pcie_n_253),
        .\data_width_64.tlplengthsig_reg[0] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/tlplengthsig ),
        .\data_width_64.tlprequesterid_reg[2][0] (comp_axi_pcie_mm_s_n_85),
        .\data_width_64.tlprequesterid_reg[2][10] (comp_axi_pcie_mm_s_n_92),
        .\data_width_64.tlprequesterid_reg[2][11] (comp_axi_pcie_mm_s_n_93),
        .\data_width_64.tlprequesterid_reg[2][12] (comp_axi_pcie_mm_s_n_94),
        .\data_width_64.tlprequesterid_reg[2][13] (comp_axi_pcie_mm_s_n_95),
        .\data_width_64.tlprequesterid_reg[2][15] (comp_axi_pcie_mm_s_n_96),
        .\data_width_64.tlprequesterid_reg[2][1] (comp_axi_pcie_mm_s_n_86),
        .\data_width_64.tlprequesterid_reg[2][2] (comp_axi_pcie_mm_s_n_87),
        .\data_width_64.tlprequesterid_reg[2][3] (comp_axi_pcie_mm_s_n_88),
        .\data_width_64.tlprequesterid_reg[2][7] (comp_axi_pcie_mm_s_n_89),
        .\data_width_64.tlprequesterid_reg[2][8] (comp_axi_pcie_mm_s_n_90),
        .\data_width_64.tlprequesterid_reg[2][9] (comp_axi_pcie_mm_s_n_91),
        .\data_width_64.tlptag_reg[2][2] (comp_axi_pcie_mm_s_n_81),
        .\data_width_64.tlptag_reg[2][3] (comp_axi_pcie_mm_s_n_82),
        .\data_width_64.tlptag_reg[2][6] (comp_axi_pcie_mm_s_n_83),
        .\data_width_64.tlptag_reg[2][7] (comp_axi_pcie_mm_s_n_84),
        .\data_width_64.wrreqpendsig_reg[0] (comp_axi_enhanced_pcie_n_164),
        .\data_width_64.zerolenreadreq_reg (comp_axi_pcie_mm_s_n_10),
        .delaylast40_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/delaylast40_out ),
        .empty_fwft_i_reg(comp_axi_pcie_mm_s_n_40),
        .\end_point.psr_reg[2] (comp_axi_pcie_mm_s_n_189),
        .\end_point.psr_reg[2]_0 (comp_axi_pcie_mm_s_n_123),
        .\end_point.psr_reg[2]_1 ({\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in [63:45],comp_axi_pcie_mm_s_n_143,\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in [43:8],comp_axi_pcie_mm_s_n_180,\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in [6:0]}),
        .eqOp(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/eqOp ),
        .eqOp56_in(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp56_in ),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .\goreg_bm.dout_i_reg[63] (comp_axi_enhanced_pcie_n_254),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .in0(rate_in_reg1_reg0),
        .int_oobclk_out(int_oobclk_out),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .int_qplllock_out(\^int_qplllock_out ),
        .int_qplloutclk_out(\^int_qplloutclk_out ),
        .int_qplloutrefclk_out(\^int_qplloutrefclk_out ),
        .int_userclk1_out(int_userclk1_out),
        .interrupt_out(interrupt_out),
        .intx_msi_request_2d(intx_msi_request_2d),
        .intx_msi_request_3d(intx_msi_request_3d),
        .legint_msiSM_reg(comp_axi_enhanced_pcie_n_393),
        .legint_msiSM_reg_0(comp_axi_enhanced_pcie_n_428),
        .\length_offset_reg[10] (comp_axi_pcie_mm_s_n_76),
        .\length_offset_reg[10]_0 (comp_axi_pcie_mm_s_n_78),
        .\length_offset_reg[10]_1 (comp_axi_pcie_mm_s_n_73),
        .\length_offset_reg[11] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/length_offset ),
        .\length_offset_reg[11]_0 (comp_axi_pcie_mm_s_n_75),
        .\length_offset_reg[11]_1 (comp_axi_pcie_mm_s_n_77),
        .\length_offset_reg[11]_2 ({comp_axi_pcie_mm_s_n_70,comp_axi_pcie_mm_s_n_71,comp_axi_pcie_mm_s_n_72}),
        .\length_offset_reg[6] (comp_axi_pcie_mm_s_n_80),
        .\length_offset_reg[8] (comp_axi_pcie_mm_s_n_79),
        .m_axis_cc_tdata1(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/m_axis_cc_tdata1 ),
        .m_axis_cc_tvalid_d50_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/m_axis_cc_tvalid_d50_out ),
        .mmcm_lock(mmcm_lock),
        .\msi_vector_num_2d_reg[4] (msi_vector_num_2d),
        .neqOp(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/neqOp ),
        .neqOp7_in(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/neqOp7_in ),
        .neqOp_0(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/neqOp ),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.rx_np_okSM[1]_i_3_n_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0] (comp_axi_enhanced_pcie_n_436),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_ok_cntr[3]_i_3_n_0 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (comp_axi_enhanced_pcie_n_437),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg_n_0_[1] ),
        .\np_ok_mode.rx_np_ok_int_reg (comp_axi_enhanced_pcie_n_427),
        .out(comp_axi_pcie_mm_s_n_0),
        .out0(pipe_sync_fsm_tx),
        .p_0_in(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/tx_arbiter/p_0_in ),
        .p_0_in0_in(\comp_AXI_MM_S_MasterBridge/p_0_in0_in ),
        .p_0_in1_in({\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_0_in1_in [7],\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_0_in1_in [5]}),
        .p_0_in1_in_1(\comp_AXI_MM_S_MasterBridge/p_0_in1_in ),
        .p_1_in(\comp_AXI_MM_S_MasterBridge/p_1_in ),
        .p_1_in2_in(\comp_AXI_MM_S_MasterBridge/p_1_in2_in ),
        .p_1_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/p_1_out ),
        .p_3_in({comp_axi_enhanced_pcie_n_289,comp_axi_enhanced_pcie_n_290,comp_axi_enhanced_pcie_n_291,comp_axi_enhanced_pcie_n_292}),
        .p_49_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/p_49_out ),
        .p_6_in(p_6_in),
        .p_76_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_76_out ),
        .padzeroes11_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/padzeroes11_out ),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pipe_dmonitorout(pipe_dmonitorout),
        .\pipe_drp_fsm[2] (\^pipe_drp_fsm ),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_qrst_fsm(\^pipe_qrst_fsm [3:1]),
        .\pipe_qrst_fsm[0] (\^pipe_qrst_fsm [0]),
        .pipe_qrst_idle(pipe_qrst_idle),
        .\pipe_rate_fsm[3] (\^pipe_rate_fsm ),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(\^pipe_rst_fsm ),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(\^pipe_rxdisperr ),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(\^pipe_rxnotintable ),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (comp_axi_pcie_mm_s_n_64),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (comp_axi_pcie_mm_s_n_65),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (comp_axi_pcie_mm_s_n_66),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (comp_axi_pcie_mm_s_n_67),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 (comp_axi_pcie_mm_s_n_68),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 (comp_axi_pcie_mm_s_n_69),
        .pipe_sync_fsm_rx(\^pipe_sync_fsm_rx ),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .\rd_req_32_64.rdndreqpipeline_reg[0] (comp_axi_enhanced_pcie_n_252),
        .request_completed(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/tx_arbiter/request_completed ),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axi_ctl_araddr(s_axi_ctl_araddr[11:0]),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr[11:0]),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axis_cr_tready_sig106_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/s_axis_cr_tready_sig106_out ),
        .s_axis_cw_treadysig34_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig34_out ),
        .s_axis_cw_treadysig45_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig45_out ),
        .\s_axis_cw_tusersig_reg[2] ({sig_s_axis_cw_tuser[6],sig_s_axis_cw_tuser[4],sig_s_axis_cw_tuser[2]}),
        .s_axis_tx_tready(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/s_axis_tx_tready ),
        .sig_Bus2IP_CS(sig_Bus2IP_CS),
        .sig_Bus2IP_RNW(sig_Bus2IP_RNW),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sig_blk_interrupt(sig_blk_interrupt),
        .sig_blk_interrupt_assert(sig_blk_interrupt_assert),
        .sig_blk_interrupt_assert_reg(comp_axi_enhanced_pcie_n_424),
        .\sig_blk_interrupt_di_reg[0] (comp_axi_enhanced_pcie_n_399),
        .\sig_blk_interrupt_di_reg[1] (comp_axi_enhanced_pcie_n_398),
        .\sig_blk_interrupt_di_reg[2] (comp_axi_enhanced_pcie_n_397),
        .\sig_blk_interrupt_di_reg[3] (comp_axi_enhanced_pcie_n_396),
        .\sig_blk_interrupt_di_reg[4] (comp_axi_enhanced_pcie_n_395),
        .\sig_blk_interrupt_di_reg[7] (comp_axi_enhanced_pcie_n_392),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .\sig_bus2ip_ce_reg_reg[3] (comp_axi_enhanced_pcie_n_419),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/cfg_inst/s_axi_ctl_awaddr_ipic_bridge ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/cfg_inst/s_axi_ctl_araddr_ipic_bridge ),
        .sig_intx_msi_grant_reg(comp_axi_enhanced_pcie_n_426),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .\sig_register_bar_array_reg[1][31] (sig_Bus2IP_Data),
        .sig_s_axis_cr_tlast(sig_s_axis_cr_tlast),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tlast(sig_s_axis_cw_tlast),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .tlpfmtsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/tlpfmtsig ),
        .tlprequesterid(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/tlprequesterid ),
        .treadydataenadjustsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/treadydataenadjustsig ),
        .trn_rnp_ok(rx_np_ok_int),
        .user_lnk_up_mux_reg(comp_axi_pcie_mm_s_n_33),
        .\wrreqsetcnt_reg[2] (comp_axi_pcie_mm_s_n_192),
        .wrreqsetsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/wrreqsetsig ));
  overlay1_axi_pcie_0_0_axi_pcie_mm_s comp_axi_pcie_mm_s
       (.D(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/length_offset ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (comp_axi_pcie_mm_s_n_33),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 (comp_axi_pcie_mm_s_n_191),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 (comp_axi_pcie_mm_s_n_192),
        .\FSM_sequential_register_state_reg[0] (comp_axi_enhanced_pcie_n_90),
        .\FSM_sequential_register_state_reg[0]_0 (comp_axi_enhanced_pcie_n_92),
        .O({comp_axi_pcie_mm_s_n_115,comp_axi_pcie_mm_s_n_116,comp_axi_pcie_mm_s_n_117,comp_axi_pcie_mm_s_n_118}),
        .Q(sig_s_axis_cw_tdata),
        .R({comp_axi_pcie_mm_s_n_56,comp_axi_pcie_mm_s_n_57,comp_axi_pcie_mm_s_n_58,comp_axi_pcie_mm_s_n_59,\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/R ,comp_axi_pcie_mm_s_n_61,comp_axi_pcie_mm_s_n_62}),
        .almost_fullsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/almost_fullsig ),
        .axi_aresetn(axi_aresetn),
        .badreadreq(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/badreadreq ),
        .blk_lnk_up_latch(\comp_AXI_MM_S_MasterBridge/blk_lnk_up_latch ),
        .\cfg_bus_number_d_reg[7] (sig_blk_bus_number),
        .cfg_dev_control_max_payload(sig_blk_dcontrol),
        .\cfg_device_number_d_reg[4] (sig_blk_device_number),
        .\cfg_function_number_d_reg[2] (sig_blk_function_number),
        .cpldsplitcount0_out(comp_axi_enhanced_pcie_n_407),
        .\cpldsplitsm_reg[1] (comp_axi_enhanced_pcie_n_403),
        .\cpldsplitsm_reg[1]_0 (comp_axi_enhanced_pcie_n_405),
        .cr_full(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/rx_inst/rx_demux_inst/cr_full ),
        .\ctargetpipeline_reg[1] (comp_axi_enhanced_pcie_n_404),
        .\ctargetpipeline_reg[1]_0 (comp_axi_enhanced_pcie_n_406),
        .\ctlpbytecount_reg[1,0][11] (comp_axi_pcie_mm_s_n_257),
        .\ctlpbytecount_reg[1,0][4] (comp_axi_pcie_mm_s_n_262),
        .\ctlpbytecount_reg[1,0][5] (comp_axi_pcie_mm_s_n_261),
        .\ctlpbytecount_reg[1,0][7] (comp_axi_pcie_mm_s_n_258),
        .\ctlpbytecount_reg[1,0][8] (comp_axi_pcie_mm_s_n_260),
        .\ctlpbytecount_reg[1,0][9] (comp_axi_pcie_mm_s_n_259),
        .\ctlplength[0,1] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,1] ),
        .\ctlplength[0,2] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,2] ),
        .\ctlplength[0,3] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[0,3] ),
        .\ctlplength_reg[2,0][0] (comp_axi_pcie_mm_s_n_55),
        .\ctlplength_reg[2,0][6] (comp_axi_pcie_mm_s_n_80),
        .\ctlplength_reg[2,0][9] (comp_axi_pcie_mm_s_n_79),
        .cw_full(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/rx_inst/rx_demux_inst/cw_full ),
        .cw_full_reg(comp_axi_enhanced_pcie_n_164),
        .cw_full_reg_0(comp_axi_enhanced_pcie_n_418),
        .\data_width_64.cpldsplitcounttemp_reg[1] (comp_axi_pcie_mm_s_n_75),
        .\data_width_64.cpldsplitcounttemp_reg[1]_0 (comp_axi_pcie_mm_s_n_76),
        .\data_width_64.cpldsplitcounttemp_reg[2] (comp_axi_pcie_mm_s_n_77),
        .\data_width_64.cpldsplitcounttemp_reg[2]_0 (comp_axi_pcie_mm_s_n_78),
        .\data_width_64.cpldsplitcounttemp_reg[3] (comp_axi_pcie_mm_s_n_73),
        .\data_width_64.cpldsplitcounttemp_reg[4] ({comp_axi_pcie_mm_s_n_70,comp_axi_pcie_mm_s_n_71,comp_axi_pcie_mm_s_n_72}),
        .\data_width_64.cpldsplitcounttemp_reg[4]_0 (comp_axi_pcie_mm_s_n_74),
        .\data_width_64.cplndtlpsmsig_reg[1] (comp_axi_enhanced_pcie_n_402),
        .\data_width_64.lnkdowndataflush_reg (comp_axi_pcie_mm_s_n_11),
        .\data_width_64.m_axis_cc_tdata_h_reg[10] (comp_axi_pcie_mm_s_n_81),
        .\data_width_64.m_axis_cc_tdata_h_reg[11] (comp_axi_pcie_mm_s_n_82),
        .\data_width_64.m_axis_cc_tdata_h_reg[14] (comp_axi_pcie_mm_s_n_83),
        .\data_width_64.m_axis_cc_tdata_h_reg[15] (comp_axi_pcie_mm_s_n_84),
        .\data_width_64.m_axis_cc_tdata_h_reg[16] (comp_axi_pcie_mm_s_n_85),
        .\data_width_64.m_axis_cc_tdata_h_reg[17] (comp_axi_pcie_mm_s_n_86),
        .\data_width_64.m_axis_cc_tdata_h_reg[18] (comp_axi_pcie_mm_s_n_87),
        .\data_width_64.m_axis_cc_tdata_h_reg[19] (comp_axi_pcie_mm_s_n_88),
        .\data_width_64.m_axis_cc_tdata_h_reg[23] (comp_axi_pcie_mm_s_n_89),
        .\data_width_64.m_axis_cc_tdata_h_reg[24] (comp_axi_pcie_mm_s_n_90),
        .\data_width_64.m_axis_cc_tdata_h_reg[25] (comp_axi_pcie_mm_s_n_91),
        .\data_width_64.m_axis_cc_tdata_h_reg[26] (comp_axi_pcie_mm_s_n_92),
        .\data_width_64.m_axis_cc_tdata_h_reg[27] (comp_axi_pcie_mm_s_n_93),
        .\data_width_64.m_axis_cc_tdata_h_reg[28] (comp_axi_pcie_mm_s_n_94),
        .\data_width_64.m_axis_cc_tdata_h_reg[29] (comp_axi_pcie_mm_s_n_95),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (comp_axi_pcie_mm_s_n_96),
        .\data_width_64.m_axis_cc_tdata_h_reg[45] (comp_axi_pcie_mm_s_n_41),
        .\data_width_64.m_axis_cc_tdatatemp64_reg[0] (comp_axi_pcie_mm_s_n_40),
        .\data_width_64.m_axis_cc_tvalid_d_reg ({comp_axi_enhanced_pcie_n_255,comp_axi_enhanced_pcie_n_256,comp_axi_enhanced_pcie_n_257,comp_axi_enhanced_pcie_n_258,comp_axi_enhanced_pcie_n_259,comp_axi_enhanced_pcie_n_260,comp_axi_enhanced_pcie_n_261,comp_axi_enhanced_pcie_n_262,comp_axi_enhanced_pcie_n_263,comp_axi_enhanced_pcie_n_264,comp_axi_enhanced_pcie_n_265,comp_axi_enhanced_pcie_n_266,comp_axi_enhanced_pcie_n_267,comp_axi_enhanced_pcie_n_268,comp_axi_enhanced_pcie_n_269,comp_axi_enhanced_pcie_n_270}),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (comp_axi_pcie_mm_s_n_38),
        .\data_width_64.rdndtlpaddrlow_reg[0] (comp_axi_pcie_mm_s_n_37),
        .\data_width_64.s_axis_cw_tdatatemp_reg[33] (comp_axi_pcie_mm_s_n_21),
        .\data_width_64.tagsig_reg[0] (comp_axi_pcie_mm_s_n_35),
        .\data_width_64.tagsig_reg[0]_0 (comp_axi_pcie_mm_s_n_36),
        .\data_width_64.tempdatareg_reg[0] ({comp_axi_pcie_mm_s_n_2,comp_axi_pcie_mm_s_n_3,comp_axi_pcie_mm_s_n_4}),
        .\data_width_64.tlpaddrlow_reg[0] (comp_axi_pcie_mm_s_n_10),
        .\data_width_64.tlplength_reg[3][0] (\length_offset_reg[2]_i_2_n_0 ),
        .\data_width_64.wrpendflush_reg[0][3] (comp_axi_pcie_mm_s_n_9),
        .delaylast40_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/delaylast40_out ),
        .\end_point.ctl_user_intr_d_reg[8] (interrupt_vector),
        .\end_point.psr_reg[2] (comp_axi_enhanced_pcie_n_401),
        .\end_point.psr_reg[2]_0 (comp_axi_enhanced_pcie_n_254),
        .\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] (\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/cfg_inst/s_axi_ctl_araddr_ipic_bridge ),
        .\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] (\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/cfg_inst/s_axi_ctl_awaddr_ipic_bridge ),
        .\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] (comp_axi_enhanced_pcie_n_419),
        .\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] (sig_Bus2IP_Data),
        .eqOp(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/eqOp ),
        .eqOp56_in(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp56_in ),
        .\gaf.gaf0.ram_afull_i_reg (comp_axi_enhanced_pcie_n_338),
        .\gaf.gaf0.ram_afull_i_reg_0 (comp_axi_enhanced_pcie_n_336),
        .\length_offset_reg[10] (comp_axi_pcie_mm_s_n_68),
        .\length_offset_reg[11] (comp_axi_pcie_mm_s_n_69),
        .\length_offset_reg[11]_0 ({comp_axi_pcie_mm_s_n_101,comp_axi_pcie_mm_s_n_102}),
        .\length_offset_reg[11]_1 ({comp_axi_pcie_mm_s_n_107,comp_axi_pcie_mm_s_n_108}),
        .\length_offset_reg[11]_2 ({comp_axi_pcie_mm_s_n_113,comp_axi_pcie_mm_s_n_114}),
        .\length_offset_reg[11]_3 ({comp_axi_pcie_mm_s_n_119,comp_axi_pcie_mm_s_n_120}),
        .\length_offset_reg[2] (comp_axi_pcie_mm_s_n_121),
        .\length_offset_reg[6] ({comp_axi_pcie_mm_s_n_47,comp_axi_pcie_mm_s_n_48}),
        .\length_offset_reg[6]_0 (comp_axi_pcie_mm_s_n_64),
        .\length_offset_reg[7] (comp_axi_pcie_mm_s_n_65),
        .\length_offset_reg[8] (comp_axi_pcie_mm_s_n_66),
        .\length_offset_reg[9] (comp_axi_pcie_mm_s_n_67),
        .\length_offset_reg[9]_0 ({comp_axi_pcie_mm_s_n_97,comp_axi_pcie_mm_s_n_98,comp_axi_pcie_mm_s_n_99,comp_axi_pcie_mm_s_n_100}),
        .\length_offset_reg[9]_1 ({comp_axi_pcie_mm_s_n_103,comp_axi_pcie_mm_s_n_104,comp_axi_pcie_mm_s_n_105,comp_axi_pcie_mm_s_n_106}),
        .\length_offset_reg[9]_2 ({comp_axi_pcie_mm_s_n_109,comp_axi_pcie_mm_s_n_110,comp_axi_pcie_mm_s_n_111,comp_axi_pcie_mm_s_n_112}),
        .\length_offset_reg[9]_3 ({\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_0_in1_in [7],\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_0_in1_in [5]}),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .\m_axi_awsize_reg[1] (\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/tlplengthsig ),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wvalid(m_axi_wvalid),
        .m_axis_cc_tdata1(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/m_axis_cc_tdata1 ),
        .m_axis_cc_tvalid_d50_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/m_axis_cc_tvalid_d50_out ),
        .\m_axis_cr_tdata_reg[22] ({comp_axi_enhanced_pcie_n_301,comp_axi_enhanced_pcie_n_302,comp_axi_enhanced_pcie_n_303,comp_axi_enhanced_pcie_n_304,comp_axi_enhanced_pcie_n_305,comp_axi_enhanced_pcie_n_306,comp_axi_enhanced_pcie_n_307,comp_axi_enhanced_pcie_n_308,comp_axi_enhanced_pcie_n_309,comp_axi_enhanced_pcie_n_310,comp_axi_enhanced_pcie_n_311,comp_axi_enhanced_pcie_n_312,comp_axi_enhanced_pcie_n_313,comp_axi_enhanced_pcie_n_314,comp_axi_enhanced_pcie_n_315,comp_axi_enhanced_pcie_n_316,comp_axi_enhanced_pcie_n_317,comp_axi_enhanced_pcie_n_318,comp_axi_enhanced_pcie_n_319,comp_axi_enhanced_pcie_n_320,comp_axi_enhanced_pcie_n_321}),
        .\m_axis_cr_tdata_reg[30] (comp_axi_enhanced_pcie_n_189),
        .\m_axis_cr_tdata_reg[63] ({sig_s_axis_cr_tdata[63:32],sig_s_axis_cr_tdata[29],sig_s_axis_cr_tdata[22:0]}),
        .\m_axis_cr_tdata_reg[6] ({comp_axi_enhanced_pcie_n_274,comp_axi_enhanced_pcie_n_275,comp_axi_enhanced_pcie_n_276,comp_axi_enhanced_pcie_n_277,comp_axi_enhanced_pcie_n_278}),
        .\m_axis_cr_tuser_reg[3] (comp_axi_enhanced_pcie_n_409),
        .\m_axis_cr_tuser_reg[6] ({sig_s_axis_cr_tuser[6],sig_s_axis_cr_tuser[4],sig_s_axis_cr_tuser[2]}),
        .\m_axis_cw_tdata_reg[14] (comp_axi_enhanced_pcie_n_158),
        .\m_axis_cw_tdata_reg[14]_0 (comp_axi_enhanced_pcie_n_160),
        .\m_axis_cw_tdata_reg[22] ({comp_axi_enhanced_pcie_n_166,comp_axi_enhanced_pcie_n_167,comp_axi_enhanced_pcie_n_168,comp_axi_enhanced_pcie_n_169,comp_axi_enhanced_pcie_n_170,comp_axi_enhanced_pcie_n_171,comp_axi_enhanced_pcie_n_172,comp_axi_enhanced_pcie_n_173,comp_axi_enhanced_pcie_n_174,comp_axi_enhanced_pcie_n_175,comp_axi_enhanced_pcie_n_176,comp_axi_enhanced_pcie_n_177,comp_axi_enhanced_pcie_n_178,comp_axi_enhanced_pcie_n_179,comp_axi_enhanced_pcie_n_180,comp_axi_enhanced_pcie_n_181,comp_axi_enhanced_pcie_n_182,comp_axi_enhanced_pcie_n_183,comp_axi_enhanced_pcie_n_184,comp_axi_enhanced_pcie_n_185,comp_axi_enhanced_pcie_n_186,comp_axi_enhanced_pcie_n_187,comp_axi_enhanced_pcie_n_188}),
        .\m_axis_cw_tdata_reg[29] (comp_axi_enhanced_pcie_n_333),
        .\m_axis_cw_tdata_reg[30] (comp_axi_enhanced_pcie_n_163),
        .\m_axis_cw_tdata_reg[7] ({comp_axi_enhanced_pcie_n_344,comp_axi_enhanced_pcie_n_345,comp_axi_enhanced_pcie_n_346,comp_axi_enhanced_pcie_n_347,comp_axi_enhanced_pcie_n_348,comp_axi_enhanced_pcie_n_349,comp_axi_enhanced_pcie_n_350,comp_axi_enhanced_pcie_n_351,comp_axi_enhanced_pcie_n_352,comp_axi_enhanced_pcie_n_353,comp_axi_enhanced_pcie_n_354,comp_axi_enhanced_pcie_n_355,comp_axi_enhanced_pcie_n_356,comp_axi_enhanced_pcie_n_357,comp_axi_enhanced_pcie_n_358,comp_axi_enhanced_pcie_n_359,comp_axi_enhanced_pcie_n_360,comp_axi_enhanced_pcie_n_361,comp_axi_enhanced_pcie_n_362,comp_axi_enhanced_pcie_n_363,comp_axi_enhanced_pcie_n_364,comp_axi_enhanced_pcie_n_365,comp_axi_enhanced_pcie_n_366,comp_axi_enhanced_pcie_n_367,comp_axi_enhanced_pcie_n_368,comp_axi_enhanced_pcie_n_369,comp_axi_enhanced_pcie_n_370,comp_axi_enhanced_pcie_n_371,comp_axi_enhanced_pcie_n_372,comp_axi_enhanced_pcie_n_373,comp_axi_enhanced_pcie_n_374,comp_axi_enhanced_pcie_n_375}),
        .m_axis_cw_tlast_reg(comp_axi_enhanced_pcie_n_162),
        .m_axis_cw_tlast_reg_0(comp_axi_enhanced_pcie_n_400),
        .\m_axis_cw_tuser_reg[2] (comp_axi_pcie_mm_s_n_264),
        .\m_axis_cw_tuser_reg[6] ({sig_s_axis_cw_tuser[6],sig_s_axis_cw_tuser[4],sig_s_axis_cw_tuser[2]}),
        .neqOp(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/neqOp ),
        .neqOp7_in(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/neqOp7_in ),
        .neqOp_0(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/neqOp ),
        .out(comp_axi_pcie_mm_s_n_0),
        .p_0_in(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/tx_arbiter/p_0_in ),
        .p_0_in0_in(\comp_AXI_MM_S_MasterBridge/p_0_in0_in ),
        .p_0_in1_in(\comp_AXI_MM_S_MasterBridge/p_0_in1_in ),
        .p_1_in(\comp_AXI_MM_S_MasterBridge/p_1_in ),
        .p_1_in2_in(\comp_AXI_MM_S_MasterBridge/p_1_in2_in ),
        .p_1_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/p_1_out ),
        .p_3_in({comp_axi_enhanced_pcie_n_289,comp_axi_enhanced_pcie_n_290,comp_axi_enhanced_pcie_n_291,comp_axi_enhanced_pcie_n_292}),
        .p_49_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/p_49_out ),
        .p_76_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/p_76_out ),
        .padzeroes11_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/padzeroes11_out ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (comp_axi_enhanced_pcie_n_279),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ({\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlpbytecount[1,0] [11:4],\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlpbytecount[1,0] [1:0]}),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ({comp_axi_enhanced_pcie_n_294,\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/ctlplength[1,3] }),
        .rdndreqpipeline(rdndreqpipeline),
        .rdreqpipeline(rdreqpipeline),
        .reg_tready_reg(comp_axi_enhanced_pcie_n_253),
        .request_completed(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/tx_arbiter/request_completed ),
        .\resetovrd.reset_reg[4] (int_userclk1_out),
        .\s_axi_rdata_i_reg[31] (sig_IP2Bus_Data),
        .s_axis_cc_tvalid_q_reg(comp_axi_pcie_mm_s_n_6),
        .s_axis_cc_tvalid_q_reg_0(comp_axi_pcie_mm_s_n_12),
        .s_axis_cr_tready_sig106_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/s_axis_cr_tready_sig106_out ),
        .s_axis_cw_treadysig34_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig34_out ),
        .s_axis_cw_treadysig45_out(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig45_out ),
        .\s_axis_tx_tdata_d_reg[63] ({\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in [63:45],comp_axi_pcie_mm_s_n_143,\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in [43:8],comp_axi_pcie_mm_s_n_180,\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/p_0_in [6:0]}),
        .s_axis_tx_tlast_d_reg(comp_axi_pcie_mm_s_n_7),
        .s_axis_tx_tlast_d_reg_0(comp_axi_pcie_mm_s_n_14),
        .s_axis_tx_tlast_d_reg_1(comp_axi_pcie_mm_s_n_190),
        .s_axis_tx_tready(\comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.pcie_top_i/axi_enhanced_top/tx_inst/s_axis_tx_tready ),
        .\s_axis_tx_tstrb_d_reg[7] (comp_axi_pcie_mm_s_n_123),
        .s_axis_tx_tvalid_d_reg(comp_axi_pcie_mm_s_n_189),
        .sig_Bus2IP_CS(sig_Bus2IP_CS),
        .sig_Bus2IP_RNW(sig_Bus2IP_RNW),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .sig_s_axis_cr_tlast(sig_s_axis_cr_tlast),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tlast(sig_s_axis_cw_tlast),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .sreset(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ),
        .tlpfmtsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/tlpfmtsig ),
        .tlprequesterid(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/tlprequesterid ),
        .treadydataenadjustsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/treadydataenadjustsig ),
        .user_lnk_up_mux_reg(comp_axi_enhanced_pcie_n_332),
        .user_lnk_up_mux_reg_0(comp_axi_enhanced_pcie_n_413),
        .user_lnk_up_mux_reg_1(comp_axi_enhanced_pcie_n_248),
        .user_lnk_up_mux_reg_2(comp_axi_enhanced_pcie_n_247),
        .user_lnk_up_mux_reg_3(comp_axi_enhanced_pcie_n_249),
        .user_lnk_up_mux_reg_4(comp_axi_enhanced_pcie_n_408),
        .user_lnk_up_mux_reg_5(comp_axi_enhanced_pcie_n_252),
        .wrensig_reg(comp_axi_pcie_mm_s_n_19),
        .wrreqsetsig(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/wrreqsetsig ));
  FDRE intx_msi_request_1d_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(INTX_MSI_Request),
        .Q(intx_msi_request_1d),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE intx_msi_request_2d_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(intx_msi_request_1d),
        .Q(intx_msi_request_2d),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE intx_msi_request_3d_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(intx_msi_request_2d),
        .Q(intx_msi_request_3d),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE legint_msiSM_reg
       (.C(int_userclk1_out),
        .CE(comp_axi_enhanced_pcie_n_393),
        .D(comp_axi_enhanced_pcie_n_428),
        .Q(sig_blk_interrupt),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  LUT1 #(
    .INIT(2'h1)) 
    \length_offset_reg[2]_i_2 
       (.I0(comp_axi_pcie_mm_s_n_121),
        .O(\length_offset_reg[2]_i_2_n_0 ));
  FDRE \msi_vector_num_1d_reg[0] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(MSI_Vector_Num[0]),
        .Q(msi_vector_num_1d[0]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_1d_reg[1] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(MSI_Vector_Num[1]),
        .Q(msi_vector_num_1d[1]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_1d_reg[2] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(MSI_Vector_Num[2]),
        .Q(msi_vector_num_1d[2]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_1d_reg[3] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(MSI_Vector_Num[3]),
        .Q(msi_vector_num_1d[3]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_1d_reg[4] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(MSI_Vector_Num[4]),
        .Q(msi_vector_num_1d[4]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_2d_reg[0] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(msi_vector_num_1d[0]),
        .Q(msi_vector_num_2d[0]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_2d_reg[1] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(msi_vector_num_1d[1]),
        .Q(msi_vector_num_2d[1]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_2d_reg[2] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(msi_vector_num_1d[2]),
        .Q(msi_vector_num_2d[2]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_2d_reg[3] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(msi_vector_num_1d[3]),
        .Q(msi_vector_num_2d[3]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \msi_vector_num_2d_reg[4] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(msi_vector_num_1d[4]),
        .Q(msi_vector_num_2d[4]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  (* SOFT_HLUTNM = "soft_lutpair689" *) 
  LUT4 #(
    .INIT(16'h00DF)) 
    \np_ok_mode.pipe_latency_cntr[0]_i_1 
       (.I0(pipe_latency_cntr[2]),
        .I1(pipe_latency_cntr[1]),
        .I2(pipe_latency_cntr[3]),
        .I3(pipe_latency_cntr[0]),
        .O(\np_ok_mode.pipe_latency_cntr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair690" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \np_ok_mode.pipe_latency_cntr[1]_i_1 
       (.I0(pipe_latency_cntr[1]),
        .I1(pipe_latency_cntr[0]),
        .O(\np_ok_mode.pipe_latency_cntr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair689" *) 
  LUT4 #(
    .INIT(16'h3CD0)) 
    \np_ok_mode.pipe_latency_cntr[2]_i_1 
       (.I0(pipe_latency_cntr[3]),
        .I1(pipe_latency_cntr[1]),
        .I2(pipe_latency_cntr[2]),
        .I3(pipe_latency_cntr[0]),
        .O(\np_ok_mode.pipe_latency_cntr[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \np_ok_mode.pipe_latency_cntr[3]_i_1 
       (.I0(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .I1(\np_ok_mode.rx_np_okSM_reg_n_0_[1] ),
        .O(\np_ok_mode.pipe_latency_cntr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair690" *) 
  LUT4 #(
    .INIT(16'h6F80)) 
    \np_ok_mode.pipe_latency_cntr[3]_i_2 
       (.I0(pipe_latency_cntr[0]),
        .I1(pipe_latency_cntr[1]),
        .I2(pipe_latency_cntr[2]),
        .I3(pipe_latency_cntr[3]),
        .O(\np_ok_mode.pipe_latency_cntr[3]_i_2_n_0 ));
  FDRE \np_ok_mode.pipe_latency_cntr_reg[0] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.pipe_latency_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.pipe_latency_cntr[0]_i_1_n_0 ),
        .Q(pipe_latency_cntr[0]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.pipe_latency_cntr_reg[1] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.pipe_latency_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.pipe_latency_cntr[1]_i_1_n_0 ),
        .Q(pipe_latency_cntr[1]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.pipe_latency_cntr_reg[2] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.pipe_latency_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.pipe_latency_cntr[2]_i_1_n_0 ),
        .Q(pipe_latency_cntr[2]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.pipe_latency_cntr_reg[3] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.pipe_latency_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.pipe_latency_cntr[3]_i_2_n_0 ),
        .Q(pipe_latency_cntr[3]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rdndreqpipeline_d_reg[0] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(rdndreqpipeline[0]),
        .Q(rdndreqpipeline_d[0]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rdndreqpipeline_d_reg[1] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(rdndreqpipeline[1]),
        .Q(rdndreqpipeline_d[1]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rdndreqpipeline_d_reg[2] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(rdndreqpipeline[2]),
        .Q(rdndreqpipeline_d[2]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rdreqpipeline_d_reg[0] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(rdreqpipeline[0]),
        .Q(rdreqpipeline_d[0]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rdreqpipeline_d_reg[1] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(rdreqpipeline[1]),
        .Q(rdreqpipeline_d[1]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rdreqpipeline_d_reg[2] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(rdreqpipeline[2]),
        .Q(rdreqpipeline_d[2]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \np_ok_mode.rx_np_okSM[1]_i_3 
       (.I0(pipe_latency_cntr[2]),
        .I1(pipe_latency_cntr[1]),
        .I2(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .I3(pipe_latency_cntr[0]),
        .I4(\np_ok_mode.rx_np_okSM_reg_n_0_[1] ),
        .I5(pipe_latency_cntr[3]),
        .O(\np_ok_mode.rx_np_okSM[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair688" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \np_ok_mode.rx_np_okSM[1]_i_4 
       (.I0(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[3] ),
        .I1(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[2] ),
        .I2(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .I3(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ),
        .O(rx_np_ok_cntr));
  FDRE \np_ok_mode.rx_np_okSM_reg[0] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_436),
        .Q(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rx_np_okSM_reg[1] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_437),
        .Q(\np_ok_mode.rx_np_okSM_reg_n_0_[1] ),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  LUT4 #(
    .INIT(16'h5530)) 
    \np_ok_mode.rx_np_ok_cntr[0]_i_1 
       (.I0(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .I1(p_6_out),
        .I2(p_3_out),
        .I3(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .O(\np_ok_mode.rx_np_ok_cntr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0404040404FF0404)) 
    \np_ok_mode.rx_np_ok_cntr[0]_i_2 
       (.I0(rdndreqpipeline_d[0]),
        .I1(rdndreqpipeline_d[1]),
        .I2(rdndreqpipeline_d[2]),
        .I3(rdreqpipeline_d[0]),
        .I4(rdreqpipeline_d[1]),
        .I5(rdreqpipeline_d[2]),
        .O(p_3_out));
  (* SOFT_HLUTNM = "soft_lutpair687" *) 
  LUT3 #(
    .INIT(8'hD7)) 
    \np_ok_mode.rx_np_ok_cntr[1]_i_1 
       (.I0(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .I1(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .I2(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ),
        .O(\np_ok_mode.rx_np_ok_cntr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair687" *) 
  LUT5 #(
    .INIT(32'hFCAA03AA)) 
    \np_ok_mode.rx_np_ok_cntr[2]_i_1 
       (.I0(p_6_out),
        .I1(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ),
        .I2(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .I3(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .I4(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[2] ),
        .O(\np_ok_mode.rx_np_ok_cntr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h020202020202FF02)) 
    \np_ok_mode.rx_np_ok_cntr[2]_i_2 
       (.I0(rdndreqpipeline_d[0]),
        .I1(rdndreqpipeline_d[1]),
        .I2(rdndreqpipeline_d[2]),
        .I3(rdreqpipeline_d[0]),
        .I4(rdreqpipeline_d[1]),
        .I5(rdreqpipeline_d[2]),
        .O(p_6_out));
  LUT5 #(
    .INIT(32'hAAAAAEAA)) 
    \np_ok_mode.rx_np_ok_cntr[3]_i_1 
       (.I0(\np_ok_mode.rx_np_ok_cntr[3]_i_3_n_0 ),
        .I1(rx_np_okSM),
        .I2(p_6_in),
        .I3(\np_ok_mode.rx_np_okSM_reg_n_0_[1] ),
        .I4(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .O(\np_ok_mode.rx_np_ok_cntr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair688" *) 
  LUT5 #(
    .INIT(32'hFE000100)) 
    \np_ok_mode.rx_np_ok_cntr[3]_i_2 
       (.I0(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .I1(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ),
        .I2(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[2] ),
        .I3(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .I4(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[3] ),
        .O(\np_ok_mode.rx_np_ok_cntr[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888888880)) 
    \np_ok_mode.rx_np_ok_cntr[3]_i_3 
       (.I0(\np_ok_mode.rx_np_okSM_reg_n_0_[0] ),
        .I1(\np_ok_mode.rx_np_okSM_reg_n_0_[1] ),
        .I2(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ),
        .I3(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .I4(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[2] ),
        .I5(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[3] ),
        .O(\np_ok_mode.rx_np_ok_cntr[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h54FF54FF54FF5454)) 
    \np_ok_mode.rx_np_ok_cntr[3]_i_4 
       (.I0(rdreqpipeline_d[2]),
        .I1(rdreqpipeline_d[1]),
        .I2(rdreqpipeline_d[0]),
        .I3(rdndreqpipeline_d[2]),
        .I4(rdndreqpipeline_d[1]),
        .I5(rdndreqpipeline_d[0]),
        .O(rx_np_okSM));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \np_ok_mode.rx_np_ok_cntr[3]_i_5 
       (.I0(rdndreqpipeline_d[2]),
        .I1(rdreqpipeline_d[0]),
        .I2(rdndreqpipeline_d[0]),
        .I3(rdndreqpipeline_d[1]),
        .I4(rdreqpipeline_d[2]),
        .I5(rdreqpipeline_d[1]),
        .O(p_6_in));
  FDRE \np_ok_mode.rx_np_ok_cntr_reg[0] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.rx_np_ok_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.rx_np_ok_cntr[0]_i_1_n_0 ),
        .Q(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[0] ),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rx_np_ok_cntr_reg[1] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.rx_np_ok_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.rx_np_ok_cntr[1]_i_1_n_0 ),
        .Q(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[1] ),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rx_np_ok_cntr_reg[2] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.rx_np_ok_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.rx_np_ok_cntr[2]_i_1_n_0 ),
        .Q(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[2] ),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rx_np_ok_cntr_reg[3] 
       (.C(int_userclk1_out),
        .CE(\np_ok_mode.rx_np_ok_cntr[3]_i_1_n_0 ),
        .D(\np_ok_mode.rx_np_ok_cntr[3]_i_2_n_0 ),
        .Q(\np_ok_mode.rx_np_ok_cntr_reg_n_0_[3] ),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \np_ok_mode.rx_np_ok_int_reg 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_427),
        .Q(rx_np_ok_int),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE sig_blk_interrupt_assert_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_424),
        .Q(sig_blk_interrupt_assert),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \sig_blk_interrupt_di[4]_i_3 
       (.I0(INTX_state),
        .I1(INTX_MSI_Request),
        .O(p_0_in));
  FDRE \sig_blk_interrupt_di_reg[0] 
       (.C(int_userclk1_out),
        .CE(comp_axi_enhanced_pcie_n_393),
        .D(comp_axi_enhanced_pcie_n_399),
        .Q(sig_blk_interrupt_di[0]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \sig_blk_interrupt_di_reg[1] 
       (.C(int_userclk1_out),
        .CE(comp_axi_enhanced_pcie_n_393),
        .D(comp_axi_enhanced_pcie_n_398),
        .Q(sig_blk_interrupt_di[1]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \sig_blk_interrupt_di_reg[2] 
       (.C(int_userclk1_out),
        .CE(comp_axi_enhanced_pcie_n_393),
        .D(comp_axi_enhanced_pcie_n_397),
        .Q(sig_blk_interrupt_di[2]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \sig_blk_interrupt_di_reg[3] 
       (.C(int_userclk1_out),
        .CE(comp_axi_enhanced_pcie_n_393),
        .D(comp_axi_enhanced_pcie_n_396),
        .Q(sig_blk_interrupt_di[3]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \sig_blk_interrupt_di_reg[4] 
       (.C(int_userclk1_out),
        .CE(comp_axi_enhanced_pcie_n_393),
        .D(comp_axi_enhanced_pcie_n_395),
        .Q(sig_blk_interrupt_di[4]),
        .R(\comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_wr/sreset ));
  FDRE \sig_blk_interrupt_di_reg[7] 
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_392),
        .Q(sig_blk_interrupt_di[7]),
        .R(1'b0));
  FDRE sig_intx_msi_grant_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(comp_axi_enhanced_pcie_n_426),
        .Q(INTX_MSI_Grant),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_pcie_mm_s" *) 
module overlay1_axi_pcie_0_0_axi_pcie_mm_s
   (out,
    sreset,
    \data_width_64.tempdatareg_reg[0] ,
    almost_fullsig,
    s_axis_cc_tvalid_q_reg,
    s_axis_tx_tlast_d_reg,
    blk_lnk_up_latch,
    \data_width_64.wrpendflush_reg[0][3] ,
    \data_width_64.tlpaddrlow_reg[0] ,
    \data_width_64.lnkdowndataflush_reg ,
    s_axis_cc_tvalid_q_reg_0,
    sig_s_axis_cr_tready,
    s_axis_tx_tlast_d_reg_0,
    \end_point.ctl_user_intr_d_reg[8] ,
    treadydataenadjustsig,
    wrensig_reg,
    wrreqsetsig,
    \data_width_64.s_axis_cw_tdatatemp_reg[33] ,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_arvalid,
    p_1_in2_in,
    p_0_in1_in,
    p_1_in,
    p_0_in0_in,
    m_axi_rready,
    sig_IP2Bus_WrAck,
    sig_IP2Bus_RdAck,
    neqOp7_in,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \m_axi_awsize_reg[1] ,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.tagsig_reg[0]_0 ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tdatatemp64_reg[0] ,
    \data_width_64.m_axis_cc_tdata_h_reg[45] ,
    sig_m_axis_cc_tvalid,
    sig_m_axis_cc_tlast,
    rdndreqpipeline,
    \length_offset_reg[6] ,
    rdreqpipeline,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctlplength_reg[2,0][0] ,
    R,
    neqOp,
    \length_offset_reg[6]_0 ,
    \length_offset_reg[7] ,
    \length_offset_reg[8] ,
    \length_offset_reg[9] ,
    \length_offset_reg[10] ,
    \length_offset_reg[11] ,
    \data_width_64.cpldsplitcounttemp_reg[4] ,
    \data_width_64.cpldsplitcounttemp_reg[3] ,
    \data_width_64.cpldsplitcounttemp_reg[4]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[1] ,
    \data_width_64.cpldsplitcounttemp_reg[1]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[2] ,
    \data_width_64.cpldsplitcounttemp_reg[2]_0 ,
    \ctlplength_reg[2,0][9] ,
    \ctlplength_reg[2,0][6] ,
    \data_width_64.m_axis_cc_tdata_h_reg[10] ,
    \data_width_64.m_axis_cc_tdata_h_reg[11] ,
    \data_width_64.m_axis_cc_tdata_h_reg[14] ,
    \data_width_64.m_axis_cc_tdata_h_reg[15] ,
    \data_width_64.m_axis_cc_tdata_h_reg[16] ,
    \data_width_64.m_axis_cc_tdata_h_reg[17] ,
    \data_width_64.m_axis_cc_tdata_h_reg[18] ,
    \data_width_64.m_axis_cc_tdata_h_reg[19] ,
    \data_width_64.m_axis_cc_tdata_h_reg[23] ,
    \data_width_64.m_axis_cc_tdata_h_reg[24] ,
    \data_width_64.m_axis_cc_tdata_h_reg[25] ,
    \data_width_64.m_axis_cc_tdata_h_reg[26] ,
    \data_width_64.m_axis_cc_tdata_h_reg[27] ,
    \data_width_64.m_axis_cc_tdata_h_reg[28] ,
    \data_width_64.m_axis_cc_tdata_h_reg[29] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \length_offset_reg[9]_0 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[9]_1 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[9]_2 ,
    \length_offset_reg[11]_2 ,
    O,
    \length_offset_reg[11]_3 ,
    \length_offset_reg[2] ,
    m_axi_wlast,
    \s_axis_tx_tstrb_d_reg[7] ,
    \s_axis_tx_tdata_d_reg[63] ,
    request_completed,
    s_axis_tx_tvalid_d_reg,
    s_axis_tx_tlast_d_reg_1,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ,
    m_axi_wdata,
    \ctlpbytecount_reg[1,0][11] ,
    \ctlpbytecount_reg[1,0][7] ,
    \ctlpbytecount_reg[1,0][9] ,
    \ctlpbytecount_reg[1,0][8] ,
    \ctlpbytecount_reg[1,0][5] ,
    \ctlpbytecount_reg[1,0][4] ,
    m_axi_wvalid,
    \m_axis_cw_tuser_reg[2] ,
    m_axi_awsize,
    m_axi_awprot,
    m_axi_awlen,
    m_axi_arsize,
    m_axi_arprot,
    m_axi_araddr,
    m_axi_arlen,
    \s_axi_rdata_i_reg[31] ,
    m_axi_awaddr,
    m_axi_wstrb,
    \resetovrd.reset_reg[4] ,
    tlpfmtsig,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    sig_blk_lnk_up,
    p_49_out,
    \m_axis_cw_tdata_reg[30] ,
    sig_s_axis_cw_tlast,
    cw_full_reg,
    m_axi_awready,
    m_axi_wready,
    m_axi_bvalid,
    axi_aresetn,
    m_axi_rvalid,
    m_axi_rlast,
    m_axi_arready,
    \FSM_sequential_register_state_reg[0] ,
    \FSM_sequential_register_state_reg[0]_0 ,
    Q,
    \m_axis_cw_tdata_reg[14] ,
    neqOp_0,
    m_axis_cw_tlast_reg,
    cw_full,
    sig_s_axis_cw_tvalid,
    s_axis_cw_treadysig34_out,
    user_lnk_up_mux_reg,
    user_lnk_up_mux_reg_0,
    s_axis_cw_treadysig45_out,
    p_1_out,
    \gaf.gaf0.ram_afull_i_reg ,
    m_axis_cw_tlast_reg_0,
    eqOp,
    \m_axis_cw_tdata_reg[29] ,
    \gaf.gaf0.ram_afull_i_reg_0 ,
    cw_full_reg_0,
    delaylast40_out,
    padzeroes11_out,
    reg_tready_reg,
    s_axis_cr_tready_sig106_out,
    \m_axis_cr_tdata_reg[30] ,
    cr_full,
    sig_s_axis_cr_tlast,
    user_lnk_up_mux_reg_1,
    user_lnk_up_mux_reg_2,
    user_lnk_up_mux_reg_3,
    tlprequesterid,
    sig_m_axis_cc_tready,
    \end_point.psr_reg[2] ,
    p_76_out,
    s_axis_tx_tready,
    \end_point.psr_reg[2]_0 ,
    m_axis_cc_tvalid_d50_out,
    badreadreq,
    eqOp56_in,
    cfg_dev_control_max_payload,
    user_lnk_up_mux_reg_4,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \cfg_bus_number_d_reg[7] ,
    \cfg_device_number_d_reg[4] ,
    \cfg_function_number_d_reg[2] ,
    \m_axis_cr_tdata_reg[63] ,
    D,
    sig_s_axis_cr_tvalid,
    \length_offset_reg[9]_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    p_0_in,
    sig_Bus2IP_RNW,
    sig_Bus2IP_CS,
    \m_axis_cr_tuser_reg[6] ,
    \data_width_64.tlplength_reg[3][0] ,
    \m_axis_cr_tuser_reg[3] ,
    \m_axis_cw_tdata_reg[14]_0 ,
    \m_axis_cw_tdata_reg[7] ,
    m_axi_bresp,
    \m_axis_cw_tuser_reg[6] ,
    \m_axis_cw_tdata_reg[22] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \cpldsplitsm_reg[1] ,
    \ctargetpipeline_reg[1] ,
    \cpldsplitsm_reg[1]_0 ,
    \ctargetpipeline_reg[1]_0 ,
    \m_axis_cr_tdata_reg[22] ,
    \m_axis_cr_tdata_reg[6] ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    user_lnk_up_mux_reg_5,
    m_axi_rresp,
    m_axi_rdata,
    \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ,
    \end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ,
    \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ,
    \end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] ,
    cpldsplitcount0_out,
    p_3_in);
  output [0:0]out;
  output sreset;
  output [2:0]\data_width_64.tempdatareg_reg[0] ;
  output almost_fullsig;
  output s_axis_cc_tvalid_q_reg;
  output s_axis_tx_tlast_d_reg;
  output blk_lnk_up_latch;
  output \data_width_64.wrpendflush_reg[0][3] ;
  output \data_width_64.tlpaddrlow_reg[0] ;
  output \data_width_64.lnkdowndataflush_reg ;
  output s_axis_cc_tvalid_q_reg_0;
  output sig_s_axis_cr_tready;
  output s_axis_tx_tlast_d_reg_0;
  output [2:0]\end_point.ctl_user_intr_d_reg[8] ;
  output treadydataenadjustsig;
  output wrensig_reg;
  output wrreqsetsig;
  output \data_width_64.s_axis_cw_tdatatemp_reg[33] ;
  output m_axi_awvalid;
  output m_axi_bready;
  output m_axi_arvalid;
  output p_1_in2_in;
  output p_0_in1_in;
  output p_1_in;
  output p_0_in0_in;
  output m_axi_rready;
  output sig_IP2Bus_WrAck;
  output sig_IP2Bus_RdAck;
  output neqOp7_in;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output [0:0]\m_axi_awsize_reg[1] ;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.tagsig_reg[0]_0 ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg ;
  output m_axis_cc_tdata1;
  output \data_width_64.m_axis_cc_tdatatemp64_reg[0] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  output sig_m_axis_cc_tvalid;
  output sig_m_axis_cc_tlast;
  output [2:0]rdndreqpipeline;
  output [1:0]\length_offset_reg[6] ;
  output [2:0]rdreqpipeline;
  output \ctlplength[0,3] ;
  output \ctlplength[0,2] ;
  output \ctlplength[0,1] ;
  output \ctlplength_reg[2,0][0] ;
  output [6:0]R;
  output neqOp;
  output \length_offset_reg[6]_0 ;
  output \length_offset_reg[7] ;
  output \length_offset_reg[8] ;
  output \length_offset_reg[9] ;
  output \length_offset_reg[10] ;
  output \length_offset_reg[11] ;
  output [2:0]\data_width_64.cpldsplitcounttemp_reg[4] ;
  output \data_width_64.cpldsplitcounttemp_reg[3] ;
  output \data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[1] ;
  output \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[2] ;
  output \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  output \ctlplength_reg[2,0][9] ;
  output \ctlplength_reg[2,0][6] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[10] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[11] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[14] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[15] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[16] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[17] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[18] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[19] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[23] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[24] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[25] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[26] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[27] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[28] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[29] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output [3:0]\length_offset_reg[9]_0 ;
  output [1:0]\length_offset_reg[11]_0 ;
  output [3:0]\length_offset_reg[9]_1 ;
  output [1:0]\length_offset_reg[11]_1 ;
  output [3:0]\length_offset_reg[9]_2 ;
  output [1:0]\length_offset_reg[11]_2 ;
  output [3:0]O;
  output [1:0]\length_offset_reg[11]_3 ;
  output \length_offset_reg[2] ;
  output m_axi_wlast;
  output \s_axis_tx_tstrb_d_reg[7] ;
  output [63:0]\s_axis_tx_tdata_d_reg[63] ;
  output request_completed;
  output s_axis_tx_tvalid_d_reg;
  output s_axis_tx_tlast_d_reg_1;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  output [63:0]m_axi_wdata;
  output \ctlpbytecount_reg[1,0][11] ;
  output \ctlpbytecount_reg[1,0][7] ;
  output \ctlpbytecount_reg[1,0][9] ;
  output \ctlpbytecount_reg[1,0][8] ;
  output \ctlpbytecount_reg[1,0][5] ;
  output \ctlpbytecount_reg[1,0][4] ;
  output m_axi_wvalid;
  output \m_axis_cw_tuser_reg[2] ;
  output [2:0]m_axi_awsize;
  output [2:0]m_axi_awprot;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_arsize;
  output [2:0]m_axi_arprot;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [31:0]\s_axi_rdata_i_reg[31] ;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_wstrb;
  input \resetovrd.reset_reg[4] ;
  input [0:0]tlpfmtsig;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input sig_blk_lnk_up;
  input p_49_out;
  input \m_axis_cw_tdata_reg[30] ;
  input sig_s_axis_cw_tlast;
  input cw_full_reg;
  input m_axi_awready;
  input m_axi_wready;
  input m_axi_bvalid;
  input axi_aresetn;
  input m_axi_rvalid;
  input m_axi_rlast;
  input m_axi_arready;
  input \FSM_sequential_register_state_reg[0] ;
  input \FSM_sequential_register_state_reg[0]_0 ;
  input [63:0]Q;
  input \m_axis_cw_tdata_reg[14] ;
  input neqOp_0;
  input m_axis_cw_tlast_reg;
  input cw_full;
  input sig_s_axis_cw_tvalid;
  input s_axis_cw_treadysig34_out;
  input user_lnk_up_mux_reg;
  input user_lnk_up_mux_reg_0;
  input s_axis_cw_treadysig45_out;
  input p_1_out;
  input \gaf.gaf0.ram_afull_i_reg ;
  input m_axis_cw_tlast_reg_0;
  input eqOp;
  input \m_axis_cw_tdata_reg[29] ;
  input \gaf.gaf0.ram_afull_i_reg_0 ;
  input cw_full_reg_0;
  input delaylast40_out;
  input padzeroes11_out;
  input reg_tready_reg;
  input s_axis_cr_tready_sig106_out;
  input \m_axis_cr_tdata_reg[30] ;
  input cr_full;
  input sig_s_axis_cr_tlast;
  input user_lnk_up_mux_reg_1;
  input user_lnk_up_mux_reg_2;
  input user_lnk_up_mux_reg_3;
  input tlprequesterid;
  input sig_m_axis_cc_tready;
  input \end_point.psr_reg[2] ;
  input p_76_out;
  input s_axis_tx_tready;
  input \end_point.psr_reg[2]_0 ;
  input m_axis_cc_tvalid_d50_out;
  input badreadreq;
  input eqOp56_in;
  input [2:0]cfg_dev_control_max_payload;
  input user_lnk_up_mux_reg_4;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [7:0]\cfg_bus_number_d_reg[7] ;
  input [4:0]\cfg_device_number_d_reg[4] ;
  input [2:0]\cfg_function_number_d_reg[2] ;
  input [55:0]\m_axis_cr_tdata_reg[63] ;
  input [5:0]D;
  input sig_s_axis_cr_tvalid;
  input [1:0]\length_offset_reg[9]_3 ;
  input [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input p_0_in;
  input sig_Bus2IP_RNW;
  input sig_Bus2IP_CS;
  input [2:0]\m_axis_cr_tuser_reg[6] ;
  input \data_width_64.tlplength_reg[3][0] ;
  input \m_axis_cr_tuser_reg[3] ;
  input [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  input [31:0]\m_axis_cw_tdata_reg[7] ;
  input [1:0]m_axi_bresp;
  input [2:0]\m_axis_cw_tuser_reg[6] ;
  input [22:0]\m_axis_cw_tdata_reg[22] ;
  input [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \cpldsplitsm_reg[1] ;
  input \ctargetpipeline_reg[1] ;
  input \cpldsplitsm_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_0 ;
  input [20:0]\m_axis_cr_tdata_reg[22] ;
  input [4:0]\m_axis_cr_tdata_reg[6] ;
  input [15:0]\data_width_64.m_axis_cc_tvalid_d_reg ;
  input user_lnk_up_mux_reg_5;
  input [1:0]m_axi_rresp;
  input [63:0]m_axi_rdata;
  input \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ;
  input [1:0]\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ;
  input [1:0]\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ;
  input [31:0]\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] ;
  input cpldsplitcount0_out;
  input [3:0]p_3_in;

  wire [5:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  wire \FSM_sequential_register_state_reg[0] ;
  wire \FSM_sequential_register_state_reg[0]_0 ;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire almost_fullsig;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire [7:0]\cfg_bus_number_d_reg[7] ;
  wire [2:0]cfg_dev_control_max_payload;
  wire [4:0]\cfg_device_number_d_reg[4] ;
  wire [2:0]\cfg_function_number_d_reg[2] ;
  wire comp_AXI_MM_S_MasterBridge_n_1;
  wire comp_AXI_MM_S_MasterBridge_n_101;
  wire comp_AXI_MM_S_MasterBridge_n_145;
  wire comp_AXI_MM_S_MasterBridge_n_148;
  wire comp_AXI_MM_S_MasterBridge_n_152;
  wire comp_AXI_MM_S_MasterBridge_n_156;
  wire comp_AXI_MM_S_MasterBridge_n_18;
  wire comp_AXI_MM_S_MasterBridge_n_20;
  wire comp_AXI_MM_S_MasterBridge_n_22;
  wire comp_AXI_MM_S_MasterBridge_n_299;
  wire comp_AXI_MM_S_MasterBridge_n_300;
  wire comp_AXI_MM_S_MasterBridge_n_31;
  wire comp_AXI_MM_S_MasterBridge_n_32;
  wire comp_AXI_MM_S_MasterBridge_n_36;
  wire comp_AXI_MM_S_MasterBridge_n_39;
  wire comp_AXI_MM_S_MasterBridge_n_40;
  wire comp_AXI_MM_S_MasterBridge_n_41;
  wire comp_AXI_MM_S_MasterBridge_n_43;
  wire comp_AXI_MM_S_MasterBridge_n_44;
  wire comp_AXI_MM_S_MasterBridge_n_45;
  wire comp_AXI_MM_S_MasterBridge_n_46;
  wire comp_AXI_MM_S_MasterBridge_n_47;
  wire comp_AXI_MM_S_MasterBridge_n_48;
  wire comp_AXI_MM_S_MasterBridge_n_49;
  wire comp_AXI_MM_S_MasterBridge_n_50;
  wire comp_AXI_MM_S_MasterBridge_n_54;
  wire comp_AXI_MM_S_MasterBridge_n_55;
  wire comp_AXI_MM_S_MasterBridge_n_56;
  wire \comp_axi_mm_s_masterbridge_rd/almost_fullsig ;
  wire \comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/neqOp__0 ;
  wire \comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig010_out__0 ;
  wire \comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig1__2 ;
  wire \comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/single_beat ;
  wire \comp_axi_mm_s_masterbridge_rd/dataensig ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/m_axi_wvalidsig ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp0_out ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wraddrsmsig ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wrrespsmsig ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/addroffset ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/delaylast ;
  wire \comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig ;
  wire \comp_axi_mm_s_masterbridge_wr/dataensig ;
  wire [64:64]\comp_axi_mm_s_masterbridge_wr/dataoutsig ;
  wire \comp_axi_mm_s_masterbridge_wr/emptysig ;
  wire cpldsplitcount0_out;
  wire \cpldsplitsm_reg[1] ;
  wire \cpldsplitsm_reg[1]_0 ;
  wire cr_full;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctlpbytecount_reg[1,0][11] ;
  wire \ctlpbytecount_reg[1,0][4] ;
  wire \ctlpbytecount_reg[1,0][5] ;
  wire \ctlpbytecount_reg[1,0][7] ;
  wire \ctlpbytecount_reg[1,0][8] ;
  wire \ctlpbytecount_reg[1,0][9] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][6] ;
  wire \ctlplength_reg[2,0][9] ;
  wire cw_full;
  wire cw_full_reg;
  wire cw_full_reg_0;
  wire \data_width_64.addroffset_i_1_n_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[1] ;
  wire \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[2] ;
  wire \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[3] ;
  wire [2:0]\data_width_64.cpldsplitcounttemp_reg[4] ;
  wire \data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_i_1__0_n_0 ;
  wire \data_width_64.dataen_i_1_n_0 ;
  wire \data_width_64.dataoffset_i_1_n_0 ;
  wire \data_width_64.delaylast_i_1_n_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire \data_width_64.m_axi_rready_i_1_n_0 ;
  wire \data_width_64.m_axi_wvalidsig_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[10] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[11] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[14] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[15] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[16] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[17] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[18] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[19] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[23] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[24] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[25] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[26] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[27] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[28] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[29] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[45] ;
  wire \data_width_64.m_axis_cc_tdatatemp64_reg[0] ;
  wire [15:0]\data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_i_1_n_0 ;
  wire \data_width_64.padzeroes_i_1_n_0 ;
  wire \data_width_64.rddatasmsig_i_1_n_0 ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[33] ;
  wire \data_width_64.s_axis_cw_tlasttemp_i_1_n_0 ;
  wire \data_width_64.s_axis_cw_treadysig_i_1_n_0 ;
  wire \data_width_64.single_beat_i_1_n_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tagsig_reg[0]_0 ;
  wire [2:0]\data_width_64.tempdatareg_reg[0] ;
  wire \data_width_64.tlpaddrlow_reg[0] ;
  wire \data_width_64.tlplength_reg[3][0] ;
  wire \data_width_64.wrpendflush_reg[0][3] ;
  wire \data_width_64.wrreqsetsig_i_1_n_0 ;
  wire delaylast40_out;
  wire [2:0]\end_point.ctl_user_intr_d_reg[8] ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [1:0]\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ;
  wire [1:0]\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ;
  wire [31:0]\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] ;
  wire eqOp;
  wire eqOp56_in;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[11] ;
  wire [1:0]\length_offset_reg[11]_0 ;
  wire [1:0]\length_offset_reg[11]_1 ;
  wire [1:0]\length_offset_reg[11]_2 ;
  wire [1:0]\length_offset_reg[11]_3 ;
  wire \length_offset_reg[2] ;
  wire [1:0]\length_offset_reg[6] ;
  wire \length_offset_reg[6]_0 ;
  wire \length_offset_reg[7] ;
  wire \length_offset_reg[8] ;
  wire \length_offset_reg[9] ;
  wire [3:0]\length_offset_reg[9]_0 ;
  wire [3:0]\length_offset_reg[9]_1 ;
  wire [3:0]\length_offset_reg[9]_2 ;
  wire [1:0]\length_offset_reg[9]_3 ;
  wire [31:0]m_axi_araddr;
  wire [7:0]m_axi_arlen;
  wire [2:0]m_axi_arprot;
  wire m_axi_arready;
  wire [2:0]m_axi_arsize;
  wire m_axi_arvalid;
  wire [31:0]m_axi_awaddr;
  wire [7:0]m_axi_awlen;
  wire [2:0]m_axi_awprot;
  wire m_axi_awready;
  wire [2:0]m_axi_awsize;
  wire [0:0]\m_axi_awsize_reg[1] ;
  wire m_axi_awvalid;
  wire m_axi_bready;
  wire m_axi_breadysig_i_1_n_0;
  wire [1:0]m_axi_bresp;
  wire m_axi_bvalid;
  wire [63:0]m_axi_rdata;
  wire m_axi_rlast;
  wire m_axi_rready;
  wire [1:0]m_axi_rresp;
  wire m_axi_rvalid;
  wire [63:0]m_axi_wdata;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire [7:0]m_axi_wstrb;
  wire m_axi_wvalid;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire [20:0]\m_axis_cr_tdata_reg[22] ;
  wire \m_axis_cr_tdata_reg[30] ;
  wire [55:0]\m_axis_cr_tdata_reg[63] ;
  wire [4:0]\m_axis_cr_tdata_reg[6] ;
  wire \m_axis_cr_tuser_reg[3] ;
  wire [2:0]\m_axis_cr_tuser_reg[6] ;
  wire \m_axis_cw_tdata_reg[14] ;
  wire [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  wire [22:0]\m_axis_cw_tdata_reg[22] ;
  wire \m_axis_cw_tdata_reg[29] ;
  wire \m_axis_cw_tdata_reg[30] ;
  wire [31:0]\m_axis_cw_tdata_reg[7] ;
  wire m_axis_cw_tlast_reg;
  wire m_axis_cw_tlast_reg_0;
  wire \m_axis_cw_tuser_reg[2] ;
  wire [2:0]\m_axis_cw_tuser_reg[6] ;
  wire neqOp;
  wire neqOp0_out;
  wire neqOp7_in;
  wire neqOp_0;
  wire [0:0]out;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_49_out;
  wire p_76_out;
  wire padzeroes11_out;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire rdaddrsmsig_i_1_n_0;
  wire [2:0]rdndreqpipeline;
  wire rdorder_i_1_n_0;
  wire [2:0]rdreqpipeline;
  wire reg_tready_reg;
  wire request_completed;
  wire \resetovrd.reset_reg[4] ;
  wire [31:0]\s_axi_rdata_i_reg[31] ;
  wire s_axis_cc_tvalid_q_reg;
  wire s_axis_cc_tvalid_q_reg_0;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [63:0]\s_axis_tx_tdata_d_reg[63] ;
  wire s_axis_tx_tlast_d_reg;
  wire s_axis_tx_tlast_d_reg_0;
  wire s_axis_tx_tlast_d_reg_1;
  wire s_axis_tx_tready;
  wire \s_axis_tx_tstrb_d_reg[7] ;
  wire s_axis_tx_tvalid_d_reg;
  wire sig_Bus2IP_CS;
  wire sig_Bus2IP_RNW;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sig_blk_lnk_up;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire sig_s_axis_cr_tlast;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tlast;
  wire sig_s_axis_cw_tvalid;
  wire sreset;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;
  wire user_lnk_up_mux_reg_2;
  wire user_lnk_up_mux_reg_3;
  wire user_lnk_up_mux_reg_4;
  wire user_lnk_up_mux_reg_5;
  wire wraddrsmsig_i_1_n_0;
  wire wrensig_reg;
  wire wrreqsetsig;
  wire wrrespsmsig_i_1_n_0;

  overlay1_axi_pcie_0_0_axi_mm_s_masterbridge comp_AXI_MM_S_MasterBridge
       (.D(D),
        .E(wrreqsetsig),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (neqOp7_in),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\data_width_64.delaylast_i_1_n_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\data_width_64.s_axis_cw_treadysig_i_1_n_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 (\data_width_64.dataoffset_i_1_n_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\data_width_64.wrreqsetsig_i_1_n_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 (\data_width_64.addroffset_i_1_n_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[3] (\data_width_64.master_int_i_1_n_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 (\data_width_64.dataen_i_1_n_0 ),
        .O(O),
        .Q(Q),
        .R(R),
        .addroffset(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/addroffset ),
        .almost_fullsig(\comp_axi_mm_s_masterbridge_rd/almost_fullsig ),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .\cfg_bus_number_d_reg[7] (\cfg_bus_number_d_reg[7] ),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .\cfg_device_number_d_reg[4] (\cfg_device_number_d_reg[4] ),
        .\cfg_function_number_d_reg[2] (\cfg_function_number_d_reg[2] ),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\cpldsplitsm_reg[1]_0 (\cpldsplitsm_reg[1]_0 ),
        .cr_full(cr_full),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlpbytecount_reg[1,0][4] (\ctlpbytecount_reg[1,0][4] ),
        .\ctlpbytecount_reg[1,0][5] (\ctlpbytecount_reg[1,0][5] ),
        .\ctlpbytecount_reg[1,0][7] (\ctlpbytecount_reg[1,0][7] ),
        .\ctlpbytecount_reg[1,0][8] (\ctlpbytecount_reg[1,0][8] ),
        .\ctlpbytecount_reg[1,0][9] (\ctlpbytecount_reg[1,0][9] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][6] (\ctlplength_reg[2,0][6] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][0] (\ctlplength[0,1] ),
        .\ctlplength_reg[2,2][0] (\ctlplength[0,2] ),
        .\ctlplength_reg[2,3][0] (\ctlplength[0,3] ),
        .cw_full(cw_full),
        .cw_full_reg(cw_full_reg),
        .cw_full_reg_0(cw_full_reg_0),
        .\data_width_64.addroffset_reg (comp_AXI_MM_S_MasterBridge_n_50),
        .\data_width_64.addroffset_reg_0 (comp_AXI_MM_S_MasterBridge_n_56),
        .\data_width_64.cpldsplitcounttemp_reg[1] (\data_width_64.cpldsplitcounttemp_reg[1] ),
        .\data_width_64.cpldsplitcounttemp_reg[1]_0 (\data_width_64.cpldsplitcounttemp_reg[1]_0 ),
        .\data_width_64.cpldsplitcounttemp_reg[2] (\data_width_64.cpldsplitcounttemp_reg[2] ),
        .\data_width_64.cpldsplitcounttemp_reg[2]_0 (\data_width_64.cpldsplitcounttemp_reg[2]_0 ),
        .\data_width_64.cpldsplitcounttemp_reg[3] (\data_width_64.cpldsplitcounttemp_reg[3] ),
        .\data_width_64.cpldsplitcounttemp_reg[4] (\data_width_64.cpldsplitcounttemp_reg[4] ),
        .\data_width_64.cpldsplitcounttemp_reg[4]_0 (\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (comp_AXI_MM_S_MasterBridge_n_46),
        .\data_width_64.dataen_reg_0 (comp_AXI_MM_S_MasterBridge_n_47),
        .\data_width_64.dataen_reg_1 (comp_AXI_MM_S_MasterBridge_n_48),
        .\data_width_64.dataen_reg_2 (comp_AXI_MM_S_MasterBridge_n_300),
        .\data_width_64.datain_reg[64] (comp_AXI_MM_S_MasterBridge_n_18),
        .\data_width_64.datammpipeline_reg[1] (comp_AXI_MM_S_MasterBridge_n_152),
        .\data_width_64.dataoffset_reg (comp_AXI_MM_S_MasterBridge_n_49),
        .\data_width_64.datatxpertlp_reg[1] (comp_AXI_MM_S_MasterBridge_n_31),
        .\data_width_64.delaylast_reg (comp_AXI_MM_S_MasterBridge_n_54),
        .\data_width_64.delaylast_reg_0 (comp_AXI_MM_S_MasterBridge_n_55),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axi_rready_reg (comp_AXI_MM_S_MasterBridge_n_299),
        .\data_width_64.m_axi_wstrb_reg[4] (comp_AXI_MM_S_MasterBridge_n_145),
        .\data_width_64.m_axi_wvalidsig_reg (\comp_axi_mm_s_masterbridge_wr/dataoutsig ),
        .\data_width_64.m_axis_cc_tdata_h_reg[10] (\data_width_64.m_axis_cc_tdata_h_reg[10] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[11] (\data_width_64.m_axis_cc_tdata_h_reg[11] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[14] (\data_width_64.m_axis_cc_tdata_h_reg[14] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[15] (\data_width_64.m_axis_cc_tdata_h_reg[15] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[16] (\data_width_64.m_axis_cc_tdata_h_reg[16] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[17] (\data_width_64.m_axis_cc_tdata_h_reg[17] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[18] (\data_width_64.m_axis_cc_tdata_h_reg[18] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[19] (\data_width_64.m_axis_cc_tdata_h_reg[19] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[23] (\data_width_64.m_axis_cc_tdata_h_reg[23] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[24] (\data_width_64.m_axis_cc_tdata_h_reg[24] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[25] (\data_width_64.m_axis_cc_tdata_h_reg[25] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[26] (\data_width_64.m_axis_cc_tdata_h_reg[26] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[27] (\data_width_64.m_axis_cc_tdata_h_reg[27] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[28] (\data_width_64.m_axis_cc_tdata_h_reg[28] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[29] (\data_width_64.m_axis_cc_tdata_h_reg[29] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[45] (\data_width_64.m_axis_cc_tdata_h_reg[45] ),
        .\data_width_64.m_axis_cc_tdatatemp64_reg[0] (\data_width_64.m_axis_cc_tdatatemp64_reg[0] ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg_0 (m_axis_cc_tdata1),
        .\data_width_64.padzeroes_reg (comp_AXI_MM_S_MasterBridge_n_22),
        .\data_width_64.padzeroes_reg_0 (comp_AXI_MM_S_MasterBridge_n_45),
        .\data_width_64.padzeroes_reg_1 (\data_width_64.padzeroes_i_1_n_0 ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.single_beat_i_1_n_0 ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdtargetpipeline_reg[0]_rep (sreset),
        .\data_width_64.s_axis_cw_tdatatemp_reg[33] (\data_width_64.s_axis_cw_tdatatemp_reg[33] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[8] (comp_AXI_MM_S_MasterBridge_n_20),
        .\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 (comp_AXI_MM_S_MasterBridge_n_43),
        .\data_width_64.s_axis_cw_tlasttemp_reg (comp_AXI_MM_S_MasterBridge_n_41),
        .\data_width_64.s_axis_cw_treadysig_reg (comp_AXI_MM_S_MasterBridge_n_39),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (comp_AXI_MM_S_MasterBridge_n_40),
        .\data_width_64.single_beat_reg (\data_width_64.m_axi_rready_i_1_n_0 ),
        .\data_width_64.single_beat_reg_0 (\data_width_64.dataen_i_1__0_n_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tagsig_reg[0]_0 (\data_width_64.tagsig_reg[0]_0 ),
        .\data_width_64.tlpaddrlow_reg[0] (\data_width_64.tlpaddrlow_reg[0] ),
        .\data_width_64.tlplength_reg[3][0] (\data_width_64.tlplength_reg[3][0] ),
        .\data_width_64.wrdatasmsig_reg[1] (comp_AXI_MM_S_MasterBridge_n_148),
        .\data_width_64.wrpendflush_reg[0][3] (\data_width_64.wrpendflush_reg[0][3] ),
        .\data_width_64.wrreqsetsig_reg (comp_AXI_MM_S_MasterBridge_n_44),
        .dataensig(\comp_axi_mm_s_masterbridge_wr/dataensig ),
        .dataensig_0(\comp_axi_mm_s_masterbridge_rd/dataensig ),
        .delaylast(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/delaylast ),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(\data_width_64.m_axi_wvalidsig_i_1_n_0 ),
        .emptysig(\comp_axi_mm_s_masterbridge_wr/emptysig ),
        .\end_point.ctl_user_intr_d_reg[8] (\end_point.ctl_user_intr_d_reg[8] [2]),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .\gaf.gaf0.ram_afull_i_reg (almost_fullsig),
        .\gaf.gaf0.ram_afull_i_reg_0 (\data_width_64.rddatasmsig_i_1_n_0 ),
        .\gaf.gaf0.ram_afull_i_reg_1 (\gaf.gaf0.ram_afull_i_reg ),
        .\gaf.gaf0.ram_afull_i_reg_2 (\gaf.gaf0.ram_afull_i_reg_0 ),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[11]_3 (\length_offset_reg[11]_3 ),
        .\length_offset_reg[2] (neqOp),
        .\length_offset_reg[2]_0 (\length_offset_reg[2] ),
        .\length_offset_reg[6] (\length_offset_reg[6] ),
        .\length_offset_reg[6]_0 (\length_offset_reg[6]_0 ),
        .\length_offset_reg[7] (\length_offset_reg[7] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .\length_offset_reg[9] (\length_offset_reg[9] ),
        .\length_offset_reg[9]_0 (\length_offset_reg[9]_0 ),
        .\length_offset_reg[9]_1 (\length_offset_reg[9]_1 ),
        .\length_offset_reg[9]_2 (\length_offset_reg[9]_2 ),
        .\length_offset_reg[9]_3 (\length_offset_reg[9]_3 ),
        .m_axi_araddr(m_axi_araddr),
        .m_axi_arlen(m_axi_arlen),
        .m_axi_arprot(m_axi_arprot),
        .m_axi_arready(m_axi_arready),
        .m_axi_arsize(m_axi_arsize),
        .\m_axi_arsize_reg[0] (comp_AXI_MM_S_MasterBridge_n_32),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_arvalid_sig_reg(rdaddrsmsig_i_1_n_0),
        .m_axi_awaddr(m_axi_awaddr),
        .m_axi_awlen(m_axi_awlen),
        .m_axi_awprot(m_axi_awprot),
        .m_axi_awready(m_axi_awready),
        .m_axi_awsize(m_axi_awsize),
        .\m_axi_awsize_reg[1] (\m_axi_awsize_reg[1] ),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_awvalidsig_reg(wraddrsmsig_i_1_n_0),
        .m_axi_bready(m_axi_bready),
        .m_axi_breadysig_reg(m_axi_breadysig_i_1_n_0),
        .m_axi_bresp(m_axi_bresp),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata(m_axi_rdata),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(m_axi_rresp),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata(m_axi_wdata),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(m_axi_wstrb),
        .m_axi_wvalid(m_axi_wvalid),
        .m_axi_wvalidsig(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/m_axi_wvalidsig ),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .\m_axis_cr_tdata_reg[22] (\m_axis_cr_tdata_reg[22] ),
        .\m_axis_cr_tdata_reg[30] (\m_axis_cr_tdata_reg[30] ),
        .\m_axis_cr_tdata_reg[63] (\m_axis_cr_tdata_reg[63] ),
        .\m_axis_cr_tdata_reg[6] (\m_axis_cr_tdata_reg[6] ),
        .\m_axis_cr_tuser_reg[3] (\m_axis_cr_tuser_reg[3] ),
        .\m_axis_cr_tuser_reg[6] (\m_axis_cr_tuser_reg[6] ),
        .\m_axis_cw_tdata_reg[14] (\m_axis_cw_tdata_reg[14] ),
        .\m_axis_cw_tdata_reg[14]_0 (\m_axis_cw_tdata_reg[14]_0 ),
        .\m_axis_cw_tdata_reg[22] (\m_axis_cw_tdata_reg[22] ),
        .\m_axis_cw_tdata_reg[29] (\m_axis_cw_tdata_reg[29] ),
        .\m_axis_cw_tdata_reg[7] (\m_axis_cw_tdata_reg[7] ),
        .m_axis_cw_tlast_reg(\data_width_64.s_axis_cw_tlasttemp_i_1_n_0 ),
        .m_axis_cw_tlast_reg_0(m_axis_cw_tlast_reg),
        .m_axis_cw_tlast_reg_1(m_axis_cw_tlast_reg_0),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .\m_axis_cw_tuser_reg[6] (\m_axis_cw_tuser_reg[6] ),
        .neqOp(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp ),
        .neqOp0_out(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp0_out ),
        .neqOp0_out_1(neqOp0_out),
        .neqOp_0(neqOp_0),
        .neqOp__0(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/neqOp__0 ),
        .\np_ok_mode.rdndreqpipeline_d_reg[0] (rdndreqpipeline[0]),
        .\np_ok_mode.rdndreqpipeline_d_reg[1] (rdndreqpipeline[1]),
        .\np_ok_mode.rdndreqpipeline_d_reg[2] (rdndreqpipeline[2]),
        .\np_ok_mode.rdreqpipeline_d_reg[0] (rdreqpipeline[0]),
        .\np_ok_mode.rdreqpipeline_d_reg[1] (rdreqpipeline[1]),
        .\np_ok_mode.rdreqpipeline_d_reg[2] (rdreqpipeline[2]),
        .out({comp_AXI_MM_S_MasterBridge_n_1,\data_width_64.tempdatareg_reg[0] }),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_3_in(p_3_in),
        .p_49_out(p_49_out),
        .p_76_out(p_76_out),
        .padzeroes11_out(padzeroes11_out),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .rdaddrsmsig010_out__0(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig010_out__0 ),
        .rdaddrsmsig1__2(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig1__2 ),
        .rdaddrsmsig_reg(comp_AXI_MM_S_MasterBridge_n_156),
        .rdorder_reg_0(rdorder_i_1_n_0),
        .rdreq_reg_0(blk_lnk_up_latch),
        .rdreq_reg_1(comp_AXI_MM_S_MasterBridge_n_36),
        .rdreq_reg_2(comp_AXI_MM_S_MasterBridge_n_101),
        .reg_tready_reg(reg_tready_reg),
        .request_completed(request_completed),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axis_cc_tvalid_q_reg(s_axis_cc_tvalid_q_reg),
        .s_axis_cc_tvalid_q_reg_0(s_axis_cc_tvalid_q_reg_0),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig ),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_tx_tdata_d_reg[63] (\s_axis_tx_tdata_d_reg[63] ),
        .s_axis_tx_tlast_d_reg(s_axis_tx_tlast_d_reg),
        .s_axis_tx_tlast_d_reg_0(s_axis_tx_tlast_d_reg_0),
        .s_axis_tx_tlast_d_reg_1(s_axis_tx_tlast_d_reg_1),
        .s_axis_tx_tready(s_axis_tx_tready),
        .\s_axis_tx_tstrb_d_reg[7] (\s_axis_tx_tstrb_d_reg[7] ),
        .s_axis_tx_tvalid_d_reg(s_axis_tx_tvalid_d_reg),
        .sig_blk_lnk_up(sig_blk_lnk_up),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .sig_s_axis_cr_tlast(sig_s_axis_cr_tlast),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tlast(sig_s_axis_cw_tlast),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .single_beat(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/single_beat ),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_0),
        .user_lnk_up_mux_reg_1(user_lnk_up_mux_reg_1),
        .user_lnk_up_mux_reg_2(user_lnk_up_mux_reg_2),
        .user_lnk_up_mux_reg_3(user_lnk_up_mux_reg_3),
        .user_lnk_up_mux_reg_4(user_lnk_up_mux_reg_4),
        .user_lnk_up_mux_reg_5(user_lnk_up_mux_reg_5),
        .wraddrsmsig(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wraddrsmsig ),
        .wrensig_reg(treadydataenadjustsig),
        .wrensig_reg_0(wrensig_reg),
        .wrrespsmsig(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wrrespsmsig ),
        .wrrespsmsig_reg(wrrespsmsig_i_1_n_0));
  overlay1_axi_pcie_0_0_register_block comp_register_block
       (.\FSM_sequential_register_state_reg[0]_0 (\FSM_sequential_register_state_reg[0] ),
        .\FSM_sequential_register_state_reg[0]_1 (\FSM_sequential_register_state_reg[0]_0 ),
        .SR(sreset),
        .axi_aresetn(axi_aresetn),
        .\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] (\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ),
        .\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] (\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ),
        .\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] (\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ),
        .\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] (\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] ),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .\s_axi_rdata_i_reg[31] (\s_axi_rdata_i_reg[31] ),
        .sig_Bus2IP_CS(sig_Bus2IP_CS),
        .sig_Bus2IP_RNW(sig_Bus2IP_RNW),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck));
  LUT5 #(
    .INIT(32'hFFAE00A2)) 
    \data_width_64.addroffset_i_1 
       (.I0(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/addroffset ),
        .I1(\data_width_64.tempdatareg_reg[0] [2]),
        .I2(comp_AXI_MM_S_MasterBridge_n_56),
        .I3(comp_AXI_MM_S_MasterBridge_n_50),
        .I4(comp_AXI_MM_S_MasterBridge_n_20),
        .O(\data_width_64.addroffset_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEEEFE00022202)) 
    \data_width_64.dataen_i_1 
       (.I0(comp_AXI_MM_S_MasterBridge_n_46),
        .I1(comp_AXI_MM_S_MasterBridge_n_1),
        .I2(comp_AXI_MM_S_MasterBridge_n_47),
        .I3(\data_width_64.tempdatareg_reg[0] [1]),
        .I4(comp_AXI_MM_S_MasterBridge_n_48),
        .I5(\comp_axi_mm_s_masterbridge_wr/dataensig ),
        .O(\data_width_64.dataen_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFAFFCCCC0A00CCCC)) 
    \data_width_64.dataen_i_1__0 
       (.I0(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/single_beat ),
        .I1(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/neqOp__0 ),
        .I2(comp_AXI_MM_S_MasterBridge_n_152),
        .I3(comp_AXI_MM_S_MasterBridge_n_300),
        .I4(comp_AXI_MM_S_MasterBridge_n_31),
        .I5(\comp_axi_mm_s_masterbridge_rd/dataensig ),
        .O(\data_width_64.dataen_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hE200FFFFE2000000)) 
    \data_width_64.dataoffset_i_1 
       (.I0(cw_full_reg),
        .I1(\data_width_64.tempdatareg_reg[0] [1]),
        .I2(almost_fullsig),
        .I3(\data_width_64.tempdatareg_reg[0] [0]),
        .I4(comp_AXI_MM_S_MasterBridge_n_49),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33] ),
        .O(\data_width_64.dataoffset_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hABBBBBBBA8888888)) 
    \data_width_64.delaylast_i_1 
       (.I0(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/delaylast ),
        .I1(comp_AXI_MM_S_MasterBridge_n_55),
        .I2(\data_width_64.tempdatareg_reg[0] [0]),
        .I3(comp_AXI_MM_S_MasterBridge_n_43),
        .I4(comp_AXI_MM_S_MasterBridge_n_54),
        .I5(comp_AXI_MM_S_MasterBridge_n_18),
        .O(\data_width_64.delaylast_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000FFF7)) 
    \data_width_64.m_axi_rready_i_1 
       (.I0(m_axi_rvalid),
        .I1(m_axi_rlast),
        .I2(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/single_beat ),
        .I3(comp_AXI_MM_S_MasterBridge_n_152),
        .I4(\comp_axi_mm_s_masterbridge_rd/almost_fullsig ),
        .I5(comp_AXI_MM_S_MasterBridge_n_299),
        .O(\data_width_64.m_axi_rready_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00005500)) 
    \data_width_64.m_axi_wvalidsig_i_1 
       (.I0(\comp_axi_mm_s_masterbridge_wr/emptysig ),
        .I1(\comp_axi_mm_s_masterbridge_wr/dataoutsig ),
        .I2(m_axi_wready),
        .I3(comp_AXI_MM_S_MasterBridge_n_145),
        .I4(comp_AXI_MM_S_MasterBridge_n_148),
        .I5(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/m_axi_wvalidsig ),
        .O(\data_width_64.m_axi_wvalidsig_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFCFC02000000)) 
    \data_width_64.master_int_i_1 
       (.I0(p_49_out),
        .I1(comp_AXI_MM_S_MasterBridge_n_1),
        .I2(\data_width_64.tempdatareg_reg[0] [2]),
        .I3(\m_axis_cw_tdata_reg[30] ),
        .I4(\data_width_64.tempdatareg_reg[0] [0]),
        .I5(\end_point.ctl_user_intr_d_reg[8] [2]),
        .O(\data_width_64.master_int_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.padzeroes_i_1 
       (.I0(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/addroffset ),
        .I1(comp_AXI_MM_S_MasterBridge_n_45),
        .I2(comp_AXI_MM_S_MasterBridge_n_22),
        .O(\data_width_64.padzeroes_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFAFFFFFFCCCCCCCC)) 
    \data_width_64.rddatasmsig_i_1 
       (.I0(comp_AXI_MM_S_MasterBridge_n_152),
        .I1(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/neqOp__0 ),
        .I2(\comp_axi_mm_s_masterbridge_rd/almost_fullsig ),
        .I3(m_axi_rvalid),
        .I4(m_axi_rlast),
        .I5(comp_AXI_MM_S_MasterBridge_n_31),
        .O(\data_width_64.rddatasmsig_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0CCC00008000)) 
    \data_width_64.s_axis_cw_tlasttemp_i_1 
       (.I0(sig_s_axis_cw_tlast),
        .I1(\data_width_64.tempdatareg_reg[0] [2]),
        .I2(\data_width_64.tempdatareg_reg[0] [0]),
        .I3(\data_width_64.tempdatareg_reg[0] [1]),
        .I4(comp_AXI_MM_S_MasterBridge_n_41),
        .I5(treadydataenadjustsig),
        .O(\data_width_64.s_axis_cw_tlasttemp_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFABFB0000A808)) 
    \data_width_64.s_axis_cw_treadysig_i_1 
       (.I0(\comp_axi_mm_s_masterbridge_wr/comp_axi_s_masterbridge_wr/s_axis_cw_treadysig ),
        .I1(comp_AXI_MM_S_MasterBridge_n_39),
        .I2(\data_width_64.tempdatareg_reg[0] [0]),
        .I3(comp_AXI_MM_S_MasterBridge_n_40),
        .I4(comp_AXI_MM_S_MasterBridge_n_1),
        .I5(wrensig_reg),
        .O(\data_width_64.s_axis_cw_treadysig_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h54)) 
    \data_width_64.single_beat_i_1 
       (.I0(comp_AXI_MM_S_MasterBridge_n_31),
        .I1(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/neqOp__0 ),
        .I2(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/single_beat ),
        .O(\data_width_64.single_beat_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0888FFFF08880000)) 
    \data_width_64.wrreqsetsig_i_1 
       (.I0(cw_full_reg),
        .I1(\data_width_64.tempdatareg_reg[0] [2]),
        .I2(\data_width_64.tempdatareg_reg[0] [0]),
        .I3(\data_width_64.tempdatareg_reg[0] [1]),
        .I4(comp_AXI_MM_S_MasterBridge_n_44),
        .I5(wrreqsetsig),
        .O(\data_width_64.wrreqsetsig_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \end_point.ctl_user_intr_d[6]_i_1 
       (.I0(p_1_in2_in),
        .I1(p_0_in1_in),
        .O(\end_point.ctl_user_intr_d_reg[8] [0]));
  LUT2 #(
    .INIT(4'hE)) 
    \end_point.ctl_user_intr_d[7]_i_1 
       (.I0(p_1_in),
        .I1(p_0_in0_in),
        .O(\end_point.ctl_user_intr_d_reg[8] [1]));
  (* SOFT_HLUTNM = "soft_lutpair686" *) 
  LUT5 #(
    .INIT(32'h0ACA0000)) 
    m_axi_breadysig_i_1
       (.I0(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp ),
        .I1(m_axi_bready),
        .I2(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wrrespsmsig ),
        .I3(m_axi_bvalid),
        .I4(axi_aresetn),
        .O(m_axi_breadysig_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000AFFFCCCCCCCC)) 
    rdaddrsmsig_i_1
       (.I0(comp_AXI_MM_S_MasterBridge_n_156),
        .I1(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig010_out__0 ),
        .I2(m_axi_arvalid),
        .I3(m_axi_arready),
        .I4(\comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig1__2 ),
        .I5(comp_AXI_MM_S_MasterBridge_n_32),
        .O(rdaddrsmsig_i_1_n_0));
  LUT4 #(
    .INIT(16'hC4EE)) 
    rdorder_i_1
       (.I0(axi_aresetn),
        .I1(comp_AXI_MM_S_MasterBridge_n_36),
        .I2(neqOp0_out),
        .I3(comp_AXI_MM_S_MasterBridge_n_101),
        .O(rdorder_i_1_n_0));
  LUT4 #(
    .INIT(16'h7F70)) 
    wraddrsmsig_i_1
       (.I0(m_axi_awvalid),
        .I1(m_axi_awready),
        .I2(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wraddrsmsig ),
        .I3(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp0_out ),
        .O(wraddrsmsig_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair686" *) 
  LUT3 #(
    .INIT(8'h74)) 
    wrrespsmsig_i_1
       (.I0(m_axi_bvalid),
        .I1(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/wrrespsmsig ),
        .I2(\comp_axi_mm_s_masterbridge_wr/comp_axi_mm_masterbridge_wr/neqOp ),
        .O(wrrespsmsig_i_1_n_0));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_address_decoder" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_address_decoder
   (IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    \resetovrd.reset_reg[4] ,
    out,
    \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ,
    sig_IP2Bus_RdAck,
    sys_rst_n_int,
    sig_IP2Bus_WrAck,
    \FSM_sequential_state_reg[1] ,
    s_axi_ctl_wvalid_ipic_bridge,
    s_axi_ctl_awvalid_ipic_bridge);
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  input \resetovrd.reset_reg[4] ;
  input [0:0]out;
  input \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ;
  input sig_IP2Bus_RdAck;
  input sys_rst_n_int;
  input sig_IP2Bus_WrAck;
  input [1:0]\FSM_sequential_state_reg[1] ;
  input s_axi_ctl_wvalid_ipic_bridge;
  input s_axi_ctl_awvalid_ipic_bridge;

  wire [1:0]\FSM_sequential_state_reg[1] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire \MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i[0]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire s_axi_ctl_awvalid_ipic_bridge;
  wire s_axi_ctl_wvalid_ipic_bridge;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sys_rst_n_int;

  LUT3 #(
    .INIT(8'h80)) 
    IP2Bus_RdAck_i_1
       (.I0(out),
        .I1(IP2Bus_RdAck_reg),
        .I2(\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .O(IP2Bus_RdAck_reg_0));
  LUT4 #(
    .INIT(16'h0020)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_1 
       (.I0(\MEM_DECODE_GEN[0].cs_out_i[0]_i_2_n_0 ),
        .I1(sig_IP2Bus_RdAck),
        .I2(sys_rst_n_int),
        .I3(sig_IP2Bus_WrAck),
        .O(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF11101010)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_2 
       (.I0(\FSM_sequential_state_reg[1] [1]),
        .I1(\FSM_sequential_state_reg[1] [0]),
        .I2(\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .I3(s_axi_ctl_wvalid_ipic_bridge),
        .I4(s_axi_ctl_awvalid_ipic_bridge),
        .I5(IP2Bus_RdAck_reg),
        .O(\MEM_DECODE_GEN[0].cs_out_i[0]_i_2_n_0 ));
  FDRE \MEM_DECODE_GEN[0].cs_out_i_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ),
        .Q(IP2Bus_RdAck_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_cfg" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg
   (pl_directed_link_speed,
    pl_directed_link_auton,
    IP2Bus_WrAck_reg,
    \end_point_1.s_axi_ctl_arready_reg ,
    \block_is_ep.rd_wr_bar_pending_reg ,
    s_axi_ctl_arvalid_ev_hndlr,
    \end_point.state_reg[2] ,
    \end_point.s_axi_ctl_araddr_blk_bridge_reg[2] ,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    ready_is_given,
    s_axi_ctl_wready,
    bridge_status_control,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_mgmt_wr_readonly,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg ,
    \end_point_1.s_axi_ctl_rvalid_reg ,
    \block_is_ep.s_axi_ctl_bvalid_reg ,
    IP2Bus_WrAck_reg_0,
    IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    \end_point_1.s_axi_ctl_arready_reg_0 ,
    \block_is_ep.rd_wr_bar_pending_reg_0 ,
    interrupt_decode,
    \end_point.wait_for_idle_reg ,
    \end_point.wait_for_idle_reg_0 ,
    \end_point.state_reg[1] ,
    \end_point.state_reg[2]_0 ,
    \end_point.state_reg[0] ,
    \end_point.s_axi_ctl_rvalid_reg ,
    \end_point.s_axi_ctl_bvalid_reg ,
    \end_point.s_axi_ctl_awready_reg ,
    \end_point.s_axi_ctl_arready_reg ,
    \end_point.s_axi_ctl_arready_reg_0 ,
    \end_point.s_axi_ctl_rvalid_reg_0 ,
    \end_point.s_axi_ctl_rvalid_reg_1 ,
    \end_point.interrupt_mask_reg[22] ,
    \end_point.s_axi_ctl_bvalid_reg_0 ,
    \end_point.s_axi_ctl_bvalid_reg_1 ,
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ,
    \end_point.pl_directed_link_auton_reg ,
    \end_point.global_intr_disable_reg ,
    \end_point.state_reg[2]_1 ,
    \end_point.s_axi_ctl_rdata_reg[1] ,
    \end_point.s_axi_ctl_rdata_reg[3] ,
    \end_point.s_axi_ctl_rdata_reg[11] ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pl_directed_link_change,
    \end_point.s_axi_ctl_rdata_reg[3]_0 ,
    \end_point.s_axi_ctl_rdata_reg[0] ,
    \end_point.wait_for_idle_reg_1 ,
    \end_point.global_intr_disable_reg_0 ,
    \end_point.wait_for_idle_reg_2 ,
    interrupt_out,
    \end_point.s_axi_ctl_awready_reg_0 ,
    \end_point.state_reg[0]_0 ,
    \end_point.s_axi_ctl_awready_reg_1 ,
    \end_point.s_axi_ctl_rdata_reg[3]_1 ,
    \sig_bus2ip_ce_reg_reg[3] ,
    cfg_mgmt_byte_en_n,
    cfg_mgmt_wr_rw1c_as_rw_n,
    cfg_mgmt_wr_readonly_n,
    cfg_mgmt_rd_en_n,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    SR,
    s_axi_ctl_wdata,
    \resetovrd.reset_reg[4] ,
    trn_recrc_err,
    pl_received_hot_rst,
    user_lnk_up_mux_reg,
    \end_point.axi_lite_intf_busy_reg ,
    \end_point.request_type_reg ,
    \end_point.s_axi_ctl_arready_reg_1 ,
    \end_point.request_type_reg_0 ,
    \end_point.request_type_reg_1 ,
    \end_point.ready_is_given_reg ,
    \end_point.ready_is_given_reg_0 ,
    \end_point.global_intr_disable_reg_1 ,
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ,
    \end_point.cfg_mgmt_wr_readonly_o_reg ,
    \end_point.state_reg[1]_0 ,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ,
    \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ,
    out,
    sys_rst_n_int,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_awaddr,
    cfg_mgmt_rd_wr_done_n,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    pl_sel_lnk_rate,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    pl_sel_lnk_width,
    \cfg_device_number_d_reg[0] ,
    \cfg_device_number_d_reg[1] ,
    \cfg_device_number_d_reg[2] ,
    \cfg_device_number_d_reg[3] ,
    \cfg_device_number_d_reg[4] ,
    pl_ltssm_state,
    \cfg_bus_number_d_reg[1] ,
    \cfg_bus_number_d_reg[2] ,
    \cfg_bus_number_d_reg[7] ,
    sig_IP2Bus_RdAck,
    pl_link_upcfg_cap,
    sig_IP2Bus_WrAck,
    sys_rst_n_int_reg,
    \data_width_64.master_int_reg ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    cfg_mgmt_do);
  output pl_directed_link_speed;
  output pl_directed_link_auton;
  output IP2Bus_WrAck_reg;
  output \end_point_1.s_axi_ctl_arready_reg ;
  output \block_is_ep.rd_wr_bar_pending_reg ;
  output s_axi_ctl_arvalid_ev_hndlr;
  output \end_point.state_reg[2] ;
  output \end_point.s_axi_ctl_araddr_blk_bridge_reg[2] ;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output ready_is_given;
  output s_axi_ctl_wready;
  output [0:0]bridge_status_control;
  output cfg_mgmt_wr_rw1c_as_rw;
  output cfg_mgmt_wr_readonly;
  output \end_point.s_axi_ctl_arvalid_blk_bridge_reg ;
  output \end_point_1.s_axi_ctl_rvalid_reg ;
  output \block_is_ep.s_axi_ctl_bvalid_reg ;
  output IP2Bus_WrAck_reg_0;
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output \end_point_1.s_axi_ctl_arready_reg_0 ;
  output \block_is_ep.rd_wr_bar_pending_reg_0 ;
  output [0:0]interrupt_decode;
  output \end_point.wait_for_idle_reg ;
  output \end_point.wait_for_idle_reg_0 ;
  output \end_point.state_reg[1] ;
  output \end_point.state_reg[2]_0 ;
  output \end_point.state_reg[0] ;
  output \end_point.s_axi_ctl_rvalid_reg ;
  output \end_point.s_axi_ctl_bvalid_reg ;
  output \end_point.s_axi_ctl_awready_reg ;
  output \end_point.s_axi_ctl_arready_reg ;
  output \end_point.s_axi_ctl_arready_reg_0 ;
  output \end_point.s_axi_ctl_rvalid_reg_0 ;
  output \end_point.s_axi_ctl_rvalid_reg_1 ;
  output \end_point.interrupt_mask_reg[22] ;
  output \end_point.s_axi_ctl_bvalid_reg_0 ;
  output \end_point.s_axi_ctl_bvalid_reg_1 ;
  output \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ;
  output \end_point.pl_directed_link_auton_reg ;
  output \end_point.global_intr_disable_reg ;
  output \end_point.state_reg[2]_1 ;
  output \end_point.s_axi_ctl_rdata_reg[1] ;
  output \end_point.s_axi_ctl_rdata_reg[3] ;
  output \end_point.s_axi_ctl_rdata_reg[11] ;
  output [1:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  output [1:0]pl_directed_link_change;
  output \end_point.s_axi_ctl_rdata_reg[3]_0 ;
  output \end_point.s_axi_ctl_rdata_reg[0] ;
  output \end_point.wait_for_idle_reg_1 ;
  output \end_point.global_intr_disable_reg_0 ;
  output \end_point.wait_for_idle_reg_2 ;
  output interrupt_out;
  output \end_point.s_axi_ctl_awready_reg_0 ;
  output \end_point.state_reg[0]_0 ;
  output \end_point.s_axi_ctl_awready_reg_1 ;
  output \end_point.s_axi_ctl_rdata_reg[3]_1 ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output [0:0]cfg_mgmt_byte_en_n;
  output cfg_mgmt_wr_rw1c_as_rw_n;
  output cfg_mgmt_wr_readonly_n;
  output cfg_mgmt_rd_en_n;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [9:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  input [0:0]SR;
  input [31:0]s_axi_ctl_wdata;
  input \resetovrd.reset_reg[4] ;
  input trn_recrc_err;
  input pl_received_hot_rst;
  input user_lnk_up_mux_reg;
  input \end_point.axi_lite_intf_busy_reg ;
  input \end_point.request_type_reg ;
  input \end_point.s_axi_ctl_arready_reg_1 ;
  input \end_point.request_type_reg_0 ;
  input \end_point.request_type_reg_1 ;
  input \end_point.ready_is_given_reg ;
  input \end_point.ready_is_given_reg_0 ;
  input \end_point.global_intr_disable_reg_1 ;
  input \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ;
  input \end_point.cfg_mgmt_wr_readonly_o_reg ;
  input \end_point.state_reg[1]_0 ;
  input \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ;
  input \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ;
  input [0:0]out;
  input sys_rst_n_int;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input [11:0]s_axi_ctl_awaddr;
  input cfg_mgmt_rd_wr_done_n;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input pl_sel_lnk_rate;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [1:0]pl_sel_lnk_width;
  input \cfg_device_number_d_reg[0] ;
  input \cfg_device_number_d_reg[1] ;
  input \cfg_device_number_d_reg[2] ;
  input \cfg_device_number_d_reg[3] ;
  input \cfg_device_number_d_reg[4] ;
  input [0:0]pl_ltssm_state;
  input \cfg_bus_number_d_reg[1] ;
  input \cfg_bus_number_d_reg[2] ;
  input [5:0]\cfg_bus_number_d_reg[7] ;
  input sig_IP2Bus_RdAck;
  input pl_link_upcfg_cap;
  input sig_IP2Bus_WrAck;
  input sys_rst_n_int_reg;
  input [2:0]\data_width_64.master_int_reg ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [31:0]cfg_mgmt_do;

  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire [0:0]SR;
  wire axi_enhanced_cfg_slave_inst_n_57;
  wire axi_enhanced_cfg_slave_inst_n_62;
  wire \block_is_ep.rd_wr_bar_pending_reg ;
  wire \block_is_ep.rd_wr_bar_pending_reg_0 ;
  wire \block_is_ep.s_axi_ctl_bvalid_reg ;
  wire [0:0]bridge_status_control;
  wire \cfg_bus_number_d_reg[1] ;
  wire \cfg_bus_number_d_reg[2] ;
  wire [5:0]\cfg_bus_number_d_reg[7] ;
  wire \cfg_device_number_d_reg[0] ;
  wire \cfg_device_number_d_reg[1] ;
  wire \cfg_device_number_d_reg[2] ;
  wire \cfg_device_number_d_reg[3] ;
  wire \cfg_device_number_d_reg[4] ;
  wire [0:0]cfg_mgmt_byte_en_n;
  wire [31:0]cfg_mgmt_do;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_rd_wr_done_n;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_readonly_n;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire cfg_mgmt_wr_rw1c_as_rw_n;
  wire [2:0]\data_width_64.master_int_reg ;
  wire \end_point.axi_lite_intf_busy_reg ;
  wire \end_point.cfg_mgmt_wr_readonly_o_reg ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ;
  wire \end_point.global_intr_disable_reg ;
  wire \end_point.global_intr_disable_reg_0 ;
  wire \end_point.global_intr_disable_reg_1 ;
  wire \end_point.interrupt_mask_reg[22] ;
  wire \end_point.pl_directed_link_auton_reg ;
  wire \end_point.ready_is_given_reg ;
  wire \end_point.ready_is_given_reg_0 ;
  wire \end_point.request_type_reg ;
  wire \end_point.request_type_reg_0 ;
  wire \end_point.request_type_reg_1 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge_reg[2] ;
  wire \end_point.s_axi_ctl_arready_reg ;
  wire \end_point.s_axi_ctl_arready_reg_0 ;
  wire \end_point.s_axi_ctl_arready_reg_1 ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ;
  wire \end_point.s_axi_ctl_awready_reg ;
  wire \end_point.s_axi_ctl_awready_reg_0 ;
  wire \end_point.s_axi_ctl_awready_reg_1 ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ;
  wire \end_point.s_axi_ctl_bvalid_reg ;
  wire \end_point.s_axi_ctl_bvalid_reg_0 ;
  wire \end_point.s_axi_ctl_bvalid_reg_1 ;
  wire \end_point.s_axi_ctl_rdata_reg[0] ;
  wire \end_point.s_axi_ctl_rdata_reg[11] ;
  wire \end_point.s_axi_ctl_rdata_reg[1] ;
  wire \end_point.s_axi_ctl_rdata_reg[3] ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_1 ;
  wire \end_point.s_axi_ctl_rvalid_reg ;
  wire \end_point.s_axi_ctl_rvalid_reg_0 ;
  wire \end_point.s_axi_ctl_rvalid_reg_1 ;
  wire \end_point.state_reg[0] ;
  wire \end_point.state_reg[0]_0 ;
  wire \end_point.state_reg[1] ;
  wire \end_point.state_reg[1]_0 ;
  wire \end_point.state_reg[2] ;
  wire \end_point.state_reg[2]_0 ;
  wire \end_point.state_reg[2]_1 ;
  wire \end_point.wait_for_idle_reg ;
  wire \end_point.wait_for_idle_reg_0 ;
  wire \end_point.wait_for_idle_reg_1 ;
  wire \end_point.wait_for_idle_reg_2 ;
  wire \end_point_1.s_axi_ctl_arready_reg ;
  wire \end_point_1.s_axi_ctl_arready_reg_0 ;
  wire \end_point_1.s_axi_ctl_rvalid_reg ;
  wire [1:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [9:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire [0:0]interrupt_decode;
  wire interrupt_out;
  wire [0:0]out;
  wire p_0_in0_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire pl_link_upcfg_cap;
  wire [0:0]pl_ltssm_state;
  wire pl_received_hot_rst;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire ready_is_given;
  wire \resetovrd.reset_reg[4] ;
  wire [11:0]s_axi_ctl_araddr;
  wire [11:2]s_axi_ctl_araddr_blk_bridge;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arready_ev_hndlr;
  wire s_axi_ctl_arvalid;
  wire s_axi_ctl_arvalid_ev_hndlr;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_awvalid_blk_bridge;
  wire s_axi_ctl_awvalid_ipic_bridge;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bready_blk_bridge;
  wire s_axi_ctl_bready_ev_hndlr;
  wire s_axi_ctl_bready_ipic_bridge;
  wire s_axi_ctl_bvalid;
  wire s_axi_ctl_bvalid_blk_bridge;
  wire s_axi_ctl_bvalid_ev_hndlr;
  wire s_axi_ctl_bvalid_ipic_bridge;
  wire [31:0]s_axi_ctl_rdata;
  wire [31:0]s_axi_ctl_rdata_blk_bridge;
  wire [31:0]s_axi_ctl_rdata_ipic_bridge;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rready_blk_bridge;
  wire s_axi_ctl_rready_ev_hndlr;
  wire s_axi_ctl_rready_ipic_bridge;
  wire s_axi_ctl_rvalid;
  wire s_axi_ctl_rvalid_blk_bridge;
  wire s_axi_ctl_rvalid_ev_hndlr;
  wire s_axi_ctl_rvalid_ipic_bridge;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire s_axi_ctl_wready_blk_bridge;
  wire s_axi_ctl_wready_ev_hndlr;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axi_ctl_wvalid_ipic_bridge;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sys_rst_n_int;
  wire sys_rst_n_int_reg;
  wire trn_recrc_err;
  wire user_lnk_up_mux_reg;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg_block_bridge axi_enhanced_cfg_block_bridge_inst
       (.Q(s_axi_ctl_rdata_blk_bridge),
        .SR(SR),
        .cfg_mgmt_byte_en_n(cfg_mgmt_byte_en_n),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_rd_en_n(cfg_mgmt_rd_en_n),
        .cfg_mgmt_rd_wr_done_n(cfg_mgmt_rd_wr_done_n),
        .\end_point.request_type_reg (\end_point.s_axi_ctl_araddr_blk_bridge_reg[2] ),
        .\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] (s_axi_ctl_araddr_blk_bridge),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg (\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 (\end_point_1.s_axi_ctl_arready_reg ),
        .\end_point.s_axi_ctl_rready_blk_bridge_reg (axi_enhanced_cfg_slave_inst_n_62),
        .\end_point.state_reg[0] (axi_enhanced_cfg_slave_inst_n_57),
        .\end_point.wait_for_idle_reg (\end_point.wait_for_idle_reg_1 ),
        .\end_point_1.s_axi_ctl_arready_reg_0 (\end_point_1.s_axi_ctl_arready_reg_0 ),
        .\end_point_1.s_axi_ctl_rvalid_reg_0 (\end_point_1.s_axi_ctl_rvalid_reg ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_awvalid_blk_bridge(s_axi_ctl_awvalid_blk_bridge),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bready_blk_bridge(s_axi_ctl_bready_blk_bridge),
        .s_axi_ctl_bvalid_blk_bridge(s_axi_ctl_bvalid_blk_bridge),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rready_blk_bridge(s_axi_ctl_rready_blk_bridge),
        .s_axi_ctl_rvalid_blk_bridge(s_axi_ctl_rvalid_blk_bridge),
        .s_axi_ctl_wready_blk_bridge(s_axi_ctl_wready_blk_bridge),
        .sys_rst_n_int(sys_rst_n_int));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg_event_handler axi_enhanced_cfg_event_handler_inst
       (.\block_is_ep.s_axi_ctl_bvalid_reg_0 (\block_is_ep.s_axi_ctl_bvalid_reg ),
        .\end_point.request_type_reg (\end_point.s_axi_ctl_araddr_blk_bridge_reg[2] ),
        .\end_point.s_axi_ctl_awvalid_ev_hndlr_reg (\end_point.s_axi_ctl_awvalid_ev_hndlr_reg ),
        .\end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 (\block_is_ep.rd_wr_bar_pending_reg ),
        .\end_point.s_axi_ctl_bready_ev_hndlr_reg (\block_is_ep.rd_wr_bar_pending_reg_0 ),
        .\end_point.state_reg[2] (\end_point.state_reg[2]_0 ),
        .\end_point.wait_for_idle_reg (\end_point.wait_for_idle_reg_2 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_arready_ev_hndlr(s_axi_ctl_arready_ev_hndlr),
        .s_axi_ctl_arvalid_ev_hndlr(s_axi_ctl_arvalid_ev_hndlr),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bready_ev_hndlr(s_axi_ctl_bready_ev_hndlr),
        .s_axi_ctl_bvalid_ev_hndlr(s_axi_ctl_bvalid_ev_hndlr),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rready_ev_hndlr(s_axi_ctl_rready_ev_hndlr),
        .s_axi_ctl_rvalid_ev_hndlr(s_axi_ctl_rvalid_ev_hndlr),
        .s_axi_ctl_wready_ev_hndlr(s_axi_ctl_wready_ev_hndlr),
        .sys_rst_n_int(sys_rst_n_int));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg_slave axi_enhanced_cfg_slave_inst
       (.IP2Bus_WrAck_reg(IP2Bus_WrAck_reg),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg_0),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (IP2Bus_RdAck_reg),
        .Q(s_axi_ctl_rdata_ipic_bridge),
        .SR(SR),
        .\block_is_ep.rd_wr_bar_pending_reg (\block_is_ep.rd_wr_bar_pending_reg ),
        .\block_is_ep.rd_wr_bar_pending_reg_0 (\block_is_ep.rd_wr_bar_pending_reg_0 ),
        .bridge_status_control(bridge_status_control),
        .\cfg_bus_number_d_reg[1] (\cfg_bus_number_d_reg[1] ),
        .\cfg_bus_number_d_reg[2] (\cfg_bus_number_d_reg[2] ),
        .\cfg_bus_number_d_reg[7] (\cfg_bus_number_d_reg[7] ),
        .\cfg_device_number_d_reg[0] (\cfg_device_number_d_reg[0] ),
        .\cfg_device_number_d_reg[1] (\cfg_device_number_d_reg[1] ),
        .\cfg_device_number_d_reg[2] (\cfg_device_number_d_reg[2] ),
        .\cfg_device_number_d_reg[3] (\cfg_device_number_d_reg[3] ),
        .\cfg_device_number_d_reg[4] (\cfg_device_number_d_reg[4] ),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_readonly_n(cfg_mgmt_wr_readonly_n),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_mgmt_wr_rw1c_as_rw_n(cfg_mgmt_wr_rw1c_as_rw_n),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\end_point.axi_lite_intf_busy_reg_0 (\end_point.axi_lite_intf_busy_reg ),
        .\end_point.cfg_mgmt_dwaddr_reg[9] (s_axi_ctl_araddr_blk_bridge),
        .\end_point.cfg_mgmt_wr_readonly_o_reg_0 (\end_point.cfg_mgmt_wr_readonly_o_reg ),
        .\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 (\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ),
        .\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_1 (\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ),
        .\end_point.global_intr_disable_reg_0 (\end_point.global_intr_disable_reg ),
        .\end_point.global_intr_disable_reg_1 (\end_point.global_intr_disable_reg_0 ),
        .\end_point.global_intr_disable_reg_2 (\end_point.global_intr_disable_reg_1 ),
        .\end_point.interrupt_mask_reg[22]_0 (\end_point.interrupt_mask_reg[22] ),
        .\end_point.pl_directed_link_auton_reg_0 (\end_point.pl_directed_link_auton_reg ),
        .\end_point.ready_is_given_reg_0 (\end_point.ready_is_given_reg ),
        .\end_point.ready_is_given_reg_1 (\end_point.ready_is_given_reg_0 ),
        .\end_point.request_type_reg_0 (\end_point.request_type_reg ),
        .\end_point.request_type_reg_1 (\end_point.request_type_reg_0 ),
        .\end_point.request_type_reg_2 (\end_point.request_type_reg_1 ),
        .\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 (\end_point.s_axi_ctl_araddr_blk_bridge_reg[2] ),
        .\end_point.s_axi_ctl_arready_reg_0 (\end_point.s_axi_ctl_arready_reg ),
        .\end_point.s_axi_ctl_arready_reg_1 (\end_point.s_axi_ctl_arready_reg_0 ),
        .\end_point.s_axi_ctl_arready_reg_2 (\end_point.s_axi_ctl_arready_reg_1 ),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 (\end_point.s_axi_ctl_arvalid_blk_bridge_reg ),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 (axi_enhanced_cfg_slave_inst_n_57),
        .\end_point.s_axi_ctl_awready_reg_0 (\end_point.s_axi_ctl_awready_reg ),
        .\end_point.s_axi_ctl_awready_reg_1 (\end_point.s_axi_ctl_awready_reg_0 ),
        .\end_point.s_axi_ctl_awready_reg_2 (\end_point.s_axi_ctl_awready_reg_1 ),
        .\end_point.s_axi_ctl_bvalid_reg_0 (\end_point.s_axi_ctl_bvalid_reg ),
        .\end_point.s_axi_ctl_bvalid_reg_1 (\end_point.s_axi_ctl_bvalid_reg_0 ),
        .\end_point.s_axi_ctl_bvalid_reg_2 (\end_point.s_axi_ctl_bvalid_reg_1 ),
        .\end_point.s_axi_ctl_rdata_reg[0]_0 (\end_point.s_axi_ctl_rdata_reg[0] ),
        .\end_point.s_axi_ctl_rdata_reg[11]_0 (\end_point.s_axi_ctl_rdata_reg[11] ),
        .\end_point.s_axi_ctl_rdata_reg[1]_0 (\end_point.s_axi_ctl_rdata_reg[1] ),
        .\end_point.s_axi_ctl_rdata_reg[3]_0 (\end_point.s_axi_ctl_rdata_reg[3] ),
        .\end_point.s_axi_ctl_rdata_reg[3]_1 (\end_point.s_axi_ctl_rdata_reg[3]_0 ),
        .\end_point.s_axi_ctl_rdata_reg[3]_2 (\end_point.s_axi_ctl_rdata_reg[3]_1 ),
        .\end_point.s_axi_ctl_rvalid_reg_0 (\end_point.s_axi_ctl_rvalid_reg ),
        .\end_point.s_axi_ctl_rvalid_reg_1 (\end_point.s_axi_ctl_rvalid_reg_0 ),
        .\end_point.s_axi_ctl_rvalid_reg_2 (\end_point.s_axi_ctl_rvalid_reg_1 ),
        .\end_point.state_reg[0]_0 (\end_point.state_reg[0] ),
        .\end_point.state_reg[0]_1 (\end_point.state_reg[0]_0 ),
        .\end_point.state_reg[1]_0 (\end_point.state_reg[1] ),
        .\end_point.state_reg[1]_1 (\end_point.state_reg[1]_0 ),
        .\end_point.state_reg[2]_0 (\end_point.state_reg[2] ),
        .\end_point.state_reg[2]_1 (\end_point.state_reg[2]_0 ),
        .\end_point.state_reg[2]_2 (\end_point.state_reg[2]_1 ),
        .\end_point.wait_for_idle_reg_0 (\end_point.wait_for_idle_reg ),
        .\end_point.wait_for_idle_reg_1 (\end_point.wait_for_idle_reg_0 ),
        .\end_point_1.request_in_progress_reg (axi_enhanced_cfg_slave_inst_n_62),
        .\end_point_1.s_axi_ctl_arready_reg (\end_point_1.s_axi_ctl_arready_reg ),
        .\end_point_1.s_axi_ctl_arready_reg_0 (\end_point_1.s_axi_ctl_arready_reg_0 ),
        .\end_point_1.s_axi_ctl_rdata_reg[31] (s_axi_ctl_rdata_blk_bridge),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .interrupt_decode(interrupt_decode),
        .interrupt_out(interrupt_out),
        .out(out),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_link_upcfg_cap(pl_link_upcfg_cap),
        .pl_ltssm_state(pl_ltssm_state),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_sel_lnk_rate(pl_sel_lnk_rate),
        .pl_sel_lnk_width(pl_sel_lnk_width),
        .ready_is_given(ready_is_given),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arready_ev_hndlr(s_axi_ctl_arready_ev_hndlr),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_arvalid_ev_hndlr(s_axi_ctl_arvalid_ev_hndlr),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_awvalid_blk_bridge(s_axi_ctl_awvalid_blk_bridge),
        .s_axi_ctl_awvalid_ipic_bridge(s_axi_ctl_awvalid_ipic_bridge),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bready_blk_bridge(s_axi_ctl_bready_blk_bridge),
        .s_axi_ctl_bready_ev_hndlr(s_axi_ctl_bready_ev_hndlr),
        .s_axi_ctl_bready_ipic_bridge(s_axi_ctl_bready_ipic_bridge),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_bvalid_blk_bridge(s_axi_ctl_bvalid_blk_bridge),
        .s_axi_ctl_bvalid_ev_hndlr(s_axi_ctl_bvalid_ev_hndlr),
        .s_axi_ctl_bvalid_ipic_bridge(s_axi_ctl_bvalid_ipic_bridge),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rready_blk_bridge(s_axi_ctl_rready_blk_bridge),
        .s_axi_ctl_rready_ev_hndlr(s_axi_ctl_rready_ev_hndlr),
        .s_axi_ctl_rready_ipic_bridge(s_axi_ctl_rready_ipic_bridge),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_rvalid_blk_bridge(s_axi_ctl_rvalid_blk_bridge),
        .s_axi_ctl_rvalid_ev_hndlr(s_axi_ctl_rvalid_ev_hndlr),
        .s_axi_ctl_rvalid_ipic_bridge(s_axi_ctl_rvalid_ipic_bridge),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wready_blk_bridge(s_axi_ctl_wready_blk_bridge),
        .s_axi_ctl_wready_ev_hndlr(s_axi_ctl_wready_ev_hndlr),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axi_ctl_wvalid_ipic_bridge(s_axi_ctl_wvalid_ipic_bridge),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sys_rst_n_int(sys_rst_n_int),
        .sys_rst_n_int_reg(sys_rst_n_int_reg),
        .trn_recrc_err(trn_recrc_err),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_lite_ipif axi_lite_ipif_inst
       (.\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg_0),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg),
        .SR(SR),
        .S_AXI_RDATA(s_axi_ctl_rdata_ipic_bridge),
        .\end_point.s_axi_ctl_arvalid_ipic_bridge_reg (IP2Bus_WrAck_reg),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_awvalid_ipic_bridge(s_axi_ctl_awvalid_ipic_bridge),
        .s_axi_ctl_bready_ipic_bridge(s_axi_ctl_bready_ipic_bridge),
        .s_axi_ctl_bvalid_ipic_bridge(s_axi_ctl_bvalid_ipic_bridge),
        .s_axi_ctl_rready_ipic_bridge(s_axi_ctl_rready_ipic_bridge),
        .s_axi_ctl_rvalid_ipic_bridge(s_axi_ctl_rvalid_ipic_bridge),
        .s_axi_ctl_wvalid_ipic_bridge(s_axi_ctl_wvalid_ipic_bridge),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sys_rst_n_int(sys_rst_n_int));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_cfg_block_bridge" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg_block_bridge
   (\end_point_1.s_axi_ctl_rvalid_reg_0 ,
    \end_point_1.s_axi_ctl_arready_reg_0 ,
    \end_point.wait_for_idle_reg ,
    s_axi_ctl_bvalid_blk_bridge,
    s_axi_ctl_rvalid_blk_bridge,
    cfg_mgmt_byte_en_n,
    cfg_mgmt_rd_en_n,
    s_axi_ctl_wready_blk_bridge,
    Q,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    SR,
    \resetovrd.reset_reg[4] ,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg ,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ,
    cfg_mgmt_rd_wr_done_n,
    s_axi_ctl_bready,
    \end_point.state_reg[0] ,
    s_axi_ctl_rready,
    \end_point.request_type_reg ,
    s_axi_ctl_awvalid_blk_bridge,
    sys_rst_n_int,
    s_axi_ctl_rready_blk_bridge,
    s_axi_ctl_bready_blk_bridge,
    \end_point.s_axi_ctl_rready_blk_bridge_reg ,
    cfg_mgmt_do,
    \end_point.s_axi_ctl_araddr_blk_bridge_reg[11] );
  output \end_point_1.s_axi_ctl_rvalid_reg_0 ;
  output \end_point_1.s_axi_ctl_arready_reg_0 ;
  output \end_point.wait_for_idle_reg ;
  output s_axi_ctl_bvalid_blk_bridge;
  output s_axi_ctl_rvalid_blk_bridge;
  output [0:0]cfg_mgmt_byte_en_n;
  output cfg_mgmt_rd_en_n;
  output s_axi_ctl_wready_blk_bridge;
  output [31:0]Q;
  output [9:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input \end_point.s_axi_ctl_arvalid_blk_bridge_reg ;
  input \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ;
  input cfg_mgmt_rd_wr_done_n;
  input s_axi_ctl_bready;
  input \end_point.state_reg[0] ;
  input s_axi_ctl_rready;
  input \end_point.request_type_reg ;
  input s_axi_ctl_awvalid_blk_bridge;
  input sys_rst_n_int;
  input s_axi_ctl_rready_blk_bridge;
  input s_axi_ctl_bready_blk_bridge;
  input \end_point.s_axi_ctl_rready_blk_bridge_reg ;
  input [31:0]cfg_mgmt_do;
  input [9:0]\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] ;

  wire [31:0]Q;
  wire [0:0]SR;
  wire [3:3]cfg_mgmt_byte_en;
  wire [0:0]cfg_mgmt_byte_en_n;
  wire [31:0]cfg_mgmt_do;
  wire cfg_mgmt_rd_en0;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_rd_wr_done_n;
  wire \end_point.request_type_reg ;
  wire [9:0]\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ;
  wire \end_point.s_axi_ctl_rready_blk_bridge_reg ;
  wire \end_point.state_reg[0] ;
  wire \end_point.wait_for_idle_reg ;
  wire \end_point_1.request_in_progress_i_1_n_0 ;
  wire \end_point_1.s_axi_ctl_arready_i_1_n_0 ;
  wire \end_point_1.s_axi_ctl_arready_reg_0 ;
  wire \end_point_1.s_axi_ctl_awready_i_1_n_0 ;
  wire \end_point_1.s_axi_ctl_bvalid_i_1_n_0 ;
  wire \end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ;
  wire \end_point_1.s_axi_ctl_rvalid_i_1_n_0 ;
  wire \end_point_1.s_axi_ctl_rvalid_reg_0 ;
  wire [9:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire request_in_progress;
  wire \resetovrd.reset_reg[4] ;
  wire s_axi_ctl_awvalid_blk_bridge;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bready_blk_bridge;
  wire s_axi_ctl_bvalid_blk_bridge;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rready_blk_bridge;
  wire s_axi_ctl_rvalid_blk_bridge;
  wire s_axi_ctl_wready_blk_bridge;
  wire sys_rst_n_int;

  LUT2 #(
    .INIT(4'h8)) 
    \end_point.cfg_mgmt_byte_en[3]_i_1 
       (.I0(\end_point_1.s_axi_ctl_arready_reg_0 ),
        .I1(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .O(cfg_mgmt_rd_en0));
  FDRE \end_point.cfg_mgmt_byte_en_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(cfg_mgmt_rd_en0),
        .Q(cfg_mgmt_byte_en),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [0]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [0]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [1]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [1]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [2]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [2]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [3]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [3]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [4]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [4]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [5]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [5]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [6]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [6]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [7]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [7]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [8]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [8]),
        .R(SR));
  FDRE \end_point.cfg_mgmt_dwaddr_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cfg_mgmt_rd_en0),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge_reg[11] [9]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [9]),
        .R(SR));
  FDRE \end_point.rd_wr_bar_pending_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.s_axi_ctl_arvalid_blk_bridge_reg ),
        .Q(\end_point_1.s_axi_ctl_rvalid_reg_0 ),
        .R(SR));
  LUT6 #(
    .INIT(64'h80808080F0000000)) 
    \end_point.wait_for_idle_i_4 
       (.I0(s_axi_ctl_bready),
        .I1(s_axi_ctl_bvalid_blk_bridge),
        .I2(\end_point.state_reg[0] ),
        .I3(s_axi_ctl_rready),
        .I4(s_axi_ctl_rvalid_blk_bridge),
        .I5(\end_point.request_type_reg ),
        .O(\end_point.wait_for_idle_reg ));
  LUT6 #(
    .INIT(64'h0000000000FEFEFE)) 
    \end_point_1.request_in_progress_i_1 
       (.I0(request_in_progress),
        .I1(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I2(s_axi_ctl_awvalid_blk_bridge),
        .I3(s_axi_ctl_bvalid_blk_bridge),
        .I4(s_axi_ctl_bready_blk_bridge),
        .I5(\end_point.s_axi_ctl_rready_blk_bridge_reg ),
        .O(\end_point_1.request_in_progress_i_1_n_0 ));
  FDRE \end_point_1.request_in_progress_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point_1.request_in_progress_i_1_n_0 ),
        .Q(request_in_progress),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \end_point_1.s_axi_ctl_arready_i_1 
       (.I0(request_in_progress),
        .I1(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I2(s_axi_ctl_awvalid_blk_bridge),
        .I3(\end_point_1.s_axi_ctl_arready_reg_0 ),
        .I4(sys_rst_n_int),
        .I5(s_axi_ctl_wready_blk_bridge),
        .O(\end_point_1.s_axi_ctl_arready_i_1_n_0 ));
  FDRE \end_point_1.s_axi_ctl_arready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point_1.s_axi_ctl_arready_i_1_n_0 ),
        .Q(\end_point_1.s_axi_ctl_arready_reg_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000200)) 
    \end_point_1.s_axi_ctl_awready_i_1 
       (.I0(s_axi_ctl_awvalid_blk_bridge),
        .I1(request_in_progress),
        .I2(\end_point_1.s_axi_ctl_arready_reg_0 ),
        .I3(sys_rst_n_int),
        .I4(s_axi_ctl_wready_blk_bridge),
        .O(\end_point_1.s_axi_ctl_awready_i_1_n_0 ));
  FDRE \end_point_1.s_axi_ctl_awready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point_1.s_axi_ctl_awready_i_1_n_0 ),
        .Q(s_axi_ctl_wready_blk_bridge),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0080F080)) 
    \end_point_1.s_axi_ctl_bvalid_i_1 
       (.I0(s_axi_ctl_wready_blk_bridge),
        .I1(s_axi_ctl_awvalid_blk_bridge),
        .I2(sys_rst_n_int),
        .I3(s_axi_ctl_bvalid_blk_bridge),
        .I4(s_axi_ctl_bready_blk_bridge),
        .O(\end_point_1.s_axi_ctl_bvalid_i_1_n_0 ));
  FDRE \end_point_1.s_axi_ctl_bvalid_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point_1.s_axi_ctl_bvalid_i_1_n_0 ),
        .Q(s_axi_ctl_bvalid_blk_bridge),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h08)) 
    \end_point_1.s_axi_ctl_rdata[31]_i_1 
       (.I0(\end_point_1.s_axi_ctl_rvalid_reg_0 ),
        .I1(request_in_progress),
        .I2(cfg_mgmt_rd_wr_done_n),
        .O(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[16]),
        .Q(Q[16]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[17]),
        .Q(Q[17]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[18]),
        .Q(Q[18]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[19]),
        .Q(Q[19]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[20]),
        .Q(Q[20]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[21]),
        .Q(Q[21]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[22]),
        .Q(Q[22]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[23]),
        .Q(Q[23]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[24]),
        .Q(Q[24]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[25]),
        .Q(Q[25]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[26]),
        .Q(Q[26]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[27]),
        .Q(Q[27]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[28]),
        .Q(Q[28]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[29]),
        .Q(Q[29]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[30]),
        .Q(Q[30]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[31]),
        .Q(Q[31]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \end_point_1.s_axi_ctl_rdata_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point_1.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(cfg_mgmt_do[9]),
        .Q(Q[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000800FF000800)) 
    \end_point_1.s_axi_ctl_rvalid_i_1 
       (.I0(\end_point_1.s_axi_ctl_rvalid_reg_0 ),
        .I1(request_in_progress),
        .I2(cfg_mgmt_rd_wr_done_n),
        .I3(sys_rst_n_int),
        .I4(s_axi_ctl_rvalid_blk_bridge),
        .I5(s_axi_ctl_rready_blk_bridge),
        .O(\end_point_1.s_axi_ctl_rvalid_i_1_n_0 ));
  FDRE \end_point_1.s_axi_ctl_rvalid_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point_1.s_axi_ctl_rvalid_i_1_n_0 ),
        .Q(s_axi_ctl_rvalid_blk_bridge),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_3
       (.I0(\end_point_1.s_axi_ctl_rvalid_reg_0 ),
        .O(cfg_mgmt_rd_en_n));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_9
       (.I0(cfg_mgmt_byte_en),
        .O(cfg_mgmt_byte_en_n));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_cfg_event_handler" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg_event_handler
   (\block_is_ep.s_axi_ctl_bvalid_reg_0 ,
    \end_point.wait_for_idle_reg ,
    s_axi_ctl_rvalid_ev_hndlr,
    s_axi_ctl_bvalid_ev_hndlr,
    s_axi_ctl_arready_ev_hndlr,
    s_axi_ctl_wready_ev_hndlr,
    \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ,
    \resetovrd.reset_reg[4] ,
    s_axi_ctl_rready,
    \end_point.request_type_reg ,
    s_axi_ctl_bready,
    \end_point.state_reg[2] ,
    sys_rst_n_int,
    s_axi_ctl_bready_ev_hndlr,
    s_axi_ctl_arvalid_ev_hndlr,
    \end_point.s_axi_ctl_bready_ev_hndlr_reg ,
    \end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 ,
    s_axi_ctl_rready_ev_hndlr);
  output \block_is_ep.s_axi_ctl_bvalid_reg_0 ;
  output \end_point.wait_for_idle_reg ;
  output s_axi_ctl_rvalid_ev_hndlr;
  output s_axi_ctl_bvalid_ev_hndlr;
  output s_axi_ctl_arready_ev_hndlr;
  output s_axi_ctl_wready_ev_hndlr;
  input \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ;
  input \resetovrd.reset_reg[4] ;
  input s_axi_ctl_rready;
  input \end_point.request_type_reg ;
  input s_axi_ctl_bready;
  input \end_point.state_reg[2] ;
  input sys_rst_n_int;
  input s_axi_ctl_bready_ev_hndlr;
  input s_axi_ctl_arvalid_ev_hndlr;
  input \end_point.s_axi_ctl_bready_ev_hndlr_reg ;
  input \end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 ;
  input s_axi_ctl_rready_ev_hndlr;

  wire \block_is_ep.rd_wr_bar_pending_i_1_n_0 ;
  wire \block_is_ep.s_axi_ctl_arready_i_1_n_0 ;
  wire \block_is_ep.s_axi_ctl_awready_i_1_n_0 ;
  wire \block_is_ep.s_axi_ctl_bvalid_i_1_n_0 ;
  wire \block_is_ep.s_axi_ctl_bvalid_reg_0 ;
  wire \block_is_ep.s_axi_ctl_rvalid_i_1_n_0 ;
  wire \end_point.request_type_reg ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 ;
  wire \end_point.s_axi_ctl_bready_ev_hndlr_reg ;
  wire \end_point.state_reg[2] ;
  wire \end_point.wait_for_idle_reg ;
  wire rd_wr_bar_pending;
  wire \resetovrd.reset_reg[4] ;
  wire s_axi_ctl_arready_ev_hndlr;
  wire s_axi_ctl_arvalid_ev_hndlr;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bready_ev_hndlr;
  wire s_axi_ctl_bvalid_ev_hndlr;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rready_ev_hndlr;
  wire s_axi_ctl_rvalid_ev_hndlr;
  wire s_axi_ctl_wready_ev_hndlr;
  wire sys_rst_n_int;

  LUT5 #(
    .INIT(32'h0A0A000E)) 
    \block_is_ep.rd_wr_bar_pending_i_1 
       (.I0(rd_wr_bar_pending),
        .I1(s_axi_ctl_arvalid_ev_hndlr),
        .I2(\end_point.s_axi_ctl_bready_ev_hndlr_reg ),
        .I3(\end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 ),
        .I4(\block_is_ep.s_axi_ctl_bvalid_reg_0 ),
        .O(\block_is_ep.rd_wr_bar_pending_i_1_n_0 ));
  FDRE \block_is_ep.rd_wr_bar_pending_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\block_is_ep.rd_wr_bar_pending_i_1_n_0 ),
        .Q(rd_wr_bar_pending),
        .R(1'b0));
  FDRE \block_is_ep.request_in_progress_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.s_axi_ctl_awvalid_ev_hndlr_reg ),
        .Q(\block_is_ep.s_axi_ctl_bvalid_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    \block_is_ep.s_axi_ctl_arready_i_1 
       (.I0(\block_is_ep.s_axi_ctl_bvalid_reg_0 ),
        .I1(s_axi_ctl_arvalid_ev_hndlr),
        .I2(\end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 ),
        .I3(s_axi_ctl_arready_ev_hndlr),
        .I4(sys_rst_n_int),
        .I5(s_axi_ctl_wready_ev_hndlr),
        .O(\block_is_ep.s_axi_ctl_arready_i_1_n_0 ));
  FDRE \block_is_ep.s_axi_ctl_arready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\block_is_ep.s_axi_ctl_arready_i_1_n_0 ),
        .Q(s_axi_ctl_arready_ev_hndlr),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000200)) 
    \block_is_ep.s_axi_ctl_awready_i_1 
       (.I0(\end_point.s_axi_ctl_awvalid_ev_hndlr_reg_0 ),
        .I1(\block_is_ep.s_axi_ctl_bvalid_reg_0 ),
        .I2(s_axi_ctl_arready_ev_hndlr),
        .I3(sys_rst_n_int),
        .I4(s_axi_ctl_wready_ev_hndlr),
        .O(\block_is_ep.s_axi_ctl_awready_i_1_n_0 ));
  FDRE \block_is_ep.s_axi_ctl_awready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\block_is_ep.s_axi_ctl_awready_i_1_n_0 ),
        .Q(s_axi_ctl_wready_ev_hndlr),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0020F020)) 
    \block_is_ep.s_axi_ctl_bvalid_i_1 
       (.I0(\block_is_ep.s_axi_ctl_bvalid_reg_0 ),
        .I1(rd_wr_bar_pending),
        .I2(sys_rst_n_int),
        .I3(s_axi_ctl_bvalid_ev_hndlr),
        .I4(s_axi_ctl_bready_ev_hndlr),
        .O(\block_is_ep.s_axi_ctl_bvalid_i_1_n_0 ));
  FDRE \block_is_ep.s_axi_ctl_bvalid_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\block_is_ep.s_axi_ctl_bvalid_i_1_n_0 ),
        .Q(s_axi_ctl_bvalid_ev_hndlr),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0080F080)) 
    \block_is_ep.s_axi_ctl_rvalid_i_1 
       (.I0(\block_is_ep.s_axi_ctl_bvalid_reg_0 ),
        .I1(rd_wr_bar_pending),
        .I2(sys_rst_n_int),
        .I3(s_axi_ctl_rvalid_ev_hndlr),
        .I4(s_axi_ctl_rready_ev_hndlr),
        .O(\block_is_ep.s_axi_ctl_rvalid_i_1_n_0 ));
  FDRE \block_is_ep.s_axi_ctl_rvalid_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\block_is_ep.s_axi_ctl_rvalid_i_1_n_0 ),
        .Q(s_axi_ctl_rvalid_ev_hndlr),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000F8080808)) 
    \end_point.wait_for_idle_i_2 
       (.I0(s_axi_ctl_rready),
        .I1(s_axi_ctl_rvalid_ev_hndlr),
        .I2(\end_point.request_type_reg ),
        .I3(s_axi_ctl_bready),
        .I4(s_axi_ctl_bvalid_ev_hndlr),
        .I5(\end_point.state_reg[2] ),
        .O(\end_point.wait_for_idle_reg ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_cfg_slave" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg_slave
   (pl_directed_link_speed,
    pl_directed_link_auton,
    s_axi_ctl_awvalid_ipic_bridge,
    s_axi_ctl_wvalid_ipic_bridge,
    s_axi_ctl_bready_ipic_bridge,
    IP2Bus_WrAck_reg,
    s_axi_ctl_rready_ipic_bridge,
    s_axi_ctl_awvalid_blk_bridge,
    s_axi_ctl_bready_blk_bridge,
    \end_point_1.s_axi_ctl_arready_reg ,
    s_axi_ctl_rready_blk_bridge,
    \block_is_ep.rd_wr_bar_pending_reg ,
    s_axi_ctl_bready_ev_hndlr,
    s_axi_ctl_arvalid_ev_hndlr,
    s_axi_ctl_rready_ev_hndlr,
    \end_point.state_reg[2]_0 ,
    \end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    ready_is_given,
    s_axi_ctl_wready,
    bridge_status_control,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_mgmt_wr_readonly,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ,
    IP2Bus_WrAck_reg_0,
    \block_is_ep.rd_wr_bar_pending_reg_0 ,
    interrupt_decode,
    \end_point.wait_for_idle_reg_0 ,
    \end_point.wait_for_idle_reg_1 ,
    \end_point.state_reg[1]_0 ,
    \end_point.state_reg[2]_1 ,
    \end_point.state_reg[0]_0 ,
    \end_point.s_axi_ctl_rvalid_reg_0 ,
    \end_point.s_axi_ctl_bvalid_reg_0 ,
    \end_point.s_axi_ctl_awready_reg_0 ,
    \end_point.s_axi_ctl_arready_reg_0 ,
    \end_point.s_axi_ctl_arready_reg_1 ,
    \end_point.s_axi_ctl_rvalid_reg_1 ,
    \end_point.s_axi_ctl_rvalid_reg_2 ,
    \end_point.interrupt_mask_reg[22]_0 ,
    \end_point.s_axi_ctl_bvalid_reg_1 ,
    \end_point.s_axi_ctl_bvalid_reg_2 ,
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ,
    \end_point.pl_directed_link_auton_reg_0 ,
    \end_point.global_intr_disable_reg_0 ,
    \end_point.state_reg[2]_2 ,
    \end_point.s_axi_ctl_rdata_reg[1]_0 ,
    \end_point.s_axi_ctl_rdata_reg[3]_0 ,
    \end_point.s_axi_ctl_rdata_reg[11]_0 ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pl_directed_link_change,
    \end_point.s_axi_ctl_rdata_reg[3]_1 ,
    \end_point.s_axi_ctl_rdata_reg[0]_0 ,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 ,
    \end_point.global_intr_disable_reg_1 ,
    interrupt_out,
    \end_point.s_axi_ctl_awready_reg_1 ,
    \end_point.state_reg[0]_1 ,
    \end_point_1.request_in_progress_reg ,
    \end_point.s_axi_ctl_awready_reg_2 ,
    \end_point.s_axi_ctl_rdata_reg[3]_2 ,
    \sig_bus2ip_ce_reg_reg[3] ,
    cfg_mgmt_wr_rw1c_as_rw_n,
    cfg_mgmt_wr_readonly_n,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \end_point.cfg_mgmt_dwaddr_reg[9] ,
    SR,
    s_axi_ctl_wdata,
    \resetovrd.reset_reg[4] ,
    trn_recrc_err,
    pl_received_hot_rst,
    user_lnk_up_mux_reg,
    \end_point.axi_lite_intf_busy_reg_0 ,
    \end_point.request_type_reg_0 ,
    \end_point.s_axi_ctl_arready_reg_2 ,
    \end_point.request_type_reg_1 ,
    \end_point.request_type_reg_2 ,
    \end_point.ready_is_given_reg_0 ,
    \end_point.ready_is_given_reg_1 ,
    \end_point.global_intr_disable_reg_2 ,
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_1 ,
    \end_point.cfg_mgmt_wr_readonly_o_reg_0 ,
    \end_point.state_reg[1]_1 ,
    out,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    sys_rst_n_int,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_awaddr,
    s_axi_ctl_bvalid_ev_hndlr,
    s_axi_ctl_rvalid_ev_hndlr,
    s_axi_ctl_bvalid_blk_bridge,
    s_axi_ctl_arready_ev_hndlr,
    s_axi_ctl_rvalid_blk_bridge,
    s_axi_ctl_rvalid_ipic_bridge,
    s_axi_ctl_wstrb,
    s_axi_ctl_bvalid_ipic_bridge,
    s_axi_ctl_araddr,
    Q,
    \end_point_1.s_axi_ctl_rdata_reg[31] ,
    pl_sel_lnk_rate,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    pl_sel_lnk_width,
    \cfg_device_number_d_reg[0] ,
    \cfg_device_number_d_reg[1] ,
    \cfg_device_number_d_reg[2] ,
    \cfg_device_number_d_reg[3] ,
    \cfg_device_number_d_reg[4] ,
    pl_ltssm_state,
    \cfg_bus_number_d_reg[1] ,
    \cfg_bus_number_d_reg[2] ,
    \cfg_bus_number_d_reg[7] ,
    \end_point_1.s_axi_ctl_arready_reg_0 ,
    sig_IP2Bus_RdAck,
    s_axi_ctl_wready_blk_bridge,
    s_axi_ctl_wready_ev_hndlr,
    pl_link_upcfg_cap,
    sig_IP2Bus_WrAck,
    sys_rst_n_int_reg,
    \data_width_64.master_int_reg ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in);
  output pl_directed_link_speed;
  output pl_directed_link_auton;
  output s_axi_ctl_awvalid_ipic_bridge;
  output s_axi_ctl_wvalid_ipic_bridge;
  output s_axi_ctl_bready_ipic_bridge;
  output IP2Bus_WrAck_reg;
  output s_axi_ctl_rready_ipic_bridge;
  output s_axi_ctl_awvalid_blk_bridge;
  output s_axi_ctl_bready_blk_bridge;
  output \end_point_1.s_axi_ctl_arready_reg ;
  output s_axi_ctl_rready_blk_bridge;
  output \block_is_ep.rd_wr_bar_pending_reg ;
  output s_axi_ctl_bready_ev_hndlr;
  output s_axi_ctl_arvalid_ev_hndlr;
  output s_axi_ctl_rready_ev_hndlr;
  output \end_point.state_reg[2]_0 ;
  output \end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output ready_is_given;
  output s_axi_ctl_wready;
  output [0:0]bridge_status_control;
  output cfg_mgmt_wr_rw1c_as_rw;
  output cfg_mgmt_wr_readonly;
  output \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ;
  output IP2Bus_WrAck_reg_0;
  output \block_is_ep.rd_wr_bar_pending_reg_0 ;
  output [0:0]interrupt_decode;
  output \end_point.wait_for_idle_reg_0 ;
  output \end_point.wait_for_idle_reg_1 ;
  output \end_point.state_reg[1]_0 ;
  output \end_point.state_reg[2]_1 ;
  output \end_point.state_reg[0]_0 ;
  output \end_point.s_axi_ctl_rvalid_reg_0 ;
  output \end_point.s_axi_ctl_bvalid_reg_0 ;
  output \end_point.s_axi_ctl_awready_reg_0 ;
  output \end_point.s_axi_ctl_arready_reg_0 ;
  output \end_point.s_axi_ctl_arready_reg_1 ;
  output \end_point.s_axi_ctl_rvalid_reg_1 ;
  output \end_point.s_axi_ctl_rvalid_reg_2 ;
  output \end_point.interrupt_mask_reg[22]_0 ;
  output \end_point.s_axi_ctl_bvalid_reg_1 ;
  output \end_point.s_axi_ctl_bvalid_reg_2 ;
  output \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ;
  output \end_point.pl_directed_link_auton_reg_0 ;
  output \end_point.global_intr_disable_reg_0 ;
  output \end_point.state_reg[2]_2 ;
  output \end_point.s_axi_ctl_rdata_reg[1]_0 ;
  output \end_point.s_axi_ctl_rdata_reg[3]_0 ;
  output \end_point.s_axi_ctl_rdata_reg[11]_0 ;
  output [1:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  output [1:0]pl_directed_link_change;
  output \end_point.s_axi_ctl_rdata_reg[3]_1 ;
  output \end_point.s_axi_ctl_rdata_reg[0]_0 ;
  output \end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 ;
  output \end_point.global_intr_disable_reg_1 ;
  output interrupt_out;
  output \end_point.s_axi_ctl_awready_reg_1 ;
  output \end_point.state_reg[0]_1 ;
  output \end_point_1.request_in_progress_reg ;
  output \end_point.s_axi_ctl_awready_reg_2 ;
  output \end_point.s_axi_ctl_rdata_reg[3]_2 ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output cfg_mgmt_wr_rw1c_as_rw_n;
  output cfg_mgmt_wr_readonly_n;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [9:0]\end_point.cfg_mgmt_dwaddr_reg[9] ;
  input [0:0]SR;
  input [31:0]s_axi_ctl_wdata;
  input \resetovrd.reset_reg[4] ;
  input trn_recrc_err;
  input pl_received_hot_rst;
  input user_lnk_up_mux_reg;
  input \end_point.axi_lite_intf_busy_reg_0 ;
  input \end_point.request_type_reg_0 ;
  input \end_point.s_axi_ctl_arready_reg_2 ;
  input \end_point.request_type_reg_1 ;
  input \end_point.request_type_reg_2 ;
  input \end_point.ready_is_given_reg_0 ;
  input \end_point.ready_is_given_reg_1 ;
  input \end_point.global_intr_disable_reg_2 ;
  input \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_1 ;
  input \end_point.cfg_mgmt_wr_readonly_o_reg_0 ;
  input \end_point.state_reg[1]_1 ;
  input [0:0]out;
  input \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  input sys_rst_n_int;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input [11:0]s_axi_ctl_awaddr;
  input s_axi_ctl_bvalid_ev_hndlr;
  input s_axi_ctl_rvalid_ev_hndlr;
  input s_axi_ctl_bvalid_blk_bridge;
  input s_axi_ctl_arready_ev_hndlr;
  input s_axi_ctl_rvalid_blk_bridge;
  input s_axi_ctl_rvalid_ipic_bridge;
  input [3:0]s_axi_ctl_wstrb;
  input s_axi_ctl_bvalid_ipic_bridge;
  input [11:0]s_axi_ctl_araddr;
  input [31:0]Q;
  input [31:0]\end_point_1.s_axi_ctl_rdata_reg[31] ;
  input pl_sel_lnk_rate;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [1:0]pl_sel_lnk_width;
  input \cfg_device_number_d_reg[0] ;
  input \cfg_device_number_d_reg[1] ;
  input \cfg_device_number_d_reg[2] ;
  input \cfg_device_number_d_reg[3] ;
  input \cfg_device_number_d_reg[4] ;
  input [0:0]pl_ltssm_state;
  input \cfg_bus_number_d_reg[1] ;
  input \cfg_bus_number_d_reg[2] ;
  input [5:0]\cfg_bus_number_d_reg[7] ;
  input \end_point_1.s_axi_ctl_arready_reg_0 ;
  input sig_IP2Bus_RdAck;
  input s_axi_ctl_wready_blk_bridge;
  input s_axi_ctl_wready_ev_hndlr;
  input pl_link_upcfg_cap;
  input sig_IP2Bus_WrAck;
  input sys_rst_n_int_reg;
  input [2:0]\data_width_64.master_int_reg ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;

  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire [31:0]Q;
  wire [0:0]SR;
  wire \block_is_ep.rd_wr_bar_pending_reg ;
  wire \block_is_ep.rd_wr_bar_pending_reg_0 ;
  wire [0:0]bridge_status_control;
  wire \cfg_bus_number_d_reg[1] ;
  wire \cfg_bus_number_d_reg[2] ;
  wire [5:0]\cfg_bus_number_d_reg[7] ;
  wire \cfg_device_number_d_reg[0] ;
  wire \cfg_device_number_d_reg[1] ;
  wire \cfg_device_number_d_reg[2] ;
  wire \cfg_device_number_d_reg[3] ;
  wire \cfg_device_number_d_reg[4] ;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_readonly_n;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire cfg_mgmt_wr_rw1c_as_rw_n;
  wire [2:0]\data_width_64.master_int_reg ;
  wire \end_point.axi_lite_intf_busy_reg_0 ;
  wire [9:0]\end_point.cfg_mgmt_dwaddr_reg[9] ;
  wire \end_point.cfg_mgmt_wr_readonly_o_reg_0 ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_3_n_0 ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_1 ;
  wire \end_point.ctl_user_intr_d_reg_n_0_[7] ;
  wire \end_point.ctl_user_intr_d_reg_n_0_[8] ;
  wire \end_point.global_intr_disable_reg_0 ;
  wire \end_point.global_intr_disable_reg_1 ;
  wire \end_point.global_intr_disable_reg_2 ;
  wire \end_point.interrupt_decode[0]_i_1_n_0 ;
  wire \end_point.interrupt_decode[1]_i_1_n_0 ;
  wire \end_point.interrupt_decode[26]_i_1_n_0 ;
  wire \end_point.interrupt_decode[27]_i_1_n_0 ;
  wire \end_point.interrupt_decode[28]_i_1_n_0 ;
  wire \end_point.interrupt_decode[28]_i_3_n_0 ;
  wire \end_point.interrupt_decode[3]_i_1_n_0 ;
  wire \end_point.interrupt_decode_reg_n_0_[0] ;
  wire \end_point.interrupt_decode_reg_n_0_[1] ;
  wire \end_point.interrupt_decode_reg_n_0_[3] ;
  wire \end_point.interrupt_mask[28]_i_3_n_0 ;
  wire \end_point.interrupt_mask_reg[22]_0 ;
  wire \end_point.override_last_core_cap_i_1_n_0 ;
  wire \end_point.override_last_core_cap_i_2_n_0 ;
  wire \end_point.override_last_core_cap_i_3_n_0 ;
  wire \end_point.override_last_core_cap_i_4_n_0 ;
  wire \end_point.override_last_core_cap_reg_n_0 ;
  wire \end_point.pl_directed_link_auton_reg_0 ;
  wire \end_point.pl_directed_link_change_d[0]_i_1_n_0 ;
  wire \end_point.pl_directed_link_change_d[1]_i_1_n_0 ;
  wire \end_point.pl_directed_link_width[1]_i_1_n_0 ;
  wire \end_point.pl_directed_link_width[1]_i_2_n_0 ;
  wire \end_point.pl_directed_link_width[1]_i_3_n_0 ;
  wire \end_point.pl_directed_link_width[1]_i_5_n_0 ;
  wire \end_point.pl_directed_link_width[1]_i_6_n_0 ;
  wire \end_point.pl_directed_link_width[1]_i_7_n_0 ;
  wire \end_point.port_number[7]_i_1_n_0 ;
  wire \end_point.port_number[7]_i_2_n_0 ;
  wire \end_point.port_number_reg_n_0_[0] ;
  wire \end_point.port_number_reg_n_0_[1] ;
  wire \end_point.port_number_reg_n_0_[2] ;
  wire \end_point.port_number_reg_n_0_[3] ;
  wire \end_point.port_number_reg_n_0_[4] ;
  wire \end_point.port_number_reg_n_0_[5] ;
  wire \end_point.port_number_reg_n_0_[6] ;
  wire \end_point.port_number_reg_n_0_[7] ;
  wire \end_point.ready_is_given_reg_0 ;
  wire \end_point.ready_is_given_reg_1 ;
  wire \end_point.request_type_reg_0 ;
  wire \end_point.request_type_reg_1 ;
  wire \end_point.request_type_reg_2 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[10]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[11]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[2]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[3]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[4]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[5]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[6]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[7]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[8]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge[9]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ;
  wire \end_point.s_axi_ctl_araddr_ipic_bridge[2]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_ipic_bridge[3]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_ipic_bridge[4]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_arready_i_4_n_0 ;
  wire \end_point.s_axi_ctl_arready_reg_0 ;
  wire \end_point.s_axi_ctl_arready_reg_1 ;
  wire \end_point.s_axi_ctl_arready_reg_2 ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 ;
  wire \end_point.s_axi_ctl_arvalid_ev_hndlr_i_1_n_0 ;
  wire \end_point.s_axi_ctl_arvalid_ipic_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge[2]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge[3]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge[4]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_awready_reg_0 ;
  wire \end_point.s_axi_ctl_awready_reg_1 ;
  wire \end_point.s_axi_ctl_awready_reg_2 ;
  wire \end_point.s_axi_ctl_awvalid_blk_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awvalid_blk_bridge_i_2_n_0 ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_i_2_n_0 ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_i_3_n_0 ;
  wire \end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awvalid_ipic_bridge_i_2_n_0 ;
  wire \end_point.s_axi_ctl_bready_blk_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_bready_ev_hndlr_i_1_n_0 ;
  wire \end_point.s_axi_ctl_bready_ipic_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_bvalid_i_5_n_0 ;
  wire \end_point.s_axi_ctl_bvalid_reg_0 ;
  wire \end_point.s_axi_ctl_bvalid_reg_1 ;
  wire \end_point.s_axi_ctl_bvalid_reg_2 ;
  wire \end_point.s_axi_ctl_rdata[0]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[0]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[0]_i_6_n_0 ;
  wire \end_point.s_axi_ctl_rdata[10]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[11]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[11]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[12]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[12]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[13]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[13]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[14]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[14]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[15]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[15]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[15]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[16]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[16]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[16]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[16]_i_4_n_0 ;
  wire \end_point.s_axi_ctl_rdata[17]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[17]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[17]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[18]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[18]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[19]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[19]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[1]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[1]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[1]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[20]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[20]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[20]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[21]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[21]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[21]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[21]_i_5_n_0 ;
  wire \end_point.s_axi_ctl_rdata[22]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[22]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[22]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[23]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[23]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[23]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[23]_i_4_n_0 ;
  wire \end_point.s_axi_ctl_rdata[24]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[24]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[25]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[25]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[25]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[25]_i_4_n_0 ;
  wire \end_point.s_axi_ctl_rdata[26]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[26]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[27]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[27]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[28]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[28]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[28]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[28]_i_4_n_0 ;
  wire \end_point.s_axi_ctl_rdata[28]_i_5_n_0 ;
  wire \end_point.s_axi_ctl_rdata[29]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[29]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[29]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[29]_i_4_n_0 ;
  wire \end_point.s_axi_ctl_rdata[29]_i_5_n_0 ;
  wire \end_point.s_axi_ctl_rdata[2]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[2]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[2]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[30]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[31]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[31]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[3]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[4]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[5]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[6]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[7]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[8]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata[8]_i_2_n_0 ;
  wire \end_point.s_axi_ctl_rdata[8]_i_3_n_0 ;
  wire \end_point.s_axi_ctl_rdata[9]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[0]_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[11]_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[1]_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_1 ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_2 ;
  wire \end_point.s_axi_ctl_rready_blk_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rready_ev_hndlr_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rready_ipic_bridge_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rvalid_i_5_n_0 ;
  wire \end_point.s_axi_ctl_rvalid_reg_0 ;
  wire \end_point.s_axi_ctl_rvalid_reg_1 ;
  wire \end_point.s_axi_ctl_rvalid_reg_2 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[0]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[10]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[11]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[12]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[13]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[14]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[15]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[16]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[17]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[18]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[19]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[1]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[20]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[21]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[22]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[23]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[24]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[25]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[26]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[27]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[28]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[29]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[2]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[30]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[31]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[3]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[4]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[5]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[6]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[7]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[8]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wdata_ipic_bridge[9]_i_1_n_0 ;
  wire \end_point.s_axi_ctl_wvalid_ipic_bridge_i_1_n_0 ;
  wire \end_point.state[0]_i_10_n_0 ;
  wire \end_point.state[0]_i_11_n_0 ;
  wire \end_point.state[0]_i_12_n_0 ;
  wire \end_point.state[0]_i_1_n_0 ;
  wire \end_point.state[0]_i_2_n_0 ;
  wire \end_point.state[0]_i_3_n_0 ;
  wire \end_point.state[0]_i_4_n_0 ;
  wire \end_point.state[0]_i_6_n_0 ;
  wire \end_point.state[0]_i_7_n_0 ;
  wire \end_point.state[0]_i_8_n_0 ;
  wire \end_point.state[0]_i_9_n_0 ;
  wire \end_point.state[1]_i_1_n_0 ;
  wire \end_point.state[1]_i_3_n_0 ;
  wire \end_point.state[1]_i_4_n_0 ;
  wire \end_point.state[2]_i_10_n_0 ;
  wire \end_point.state[2]_i_1_n_0 ;
  wire \end_point.state[2]_i_2_n_0 ;
  wire \end_point.state[2]_i_3_n_0 ;
  wire \end_point.state[2]_i_4_n_0 ;
  wire \end_point.state[2]_i_5_n_0 ;
  wire \end_point.state[2]_i_6_n_0 ;
  wire \end_point.state[2]_i_7_n_0 ;
  wire \end_point.state[2]_i_9_n_0 ;
  wire \end_point.state_reg[0]_0 ;
  wire \end_point.state_reg[0]_1 ;
  wire \end_point.state_reg[1]_0 ;
  wire \end_point.state_reg[1]_1 ;
  wire \end_point.state_reg[2]_0 ;
  wire \end_point.state_reg[2]_1 ;
  wire \end_point.state_reg[2]_2 ;
  wire \end_point.wait_for_idle_i_6_n_0 ;
  wire \end_point.wait_for_idle_i_7_n_0 ;
  wire \end_point.wait_for_idle_i_8_n_0 ;
  wire \end_point.wait_for_idle_reg_0 ;
  wire \end_point.wait_for_idle_reg_1 ;
  wire \end_point_1.request_in_progress_reg ;
  wire \end_point_1.s_axi_ctl_arready_reg ;
  wire \end_point_1.s_axi_ctl_arready_reg_0 ;
  wire [31:0]\end_point_1.s_axi_ctl_rdata_reg[31] ;
  wire [1:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [0:0]interrupt_decode;
  wire [28:0]interrupt_mask;
  wire interrupt_out;
  wire interrupt_out_INST_0_i_1_n_0;
  wire interrupt_out_INST_0_i_2_n_0;
  wire [0:0]out;
  wire [27:1]p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in_1;
  wire [27:5]p_0_out;
  wire p_12_in;
  wire p_1_in;
  wire p_1_in2_in;
  wire [4:2]p_1_in5_in;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire pl_link_upcfg_cap;
  wire [0:0]pl_ltssm_state;
  wire pl_received_hot_reset_d;
  wire pl_received_hot_rst;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire ready_is_given;
  wire \resetovrd.reset_reg[4] ;
  wire [11:0]s_axi_ctl_araddr;
  wire [5:4]s_axi_ctl_araddr_ipic_bridge;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arready_ev_hndlr;
  wire s_axi_ctl_arvalid;
  wire s_axi_ctl_arvalid_ev_hndlr;
  wire [11:0]s_axi_ctl_awaddr;
  wire [5:4]s_axi_ctl_awaddr_ipic_bridge;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_awvalid_blk_bridge;
  wire s_axi_ctl_awvalid_ipic_bridge;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bready_blk_bridge;
  wire s_axi_ctl_bready_ev_hndlr;
  wire s_axi_ctl_bready_ipic_bridge;
  wire s_axi_ctl_bvalid;
  wire s_axi_ctl_bvalid_blk_bridge;
  wire s_axi_ctl_bvalid_ev_hndlr;
  wire s_axi_ctl_bvalid_ipic_bridge;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rready_blk_bridge;
  wire s_axi_ctl_rready_ev_hndlr;
  wire s_axi_ctl_rready_ipic_bridge;
  wire s_axi_ctl_rvalid;
  wire s_axi_ctl_rvalid_blk_bridge;
  wire s_axi_ctl_rvalid_ev_hndlr;
  wire s_axi_ctl_rvalid_ipic_bridge;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire s_axi_ctl_wready_blk_bridge;
  wire s_axi_ctl_wready_ev_hndlr;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axi_ctl_wvalid_ipic_bridge;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire [1:1]state;
  wire sys_rst_n_int;
  wire sys_rst_n_int_reg;
  wire trn_lnk_up_d;
  wire trn_recrc_err;
  wire trn_recrc_err_d;
  wire user_lnk_up_mux_reg;

  LUT3 #(
    .INIT(8'h20)) 
    IP2Bus_WrAck_i_1
       (.I0(out),
        .I1(IP2Bus_WrAck_reg),
        .I2(\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .O(IP2Bus_WrAck_reg_0));
  LUT5 #(
    .INIT(32'hFF8F8F8F)) 
    \block_is_ep.rd_wr_bar_pending_i_2 
       (.I0(s_axi_ctl_bready_ev_hndlr),
        .I1(s_axi_ctl_bvalid_ev_hndlr),
        .I2(sys_rst_n_int),
        .I3(s_axi_ctl_rvalid_ev_hndlr),
        .I4(s_axi_ctl_rready_ev_hndlr),
        .O(\block_is_ep.rd_wr_bar_pending_reg_0 ));
  FDRE \end_point.axi_lite_intf_busy_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.axi_lite_intf_busy_reg_0 ),
        .Q(\end_point.state_reg[2]_0 ),
        .R(1'b0));
  FDRE \end_point.cfg_mgmt_wr_readonly_o_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.cfg_mgmt_wr_readonly_o_reg_0 ),
        .Q(cfg_mgmt_wr_readonly),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_2 
       (.I0(\end_point.s_axi_ctl_bvalid_i_5_n_0 ),
        .I1(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I2(\end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_3_n_0 ),
        .I3(\end_point.pl_directed_link_auton_reg_0 ),
        .I4(\end_point.port_number[7]_i_2_n_0 ),
        .I5(\end_point.global_intr_disable_reg_0 ),
        .O(\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_3 
       (.I0(s_axi_ctl_awaddr[4]),
        .I1(s_axi_ctl_awaddr[5]),
        .I2(s_axi_ctl_awaddr[2]),
        .O(\end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_3_n_0 ));
  FDRE \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_1 ),
        .Q(cfg_mgmt_wr_rw1c_as_rw),
        .R(SR));
  FDRE \end_point.ctl_user_intr_d_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.master_int_reg [0]),
        .Q(p_12_in),
        .R(SR));
  FDRE \end_point.ctl_user_intr_d_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.master_int_reg [1]),
        .Q(\end_point.ctl_user_intr_d_reg_n_0_[7] ),
        .R(SR));
  FDRE \end_point.ctl_user_intr_d_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.master_int_reg [2]),
        .Q(\end_point.ctl_user_intr_d_reg_n_0_[8] ),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFF7FFFFFFFFF)) 
    \end_point.global_intr_disable_i_2 
       (.I0(s_axi_ctl_awaddr[2]),
        .I1(s_axi_ctl_awaddr[5]),
        .I2(s_axi_ctl_awaddr[4]),
        .I3(\end_point.state_reg[2]_1 ),
        .I4(\end_point.state_reg[0]_0 ),
        .I5(s_axi_ctl_wstrb[1]),
        .O(\end_point.global_intr_disable_reg_1 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \end_point.global_intr_disable_i_3 
       (.I0(s_axi_ctl_awaddr[3]),
        .I1(s_axi_ctl_awaddr[0]),
        .I2(s_axi_ctl_awaddr[1]),
        .I3(s_axi_ctl_awaddr[6]),
        .O(\end_point.global_intr_disable_reg_0 ));
  FDRE \end_point.global_intr_disable_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.global_intr_disable_reg_2 ),
        .Q(bridge_status_control),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT5 #(
    .INIT(32'h7F770F00)) 
    \end_point.interrupt_decode[0]_i_1 
       (.I0(s_axi_ctl_wdata[0]),
        .I1(p_0_out[5]),
        .I2(user_lnk_up_mux_reg),
        .I3(trn_lnk_up_d),
        .I4(\end_point.interrupt_decode_reg_n_0_[0] ),
        .O(\end_point.interrupt_decode[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7F770F00)) 
    \end_point.interrupt_decode[1]_i_1 
       (.I0(s_axi_ctl_wdata[1]),
        .I1(p_0_out[5]),
        .I2(trn_recrc_err_d),
        .I3(trn_recrc_err),
        .I4(\end_point.interrupt_decode_reg_n_0_[1] ),
        .O(\end_point.interrupt_decode[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F770F0F0F00)) 
    \end_point.interrupt_decode[26]_i_1 
       (.I0(s_axi_ctl_wdata[26]),
        .I1(p_0_out[27]),
        .I2(p_12_in),
        .I3(p_1_in2_in),
        .I4(p_0_in1_in_1),
        .I5(p_1_in5_in[2]),
        .O(\end_point.interrupt_decode[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F770F0F0F00)) 
    \end_point.interrupt_decode[27]_i_1 
       (.I0(s_axi_ctl_wdata[27]),
        .I1(p_0_out[27]),
        .I2(\end_point.ctl_user_intr_d_reg_n_0_[7] ),
        .I3(p_1_in),
        .I4(p_0_in0_in),
        .I5(p_1_in5_in[3]),
        .O(\end_point.interrupt_decode[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7F770F00)) 
    \end_point.interrupt_decode[28]_i_1 
       (.I0(s_axi_ctl_wdata[28]),
        .I1(p_0_out[27]),
        .I2(\end_point.ctl_user_intr_d_reg_n_0_[8] ),
        .I3(\data_width_64.master_int_reg [2]),
        .I4(p_1_in5_in[4]),
        .O(\end_point.interrupt_decode[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \end_point.interrupt_decode[28]_i_2 
       (.I0(s_axi_ctl_awaddr[5]),
        .I1(s_axi_ctl_awaddr[4]),
        .I2(s_axi_ctl_awaddr[3]),
        .I3(s_axi_ctl_wstrb[3]),
        .I4(\end_point.interrupt_mask_reg[22]_0 ),
        .I5(\end_point.interrupt_decode[28]_i_3_n_0 ),
        .O(p_0_out[27]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \end_point.interrupt_decode[28]_i_3 
       (.I0(\end_point.pl_directed_link_auton_reg_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(\end_point.pl_directed_link_width[1]_i_3_n_0 ),
        .I4(s_axi_ctl_awaddr[2]),
        .O(\end_point.interrupt_decode[28]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7F770F00)) 
    \end_point.interrupt_decode[3]_i_1 
       (.I0(s_axi_ctl_wdata[3]),
        .I1(p_0_out[5]),
        .I2(pl_received_hot_reset_d),
        .I3(pl_received_hot_rst),
        .I4(\end_point.interrupt_decode_reg_n_0_[3] ),
        .O(\end_point.interrupt_decode[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \end_point.interrupt_decode[3]_i_2 
       (.I0(\end_point.interrupt_decode[28]_i_3_n_0 ),
        .I1(s_axi_ctl_awaddr[5]),
        .I2(s_axi_ctl_awaddr[4]),
        .I3(s_axi_ctl_awaddr[3]),
        .I4(s_axi_ctl_wstrb[0]),
        .I5(\end_point.interrupt_mask_reg[22]_0 ),
        .O(p_0_out[5]));
  FDRE \end_point.interrupt_decode_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.interrupt_decode[0]_i_1_n_0 ),
        .Q(\end_point.interrupt_decode_reg_n_0_[0] ),
        .R(SR));
  FDRE \end_point.interrupt_decode_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.interrupt_decode[1]_i_1_n_0 ),
        .Q(\end_point.interrupt_decode_reg_n_0_[1] ),
        .R(SR));
  FDRE \end_point.interrupt_decode_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.interrupt_decode[26]_i_1_n_0 ),
        .Q(p_1_in5_in[2]),
        .R(SR));
  FDRE \end_point.interrupt_decode_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.interrupt_decode[27]_i_1_n_0 ),
        .Q(p_1_in5_in[3]),
        .R(SR));
  FDRE \end_point.interrupt_decode_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.interrupt_decode[28]_i_1_n_0 ),
        .Q(p_1_in5_in[4]),
        .R(SR));
  FDRE \end_point.interrupt_decode_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.interrupt_decode[3]_i_1_n_0 ),
        .Q(\end_point.interrupt_decode_reg_n_0_[3] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \end_point.interrupt_mask[23]_i_1 
       (.I0(\end_point.interrupt_mask[28]_i_3_n_0 ),
        .I1(s_axi_ctl_wstrb[2]),
        .I2(\end_point.interrupt_mask_reg[22]_0 ),
        .I3(s_axi_ctl_awaddr[3]),
        .I4(s_axi_ctl_awaddr[4]),
        .I5(s_axi_ctl_awaddr[5]),
        .O(p_0_in[21]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \end_point.interrupt_mask[28]_i_1 
       (.I0(s_axi_ctl_awaddr[5]),
        .I1(s_axi_ctl_awaddr[4]),
        .I2(s_axi_ctl_awaddr[3]),
        .I3(s_axi_ctl_wstrb[3]),
        .I4(\end_point.interrupt_mask_reg[22]_0 ),
        .I5(\end_point.interrupt_mask[28]_i_3_n_0 ),
        .O(p_0_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \end_point.interrupt_mask[28]_i_2 
       (.I0(s_axi_ctl_wready),
        .I1(s_axi_ctl_awvalid),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.interrupt_mask_reg[22]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    \end_point.interrupt_mask[28]_i_3 
       (.I0(\end_point.pl_directed_link_auton_reg_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_awaddr[2]),
        .I4(\end_point.pl_directed_link_width[1]_i_3_n_0 ),
        .O(\end_point.interrupt_mask[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \end_point.interrupt_mask[3]_i_1 
       (.I0(s_axi_ctl_awaddr[5]),
        .I1(s_axi_ctl_awaddr[4]),
        .I2(s_axi_ctl_awaddr[3]),
        .I3(s_axi_ctl_wstrb[0]),
        .I4(\end_point.interrupt_mask_reg[22]_0 ),
        .I5(\end_point.interrupt_mask[28]_i_3_n_0 ),
        .O(p_0_in[1]));
  FDRE \end_point.interrupt_mask_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[1]),
        .D(s_axi_ctl_wdata[0]),
        .Q(interrupt_mask[0]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[1]),
        .D(s_axi_ctl_wdata[1]),
        .Q(interrupt_mask[1]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[21]),
        .D(s_axi_ctl_wdata[20]),
        .Q(interrupt_mask[20]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[21]),
        .D(s_axi_ctl_wdata[21]),
        .Q(interrupt_mask[21]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[21]),
        .D(s_axi_ctl_wdata[22]),
        .Q(interrupt_mask[22]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[21]),
        .D(s_axi_ctl_wdata[23]),
        .Q(interrupt_mask[23]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[27]),
        .D(s_axi_ctl_wdata[24]),
        .Q(interrupt_mask[24]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[27]),
        .D(s_axi_ctl_wdata[25]),
        .Q(interrupt_mask[25]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[27]),
        .D(s_axi_ctl_wdata[26]),
        .Q(interrupt_mask[26]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[27]),
        .D(s_axi_ctl_wdata[27]),
        .Q(interrupt_mask[27]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[27]),
        .D(s_axi_ctl_wdata[28]),
        .Q(interrupt_mask[28]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[1]),
        .D(s_axi_ctl_wdata[2]),
        .Q(interrupt_mask[2]),
        .R(SR));
  FDRE \end_point.interrupt_mask_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(p_0_in[1]),
        .D(s_axi_ctl_wdata[3]),
        .Q(interrupt_mask[3]),
        .R(SR));
  LUT5 #(
    .INIT(32'h0000AAEA)) 
    \end_point.override_last_core_cap_i_1 
       (.I0(\end_point.override_last_core_cap_reg_n_0 ),
        .I1(\end_point.override_last_core_cap_i_2_n_0 ),
        .I2(\end_point.override_last_core_cap_i_3_n_0 ),
        .I3(\end_point.override_last_core_cap_i_4_n_0 ),
        .I4(\end_point.state_reg[0]_1 ),
        .O(\end_point.override_last_core_cap_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \end_point.override_last_core_cap_i_2 
       (.I0(\end_point.state_reg[2]_0 ),
        .I1(s_axi_ctl_arvalid),
        .I2(\end_point.state[0]_i_9_n_0 ),
        .O(\end_point.override_last_core_cap_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \end_point.override_last_core_cap_i_3 
       (.I0(s_axi_ctl_araddr[11]),
        .I1(s_axi_ctl_araddr[10]),
        .I2(s_axi_ctl_araddr[9]),
        .I3(s_axi_ctl_araddr[8]),
        .I4(s_axi_ctl_araddr[7]),
        .O(\end_point.override_last_core_cap_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \end_point.override_last_core_cap_i_4 
       (.I0(s_axi_ctl_araddr[4]),
        .I1(s_axi_ctl_araddr[5]),
        .I2(s_axi_ctl_araddr[3]),
        .I3(s_axi_ctl_araddr[6]),
        .I4(\end_point.state_reg[2]_2 ),
        .I5(s_axi_ctl_araddr[2]),
        .O(\end_point.override_last_core_cap_i_4_n_0 ));
  FDRE \end_point.override_last_core_cap_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.override_last_core_cap_i_1_n_0 ),
        .Q(\end_point.override_last_core_cap_reg_n_0 ),
        .R(1'b0));
  FDRE \end_point.pl_directed_link_auton_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.pl_directed_link_width[1]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[19]),
        .Q(pl_directed_link_auton),
        .R(SR));
  LUT4 #(
    .INIT(16'h00E2)) 
    \end_point.pl_directed_link_change_d[0]_i_1 
       (.I0(pl_directed_link_change[0]),
        .I1(\end_point.pl_directed_link_width[1]_i_1_n_0 ),
        .I2(s_axi_ctl_wdata[20]),
        .I3(sys_rst_n_int_reg),
        .O(\end_point.pl_directed_link_change_d[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \end_point.pl_directed_link_change_d[1]_i_1 
       (.I0(pl_directed_link_change[1]),
        .I1(\end_point.pl_directed_link_width[1]_i_1_n_0 ),
        .I2(s_axi_ctl_wdata[21]),
        .I3(sys_rst_n_int_reg),
        .O(\end_point.pl_directed_link_change_d[1]_i_1_n_0 ));
  FDRE \end_point.pl_directed_link_change_d_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.pl_directed_link_change_d[0]_i_1_n_0 ),
        .Q(pl_directed_link_change[0]),
        .R(1'b0));
  FDRE \end_point.pl_directed_link_change_d_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.pl_directed_link_change_d[1]_i_1_n_0 ),
        .Q(pl_directed_link_change[1]),
        .R(1'b0));
  FDRE \end_point.pl_directed_link_speed_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.pl_directed_link_width[1]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[18]),
        .Q(pl_directed_link_speed),
        .R(SR));
  LUT5 #(
    .INIT(32'h0000DF00)) 
    \end_point.pl_directed_link_width[1]_i_1 
       (.I0(\end_point.pl_directed_link_width[1]_i_2_n_0 ),
        .I1(\end_point.pl_directed_link_width[1]_i_3_n_0 ),
        .I2(\end_point.pl_directed_link_auton_reg_0 ),
        .I3(\end_point.pl_directed_link_width[1]_i_5_n_0 ),
        .I4(\end_point.pl_directed_link_width[1]_i_6_n_0 ),
        .O(\end_point.pl_directed_link_width[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \end_point.pl_directed_link_width[1]_i_2 
       (.I0(s_axi_ctl_awaddr[5]),
        .I1(s_axi_ctl_awaddr[3]),
        .I2(s_axi_ctl_awaddr[4]),
        .O(\end_point.pl_directed_link_width[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \end_point.pl_directed_link_width[1]_i_3 
       (.I0(s_axi_ctl_awaddr[6]),
        .I1(s_axi_ctl_awaddr[1]),
        .I2(s_axi_ctl_awaddr[0]),
        .O(\end_point.pl_directed_link_width[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    \end_point.pl_directed_link_width[1]_i_4 
       (.I0(s_axi_ctl_awaddr[9]),
        .I1(s_axi_ctl_awaddr[10]),
        .I2(s_axi_ctl_awaddr[11]),
        .I3(s_axi_ctl_awaddr[8]),
        .I4(s_axi_ctl_awaddr[7]),
        .O(\end_point.pl_directed_link_auton_reg_0 ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \end_point.pl_directed_link_width[1]_i_5 
       (.I0(s_axi_ctl_wstrb[2]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_bvalid_i_5_n_0 ),
        .I5(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.pl_directed_link_width[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \end_point.pl_directed_link_width[1]_i_6 
       (.I0(\end_point.pl_directed_link_auton_reg_0 ),
        .I1(s_axi_ctl_awaddr[1]),
        .I2(s_axi_ctl_awaddr[0]),
        .I3(s_axi_ctl_awaddr[2]),
        .I4(s_axi_ctl_awaddr[6]),
        .I5(\end_point.pl_directed_link_width[1]_i_7_n_0 ),
        .O(\end_point.pl_directed_link_width[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \end_point.pl_directed_link_width[1]_i_7 
       (.I0(s_axi_ctl_awaddr[3]),
        .I1(s_axi_ctl_awaddr[4]),
        .I2(s_axi_ctl_awaddr[5]),
        .O(\end_point.pl_directed_link_width[1]_i_7_n_0 ));
  FDRE \end_point.pl_directed_link_width_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.pl_directed_link_width[1]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[16]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [0]),
        .R(SR));
  FDRE \end_point.pl_directed_link_width_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.pl_directed_link_width[1]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[17]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [1]),
        .R(SR));
  FDSE \end_point.pl_received_hot_reset_d_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pl_received_hot_rst),
        .Q(pl_received_hot_reset_d),
        .S(SR));
  LUT5 #(
    .INIT(32'h80000000)) 
    \end_point.port_number[7]_i_1 
       (.I0(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I1(s_axi_ctl_wready),
        .I2(s_axi_ctl_awvalid),
        .I3(\end_point.port_number[7]_i_2_n_0 ),
        .I4(\end_point.pl_directed_link_width[1]_i_6_n_0 ),
        .O(\end_point.port_number[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \end_point.port_number[7]_i_2 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(s_axi_ctl_wstrb[2]),
        .O(\end_point.port_number[7]_i_2_n_0 ));
  FDRE \end_point.port_number_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[16]),
        .Q(\end_point.port_number_reg_n_0_[0] ),
        .R(SR));
  FDRE \end_point.port_number_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[17]),
        .Q(\end_point.port_number_reg_n_0_[1] ),
        .R(SR));
  FDRE \end_point.port_number_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[18]),
        .Q(\end_point.port_number_reg_n_0_[2] ),
        .R(SR));
  FDRE \end_point.port_number_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[19]),
        .Q(\end_point.port_number_reg_n_0_[3] ),
        .R(SR));
  FDRE \end_point.port_number_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[20]),
        .Q(\end_point.port_number_reg_n_0_[4] ),
        .R(SR));
  FDRE \end_point.port_number_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[21]),
        .Q(\end_point.port_number_reg_n_0_[5] ),
        .R(SR));
  FDRE \end_point.port_number_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[22]),
        .Q(\end_point.port_number_reg_n_0_[6] ),
        .R(SR));
  FDRE \end_point.port_number_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.port_number[7]_i_1_n_0 ),
        .D(s_axi_ctl_wdata[23]),
        .Q(\end_point.port_number_reg_n_0_[7] ),
        .R(SR));
  FDRE \end_point.ready_is_given_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.ready_is_given_reg_0 ),
        .Q(ready_is_given),
        .R(SR));
  FDRE \end_point.request_type_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.request_type_reg_0 ),
        .Q(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[10]_i_1 
       (.I0(s_axi_ctl_araddr[10]),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0CD3)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1 
       (.I0(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[11]_i_2 
       (.I0(s_axi_ctl_araddr[11]),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[2]_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(s_axi_ctl_araddr[2]),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[3]_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(s_axi_ctl_araddr[3]),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[4]_i_1 
       (.I0(s_axi_ctl_araddr[4]),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[5]_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[6]_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(s_axi_ctl_araddr[6]),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[7]_i_1 
       (.I0(s_axi_ctl_araddr[7]),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[8]_i_1 
       (.I0(s_axi_ctl_araddr[8]),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \end_point.s_axi_ctl_araddr_blk_bridge[9]_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(s_axi_ctl_araddr[9]),
        .O(\end_point.s_axi_ctl_araddr_blk_bridge[9]_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[10]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [8]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_2_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [9]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[2]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [0]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[3]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [1]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[4]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [2]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[5]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [3]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[6]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [4]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[7]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [5]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[8]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [6]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_blk_bridge_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_blk_bridge[11]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_blk_bridge[9]_i_1_n_0 ),
        .Q(\end_point.cfg_mgmt_dwaddr_reg[9] [7]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \end_point.s_axi_ctl_araddr_ipic_bridge[2]_i_1 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_araddr[2]),
        .O(\end_point.s_axi_ctl_araddr_ipic_bridge[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \end_point.s_axi_ctl_araddr_ipic_bridge[3]_i_1 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_araddr[3]),
        .O(\end_point.s_axi_ctl_araddr_ipic_bridge[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_araddr_ipic_bridge[4]_i_1 
       (.I0(s_axi_ctl_araddr[4]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_araddr_ipic_bridge[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h50B5)) 
    \end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_2 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_2_n_0 ));
  FDRE \end_point.s_axi_ctl_araddr_ipic_bridge_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_ipic_bridge[2]_i_1_n_0 ),
        .Q(\sig_bus2ip_ce_reg_reg[3]_1 [0]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_ipic_bridge[3]_i_1_n_0 ),
        .Q(\sig_bus2ip_ce_reg_reg[3]_1 [1]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_ipic_bridge_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_ipic_bridge[4]_i_1_n_0 ),
        .Q(s_axi_ctl_araddr_ipic_bridge[4]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_araddr_ipic_bridge_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_araddr_ipic_bridge[5]_i_2_n_0 ),
        .Q(s_axi_ctl_araddr_ipic_bridge[5]),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000DF5DDFFD)) 
    \end_point.s_axi_ctl_arready_i_2 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(s_axi_ctl_arready),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(\end_point.state_reg[2]_1 ),
        .I4(s_axi_ctl_arready_ev_hndlr),
        .I5(\end_point.s_axi_ctl_arready_i_4_n_0 ),
        .O(\end_point.s_axi_ctl_arready_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \end_point.s_axi_ctl_arready_i_3 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_arready_reg_1 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT5 #(
    .INIT(32'h00380008)) 
    \end_point.s_axi_ctl_arready_i_4 
       (.I0(\end_point_1.s_axi_ctl_arready_reg_0 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[1]_0 ),
        .I4(sig_IP2Bus_RdAck),
        .O(\end_point.s_axi_ctl_arready_i_4_n_0 ));
  FDRE \end_point.s_axi_ctl_arready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.s_axi_ctl_arready_reg_2 ),
        .Q(s_axi_ctl_arready),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000070000000000)) 
    \end_point.s_axi_ctl_arvalid_blk_bridge_i_1 
       (.I0(s_axi_ctl_rready),
        .I1(s_axi_ctl_rvalid_blk_bridge),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 ),
        .I4(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I5(s_axi_ctl_arvalid),
        .O(\end_point.s_axi_ctl_arvalid_blk_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_arvalid_blk_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_blk_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_arvalid_blk_bridge_i_1_n_0 ),
        .Q(\end_point_1.s_axi_ctl_arready_reg ),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000070000000000)) 
    \end_point.s_axi_ctl_arvalid_ev_hndlr_i_1 
       (.I0(s_axi_ctl_rvalid_ev_hndlr),
        .I1(s_axi_ctl_rready),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_3_n_0 ),
        .I4(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I5(s_axi_ctl_arvalid),
        .O(\end_point.s_axi_ctl_arvalid_ev_hndlr_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_arvalid_ev_hndlr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_arvalid_ev_hndlr_i_1_n_0 ),
        .Q(s_axi_ctl_arvalid_ev_hndlr),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000070000000000)) 
    \end_point.s_axi_ctl_arvalid_ipic_bridge_i_1 
       (.I0(s_axi_ctl_rvalid_ipic_bridge),
        .I1(s_axi_ctl_rready),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I4(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I5(s_axi_ctl_arvalid),
        .O(\end_point.s_axi_ctl_arvalid_ipic_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_arvalid_ipic_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_arvalid_ipic_bridge_i_1_n_0 ),
        .Q(IP2Bus_WrAck_reg),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \end_point.s_axi_ctl_awaddr_ipic_bridge[2]_i_1 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_awaddr[2]),
        .O(\end_point.s_axi_ctl_awaddr_ipic_bridge[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_awaddr_ipic_bridge[3]_i_1 
       (.I0(s_axi_ctl_awaddr[3]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_awaddr_ipic_bridge[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_awaddr_ipic_bridge[4]_i_1 
       (.I0(s_axi_ctl_awaddr[4]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_awaddr_ipic_bridge[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h50E5)) 
    \end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_2 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_awaddr[5]),
        .O(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_2_n_0 ));
  FDRE \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awaddr_ipic_bridge[2]_i_1_n_0 ),
        .Q(\sig_bus2ip_ce_reg_reg[3]_0 [0]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awaddr_ipic_bridge[3]_i_1_n_0 ),
        .Q(\sig_bus2ip_ce_reg_reg[3]_0 [1]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awaddr_ipic_bridge[4]_i_1_n_0 ),
        .Q(s_axi_ctl_awaddr_ipic_bridge[4]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_2_n_0 ),
        .Q(s_axi_ctl_awaddr_ipic_bridge[5]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFCCCEECCFCFFEECC)) 
    \end_point.s_axi_ctl_awready_i_3 
       (.I0(s_axi_ctl_wready_blk_bridge),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(s_axi_ctl_wready_ev_hndlr),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(s_axi_ctl_wready),
        .O(\end_point.s_axi_ctl_awready_reg_1 ));
  LUT6 #(
    .INIT(64'hEF006700FFFFFFFF)) 
    \end_point.s_axi_ctl_awready_i_4 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(sig_IP2Bus_WrAck),
        .I3(\end_point.state_reg[2]_1 ),
        .I4(s_axi_ctl_wready),
        .I5(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.s_axi_ctl_awready_reg_2 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h6FFF)) 
    \end_point.s_axi_ctl_awready_i_5 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.s_axi_ctl_awready_reg_0 ));
  FDRE \end_point.s_axi_ctl_awready_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.ready_is_given_reg_1 ),
        .Q(s_axi_ctl_wready),
        .R(SR));
  LUT3 #(
    .INIT(8'h65)) 
    \end_point.s_axi_ctl_awvalid_blk_bridge_i_1 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_awvalid_blk_bridge_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000700000000000)) 
    \end_point.s_axi_ctl_awvalid_blk_bridge_i_2 
       (.I0(s_axi_ctl_bvalid_blk_bridge),
        .I1(s_axi_ctl_bready),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(s_axi_ctl_awvalid),
        .I4(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I5(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 ),
        .O(\end_point.s_axi_ctl_awvalid_blk_bridge_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \end_point.s_axi_ctl_awvalid_blk_bridge_i_3 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_1 ));
  FDRE \end_point.s_axi_ctl_awvalid_blk_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_blk_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awvalid_blk_bridge_i_2_n_0 ),
        .Q(s_axi_ctl_awvalid_blk_bridge),
        .R(SR));
  LUT3 #(
    .INIT(8'h69)) 
    \end_point.s_axi_ctl_awvalid_ev_hndlr_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000700000000000)) 
    \end_point.s_axi_ctl_awvalid_ev_hndlr_i_2 
       (.I0(s_axi_ctl_bvalid_ev_hndlr),
        .I1(s_axi_ctl_bready),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(s_axi_ctl_awvalid),
        .I4(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I5(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_3_n_0 ),
        .O(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \end_point.s_axi_ctl_awvalid_ev_hndlr_i_3 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_3_n_0 ));
  FDRE \end_point.s_axi_ctl_awvalid_ev_hndlr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_2_n_0 ),
        .Q(\block_is_ep.rd_wr_bar_pending_reg ),
        .R(SR));
  LUT3 #(
    .INIT(8'h2B)) 
    \end_point.s_axi_ctl_awvalid_ipic_bridge_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0444000000000000)) 
    \end_point.s_axi_ctl_awvalid_ipic_bridge_i_2 
       (.I0(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .I1(s_axi_ctl_awvalid),
        .I2(s_axi_ctl_bready),
        .I3(s_axi_ctl_bvalid_ipic_bridge),
        .I4(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I5(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .O(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_2_n_0 ));
  FDRE \end_point.s_axi_ctl_awvalid_ipic_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_2_n_0 ),
        .Q(s_axi_ctl_awvalid_ipic_bridge),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \end_point.s_axi_ctl_bready_blk_bridge_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(s_axi_ctl_bready),
        .O(\end_point.s_axi_ctl_bready_blk_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_bready_blk_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_blk_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_bready_blk_bridge_i_1_n_0 ),
        .Q(s_axi_ctl_bready_blk_bridge),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \end_point.s_axi_ctl_bready_ev_hndlr_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(s_axi_ctl_bready),
        .O(\end_point.s_axi_ctl_bready_ev_hndlr_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_bready_ev_hndlr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_bready_ev_hndlr_i_1_n_0 ),
        .Q(s_axi_ctl_bready_ev_hndlr),
        .R(SR));
  LUT5 #(
    .INIT(32'h04000000)) 
    \end_point.s_axi_ctl_bready_ipic_bridge_i_1 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I4(s_axi_ctl_bready),
        .O(\end_point.s_axi_ctl_bready_ipic_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_bready_ipic_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_bready_ipic_bridge_i_1_n_0 ),
        .Q(s_axi_ctl_bready_ipic_bridge),
        .R(SR));
  LUT6 #(
    .INIT(64'hF33333333333BBBB)) 
    \end_point.s_axi_ctl_bvalid_i_2 
       (.I0(s_axi_ctl_bvalid_ipic_bridge),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(s_axi_ctl_wready),
        .I3(s_axi_ctl_awvalid),
        .I4(\end_point.state_reg[0]_0 ),
        .I5(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_bvalid_reg_1 ));
  LUT6 #(
    .INIT(64'h1103003311033333)) 
    \end_point.s_axi_ctl_bvalid_i_3 
       (.I0(s_axi_ctl_bvalid_ev_hndlr),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.s_axi_ctl_bvalid_i_5_n_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(s_axi_ctl_bvalid_blk_bridge),
        .O(\end_point.s_axi_ctl_bvalid_reg_2 ));
  LUT6 #(
    .INIT(64'h8FFFFFFFFFFF8FFF)) 
    \end_point.s_axi_ctl_bvalid_i_4 
       (.I0(s_axi_ctl_wready),
        .I1(s_axi_ctl_awvalid),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(\end_point.state_reg[1]_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .I5(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_bvalid_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \end_point.s_axi_ctl_bvalid_i_5 
       (.I0(s_axi_ctl_awvalid),
        .I1(s_axi_ctl_wready),
        .O(\end_point.s_axi_ctl_bvalid_i_5_n_0 ));
  FDRE \end_point.s_axi_ctl_bvalid_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.request_type_reg_2 ),
        .Q(s_axi_ctl_bvalid),
        .R(SR));
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[0]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[0]),
        .I3(\end_point.s_axi_ctl_rdata[0]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0355FFFFCF55FF)) 
    \end_point.s_axi_ctl_rdata[0]_i_2 
       (.I0(\end_point_1.s_axi_ctl_rdata_reg[31] [0]),
        .I1(\end_point.override_last_core_cap_i_3_n_0 ),
        .I2(pl_sel_lnk_rate),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .O(\end_point.s_axi_ctl_rdata[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBBB888B8BBBBBBBB)) 
    \end_point.s_axi_ctl_rdata[0]_i_5 
       (.I0(pl_sel_lnk_rate),
        .I1(\end_point.s_axi_ctl_rdata[0]_i_6_n_0 ),
        .I2(\end_point.interrupt_decode_reg_n_0_[0] ),
        .I3(s_axi_ctl_araddr[2]),
        .I4(interrupt_mask[0]),
        .I5(s_axi_ctl_araddr[4]),
        .O(\end_point.s_axi_ctl_rdata_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \end_point.s_axi_ctl_rdata[0]_i_6 
       (.I0(s_axi_ctl_araddr[1]),
        .I1(s_axi_ctl_araddr[0]),
        .I2(s_axi_ctl_araddr[6]),
        .I3(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_rdata[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[10]_i_1 
       (.I0(Q[10]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [10]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\cfg_bus_number_d_reg[2] ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[11]_i_1 
       (.I0(Q[11]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [11]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[11]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[11]_i_2 
       (.I0(user_lnk_up_mux_reg),
        .I1(\end_point.s_axi_ctl_rdata_reg[11]_0 ),
        .I2(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[4]),
        .I5(\cfg_bus_number_d_reg[7] [1]),
        .O(\end_point.s_axi_ctl_rdata[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[12]_i_1 
       (.I0(Q[12]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [12]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[12]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0A000080)) 
    \end_point.s_axi_ctl_rdata[12]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[15]_i_3_n_0 ),
        .I1(\cfg_bus_number_d_reg[7] [2]),
        .I2(s_axi_ctl_araddr[6]),
        .I3(s_axi_ctl_araddr[4]),
        .I4(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_rdata[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[13]_i_1 
       (.I0(Q[13]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [13]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[13]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0A000080)) 
    \end_point.s_axi_ctl_rdata[13]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[15]_i_3_n_0 ),
        .I1(\cfg_bus_number_d_reg[7] [3]),
        .I2(s_axi_ctl_araddr[6]),
        .I3(s_axi_ctl_araddr[4]),
        .I4(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_rdata[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[14]_i_1 
       (.I0(Q[14]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [14]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[14]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0A000080)) 
    \end_point.s_axi_ctl_rdata[14]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[15]_i_3_n_0 ),
        .I1(\cfg_bus_number_d_reg[7] [4]),
        .I2(s_axi_ctl_araddr[6]),
        .I3(s_axi_ctl_araddr[4]),
        .I4(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_rdata[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[15]_i_1 
       (.I0(Q[15]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [15]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[15]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h30080000)) 
    \end_point.s_axi_ctl_rdata[15]_i_2 
       (.I0(\cfg_bus_number_d_reg[7] [5]),
        .I1(s_axi_ctl_araddr[6]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[5]),
        .I4(\end_point.s_axi_ctl_rdata[15]_i_3_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \end_point.s_axi_ctl_rdata[15]_i_3 
       (.I0(\end_point.s_axi_ctl_rdata[28]_i_5_n_0 ),
        .I1(s_axi_ctl_araddr[3]),
        .I2(s_axi_ctl_araddr[2]),
        .I3(s_axi_ctl_araddr[0]),
        .I4(s_axi_ctl_araddr[1]),
        .I5(s_axi_ctl_araddr[4]),
        .O(\end_point.s_axi_ctl_rdata[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[16]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[16]),
        .I3(\end_point.s_axi_ctl_rdata[16]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F0D0D000F0F0F)) 
    \end_point.s_axi_ctl_rdata[16]_i_2 
       (.I0(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [0]),
        .I1(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I2(\end_point.s_axi_ctl_rdata[16]_i_3_n_0 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [16]),
        .I4(\end_point.state_reg[0]_0 ),
        .I5(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rdata[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000020002A2A)) 
    \end_point.s_axi_ctl_rdata[16]_i_3 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_5_n_0 ),
        .I1(s_axi_ctl_araddr[3]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(cfg_mgmt_wr_rw1c_as_rw),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\end_point.s_axi_ctl_rdata[16]_i_4_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[16]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'hCDFBCDFF)) 
    \end_point.s_axi_ctl_rdata[16]_i_4 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(s_axi_ctl_araddr[6]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[5]),
        .I4(\end_point.port_number_reg_n_0_[0] ),
        .O(\end_point.s_axi_ctl_rdata[16]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[17]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[17]),
        .I3(\end_point.s_axi_ctl_rdata[17]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCF55FFFF0355FF)) 
    \end_point.s_axi_ctl_rdata[17]_i_2 
       (.I0(\end_point_1.s_axi_ctl_rdata_reg[31] [17]),
        .I1(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I2(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [1]),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(\end_point.s_axi_ctl_rdata[17]_i_3_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'hAAFBFBFB)) 
    \end_point.s_axi_ctl_rdata[17]_i_3 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(\end_point.port_number_reg_n_0_[1] ),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(cfg_mgmt_wr_readonly),
        .O(\end_point.s_axi_ctl_rdata[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[18]_i_1 
       (.I0(Q[18]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [18]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[18]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[18]_i_2 
       (.I0(pl_directed_link_speed),
        .I1(\end_point.s_axi_ctl_rdata_reg[11]_0 ),
        .I2(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[4]),
        .I5(\end_point.port_number_reg_n_0_[2] ),
        .O(\end_point.s_axi_ctl_rdata[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[19]_i_1 
       (.I0(Q[19]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [19]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[19]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[19]_i_2 
       (.I0(pl_directed_link_auton),
        .I1(\end_point.s_axi_ctl_rdata_reg[11]_0 ),
        .I2(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[4]),
        .I5(\end_point.port_number_reg_n_0_[3] ),
        .O(\end_point.s_axi_ctl_rdata[19]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \end_point.s_axi_ctl_rdata[19]_i_3 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_rdata_reg[11]_0 ));
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[1]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[1]),
        .I3(\end_point.s_axi_ctl_rdata[1]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF555500F3FFFF)) 
    \end_point.s_axi_ctl_rdata[1]_i_2 
       (.I0(\end_point_1.s_axi_ctl_rdata_reg[31] [1]),
        .I1(pl_sel_lnk_width[0]),
        .I2(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I3(\end_point.s_axi_ctl_rdata[1]_i_3_n_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_rdata[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA08A008A)) 
    \end_point.s_axi_ctl_rdata[1]_i_3 
       (.I0(\end_point.s_axi_ctl_rdata[25]_i_4_n_0 ),
        .I1(\end_point.interrupt_decode_reg_n_0_[1] ),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(interrupt_mask[1]),
        .O(\end_point.s_axi_ctl_rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h88888888FFFFF888)) 
    \end_point.s_axi_ctl_rdata[20]_i_1 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I1(Q[20]),
        .I2(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [20]),
        .I4(\end_point.s_axi_ctl_rdata[20]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h04040C00)) 
    \end_point.s_axi_ctl_rdata[20]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[20]_i_3_n_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(pl_directed_link_change[0]),
        .I4(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rdata[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h3FFFDDDD)) 
    \end_point.s_axi_ctl_rdata[20]_i_3 
       (.I0(\end_point.port_number_reg_n_0_[4] ),
        .I1(s_axi_ctl_araddr[4]),
        .I2(interrupt_mask[20]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(s_axi_ctl_araddr[3]),
        .O(\end_point.s_axi_ctl_rdata[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h88888888FFFFF888)) 
    \end_point.s_axi_ctl_rdata[21]_i_1 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I1(Q[21]),
        .I2(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [21]),
        .I4(\end_point.s_axi_ctl_rdata[21]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT5 #(
    .INIT(32'h04040C00)) 
    \end_point.s_axi_ctl_rdata[21]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[21]_i_3_n_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(pl_directed_link_change[1]),
        .I4(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rdata[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h3FFFDDDD)) 
    \end_point.s_axi_ctl_rdata[21]_i_3 
       (.I0(\end_point.port_number_reg_n_0_[5] ),
        .I1(s_axi_ctl_araddr[4]),
        .I2(interrupt_mask[21]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(s_axi_ctl_araddr[3]),
        .O(\end_point.s_axi_ctl_rdata[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00A8000000A80200)) 
    \end_point.s_axi_ctl_rdata[21]_i_4 
       (.I0(\end_point.s_axi_ctl_rdata[21]_i_5_n_0 ),
        .I1(s_axi_ctl_araddr[4]),
        .I2(s_axi_ctl_araddr[3]),
        .I3(s_axi_ctl_araddr[6]),
        .I4(s_axi_ctl_araddr[5]),
        .I5(s_axi_ctl_araddr[2]),
        .O(\end_point.s_axi_ctl_rdata_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \end_point.s_axi_ctl_rdata[21]_i_5 
       (.I0(\end_point.state_reg[2]_2 ),
        .I1(s_axi_ctl_araddr[7]),
        .I2(s_axi_ctl_araddr[8]),
        .I3(s_axi_ctl_araddr[9]),
        .I4(s_axi_ctl_araddr[10]),
        .I5(s_axi_ctl_araddr[11]),
        .O(\end_point.s_axi_ctl_rdata[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h88888888FFFFF888)) 
    \end_point.s_axi_ctl_rdata[22]_i_1 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I1(Q[22]),
        .I2(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [22]),
        .I4(\end_point.s_axi_ctl_rdata[22]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000080000022)) 
    \end_point.s_axi_ctl_rdata[22]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_5_n_0 ),
        .I1(s_axi_ctl_araddr[4]),
        .I2(interrupt_mask[22]),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\end_point.s_axi_ctl_rdata[22]_i_3_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[22]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'hFC77FF77)) 
    \end_point.s_axi_ctl_rdata[22]_i_3 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(s_axi_ctl_araddr[5]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[6]),
        .I4(\end_point.port_number_reg_n_0_[6] ),
        .O(\end_point.s_axi_ctl_rdata[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h10101010FFFF00FF)) 
    \end_point.s_axi_ctl_rdata[23]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[23]),
        .I3(\end_point.s_axi_ctl_rdata[23]_i_2_n_0 ),
        .I4(\end_point.s_axi_ctl_rdata[23]_i_3_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hDDDF)) 
    \end_point.s_axi_ctl_rdata[23]_i_2 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point_1.s_axi_ctl_rdata_reg[31] [23]),
        .I3(\end_point.override_last_core_cap_reg_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA20000AA00000000)) 
    \end_point.s_axi_ctl_rdata[23]_i_3 
       (.I0(\end_point.s_axi_ctl_rdata[23]_i_4_n_0 ),
        .I1(s_axi_ctl_araddr[4]),
        .I2(interrupt_mask[23]),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\end_point.s_axi_ctl_rdata[29]_i_5_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h22042200)) 
    \end_point.s_axi_ctl_rdata[23]_i_4 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(s_axi_ctl_araddr[6]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[5]),
        .I4(\end_point.port_number_reg_n_0_[7] ),
        .O(\end_point.s_axi_ctl_rdata[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88888888FFFFF888)) 
    \end_point.s_axi_ctl_rdata[24]_i_1 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I1(Q[24]),
        .I2(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [24]),
        .I4(\end_point.s_axi_ctl_rdata[24]_i_2_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000A20000000000)) 
    \end_point.s_axi_ctl_rdata[24]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[25]_i_4_n_0 ),
        .I1(s_axi_ctl_araddr[4]),
        .I2(interrupt_mask[24]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(\end_point.state_reg[0]_0 ),
        .I5(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rdata[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[25]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[25]),
        .I3(\end_point.s_axi_ctl_rdata[25]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF1FF0000F1FFF1FF)) 
    \end_point.s_axi_ctl_rdata[25]_i_2 
       (.I0(\end_point.override_last_core_cap_reg_n_0 ),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [25]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[25]_i_3_n_0 ),
        .I5(\end_point.s_axi_ctl_rdata[25]_i_4_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF4FFFFF)) 
    \end_point.s_axi_ctl_rdata[25]_i_3 
       (.I0(interrupt_mask[25]),
        .I1(s_axi_ctl_araddr[4]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(s_axi_ctl_araddr[2]),
        .O(\end_point.s_axi_ctl_rdata[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002000000)) 
    \end_point.s_axi_ctl_rdata[25]_i_4 
       (.I0(\end_point.override_last_core_cap_i_3_n_0 ),
        .I1(s_axi_ctl_araddr[1]),
        .I2(s_axi_ctl_araddr[0]),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[5]),
        .I5(s_axi_ctl_araddr[6]),
        .O(\end_point.s_axi_ctl_rdata[25]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[26]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[26]),
        .I3(\end_point.s_axi_ctl_rdata[26]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7077707070777777)) 
    \end_point.s_axi_ctl_rdata[26]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [26]),
        .I2(\end_point.s_axi_ctl_rdata[28]_i_3_n_0 ),
        .I3(interrupt_mask[26]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(p_1_in5_in[2]),
        .O(\end_point.s_axi_ctl_rdata[26]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[27]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[27]),
        .I3(\end_point.s_axi_ctl_rdata[27]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7077707070777777)) 
    \end_point.s_axi_ctl_rdata[27]_i_2 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [27]),
        .I2(\end_point.s_axi_ctl_rdata[28]_i_3_n_0 ),
        .I3(interrupt_mask[27]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(p_1_in5_in[3]),
        .O(\end_point.s_axi_ctl_rdata[27]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'hFFFF0400)) 
    \end_point.s_axi_ctl_rdata[28]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(Q[28]),
        .I4(\end_point.s_axi_ctl_rdata[28]_i_2_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000540455555555)) 
    \end_point.s_axi_ctl_rdata[28]_i_2 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(p_1_in5_in[4]),
        .I2(s_axi_ctl_araddr[2]),
        .I3(interrupt_mask[28]),
        .I4(\end_point.s_axi_ctl_rdata[28]_i_3_n_0 ),
        .I5(\end_point.s_axi_ctl_rdata[28]_i_4_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFFFFFFFFFF)) 
    \end_point.s_axi_ctl_rdata[28]_i_3 
       (.I0(\end_point.s_axi_ctl_rdata[28]_i_5_n_0 ),
        .I1(s_axi_ctl_araddr[3]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(\end_point.state_reg[2]_2 ),
        .I4(s_axi_ctl_araddr[6]),
        .I5(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_rdata[28]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hDDDF)) 
    \end_point.s_axi_ctl_rdata[28]_i_4 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point_1.s_axi_ctl_rdata_reg[31] [28]),
        .I3(\end_point.override_last_core_cap_reg_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFBFFFFFFFF)) 
    \end_point.s_axi_ctl_rdata[28]_i_5 
       (.I0(s_axi_ctl_araddr[7]),
        .I1(s_axi_ctl_araddr[8]),
        .I2(s_axi_ctl_araddr[9]),
        .I3(s_axi_ctl_araddr[10]),
        .I4(s_axi_ctl_araddr[11]),
        .I5(\end_point.s_axi_ctl_rdata_reg[11]_0 ),
        .O(\end_point.s_axi_ctl_rdata[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h88888888FFFFF888)) 
    \end_point.s_axi_ctl_rdata[29]_i_1 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I1(Q[29]),
        .I2(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [29]),
        .I4(\end_point.s_axi_ctl_rdata[29]_i_4_n_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \end_point.s_axi_ctl_rdata[29]_i_2 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \end_point.s_axi_ctl_rdata[29]_i_3 
       (.I0(\end_point.override_last_core_cap_reg_n_0 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rdata[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \end_point.s_axi_ctl_rdata[29]_i_4 
       (.I0(\end_point.s_axi_ctl_rdata[29]_i_5_n_0 ),
        .I1(s_axi_ctl_araddr[6]),
        .I2(s_axi_ctl_araddr[5]),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(s_axi_ctl_araddr[4]),
        .O(\end_point.s_axi_ctl_rdata[29]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \end_point.s_axi_ctl_rdata[29]_i_5 
       (.I0(s_axi_ctl_araddr[0]),
        .I1(s_axi_ctl_araddr[1]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.override_last_core_cap_i_3_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[2]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[2]),
        .I3(\end_point.s_axi_ctl_rdata[2]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF3055FFFF3F55FF)) 
    \end_point.s_axi_ctl_rdata[2]_i_2 
       (.I0(\end_point_1.s_axi_ctl_rdata_reg[31] [2]),
        .I1(\end_point.s_axi_ctl_rdata[2]_i_3_n_0 ),
        .I2(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(pl_sel_lnk_width[1]),
        .O(\end_point.s_axi_ctl_rdata[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h800A8000)) 
    \end_point.s_axi_ctl_rdata[2]_i_3 
       (.I0(s_axi_ctl_araddr[4]),
        .I1(interrupt_mask[2]),
        .I2(s_axi_ctl_araddr[3]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(pl_link_upcfg_cap),
        .O(\end_point.s_axi_ctl_rdata[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000030020202020)) 
    \end_point.s_axi_ctl_rdata[30]_i_1 
       (.I0(Q[30]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [30]),
        .I4(\end_point.override_last_core_cap_reg_n_0 ),
        .I5(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_rdata[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0FF0000F8FFFFF8F)) 
    \end_point.s_axi_ctl_rdata[31]_i_1 
       (.I0(s_axi_ctl_arready),
        .I1(s_axi_ctl_arvalid),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .I5(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000030020202020)) 
    \end_point.s_axi_ctl_rdata[31]_i_2 
       (.I0(Q[31]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point_1.s_axi_ctl_rdata_reg[31] [31]),
        .I4(\end_point.override_last_core_cap_reg_n_0 ),
        .I5(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_rdata[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000AA00CC0F00)) 
    \end_point.s_axi_ctl_rdata[3]_i_1 
       (.I0(Q[3]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [3]),
        .I2(\cfg_device_number_d_reg[0] ),
        .I3(\end_point.state_reg[1]_0 ),
        .I4(\end_point.state_reg[0]_0 ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F77F7FFFF77F7)) 
    \end_point.s_axi_ctl_rdata[3]_i_3 
       (.I0(\end_point.override_last_core_cap_i_3_n_0 ),
        .I1(\end_point.state_reg[2]_2 ),
        .I2(s_axi_ctl_araddr[4]),
        .I3(\end_point.interrupt_decode_reg_n_0_[3] ),
        .I4(s_axi_ctl_araddr[2]),
        .I5(interrupt_mask[3]),
        .O(\end_point.s_axi_ctl_rdata_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \end_point.s_axi_ctl_rdata[3]_i_4 
       (.I0(s_axi_ctl_araddr[6]),
        .I1(s_axi_ctl_araddr[5]),
        .I2(s_axi_ctl_araddr[3]),
        .O(\end_point.s_axi_ctl_rdata_reg[3]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \end_point.s_axi_ctl_rdata[3]_i_5 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(s_axi_ctl_araddr[6]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[5]),
        .O(\end_point.s_axi_ctl_rdata_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[4]_i_1 
       (.I0(Q[4]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [4]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\cfg_device_number_d_reg[1] ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[5]_i_1 
       (.I0(Q[5]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [5]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\cfg_device_number_d_reg[2] ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[6]_i_1 
       (.I0(Q[6]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [6]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\cfg_device_number_d_reg[3] ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[7]_i_1 
       (.I0(Q[7]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [7]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\cfg_device_number_d_reg[4] ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h101000FF)) 
    \end_point.s_axi_ctl_rdata[8]_i_1 
       (.I0(\end_point.state_reg[0]_0 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(Q[8]),
        .I3(\end_point.s_axi_ctl_rdata[8]_i_2_n_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCF55FFFF0355FF)) 
    \end_point.s_axi_ctl_rdata[8]_i_2 
       (.I0(\end_point_1.s_axi_ctl_rdata_reg[31] [8]),
        .I1(\end_point.s_axi_ctl_rdata_reg[1]_0 ),
        .I2(pl_ltssm_state),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(\end_point.s_axi_ctl_rdata[8]_i_3_n_0 ),
        .O(\end_point.s_axi_ctl_rdata[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'hAAFBFBFB)) 
    \end_point.s_axi_ctl_rdata[8]_i_3 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(\cfg_bus_number_d_reg[7] [0]),
        .I2(s_axi_ctl_araddr[4]),
        .I3(s_axi_ctl_araddr[2]),
        .I4(bridge_status_control),
        .O(\end_point.s_axi_ctl_rdata[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000A000AFFFF0C00)) 
    \end_point.s_axi_ctl_rdata[9]_i_1 
       (.I0(Q[9]),
        .I1(\end_point_1.s_axi_ctl_rdata_reg[31] [9]),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\cfg_bus_number_d_reg[1] ),
        .I5(\end_point.state_reg[2]_1 ),
        .O(\end_point.s_axi_ctl_rdata[9]_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_rdata_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[0]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[0]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[10]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[10]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[11]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[11]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[12]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[12]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[13]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[13]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[14]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[14]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[15]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[15]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[16]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[16]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[17]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[17]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[18]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[18]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[19]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[19]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[1]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[1]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[20]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[20]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[21]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[21]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[22]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[22]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[23]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[23]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[24]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[24]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[25]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[25]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[26]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[26]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[27]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[27]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[28]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[28]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[29]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[29]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[2]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[2]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[30]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[30]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[31]_i_2_n_0 ),
        .Q(s_axi_ctl_rdata[31]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[3]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[3]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[4]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[4]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[5]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[5]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[6]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[6]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[7]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[7]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[8]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[8]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_rdata_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_rdata[31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rdata[9]_i_1_n_0 ),
        .Q(s_axi_ctl_rdata[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \end_point.s_axi_ctl_rready_blk_bridge_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .I2(s_axi_ctl_rready),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.s_axi_ctl_rready_blk_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_rready_blk_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_blk_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rready_blk_bridge_i_1_n_0 ),
        .Q(s_axi_ctl_rready_blk_bridge),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \end_point.s_axi_ctl_rready_ev_hndlr_i_1 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(s_axi_ctl_rready),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.s_axi_ctl_rready_ev_hndlr_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_rready_ev_hndlr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ev_hndlr_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rready_ev_hndlr_i_1_n_0 ),
        .Q(s_axi_ctl_rready_ev_hndlr),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h00000400)) 
    \end_point.s_axi_ctl_rready_ipic_bridge_i_1 
       (.I0(\end_point.state_reg[1]_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state_reg[0]_0 ),
        .I3(s_axi_ctl_rready),
        .I4(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .O(\end_point.s_axi_ctl_rready_ipic_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_rready_ipic_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_rready_ipic_bridge_i_1_n_0 ),
        .Q(s_axi_ctl_rready_ipic_bridge),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEEFCCCCCEEFCCC)) 
    \end_point.s_axi_ctl_rvalid_i_2 
       (.I0(\end_point.s_axi_ctl_rvalid_i_5_n_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(s_axi_ctl_rvalid_blk_bridge),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(s_axi_ctl_rvalid_ev_hndlr),
        .O(\end_point.s_axi_ctl_rvalid_reg_1 ));
  LUT6 #(
    .INIT(64'hF55555555555DDDD)) 
    \end_point.s_axi_ctl_rvalid_i_3 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(s_axi_ctl_rvalid_ipic_bridge),
        .I2(s_axi_ctl_arvalid),
        .I3(s_axi_ctl_arready),
        .I4(\end_point.state_reg[1]_0 ),
        .I5(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_rvalid_reg_2 ));
  LUT6 #(
    .INIT(64'hFFFF8FF8FFFFFFFF)) 
    \end_point.s_axi_ctl_rvalid_i_4 
       (.I0(s_axi_ctl_arvalid),
        .I1(s_axi_ctl_arready),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .I4(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I5(\end_point.state_reg[1]_0 ),
        .O(\end_point.s_axi_ctl_rvalid_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \end_point.s_axi_ctl_rvalid_i_5 
       (.I0(s_axi_ctl_arvalid),
        .I1(s_axi_ctl_arready),
        .O(\end_point.s_axi_ctl_rvalid_i_5_n_0 ));
  FDRE \end_point.s_axi_ctl_rvalid_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.request_type_reg_1 ),
        .Q(s_axi_ctl_rvalid),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[0]_i_1 
       (.I0(s_axi_ctl_wdata[0]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[10]_i_1 
       (.I0(s_axi_ctl_wdata[10]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[11]_i_1 
       (.I0(s_axi_ctl_wdata[11]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[12]_i_1 
       (.I0(s_axi_ctl_wdata[12]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[13]_i_1 
       (.I0(s_axi_ctl_wdata[13]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[14]_i_1 
       (.I0(s_axi_ctl_wdata[14]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[15]_i_1 
       (.I0(s_axi_ctl_wdata[15]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[16]_i_1 
       (.I0(s_axi_ctl_wdata[16]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[17]_i_1 
       (.I0(s_axi_ctl_wdata[17]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[18]_i_1 
       (.I0(s_axi_ctl_wdata[18]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[19]_i_1 
       (.I0(s_axi_ctl_wdata[19]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[1]_i_1 
       (.I0(s_axi_ctl_wdata[1]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[20]_i_1 
       (.I0(s_axi_ctl_wdata[20]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[21]_i_1 
       (.I0(s_axi_ctl_wdata[21]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[22]_i_1 
       (.I0(s_axi_ctl_wdata[22]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[23]_i_1 
       (.I0(s_axi_ctl_wdata[23]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[24]_i_1 
       (.I0(s_axi_ctl_wdata[24]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[25]_i_1 
       (.I0(s_axi_ctl_wdata[25]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[26]_i_1 
       (.I0(s_axi_ctl_wdata[26]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[27]_i_1 
       (.I0(s_axi_ctl_wdata[27]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[28]_i_1 
       (.I0(s_axi_ctl_wdata[28]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[29]_i_1 
       (.I0(s_axi_ctl_wdata[29]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[2]_i_1 
       (.I0(s_axi_ctl_wdata[2]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[30]_i_1 
       (.I0(s_axi_ctl_wdata[30]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[31]_i_1 
       (.I0(s_axi_ctl_wdata[31]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[3]_i_1 
       (.I0(s_axi_ctl_wdata[3]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[4]_i_1 
       (.I0(s_axi_ctl_wdata[4]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[5]_i_1 
       (.I0(s_axi_ctl_wdata[5]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[6]_i_1 
       (.I0(s_axi_ctl_wdata[6]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[7]_i_1 
       (.I0(s_axi_ctl_wdata[7]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[8]_i_1 
       (.I0(s_axi_ctl_wdata[8]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \end_point.s_axi_ctl_wdata_ipic_bridge[9]_i_1 
       (.I0(s_axi_ctl_wdata[9]),
        .I1(\end_point.state_reg[1]_0 ),
        .I2(\end_point.state_reg[2]_1 ),
        .I3(\end_point.state_reg[0]_0 ),
        .O(\end_point.s_axi_ctl_wdata_ipic_bridge[9]_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[0]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [0]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[10]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [10]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[11]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [11]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[12]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [12]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[13]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [13]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[14]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [14]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[15]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [15]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[16]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [16]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[17]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [17]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[18]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [18]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[19]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [19]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[1]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [1]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[20]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [20]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[21]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [21]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[22]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [22]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[23]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [23]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[24]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [24]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[25]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [25]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[26]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [26]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[27]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [27]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[28]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [28]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[29]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [29]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[2]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [2]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[30]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [30]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[31]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [31]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[3]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [3]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[4]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [4]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[5]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [5]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[6]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [6]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[7]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [7]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[8]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [8]),
        .R(SR));
  FDRE \end_point.s_axi_ctl_wdata_ipic_bridge_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awaddr_ipic_bridge[5]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge[9]_i_1_n_0 ),
        .Q(\sig_register_bar_array_reg[1][31] [9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000070000000)) 
    \end_point.s_axi_ctl_wvalid_ipic_bridge_i_1 
       (.I0(s_axi_ctl_bready),
        .I1(s_axi_ctl_bvalid_ipic_bridge),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(\end_point.s_axi_ctl_rdata[29]_i_2_n_0 ),
        .I4(s_axi_ctl_wvalid),
        .I5(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .O(\end_point.s_axi_ctl_wvalid_ipic_bridge_i_1_n_0 ));
  FDRE \end_point.s_axi_ctl_wvalid_ipic_bridge_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\end_point.s_axi_ctl_awvalid_ipic_bridge_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wvalid_ipic_bridge_i_1_n_0 ),
        .Q(s_axi_ctl_wvalid_ipic_bridge),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000FF080008)) 
    \end_point.state[0]_i_1 
       (.I0(\end_point.state[0]_i_2_n_0 ),
        .I1(\end_point.state[0]_i_3_n_0 ),
        .I2(\end_point.state[0]_i_4_n_0 ),
        .I3(\end_point.state_reg[2]_0 ),
        .I4(\end_point.state_reg[0]_0 ),
        .I5(\end_point.state_reg[0]_1 ),
        .O(\end_point.state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002AAAAAAAAAAAA)) 
    \end_point.state[0]_i_10 
       (.I0(\end_point.state[2]_i_6_n_0 ),
        .I1(s_axi_ctl_awaddr[3]),
        .I2(s_axi_ctl_awaddr[4]),
        .I3(s_axi_ctl_awaddr[5]),
        .I4(s_axi_ctl_awaddr[8]),
        .I5(s_axi_ctl_awaddr[6]),
        .O(\end_point.state[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000000777F5555)) 
    \end_point.state[0]_i_11 
       (.I0(s_axi_ctl_araddr[5]),
        .I1(s_axi_ctl_araddr[2]),
        .I2(s_axi_ctl_araddr[1]),
        .I3(s_axi_ctl_araddr[0]),
        .I4(\end_point.state[0]_i_12_n_0 ),
        .I5(s_axi_ctl_araddr[7]),
        .O(\end_point.state[0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \end_point.state[0]_i_12 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(s_axi_ctl_araddr[4]),
        .O(\end_point.state[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555545555)) 
    \end_point.state[0]_i_2 
       (.I0(\end_point.state[0]_i_6_n_0 ),
        .I1(\end_point.state[0]_i_7_n_0 ),
        .I2(s_axi_ctl_awaddr[11]),
        .I3(s_axi_ctl_awaddr[10]),
        .I4(s_axi_ctl_awaddr[9]),
        .I5(s_axi_ctl_awaddr[8]),
        .O(\end_point.state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBF00BFBF)) 
    \end_point.state[0]_i_3 
       (.I0(\end_point.state[0]_i_8_n_0 ),
        .I1(s_axi_ctl_arvalid),
        .I2(\end_point.state[0]_i_9_n_0 ),
        .I3(\end_point.state[0]_i_7_n_0 ),
        .I4(\end_point.state[0]_i_10_n_0 ),
        .O(\end_point.state[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h15)) 
    \end_point.state[0]_i_4 
       (.I0(s_axi_ctl_arvalid),
        .I1(s_axi_ctl_wvalid),
        .I2(s_axi_ctl_awvalid),
        .O(\end_point.state[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hF888FFFF)) 
    \end_point.state[0]_i_5 
       (.I0(s_axi_ctl_bready),
        .I1(s_axi_ctl_bvalid),
        .I2(s_axi_ctl_rready),
        .I3(s_axi_ctl_rvalid),
        .I4(sys_rst_n_int),
        .O(\end_point.state_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \end_point.state[0]_i_6 
       (.I0(s_axi_ctl_araddr[10]),
        .I1(s_axi_ctl_araddr[11]),
        .I2(s_axi_ctl_araddr[9]),
        .I3(s_axi_ctl_araddr[8]),
        .I4(s_axi_ctl_arvalid),
        .O(\end_point.state[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \end_point.state[0]_i_7 
       (.I0(s_axi_ctl_arvalid),
        .I1(\end_point.state[1]_i_3_n_0 ),
        .O(\end_point.state[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hD5D5D5D5D5D5D555)) 
    \end_point.state[0]_i_8 
       (.I0(\end_point.state[2]_i_7_n_0 ),
        .I1(s_axi_ctl_araddr[8]),
        .I2(s_axi_ctl_araddr[6]),
        .I3(s_axi_ctl_araddr[3]),
        .I4(s_axi_ctl_araddr[5]),
        .I5(s_axi_ctl_araddr[4]),
        .O(\end_point.state[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFCFFFDFFFC)) 
    \end_point.state[0]_i_9 
       (.I0(\end_point.state[0]_i_11_n_0 ),
        .I1(s_axi_ctl_araddr[9]),
        .I2(s_axi_ctl_araddr[10]),
        .I3(s_axi_ctl_araddr[11]),
        .I4(s_axi_ctl_araddr[8]),
        .I5(s_axi_ctl_araddr[6]),
        .O(\end_point.state[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \end_point.state[1]_i_1 
       (.I0(state),
        .I1(\end_point.state_reg[2]_0 ),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.state[2]_i_3_n_0 ),
        .O(\end_point.state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'hA2A0A0A0)) 
    \end_point.state[1]_i_2 
       (.I0(\end_point.state[0]_i_2_n_0 ),
        .I1(\end_point.state[1]_i_3_n_0 ),
        .I2(s_axi_ctl_arvalid),
        .I3(s_axi_ctl_wvalid),
        .I4(s_axi_ctl_awvalid),
        .O(state));
  LUT4 #(
    .INIT(16'h0C8C)) 
    \end_point.state[1]_i_3 
       (.I0(\end_point.state[1]_i_4_n_0 ),
        .I1(\end_point.state[2]_i_6_n_0 ),
        .I2(s_axi_ctl_awaddr[8]),
        .I3(s_axi_ctl_awaddr[6]),
        .O(\end_point.state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000057FFFFFFFF)) 
    \end_point.state[1]_i_4 
       (.I0(s_axi_ctl_awaddr[2]),
        .I1(s_axi_ctl_awaddr[0]),
        .I2(s_axi_ctl_awaddr[1]),
        .I3(s_axi_ctl_awaddr[4]),
        .I4(s_axi_ctl_awaddr[3]),
        .I5(s_axi_ctl_awaddr[5]),
        .O(\end_point.state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0C000C0A0C0F0C0A)) 
    \end_point.state[2]_i_1 
       (.I0(\end_point.state[2]_i_2_n_0 ),
        .I1(\end_point.state_reg[2]_1 ),
        .I2(\end_point.state[2]_i_3_n_0 ),
        .I3(\end_point.state_reg[2]_0 ),
        .I4(s_axi_ctl_arvalid),
        .I5(\end_point.state[2]_i_4_n_0 ),
        .O(\end_point.state[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \end_point.state[2]_i_10 
       (.I0(s_axi_ctl_araddr[8]),
        .I1(s_axi_ctl_araddr[6]),
        .O(\end_point.state[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000800088888888)) 
    \end_point.state[2]_i_2 
       (.I0(s_axi_ctl_wvalid),
        .I1(s_axi_ctl_awvalid),
        .I2(s_axi_ctl_awaddr[6]),
        .I3(s_axi_ctl_awaddr[8]),
        .I4(\end_point.state[2]_i_5_n_0 ),
        .I5(\end_point.state[2]_i_6_n_0 ),
        .O(\end_point.state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFD5D5D5)) 
    \end_point.state[2]_i_3 
       (.I0(sys_rst_n_int),
        .I1(s_axi_ctl_rvalid),
        .I2(s_axi_ctl_rready),
        .I3(s_axi_ctl_bvalid),
        .I4(s_axi_ctl_bready),
        .I5(\end_point.override_last_core_cap_i_2_n_0 ),
        .O(\end_point.state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h20222222AAAAAAAA)) 
    \end_point.state[2]_i_4 
       (.I0(\end_point.state[2]_i_7_n_0 ),
        .I1(s_axi_ctl_araddr[5]),
        .I2(\end_point.state_reg[2]_2 ),
        .I3(s_axi_ctl_araddr[2]),
        .I4(\end_point.state[2]_i_9_n_0 ),
        .I5(\end_point.state[2]_i_10_n_0 ),
        .O(\end_point.state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h1515155555555555)) 
    \end_point.state[2]_i_5 
       (.I0(s_axi_ctl_awaddr[5]),
        .I1(s_axi_ctl_awaddr[3]),
        .I2(s_axi_ctl_awaddr[4]),
        .I3(s_axi_ctl_awaddr[1]),
        .I4(s_axi_ctl_awaddr[0]),
        .I5(s_axi_ctl_awaddr[2]),
        .O(\end_point.state[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT5 #(
    .INIT(32'h00010101)) 
    \end_point.state[2]_i_6 
       (.I0(s_axi_ctl_awaddr[9]),
        .I1(s_axi_ctl_awaddr[10]),
        .I2(s_axi_ctl_awaddr[11]),
        .I3(s_axi_ctl_awaddr[7]),
        .I4(s_axi_ctl_awaddr[8]),
        .O(\end_point.state[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h00010101)) 
    \end_point.state[2]_i_7 
       (.I0(s_axi_ctl_araddr[11]),
        .I1(s_axi_ctl_araddr[10]),
        .I2(s_axi_ctl_araddr[9]),
        .I3(s_axi_ctl_araddr[7]),
        .I4(s_axi_ctl_araddr[8]),
        .O(\end_point.state[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \end_point.state[2]_i_8 
       (.I0(s_axi_ctl_araddr[1]),
        .I1(s_axi_ctl_araddr[0]),
        .O(\end_point.state_reg[2]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \end_point.state[2]_i_9 
       (.I0(s_axi_ctl_araddr[3]),
        .I1(s_axi_ctl_araddr[4]),
        .O(\end_point.state[2]_i_9_n_0 ));
  FDRE \end_point.state_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.state[0]_i_1_n_0 ),
        .Q(\end_point.state_reg[0]_0 ),
        .R(1'b0));
  FDRE \end_point.state_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.state[1]_i_1_n_0 ),
        .Q(\end_point.state_reg[1]_0 ),
        .R(1'b0));
  FDRE \end_point.state_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.state[2]_i_1_n_0 ),
        .Q(\end_point.state_reg[2]_1 ),
        .R(1'b0));
  FDRE \end_point.trn_lnk_up_d_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(user_lnk_up_mux_reg),
        .Q(trn_lnk_up_d),
        .R(SR));
  FDRE \end_point.trn_recrc_err_d_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(trn_recrc_err),
        .Q(trn_recrc_err_d),
        .R(SR));
  LUT6 #(
    .INIT(64'hAA80008000800080)) 
    \end_point.wait_for_idle_i_3 
       (.I0(\end_point.wait_for_idle_i_6_n_0 ),
        .I1(s_axi_ctl_rready),
        .I2(s_axi_ctl_rvalid_ipic_bridge),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I4(s_axi_ctl_bready),
        .I5(s_axi_ctl_bvalid_ipic_bridge),
        .O(\end_point.wait_for_idle_reg_1 ));
  LUT6 #(
    .INIT(64'hF0FFFDFDFFF0F0FF)) 
    \end_point.wait_for_idle_i_5 
       (.I0(\end_point.wait_for_idle_i_7_n_0 ),
        .I1(\end_point.wait_for_idle_i_8_n_0 ),
        .I2(\end_point.wait_for_idle_reg_1 ),
        .I3(\end_point.state_reg[1]_0 ),
        .I4(\end_point.state_reg[2]_1 ),
        .I5(\end_point.state_reg[0]_0 ),
        .O(\end_point.wait_for_idle_reg_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \end_point.wait_for_idle_i_6 
       (.I0(\end_point.state_reg[2]_1 ),
        .I1(\end_point.state_reg[0]_0 ),
        .O(\end_point.wait_for_idle_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h7FF07FFF7FFF7FFF)) 
    \end_point.wait_for_idle_i_7 
       (.I0(s_axi_ctl_bvalid_ev_hndlr),
        .I1(s_axi_ctl_bready),
        .I2(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I3(\end_point.state_reg[1]_0 ),
        .I4(s_axi_ctl_rready),
        .I5(s_axi_ctl_rvalid_blk_bridge),
        .O(\end_point.wait_for_idle_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0F80008000800080)) 
    \end_point.wait_for_idle_i_8 
       (.I0(s_axi_ctl_rvalid_ev_hndlr),
        .I1(s_axi_ctl_rready),
        .I2(\end_point.state_reg[1]_0 ),
        .I3(\end_point.s_axi_ctl_araddr_blk_bridge_reg[2]_0 ),
        .I4(s_axi_ctl_bvalid_blk_bridge),
        .I5(s_axi_ctl_bready),
        .O(\end_point.wait_for_idle_i_8_n_0 ));
  FDRE \end_point.wait_for_idle_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.state_reg[1]_1 ),
        .Q(\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 ),
        .R(SR));
  LUT3 #(
    .INIT(8'h8F)) 
    \end_point_1.request_in_progress_i_2 
       (.I0(s_axi_ctl_rready_blk_bridge),
        .I1(s_axi_ctl_rvalid_blk_bridge),
        .I2(sys_rst_n_int),
        .O(\end_point_1.request_in_progress_reg ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    flush_axis_tlp_i_2
       (.I0(trn_lnk_up_d),
        .I1(user_lnk_up_mux_reg),
        .O(interrupt_decode));
  LUT6 #(
    .INIT(64'h00000000FFFFF888)) 
    interrupt_out_INST_0
       (.I0(interrupt_mask[0]),
        .I1(\end_point.interrupt_decode_reg_n_0_[0] ),
        .I2(interrupt_mask[28]),
        .I3(p_1_in5_in[4]),
        .I4(interrupt_out_INST_0_i_1_n_0),
        .I5(bridge_status_control),
        .O(interrupt_out));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    interrupt_out_INST_0_i_1
       (.I0(\end_point.interrupt_decode_reg_n_0_[1] ),
        .I1(interrupt_mask[1]),
        .I2(p_1_in5_in[3]),
        .I3(interrupt_mask[27]),
        .I4(interrupt_out_INST_0_i_2_n_0),
        .O(interrupt_out_INST_0_i_1_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    interrupt_out_INST_0_i_2
       (.I0(interrupt_mask[26]),
        .I1(p_1_in5_in[2]),
        .I2(interrupt_mask[3]),
        .I3(\end_point.interrupt_decode_reg_n_0_[3] ),
        .O(interrupt_out_INST_0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_4
       (.I0(cfg_mgmt_wr_readonly),
        .O(cfg_mgmt_wr_readonly_n));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_5
       (.I0(cfg_mgmt_wr_rw1c_as_rw),
        .O(cfg_mgmt_wr_rw1c_as_rw_n));
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    \sig_bus2ip_ce_reg[3]_i_2 
       (.I0(s_axi_ctl_awaddr_ipic_bridge[5]),
        .I1(s_axi_ctl_araddr_ipic_bridge[5]),
        .I2(s_axi_ctl_awaddr_ipic_bridge[4]),
        .I3(IP2Bus_WrAck_reg),
        .I4(s_axi_ctl_araddr_ipic_bridge[4]),
        .O(\sig_bus2ip_ce_reg_reg[3] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_rx" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx
   (trn_rsof_prev_reg,
    SR,
    trn_rsrc_dsc_d,
    null_mux_sel_reg,
    m_axis_cr_tlast_reg,
    \m_axis_cw_tuser_reg[2] ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    trn_in_packet,
    trn_rdst_rdy_reg,
    cw_full_reg,
    rc_full,
    rc_full_reg,
    rc_full_reg_0,
    cr_full_reg,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    badreadreq,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    null_mux_sel_reg_0,
    rc_enable24_out,
    cr_enable_reg,
    cw_enable_reg,
    cr_enable_reg_0,
    sig_s_axis_cw_tvalid,
    cw_enable_reg_0,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    cw_enable_reg_1,
    cw_enable_reg_2,
    \data_width_64.dataoffset_reg ,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    \FSM_sequential_state_reg[1] ,
    \resetovrd.reset_reg[4] ,
    trn_rsrc_dsc,
    rsrc_rdy_filtered,
    trn_reof,
    trn_rsof,
    trn_in_packet_reg,
    null_mux_sel_reg_1,
    cw_enable_reg_3,
    m_axis_rx_tvalid_reg,
    rc_enable_reg,
    m_axis_rx_tvalid_reg_0,
    m_axis_rx_tvalid_reg_1,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    user_lnk_up_mux_reg,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg_0,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    p_7_in,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    trn_rd,
    trn_rbar_hit,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    sys_rst_n_int,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] );
  output trn_rsof_prev_reg;
  output [0:0]SR;
  output trn_rsrc_dsc_d;
  output null_mux_sel_reg;
  output m_axis_cr_tlast_reg;
  output \m_axis_cw_tuser_reg[2] ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output trn_in_packet;
  output trn_rdst_rdy_reg;
  output cw_full_reg;
  output rc_full;
  output rc_full_reg;
  output rc_full_reg_0;
  output cr_full_reg;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output badreadreq;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output null_mux_sel_reg_0;
  output rc_enable24_out;
  output cr_enable_reg;
  output cw_enable_reg;
  output cr_enable_reg_0;
  output sig_s_axis_cw_tvalid;
  output cw_enable_reg_0;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output cw_enable_reg_1;
  output cw_enable_reg_2;
  output \data_width_64.dataoffset_reg ;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output \FSM_sequential_state_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input trn_rsrc_dsc;
  input rsrc_rdy_filtered;
  input trn_reof;
  input trn_rsof;
  input trn_in_packet_reg;
  input null_mux_sel_reg_1;
  input cw_enable_reg_3;
  input m_axis_rx_tvalid_reg;
  input rc_enable_reg;
  input m_axis_rx_tvalid_reg_0;
  input m_axis_rx_tvalid_reg_1;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input user_lnk_up_mux_reg;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg_0;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input p_7_in;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input [63:0]trn_rd;
  input [3:0]trn_rbar_hit;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input sys_rst_n_int;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;

  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire \FSM_sequential_state_reg[1] ;
  wire [63:0]Q;
  wire [0:0]SR;
  wire almost_fullsig;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire cr_enable_reg;
  wire cr_enable_reg_0;
  wire cr_full_reg;
  wire cw_enable_reg;
  wire cw_enable_reg_0;
  wire cw_enable_reg_1;
  wire cw_enable_reg_2;
  wire cw_enable_reg_3;
  wire cw_full_reg;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire \data_width_64.master_int_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire eqOp;
  wire eqOp56_in;
  wire m_axis_cr_tlast_reg;
  wire \m_axis_cw_tuser_reg[2] ;
  wire [1:0]m_axis_rx_tdata;
  wire [30:15]m_axis_rx_tdata__0;
  wire [21:21]m_axis_rx_tuser;
  wire m_axis_rx_tvalid_reg;
  wire m_axis_rx_tvalid_reg_0;
  wire m_axis_rx_tvalid_reg_1;
  wire neqOp7_in;
  wire [10:0]new_pkt_len;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire null_mux_sel_q;
  wire null_mux_sel_reg;
  wire null_mux_sel_reg_0;
  wire null_mux_sel_reg_1;
  wire p_1_out;
  wire p_6_in;
  wire p_7_in;
  wire padzeroes11_out;
  wire rc_enable24_out;
  wire rc_enable_reg;
  wire rc_full;
  wire rc_full_reg;
  wire rc_full_reg_0;
  wire \resetovrd.reset_reg[4] ;
  wire rsrc_rdy_filtered;
  wire rx_demux_inst_n_0;
  wire rx_demux_inst_n_12;
  wire rx_demux_inst_n_13;
  wire rx_demux_inst_n_245;
  wire rx_demux_inst_n_260;
  wire rx_demux_inst_n_3;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire rx_null_gen_inst_n_0;
  wire rx_null_gen_inst_n_2;
  wire rx_null_gen_inst_n_3;
  wire rx_null_gen_inst_n_4;
  wire rx_null_gen_inst_n_5;
  wire rx_pipeline_inst_n_10;
  wire rx_pipeline_inst_n_100;
  wire rx_pipeline_inst_n_101;
  wire rx_pipeline_inst_n_102;
  wire rx_pipeline_inst_n_103;
  wire rx_pipeline_inst_n_104;
  wire rx_pipeline_inst_n_105;
  wire rx_pipeline_inst_n_106;
  wire rx_pipeline_inst_n_107;
  wire rx_pipeline_inst_n_108;
  wire rx_pipeline_inst_n_109;
  wire rx_pipeline_inst_n_11;
  wire rx_pipeline_inst_n_110;
  wire rx_pipeline_inst_n_111;
  wire rx_pipeline_inst_n_112;
  wire rx_pipeline_inst_n_113;
  wire rx_pipeline_inst_n_114;
  wire rx_pipeline_inst_n_115;
  wire rx_pipeline_inst_n_116;
  wire rx_pipeline_inst_n_117;
  wire rx_pipeline_inst_n_118;
  wire rx_pipeline_inst_n_119;
  wire rx_pipeline_inst_n_12;
  wire rx_pipeline_inst_n_120;
  wire rx_pipeline_inst_n_121;
  wire rx_pipeline_inst_n_122;
  wire rx_pipeline_inst_n_123;
  wire rx_pipeline_inst_n_124;
  wire rx_pipeline_inst_n_125;
  wire rx_pipeline_inst_n_126;
  wire rx_pipeline_inst_n_127;
  wire rx_pipeline_inst_n_128;
  wire rx_pipeline_inst_n_129;
  wire rx_pipeline_inst_n_13;
  wire rx_pipeline_inst_n_130;
  wire rx_pipeline_inst_n_131;
  wire rx_pipeline_inst_n_132;
  wire rx_pipeline_inst_n_133;
  wire rx_pipeline_inst_n_134;
  wire rx_pipeline_inst_n_135;
  wire rx_pipeline_inst_n_136;
  wire rx_pipeline_inst_n_137;
  wire rx_pipeline_inst_n_138;
  wire rx_pipeline_inst_n_139;
  wire rx_pipeline_inst_n_14;
  wire rx_pipeline_inst_n_140;
  wire rx_pipeline_inst_n_141;
  wire rx_pipeline_inst_n_142;
  wire rx_pipeline_inst_n_143;
  wire rx_pipeline_inst_n_144;
  wire rx_pipeline_inst_n_145;
  wire rx_pipeline_inst_n_146;
  wire rx_pipeline_inst_n_147;
  wire rx_pipeline_inst_n_15;
  wire rx_pipeline_inst_n_16;
  wire rx_pipeline_inst_n_165;
  wire rx_pipeline_inst_n_166;
  wire rx_pipeline_inst_n_167;
  wire rx_pipeline_inst_n_168;
  wire rx_pipeline_inst_n_17;
  wire rx_pipeline_inst_n_18;
  wire rx_pipeline_inst_n_19;
  wire rx_pipeline_inst_n_20;
  wire rx_pipeline_inst_n_21;
  wire rx_pipeline_inst_n_22;
  wire rx_pipeline_inst_n_23;
  wire rx_pipeline_inst_n_24;
  wire rx_pipeline_inst_n_25;
  wire rx_pipeline_inst_n_26;
  wire rx_pipeline_inst_n_27;
  wire rx_pipeline_inst_n_28;
  wire rx_pipeline_inst_n_29;
  wire rx_pipeline_inst_n_30;
  wire rx_pipeline_inst_n_31;
  wire rx_pipeline_inst_n_32;
  wire rx_pipeline_inst_n_33;
  wire rx_pipeline_inst_n_34;
  wire rx_pipeline_inst_n_35;
  wire rx_pipeline_inst_n_36;
  wire rx_pipeline_inst_n_37;
  wire rx_pipeline_inst_n_38;
  wire rx_pipeline_inst_n_39;
  wire rx_pipeline_inst_n_40;
  wire rx_pipeline_inst_n_41;
  wire rx_pipeline_inst_n_42;
  wire rx_pipeline_inst_n_43;
  wire rx_pipeline_inst_n_44;
  wire rx_pipeline_inst_n_45;
  wire rx_pipeline_inst_n_46;
  wire rx_pipeline_inst_n_47;
  wire rx_pipeline_inst_n_48;
  wire rx_pipeline_inst_n_49;
  wire rx_pipeline_inst_n_50;
  wire rx_pipeline_inst_n_51;
  wire rx_pipeline_inst_n_52;
  wire rx_pipeline_inst_n_53;
  wire rx_pipeline_inst_n_54;
  wire rx_pipeline_inst_n_55;
  wire rx_pipeline_inst_n_56;
  wire rx_pipeline_inst_n_57;
  wire rx_pipeline_inst_n_58;
  wire rx_pipeline_inst_n_59;
  wire rx_pipeline_inst_n_60;
  wire rx_pipeline_inst_n_61;
  wire rx_pipeline_inst_n_62;
  wire rx_pipeline_inst_n_63;
  wire rx_pipeline_inst_n_64;
  wire rx_pipeline_inst_n_65;
  wire rx_pipeline_inst_n_66;
  wire rx_pipeline_inst_n_67;
  wire rx_pipeline_inst_n_68;
  wire rx_pipeline_inst_n_69;
  wire rx_pipeline_inst_n_7;
  wire rx_pipeline_inst_n_70;
  wire rx_pipeline_inst_n_71;
  wire rx_pipeline_inst_n_72;
  wire rx_pipeline_inst_n_73;
  wire rx_pipeline_inst_n_74;
  wire rx_pipeline_inst_n_8;
  wire rx_pipeline_inst_n_80;
  wire rx_pipeline_inst_n_81;
  wire rx_pipeline_inst_n_82;
  wire rx_pipeline_inst_n_83;
  wire rx_pipeline_inst_n_84;
  wire rx_pipeline_inst_n_85;
  wire rx_pipeline_inst_n_86;
  wire rx_pipeline_inst_n_87;
  wire rx_pipeline_inst_n_88;
  wire rx_pipeline_inst_n_89;
  wire rx_pipeline_inst_n_9;
  wire rx_pipeline_inst_n_90;
  wire rx_pipeline_inst_n_91;
  wire rx_pipeline_inst_n_92;
  wire rx_pipeline_inst_n_93;
  wire rx_pipeline_inst_n_94;
  wire rx_pipeline_inst_n_95;
  wire rx_pipeline_inst_n_96;
  wire rx_pipeline_inst_n_97;
  wire rx_pipeline_inst_n_98;
  wire rx_pipeline_inst_n_99;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tvalid;
  wire state172_out;
  wire sys_rst_n_int;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_in_packet;
  wire trn_in_packet_reg;
  wire [3:0]trn_rbar_hit;
  wire [63:0]trn_rd;
  wire trn_rdst_rdy_reg;
  wire trn_reof;
  wire trn_rnp_ok;
  wire trn_rsof;
  wire trn_rsof_prev_reg;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx_demux rx_demux_inst
       (.D(D),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .\FSM_sequential_state_reg[1]_0 (\FSM_sequential_state_reg[1] ),
        .\FSM_sequential_state_reg[1]_1 (rx_demux_inst_n_260),
        .\FSM_sequential_state_reg[1]_2 (rx_pipeline_inst_n_168),
        .Q(Q),
        .SR(SR),
        .almost_fullsig(almost_fullsig),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .cr_full_reg_0(rx_demux_inst_n_0),
        .cr_full_reg_1(cr_full_reg),
        .cw_empty_reg_0(rx_demux_inst_n_3),
        .cw_enable_reg_0(cw_enable_reg_1),
        .cw_enable_reg_1(cw_enable_reg_3),
        .cw_full_reg_0(cw_full_reg),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0]_0 ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .m_axis_cr_tlast_reg_0(m_axis_cr_tlast_reg),
        .\m_axis_cw_tuser_reg[2]_0 (\m_axis_cw_tuser_reg[2] ),
        .\m_axis_rx_tdata_reg[28] (rx_pipeline_inst_n_165),
        .\m_axis_rx_tdata_reg[28]_0 (rx_pipeline_inst_n_166),
        .\m_axis_rx_tdata_reg[63] ({rx_pipeline_inst_n_82,rx_pipeline_inst_n_83,rx_pipeline_inst_n_84,rx_pipeline_inst_n_85,rx_pipeline_inst_n_86,rx_pipeline_inst_n_87,rx_pipeline_inst_n_88,rx_pipeline_inst_n_89,rx_pipeline_inst_n_90,rx_pipeline_inst_n_91,rx_pipeline_inst_n_92,rx_pipeline_inst_n_93,rx_pipeline_inst_n_94,rx_pipeline_inst_n_95,rx_pipeline_inst_n_96,rx_pipeline_inst_n_97,rx_pipeline_inst_n_98,rx_pipeline_inst_n_99,rx_pipeline_inst_n_100,rx_pipeline_inst_n_101,rx_pipeline_inst_n_102,rx_pipeline_inst_n_103,rx_pipeline_inst_n_104,rx_pipeline_inst_n_105,rx_pipeline_inst_n_106,rx_pipeline_inst_n_107,rx_pipeline_inst_n_108,rx_pipeline_inst_n_109,rx_pipeline_inst_n_110,rx_pipeline_inst_n_111,rx_pipeline_inst_n_112,rx_pipeline_inst_n_113,rx_pipeline_inst_n_114,rx_pipeline_inst_n_115,rx_pipeline_inst_n_116,rx_pipeline_inst_n_117,rx_pipeline_inst_n_118,rx_pipeline_inst_n_119,rx_pipeline_inst_n_120,rx_pipeline_inst_n_121,rx_pipeline_inst_n_122,rx_pipeline_inst_n_123,rx_pipeline_inst_n_124,rx_pipeline_inst_n_125,rx_pipeline_inst_n_126,rx_pipeline_inst_n_127,rx_pipeline_inst_n_128,rx_pipeline_inst_n_129,rx_pipeline_inst_n_130,rx_pipeline_inst_n_131,rx_pipeline_inst_n_132,rx_pipeline_inst_n_133,rx_pipeline_inst_n_134,rx_pipeline_inst_n_135,rx_pipeline_inst_n_136,rx_pipeline_inst_n_137,rx_pipeline_inst_n_138,rx_pipeline_inst_n_139,rx_pipeline_inst_n_140,rx_pipeline_inst_n_141,rx_pipeline_inst_n_142,rx_pipeline_inst_n_143}),
        .\m_axis_rx_tdata_reg[63]_0 ({rx_pipeline_inst_n_11,rx_pipeline_inst_n_12,rx_pipeline_inst_n_13,rx_pipeline_inst_n_14,rx_pipeline_inst_n_15,rx_pipeline_inst_n_16,rx_pipeline_inst_n_17,rx_pipeline_inst_n_18,rx_pipeline_inst_n_19,rx_pipeline_inst_n_20,rx_pipeline_inst_n_21,rx_pipeline_inst_n_22,rx_pipeline_inst_n_23,rx_pipeline_inst_n_24,rx_pipeline_inst_n_25,rx_pipeline_inst_n_26,rx_pipeline_inst_n_27,rx_pipeline_inst_n_28,rx_pipeline_inst_n_29,rx_pipeline_inst_n_30,rx_pipeline_inst_n_31,rx_pipeline_inst_n_32,rx_pipeline_inst_n_33,rx_pipeline_inst_n_34,rx_pipeline_inst_n_35,rx_pipeline_inst_n_36,rx_pipeline_inst_n_37,rx_pipeline_inst_n_38,rx_pipeline_inst_n_39,rx_pipeline_inst_n_40,rx_pipeline_inst_n_41,rx_pipeline_inst_n_42,rx_pipeline_inst_n_43,rx_pipeline_inst_n_44,rx_pipeline_inst_n_45,rx_pipeline_inst_n_46,rx_pipeline_inst_n_47,rx_pipeline_inst_n_48,rx_pipeline_inst_n_49,rx_pipeline_inst_n_50,rx_pipeline_inst_n_51,rx_pipeline_inst_n_52,rx_pipeline_inst_n_53,rx_pipeline_inst_n_54,rx_pipeline_inst_n_55,rx_pipeline_inst_n_56,rx_pipeline_inst_n_57,rx_pipeline_inst_n_58,rx_pipeline_inst_n_59,rx_pipeline_inst_n_60,rx_pipeline_inst_n_61,rx_pipeline_inst_n_62,rx_pipeline_inst_n_63,rx_pipeline_inst_n_64,rx_pipeline_inst_n_65,rx_pipeline_inst_n_66,rx_pipeline_inst_n_67,rx_pipeline_inst_n_68,rx_pipeline_inst_n_69,rx_pipeline_inst_n_70,rx_pipeline_inst_n_71,rx_pipeline_inst_n_72,rx_pipeline_inst_n_73,rx_pipeline_inst_n_74}),
        .\m_axis_rx_tuser_reg[6] ({rx_pipeline_inst_n_144,rx_pipeline_inst_n_145,rx_pipeline_inst_n_146,rx_pipeline_inst_n_147}),
        .\m_axis_rx_tuser_reg[6]_0 ({rx_pipeline_inst_n_7,rx_pipeline_inst_n_8,rx_pipeline_inst_n_9,rx_pipeline_inst_n_10}),
        .m_axis_rx_tvalid_reg(m_axis_rx_tvalid_reg),
        .m_axis_rx_tvalid_reg_0(m_axis_rx_tvalid_reg_0),
        .m_axis_rx_tvalid_reg_1(m_axis_rx_tvalid_reg_1),
        .m_axis_rx_tvalid_reg_2(null_mux_sel_reg),
        .m_axis_rx_tvalid_reg_3(rx_pipeline_inst_n_167),
        .neqOp7_in(neqOp7_in),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (\np_ok_mode.rx_np_ok_int_reg ),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg_0 ),
        .null_mux_sel_reg(rx_demux_inst_n_245),
        .out({rx_demux_inst_n_12,rx_demux_inst_n_13}),
        .p_1_out(p_1_out),
        .p_6_in(p_6_in),
        .padzeroes11_out(padzeroes11_out),
        .rc_enable_reg_0(rc_enable_reg),
        .rc_full(rc_full),
        .rc_full_reg_0(rc_full_reg),
        .rc_full_reg_1(rc_full_reg_0),
        .reg_tlast_reg(rx_pipeline_inst_n_80),
        .reg_tlast_reg_0(rx_pipeline_inst_n_81),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .state172_out(state172_out),
        .sys_rst_n_int(sys_rst_n_int),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_rnp_ok(trn_rnp_ok),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_0),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx_null_gen rx_null_gen_inst
       (.Q({m_axis_rx_tdata__0[30:29],m_axis_rx_tdata__0[15],m_axis_rx_tdata}),
        .S({rx_null_gen_inst_n_4,rx_null_gen_inst_n_5}),
        .SR(SR),
        .cw_full_reg(rx_demux_inst_n_245),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .\m_axis_rx_tuser_reg[21] (rx_null_gen_inst_n_2),
        .\m_axis_rx_tuser_reg[2] (rx_null_gen_inst_n_0),
        .new_pkt_len(new_pkt_len),
        .null_mux_sel_q(null_mux_sel_q),
        .null_mux_sel_reg(rx_null_gen_inst_n_3),
        .null_mux_sel_reg_0(null_mux_sel_reg_0),
        .p_7_in(p_7_in),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx_pipeline rx_pipeline_inst
       (.E(trn_rsof_prev_reg),
        .\FSM_sequential_state_reg[0] (rx_pipeline_inst_n_165),
        .\FSM_sequential_state_reg[1] (rx_pipeline_inst_n_166),
        .\FSM_sequential_state_reg[2] (rx_pipeline_inst_n_168),
        .\FSM_sequential_state_reg[2]_0 (\FSM_sequential_state_reg[1] ),
        .\FSM_sequential_state_reg[2]_1 (rx_demux_inst_n_260),
        .Q({m_axis_rx_tdata__0[30:29],m_axis_rx_tdata__0[15],m_axis_rx_tdata}),
        .S({rx_null_gen_inst_n_4,rx_null_gen_inst_n_5}),
        .SR(SR),
        .cr_empty_reg(rx_demux_inst_n_0),
        .cr_enable_reg(cr_enable_reg),
        .cr_enable_reg_0(cr_enable_reg_0),
        .cr_enable_reg_1(cr_full_reg),
        .cw_empty_reg(rx_demux_inst_n_3),
        .cw_enable_reg(cw_enable_reg),
        .cw_enable_reg_0(cw_enable_reg_0),
        .cw_enable_reg_1(cw_enable_reg_2),
        .cw_enable_reg_2(rx_pipeline_inst_n_167),
        .cw_full_reg(rx_demux_inst_n_245),
        .\m_axis_cr_tdata_reg[63] ({rx_pipeline_inst_n_82,rx_pipeline_inst_n_83,rx_pipeline_inst_n_84,rx_pipeline_inst_n_85,rx_pipeline_inst_n_86,rx_pipeline_inst_n_87,rx_pipeline_inst_n_88,rx_pipeline_inst_n_89,rx_pipeline_inst_n_90,rx_pipeline_inst_n_91,rx_pipeline_inst_n_92,rx_pipeline_inst_n_93,rx_pipeline_inst_n_94,rx_pipeline_inst_n_95,rx_pipeline_inst_n_96,rx_pipeline_inst_n_97,rx_pipeline_inst_n_98,rx_pipeline_inst_n_99,rx_pipeline_inst_n_100,rx_pipeline_inst_n_101,rx_pipeline_inst_n_102,rx_pipeline_inst_n_103,rx_pipeline_inst_n_104,rx_pipeline_inst_n_105,rx_pipeline_inst_n_106,rx_pipeline_inst_n_107,rx_pipeline_inst_n_108,rx_pipeline_inst_n_109,rx_pipeline_inst_n_110,rx_pipeline_inst_n_111,rx_pipeline_inst_n_112,rx_pipeline_inst_n_113,rx_pipeline_inst_n_114,rx_pipeline_inst_n_115,rx_pipeline_inst_n_116,rx_pipeline_inst_n_117,rx_pipeline_inst_n_118,rx_pipeline_inst_n_119,rx_pipeline_inst_n_120,rx_pipeline_inst_n_121,rx_pipeline_inst_n_122,rx_pipeline_inst_n_123,rx_pipeline_inst_n_124,rx_pipeline_inst_n_125,rx_pipeline_inst_n_126,rx_pipeline_inst_n_127,rx_pipeline_inst_n_128,rx_pipeline_inst_n_129,rx_pipeline_inst_n_130,rx_pipeline_inst_n_131,rx_pipeline_inst_n_132,rx_pipeline_inst_n_133,rx_pipeline_inst_n_134,rx_pipeline_inst_n_135,rx_pipeline_inst_n_136,rx_pipeline_inst_n_137,rx_pipeline_inst_n_138,rx_pipeline_inst_n_139,rx_pipeline_inst_n_140,rx_pipeline_inst_n_141,rx_pipeline_inst_n_142,rx_pipeline_inst_n_143}),
        .m_axis_cr_tlast_reg(rx_pipeline_inst_n_81),
        .\m_axis_cr_tuser_reg[6] ({rx_pipeline_inst_n_144,rx_pipeline_inst_n_145,rx_pipeline_inst_n_146,rx_pipeline_inst_n_147}),
        .\m_axis_cw_tdata_reg[63] ({rx_pipeline_inst_n_11,rx_pipeline_inst_n_12,rx_pipeline_inst_n_13,rx_pipeline_inst_n_14,rx_pipeline_inst_n_15,rx_pipeline_inst_n_16,rx_pipeline_inst_n_17,rx_pipeline_inst_n_18,rx_pipeline_inst_n_19,rx_pipeline_inst_n_20,rx_pipeline_inst_n_21,rx_pipeline_inst_n_22,rx_pipeline_inst_n_23,rx_pipeline_inst_n_24,rx_pipeline_inst_n_25,rx_pipeline_inst_n_26,rx_pipeline_inst_n_27,rx_pipeline_inst_n_28,rx_pipeline_inst_n_29,rx_pipeline_inst_n_30,rx_pipeline_inst_n_31,rx_pipeline_inst_n_32,rx_pipeline_inst_n_33,rx_pipeline_inst_n_34,rx_pipeline_inst_n_35,rx_pipeline_inst_n_36,rx_pipeline_inst_n_37,rx_pipeline_inst_n_38,rx_pipeline_inst_n_39,rx_pipeline_inst_n_40,rx_pipeline_inst_n_41,rx_pipeline_inst_n_42,rx_pipeline_inst_n_43,rx_pipeline_inst_n_44,rx_pipeline_inst_n_45,rx_pipeline_inst_n_46,rx_pipeline_inst_n_47,rx_pipeline_inst_n_48,rx_pipeline_inst_n_49,rx_pipeline_inst_n_50,rx_pipeline_inst_n_51,rx_pipeline_inst_n_52,rx_pipeline_inst_n_53,rx_pipeline_inst_n_54,rx_pipeline_inst_n_55,rx_pipeline_inst_n_56,rx_pipeline_inst_n_57,rx_pipeline_inst_n_58,rx_pipeline_inst_n_59,rx_pipeline_inst_n_60,rx_pipeline_inst_n_61,rx_pipeline_inst_n_62,rx_pipeline_inst_n_63,rx_pipeline_inst_n_64,rx_pipeline_inst_n_65,rx_pipeline_inst_n_66,rx_pipeline_inst_n_67,rx_pipeline_inst_n_68,rx_pipeline_inst_n_69,rx_pipeline_inst_n_70,rx_pipeline_inst_n_71,rx_pipeline_inst_n_72,rx_pipeline_inst_n_73,rx_pipeline_inst_n_74}),
        .m_axis_cw_tlast_reg(rx_pipeline_inst_n_80),
        .\m_axis_cw_tuser_reg[6] ({rx_pipeline_inst_n_7,rx_pipeline_inst_n_8,rx_pipeline_inst_n_9,rx_pipeline_inst_n_10}),
        .m_axis_rx_tuser(m_axis_rx_tuser),
        .new_pkt_len(new_pkt_len),
        .null_mux_sel_q(null_mux_sel_q),
        .null_mux_sel_reg_0(null_mux_sel_reg),
        .null_mux_sel_reg_1(null_mux_sel_reg_0),
        .null_mux_sel_reg_2(null_mux_sel_reg_1),
        .null_mux_sel_reg_3(rx_null_gen_inst_n_0),
        .out({rx_demux_inst_n_12,rx_demux_inst_n_13}),
        .p_7_in(p_7_in),
        .rc_enable24_out(rc_enable24_out),
        .\reg_pkt_len_counter_reg[0] (rx_null_gen_inst_n_3),
        .\reg_pkt_len_counter_reg[0]_0 (rx_null_gen_inst_n_2),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .rsrc_rdy_filtered(rsrc_rdy_filtered),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .state172_out(state172_out),
        .sys_rst_n_int(sys_rst_n_int),
        .trn_in_packet(trn_in_packet),
        .trn_in_packet_reg_0(trn_in_packet_reg),
        .trn_rbar_hit(trn_rbar_hit),
        .trn_rd(trn_rd),
        .trn_rdst_rdy_reg_0(trn_rdst_rdy_reg),
        .trn_reof(trn_reof),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(trn_rsrc_dsc_d),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_rx_demux" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx_demux
   (cr_full_reg_0,
    SR,
    m_axis_cr_tlast_reg_0,
    cw_empty_reg_0,
    \m_axis_cw_tuser_reg[2]_0 ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    cw_full_reg_0,
    rc_full,
    rc_full_reg_0,
    rc_full_reg_1,
    cr_full_reg_1,
    out,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    badreadreq,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    null_mux_sel_reg,
    sig_s_axis_cw_tvalid,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    cw_enable_reg_0,
    \data_width_64.dataoffset_reg ,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    \FSM_sequential_state_reg[1]_0 ,
    \FSM_sequential_state_reg[1]_1 ,
    \resetovrd.reset_reg[4] ,
    reg_tlast_reg,
    reg_tlast_reg_0,
    cw_enable_reg_1,
    m_axis_rx_tvalid_reg,
    rc_enable_reg_0,
    m_axis_rx_tvalid_reg_0,
    m_axis_rx_tvalid_reg_1,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    user_lnk_up_mux_reg,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg_0,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    m_axis_rx_tvalid_reg_2,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    state172_out,
    sys_rst_n_int,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \FSM_sequential_state_reg[1]_2 ,
    \m_axis_rx_tdata_reg[28] ,
    m_axis_rx_tvalid_reg_3,
    \m_axis_rx_tdata_reg[63] ,
    \m_axis_rx_tuser_reg[6] ,
    \m_axis_rx_tdata_reg[63]_0 ,
    \m_axis_rx_tuser_reg[6]_0 ,
    \m_axis_rx_tdata_reg[28]_0 );
  output cr_full_reg_0;
  output [0:0]SR;
  output m_axis_cr_tlast_reg_0;
  output cw_empty_reg_0;
  output \m_axis_cw_tuser_reg[2]_0 ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output cw_full_reg_0;
  output rc_full;
  output rc_full_reg_0;
  output rc_full_reg_1;
  output cr_full_reg_1;
  output [1:0]out;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output badreadreq;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output null_mux_sel_reg;
  output sig_s_axis_cw_tvalid;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output cw_enable_reg_0;
  output \data_width_64.dataoffset_reg ;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output \FSM_sequential_state_reg[1]_0 ;
  output \FSM_sequential_state_reg[1]_1 ;
  input \resetovrd.reset_reg[4] ;
  input reg_tlast_reg;
  input reg_tlast_reg_0;
  input cw_enable_reg_1;
  input m_axis_rx_tvalid_reg;
  input rc_enable_reg_0;
  input m_axis_rx_tvalid_reg_0;
  input m_axis_rx_tvalid_reg_1;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input user_lnk_up_mux_reg;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg_0;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input m_axis_rx_tvalid_reg_2;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input state172_out;
  input sys_rst_n_int;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input \FSM_sequential_state_reg[1]_2 ;
  input \m_axis_rx_tdata_reg[28] ;
  input m_axis_rx_tvalid_reg_3;
  input [61:0]\m_axis_rx_tdata_reg[63] ;
  input [3:0]\m_axis_rx_tuser_reg[6] ;
  input [63:0]\m_axis_rx_tdata_reg[63]_0 ;
  input [3:0]\m_axis_rx_tuser_reg[6]_0 ;
  input [0:0]\m_axis_rx_tdata_reg[28]_0 ;

  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_11_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire \FSM_sequential_state[0]_i_1_n_0 ;
  wire \FSM_sequential_state[1]_i_5_n_0 ;
  wire \FSM_sequential_state[2]_i_1_n_0 ;
  wire \FSM_sequential_state[2]_i_3_n_0 ;
  wire \FSM_sequential_state[3]_i_1_n_0 ;
  wire \FSM_sequential_state_reg[1]_0 ;
  wire \FSM_sequential_state_reg[1]_1 ;
  wire \FSM_sequential_state_reg[1]_2 ;
  wire [63:0]Q;
  wire [0:0]SR;
  wire almost_fullsig;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire \comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp54_in ;
  wire cr_empty;
  wire cr_empty_i_1_n_0;
  wire cr_full_i_1_n_0;
  wire cr_full_reg_0;
  wire cr_full_reg_1;
  wire cw_empty_i_1_n_0;
  wire cw_empty_reg_0;
  wire cw_empty_reg_n_0;
  wire cw_enable_i_6_n_0;
  wire cw_enable_i_7_n_0;
  wire cw_enable_reg_0;
  wire cw_enable_reg_1;
  wire cw_full_i_1_n_0;
  wire cw_full_reg_0;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.dataen_i_10_n_0 ;
  wire \data_width_64.dataen_i_11_n_0 ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire \data_width_64.master_int_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_i_8_n_0 ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire \data_width_64.tlpfmtsig[0]_i_5_n_0 ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire eqOp;
  wire eqOp56_in;
  wire m_axis_cr_tlast_reg_0;
  wire \m_axis_cw_tuser_reg[2]_0 ;
  wire \m_axis_rx_tdata_reg[28] ;
  wire [0:0]\m_axis_rx_tdata_reg[28]_0 ;
  wire [61:0]\m_axis_rx_tdata_reg[63] ;
  wire [63:0]\m_axis_rx_tdata_reg[63]_0 ;
  wire [3:0]\m_axis_rx_tuser_reg[6] ;
  wire [3:0]\m_axis_rx_tuser_reg[6]_0 ;
  wire m_axis_rx_tvalid_reg;
  wire m_axis_rx_tvalid_reg_0;
  wire m_axis_rx_tvalid_reg_1;
  wire m_axis_rx_tvalid_reg_2;
  wire m_axis_rx_tvalid_reg_3;
  wire neqOp7_in;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM[1]_i_2_n_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire null_mux_sel_i_5_n_0;
  wire null_mux_sel_i_6_n_0;
  wire null_mux_sel_i_7_n_0;
  wire null_mux_sel_reg;
  (* RTL_KEEP = "yes" *) wire [1:0]out;
  wire p_1_out;
  wire p_6_in;
  wire padzeroes11_out;
  wire rc_enable_reg_0;
  wire rc_full;
  wire rc_full_reg_0;
  wire rc_full_reg_1;
  wire reg_tlast_reg;
  wire reg_tlast_reg_0;
  wire \resetovrd.reset_reg[4] ;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire [30:24]sig_s_axis_cr_tdata;
  wire sig_s_axis_cr_tready;
  wire [3:3]sig_s_axis_cr_tuser;
  wire sig_s_axis_cr_tvalid;
  wire [3:3]sig_s_axis_cw_tuser;
  wire sig_s_axis_cw_tvalid;
  (* RTL_KEEP = "yes" *) wire [2:0]state;
  wire state171_out;
  wire state172_out;
  wire sys_rst_n_int;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_rnp_ok;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  LUT6 #(
    .INIT(64'h0D010D3DF0F0F0F0)) 
    \FSM_sequential_data_width_64.wrreqsmsig[0]_i_3 
       (.I0(Q[14]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [1]),
        .I3(user_lnk_up_mux_reg),
        .I4(s_axis_cw_treadysig45_out),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFBBB0000)) 
    \FSM_sequential_data_width_64.wrreqsmsig[1]_i_1 
       (.I0(Q[14]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .I2(\wrreqsetcnt_reg[2] ),
        .I3(Q[29]),
        .I4(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .I5(user_lnk_up_mux_reg_0),
        .O(D));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_data_width_64.wrreqsmsig[2]_i_3 
       (.I0(Q[33]),
        .I1(Q[32]),
        .I2(Q[34]),
        .I3(Q[35]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_11 
       (.I0(user_lnk_up_mux_reg),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(almost_fullsig),
        .I3(\data_width_64.lastdwbesig_reg[0] ),
        .I4(Q[30]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h700070FF70FF70FF)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_5 
       (.I0(\data_width_64.datain_reg[64] ),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(user_lnk_up_mux_reg),
        .I3(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [1]),
        .I4(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_11_n_0 ),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_6 
       (.I0(\m_axis_cw_tuser_reg[2]_0 ),
        .I1(user_lnk_up_mux_reg),
        .I2(\data_width_64.datain_reg[64] ),
        .O(s_axis_cw_treadysig45_out));
  LUT6 #(
    .INIT(64'hFFFFFFFF00044444)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(state172_out),
        .I1(state[0]),
        .I2(state[2]),
        .I3(out[0]),
        .I4(out[1]),
        .I5(\m_axis_rx_tdata_reg[28] ),
        .O(\FSM_sequential_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h04140C3C0010C0F0)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(state[2]),
        .I1(state[0]),
        .I2(out[0]),
        .I3(\FSM_sequential_state[1]_i_5_n_0 ),
        .I4(out[1]),
        .I5(state172_out),
        .O(\FSM_sequential_state_reg[1]_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_state[1]_i_3 
       (.I0(state[2]),
        .I1(out[1]),
        .I2(state[0]),
        .I3(out[0]),
        .O(\FSM_sequential_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \FSM_sequential_state[1]_i_5 
       (.I0(sig_s_axis_cr_tready),
        .I1(\np_ok_mode.rx_np_ok_int_reg ),
        .I2(user_lnk_up_mux_reg),
        .I3(m_axis_cr_tlast_reg_0),
        .I4(state[2]),
        .I5(out[1]),
        .O(\FSM_sequential_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF8F80)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(out[0]),
        .I1(state172_out),
        .I2(state[0]),
        .I3(\FSM_sequential_state_reg[1]_2 ),
        .I4(state[2]),
        .I5(\FSM_sequential_state[2]_i_3_n_0 ),
        .O(\FSM_sequential_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEAAFEAAAAAAAAAAA)) 
    \FSM_sequential_state[2]_i_3 
       (.I0(out[1]),
        .I1(state172_out),
        .I2(out[0]),
        .I3(state[0]),
        .I4(state171_out),
        .I5(state[2]),
        .O(\FSM_sequential_state[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \FSM_sequential_state[2]_i_4 
       (.I0(\m_axis_cw_tuser_reg[2]_0 ),
        .I1(user_lnk_up_mux_reg),
        .I2(\data_width_64.datain_reg[64] ),
        .I3(\data_width_64.s_axis_cw_treadysig_reg ),
        .I4(almost_fullsig),
        .O(state171_out));
  LUT5 #(
    .INIT(32'h08303030)) 
    \FSM_sequential_state[3]_i_1 
       (.I0(state172_out),
        .I1(state[2]),
        .I2(out[1]),
        .I3(state[0]),
        .I4(out[0]),
        .O(\FSM_sequential_state[3]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(sys_rst_n_int),
        .D(\FSM_sequential_state[0]_i_1_n_0 ),
        .Q(state[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(sys_rst_n_int),
        .D(\m_axis_rx_tdata_reg[28]_0 ),
        .Q(out[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(sys_rst_n_int),
        .D(\FSM_sequential_state[2]_i_1_n_0 ),
        .Q(state[2]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(sys_rst_n_int),
        .D(\FSM_sequential_state[3]_i_1_n_0 ),
        .Q(out[1]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0F000F0F8F888F8F)) 
    cr_empty_i_1
       (.I0(m_axis_rx_tvalid_reg_2),
        .I1(cr_full_reg_1),
        .I2(cr_full_reg_0),
        .I3(sig_s_axis_cr_tready),
        .I4(user_lnk_up_mux_reg),
        .I5(m_axis_cr_tlast_reg_0),
        .O(cr_empty_i_1_n_0));
  LUT5 #(
    .INIT(32'h00454545)) 
    cr_empty_i_2
       (.I0(cr_full_reg_0),
        .I1(sig_s_axis_cr_tready),
        .I2(user_lnk_up_mux_reg),
        .I3(cr_full_reg_1),
        .I4(m_axis_rx_tvalid_reg_2),
        .O(cr_empty));
  FDSE cr_empty_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(cr_empty),
        .Q(cr_full_reg_0),
        .S(SR));
  FDRE cr_enable_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axis_rx_tvalid_reg_1),
        .Q(cr_full_reg_1),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFF88F8)) 
    cr_full_i_1
       (.I0(m_axis_rx_tvalid_reg_2),
        .I1(cr_full_reg_1),
        .I2(user_lnk_up_mux_reg),
        .I3(sig_s_axis_cr_tready),
        .I4(cr_full_reg_0),
        .O(cr_full_i_1_n_0));
  FDRE cr_full_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(cr_full_i_1_n_0),
        .Q(m_axis_cr_tlast_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h0F000F0F8F888F8F)) 
    cw_empty_i_1
       (.I0(m_axis_rx_tvalid_reg_2),
        .I1(cw_full_reg_0),
        .I2(cw_empty_reg_n_0),
        .I3(\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .I4(user_lnk_up_mux_reg),
        .I5(\m_axis_cw_tuser_reg[2]_0 ),
        .O(cw_empty_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000105510551055)) 
    cw_empty_i_2
       (.I0(cw_empty_reg_n_0),
        .I1(almost_fullsig),
        .I2(\data_width_64.s_axis_cw_treadysig_reg ),
        .I3(user_lnk_up_mux_reg),
        .I4(cw_full_reg_0),
        .I5(m_axis_rx_tvalid_reg_2),
        .O(cw_empty_reg_0));
  FDSE cw_empty_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(cw_empty_reg_0),
        .Q(cw_empty_reg_n_0),
        .S(SR));
  LUT5 #(
    .INIT(32'hE2220000)) 
    cw_enable_i_5
       (.I0(cw_enable_i_6_n_0),
        .I1(state[0]),
        .I2(state172_out),
        .I3(cw_enable_i_7_n_0),
        .I4(sys_rst_n_int),
        .O(cw_enable_reg_0));
  LUT6 #(
    .INIT(64'h88B8BBBB88B88888)) 
    cw_enable_i_6
       (.I0(\FSM_sequential_state[1]_i_5_n_0 ),
        .I1(out[0]),
        .I2(state171_out),
        .I3(out[1]),
        .I4(state[2]),
        .I5(m_axis_rx_tvalid_reg_3),
        .O(cw_enable_i_6_n_0));
  LUT3 #(
    .INIT(8'h1F)) 
    cw_enable_i_7
       (.I0(state[2]),
        .I1(out[0]),
        .I2(out[1]),
        .O(cw_enable_i_7_n_0));
  FDRE cw_enable_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(cw_enable_reg_1),
        .Q(cw_full_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFF8F888F8)) 
    cw_full_i_1
       (.I0(m_axis_rx_tvalid_reg_2),
        .I1(cw_full_reg_0),
        .I2(user_lnk_up_mux_reg),
        .I3(\data_width_64.s_axis_cw_treadysig_reg ),
        .I4(almost_fullsig),
        .I5(cw_empty_reg_n_0),
        .O(cw_full_i_1_n_0));
  FDRE cw_full_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(cw_full_i_1_n_0),
        .Q(\m_axis_cw_tuser_reg[2]_0 ),
        .R(SR));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_width_64.badreadreq_i_2 
       (.I0(sig_s_axis_cr_tuser),
        .I1(\data_width_64.s_axis_cr_tusersig_reg[3][2] [1]),
        .I2(\data_width_64.s_axis_cr_tusersig_reg[3][2] [0]),
        .I3(\data_width_64.s_axis_cr_tusersig_reg[3][2] [2]),
        .I4(\data_width_64.rdreqsmsig_reg[2] ),
        .O(\data_width_64.badreadreq_reg ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \data_width_64.badreadreq_i_5 
       (.I0(blk_lnk_up_latch),
        .I1(user_lnk_up_mux_reg),
        .I2(m_axis_cr_tlast_reg_0),
        .I3(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp54_in ),
        .I4(sig_s_axis_cr_tdata[30]),
        .O(badreadreq));
  LUT6 #(
    .INIT(64'hFFFFFFFF7FFFFFFF)) 
    \data_width_64.dataen_i_10 
       (.I0(\data_width_64.lastdwbesig_reg[0] ),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .I2(eqOp),
        .I3(\m_axis_cw_tuser_reg[2]_0 ),
        .I4(user_lnk_up_mux_reg),
        .I5(almost_fullsig),
        .O(\data_width_64.dataen_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \data_width_64.dataen_i_11 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(Q[3]),
        .O(\data_width_64.dataen_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h2E22222200000000)) 
    \data_width_64.dataen_i_5 
       (.I0(\data_width_64.datain_reg[64] ),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [1]),
        .I2(almost_fullsig),
        .I3(user_lnk_up_mux_reg),
        .I4(\m_axis_cw_tuser_reg[2]_0 ),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .O(\data_width_64.dataen_reg_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \data_width_64.dataen_i_8 
       (.I0(Q[29]),
        .I1(\data_width_64.dataen_i_10_n_0 ),
        .I2(\wrreqsetcnt_reg[2] ),
        .I3(Q[14]),
        .I4(Q[30]),
        .I5(user_lnk_up_mux_reg),
        .O(\data_width_64.dataen_reg ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \data_width_64.dataen_i_9 
       (.I0(Q[7]),
        .I1(Q[6]),
        .I2(Q[5]),
        .I3(Q[9]),
        .I4(Q[8]),
        .I5(\data_width_64.dataen_i_11_n_0 ),
        .O(eqOp));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \data_width_64.dataoffset_i_3 
       (.I0(\m_axis_cw_tuser_reg[2]_0 ),
        .I1(user_lnk_up_mux_reg),
        .I2(almost_fullsig),
        .I3(\data_width_64.datain_reg[64] ),
        .O(\data_width_64.dataoffset_reg ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'hBFFF)) 
    \data_width_64.delaylast_i_6 
       (.I0(almost_fullsig),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(Q[34]),
        .I3(user_lnk_up_mux_reg),
        .O(\data_width_64.delaylast_reg ));
  LUT6 #(
    .INIT(64'h000000000000E000)) 
    \data_width_64.delaylast_i_7 
       (.I0(\data_width_64.tlplengthsig_reg[0] ),
        .I1(Q[2]),
        .I2(\m_axis_cw_tuser_reg[2]_0 ),
        .I3(user_lnk_up_mux_reg),
        .I4(almost_fullsig),
        .I5(\data_width_64.datain_reg[64] ),
        .O(delaylast40_out));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \data_width_64.master_int_i_2 
       (.I0(\data_width_64.wrreqpendsig_reg[0] ),
        .I1(Q[30]),
        .I2(user_lnk_up_mux_reg),
        .I3(\data_width_64.lastdwbesig_reg[0] ),
        .I4(Q[14]),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [1]),
        .O(\data_width_64.master_int_reg ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \data_width_64.padzeroes_i_4 
       (.I0(almost_fullsig),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(\data_width_64.datain_reg[64] ),
        .I3(Q[2]),
        .I4(user_lnk_up_mux_reg),
        .O(padzeroes11_out));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.rdndtlpaddrlow[2]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [2]),
        .I1(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .I2(\data_width_64.requesteridsig_reg[15] [26]),
        .O(\data_width_64.rdndtlpaddrlow_reg[6] [0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.rdndtlpaddrlow[3]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [3]),
        .I1(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .I2(\data_width_64.requesteridsig_reg[15] [27]),
        .O(\data_width_64.rdndtlpaddrlow_reg[6] [1]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.rdndtlpaddrlow[4]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [4]),
        .I1(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .I2(\data_width_64.requesteridsig_reg[15] [28]),
        .O(\data_width_64.rdndtlpaddrlow_reg[6] [2]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.rdndtlpaddrlow[5]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [5]),
        .I1(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .I2(\data_width_64.requesteridsig_reg[15] [29]),
        .O(\data_width_64.rdndtlpaddrlow_reg[6] [3]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.rdndtlpaddrlow[6]_i_2 
       (.I0(\data_width_64.requesteridsig_reg[15] [6]),
        .I1(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .I2(\data_width_64.requesteridsig_reg[15] [30]),
        .O(\data_width_64.rdndtlpaddrlow_reg[6] [4]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \data_width_64.rdndtlpaddrlow[6]_i_3 
       (.I0(user_lnk_up_mux_reg),
        .I1(m_axis_cr_tlast_reg_0),
        .I2(\np_ok_mode.rx_np_ok_int_reg ),
        .I3(blk_lnk_up_latch),
        .O(\data_width_64.rdndtlpaddrlow_reg[0] ));
  LUT6 #(
    .INIT(64'h2000F00020FFF000)) 
    \data_width_64.rdreqsmsig[2]_i_6 
       (.I0(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp54_in ),
        .I1(sig_s_axis_cr_tdata[30]),
        .I2(sig_s_axis_cr_tvalid),
        .I3(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .I4(blk_lnk_up_latch),
        .I5(\data_width_64.lnkdowndataflush_reg ),
        .O(\data_width_64.rdreqsmsig_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_11 
       (.I0(\np_ok_mode.rx_np_ok_int_reg ),
        .I1(m_axis_cr_tlast_reg_0),
        .I2(user_lnk_up_mux_reg),
        .O(s_axis_cr_tready_sig106_out));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \data_width_64.s_axis_cr_tusersig[0][2]_i_5 
       (.I0(user_lnk_up_mux_reg),
        .I1(m_axis_cr_tlast_reg_0),
        .I2(\np_ok_mode.rx_np_ok_int_reg ),
        .I3(\data_width_64.zerolenreadreq_reg ),
        .I4(\data_width_64.badreadreq_reg_1 ),
        .O(\data_width_64.rdreqpipelineincr_reg ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[0]_i_1 
       (.I0(Q[24]),
        .I1(Q[56]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [0]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[10]_i_1 
       (.I0(Q[18]),
        .I1(Q[50]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [10]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[11]_i_1 
       (.I0(Q[19]),
        .I1(Q[51]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [11]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[12]_i_1 
       (.I0(Q[20]),
        .I1(Q[52]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [12]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[13]_i_1 
       (.I0(Q[21]),
        .I1(Q[53]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [13]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[14]_i_1 
       (.I0(Q[22]),
        .I1(Q[54]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [14]));
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[15]_i_1 
       (.I0(Q[23]),
        .I1(Q[55]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [15]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[16]_i_1 
       (.I0(Q[8]),
        .I1(Q[40]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [16]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[17]_i_1 
       (.I0(Q[9]),
        .I1(Q[41]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [17]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[18]_i_1 
       (.I0(Q[10]),
        .I1(Q[42]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [18]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[19]_i_1 
       (.I0(Q[11]),
        .I1(Q[43]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [19]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[1]_i_1 
       (.I0(Q[25]),
        .I1(Q[57]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [1]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[20]_i_1 
       (.I0(Q[12]),
        .I1(Q[44]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [20]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[21]_i_1 
       (.I0(Q[13]),
        .I1(Q[45]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [21]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[22]_i_1 
       (.I0(Q[14]),
        .I1(Q[46]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [22]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[23]_i_1 
       (.I0(Q[15]),
        .I1(Q[47]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [23]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[24]_i_1 
       (.I0(Q[0]),
        .I1(Q[32]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [24]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[25]_i_1 
       (.I0(Q[1]),
        .I1(Q[33]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [25]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[26]_i_1 
       (.I0(Q[2]),
        .I1(Q[34]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [26]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[27]_i_1 
       (.I0(Q[3]),
        .I1(Q[35]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [27]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[28]_i_1 
       (.I0(Q[4]),
        .I1(Q[36]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [28]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[29]_i_1 
       (.I0(Q[5]),
        .I1(Q[37]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [29]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[2]_i_1 
       (.I0(Q[26]),
        .I1(Q[58]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [2]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[30]_i_1 
       (.I0(Q[6]),
        .I1(Q[38]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [30]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[31]_i_2 
       (.I0(Q[7]),
        .I1(Q[39]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [31]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \data_width_64.s_axis_cw_tdatatemp[31]_i_4 
       (.I0(\m_axis_cw_tuser_reg[2]_0 ),
        .I1(user_lnk_up_mux_reg),
        .I2(treadydataenadjustsig),
        .O(p_1_out));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[3]_i_1 
       (.I0(Q[27]),
        .I1(Q[59]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [3]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[4]_i_1 
       (.I0(Q[28]),
        .I1(Q[60]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [4]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[5]_i_1 
       (.I0(Q[29]),
        .I1(Q[61]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [5]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[6]_i_1 
       (.I0(Q[30]),
        .I1(Q[62]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [6]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[7]_i_1 
       (.I0(Q[31]),
        .I1(Q[63]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [7]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[8]_i_1 
       (.I0(Q[16]),
        .I1(Q[48]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [8]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.s_axis_cw_tdatatemp[9]_i_1 
       (.I0(Q[17]),
        .I1(Q[49]),
        .I2(\data_width_64.dataoffset_reg_0 ),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[31] [9]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'hF8F0)) 
    \data_width_64.s_axis_cw_tlasttemp_i_3 
       (.I0(user_lnk_up_mux_reg),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(treadydataenadjustsig),
        .I3(\data_width_64.s_axis_cw_treadysig_reg ),
        .O(\data_width_64.s_axis_cw_tlasttemp_reg ));
  LUT6 #(
    .INIT(64'h000000A200000000)) 
    \data_width_64.s_axis_cw_treadysig_i_7 
       (.I0(\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .I1(neqOp7_in),
        .I2(wrreqsetsig),
        .I3(\data_width_64.s_axis_cw_treadysig_i_8_n_0 ),
        .I4(Q[14]),
        .I5(\data_width_64.lastdwbesig_reg[0] ),
        .O(s_axis_cw_treadysig34_out));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'hBFFF)) 
    \data_width_64.s_axis_cw_treadysig_i_8 
       (.I0(almost_fullsig),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(Q[30]),
        .I3(user_lnk_up_mux_reg),
        .O(\data_width_64.s_axis_cw_treadysig_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \data_width_64.tempdatareg[31]_i_3 
       (.I0(almost_fullsig),
        .I1(user_lnk_up_mux_reg),
        .I2(\m_axis_cw_tuser_reg[2]_0 ),
        .O(\data_width_64.tempdatareg_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[31]_i_5 
       (.I0(user_lnk_up_mux_reg),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .O(sig_s_axis_cw_tvalid));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[0]_i_1 
       (.I0(Q[0]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[32]),
        .O(\data_width_64.tlpaddrl_reg[22] [0]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[10]_i_1 
       (.I0(Q[10]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[42]),
        .O(\data_width_64.tlpaddrl_reg[22] [10]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[11]_i_1 
       (.I0(Q[11]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[43]),
        .O(\data_width_64.tlpaddrl_reg[22] [11]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[12]_i_1 
       (.I0(Q[12]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[44]),
        .O(\data_width_64.tlpaddrl_reg[22] [12]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[13]_i_1 
       (.I0(Q[13]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[45]),
        .O(\data_width_64.tlpaddrl_reg[22] [13]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[14]_i_1 
       (.I0(Q[14]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[46]),
        .O(\data_width_64.tlpaddrl_reg[22] [14]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[15]_i_1 
       (.I0(Q[15]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[47]),
        .O(\data_width_64.tlpaddrl_reg[22] [15]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[16]_i_1 
       (.I0(Q[16]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[48]),
        .O(\data_width_64.tlpaddrl_reg[22] [16]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[17]_i_1 
       (.I0(Q[17]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[49]),
        .O(\data_width_64.tlpaddrl_reg[22] [17]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[18]_i_1 
       (.I0(Q[18]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[50]),
        .O(\data_width_64.tlpaddrl_reg[22] [18]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[19]_i_1 
       (.I0(Q[19]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[51]),
        .O(\data_width_64.tlpaddrl_reg[22] [19]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[1]_i_1 
       (.I0(Q[1]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[33]),
        .O(\data_width_64.tlpaddrl_reg[22] [1]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[20]_i_1 
       (.I0(Q[20]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[52]),
        .O(\data_width_64.tlpaddrl_reg[22] [20]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[21]_i_1 
       (.I0(Q[21]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[53]),
        .O(\data_width_64.tlpaddrl_reg[22] [21]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[22]_i_2 
       (.I0(Q[22]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[54]),
        .O(\data_width_64.tlpaddrl_reg[22] [22]));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[2]_i_1 
       (.I0(Q[2]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[34]),
        .O(\data_width_64.tlpaddrl_reg[22] [2]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[3]_i_1 
       (.I0(Q[3]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[35]),
        .O(\data_width_64.tlpaddrl_reg[22] [3]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[4]_i_1 
       (.I0(Q[4]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[36]),
        .O(\data_width_64.tlpaddrl_reg[22] [4]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[5]_i_1 
       (.I0(Q[5]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[37]),
        .O(\data_width_64.tlpaddrl_reg[22] [5]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[6]_i_1 
       (.I0(Q[6]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[38]),
        .O(\data_width_64.tlpaddrl_reg[22] [6]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[7]_i_1 
       (.I0(Q[7]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[39]),
        .O(\data_width_64.tlpaddrl_reg[22] [7]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[8]_i_1 
       (.I0(Q[8]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[40]),
        .O(\data_width_64.tlpaddrl_reg[22] [8]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpaddrl[9]_i_1 
       (.I0(Q[9]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [2]),
        .I3(Q[41]),
        .O(\data_width_64.tlpaddrl_reg[22] [9]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_10 
       (.I0(user_lnk_up_mux_reg),
        .I1(m_axis_cr_tlast_reg_0),
        .O(sig_s_axis_cr_tvalid));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[10]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [10]),
        .I1(\data_width_64.requesteridsig_reg[15] [34]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [8]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[11]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [11]),
        .I1(\data_width_64.requesteridsig_reg[15] [35]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [9]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[12]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [12]),
        .I1(\data_width_64.requesteridsig_reg[15] [36]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [10]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[13]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [13]),
        .I1(\data_width_64.requesteridsig_reg[15] [37]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [11]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[14]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [14]),
        .I1(\data_width_64.requesteridsig_reg[15] [38]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [12]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[15]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [15]),
        .I1(\data_width_64.requesteridsig_reg[15] [39]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [13]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[16]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [16]),
        .I1(\data_width_64.requesteridsig_reg[15] [40]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [14]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[17]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [17]),
        .I1(\data_width_64.requesteridsig_reg[15] [41]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [15]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[18]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [18]),
        .I1(\data_width_64.requesteridsig_reg[15] [42]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [16]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[19]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [19]),
        .I1(\data_width_64.requesteridsig_reg[15] [43]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [17]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[20]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [20]),
        .I1(\data_width_64.requesteridsig_reg[15] [44]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [18]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[21]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [21]),
        .I1(\data_width_64.requesteridsig_reg[15] [45]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [19]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[22]_i_2 
       (.I0(\data_width_64.requesteridsig_reg[15] [22]),
        .I1(\data_width_64.requesteridsig_reg[15] [46]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [20]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[2]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [2]),
        .I1(\data_width_64.requesteridsig_reg[15] [26]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[3]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [3]),
        .I1(\data_width_64.requesteridsig_reg[15] [27]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [1]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[4]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [4]),
        .I1(\data_width_64.requesteridsig_reg[15] [28]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [2]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[5]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [5]),
        .I1(\data_width_64.requesteridsig_reg[15] [29]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [3]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[6]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [6]),
        .I1(\data_width_64.requesteridsig_reg[15] [30]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [4]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[7]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [7]),
        .I1(\data_width_64.requesteridsig_reg[15] [31]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [5]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[8]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [8]),
        .I1(\data_width_64.requesteridsig_reg[15] [32]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [6]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.tlpaddrlow[9]_i_1 
       (.I0(\data_width_64.requesteridsig_reg[15] [9]),
        .I1(\data_width_64.requesteridsig_reg[15] [33]),
        .I2(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow_reg[22] [7]));
  LUT6 #(
    .INIT(64'h8000FFFF80000000)) 
    \data_width_64.tlpbytecount[3][11]_i_2 
       (.I0(user_lnk_up_mux_reg),
        .I1(m_axis_cr_tlast_reg_0),
        .I2(\np_ok_mode.rx_np_ok_int_reg ),
        .I3(\data_width_64.badreadreq_reg_0 ),
        .I4(\data_width_64.rdreqsmsig_reg[2] ),
        .I5(\data_width_64.rdreqsmsig_reg[0]_0 ),
        .O(\data_width_64.tlpbytecount_reg[0][0] ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlpfmtsig[0]_i_2 
       (.I0(Q[29]),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig_reg[2] [0]),
        .O(tlpfmtsig));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_width_64.tlpfmtsig[0]_i_3 
       (.I0(Q[28]),
        .I1(Q[27]),
        .I2(\data_width_64.tlpfmtsig[0]_i_5_n_0 ),
        .I3(Q[26]),
        .I4(Q[25]),
        .O(\data_width_64.lastdwbesig_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'h00000800)) 
    \data_width_64.tlpfmtsig[0]_i_4 
       (.I0(user_lnk_up_mux_reg),
        .I1(\m_axis_cw_tuser_reg[2]_0 ),
        .I2(almost_fullsig),
        .I3(Q[30]),
        .I4(Q[14]),
        .O(\data_width_64.lastdwbesig_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \data_width_64.tlpfmtsig[0]_i_5 
       (.I0(Q[24]),
        .I1(\s_axis_cw_tusersig_reg[2] [2]),
        .I2(\s_axis_cw_tusersig_reg[2] [0]),
        .I3(\s_axis_cw_tusersig_reg[2] [1]),
        .I4(sig_s_axis_cw_tuser),
        .O(\data_width_64.tlpfmtsig[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \data_width_64.tlplength[0][9]_i_4 
       (.I0(user_lnk_up_mux_reg),
        .I1(m_axis_cr_tlast_reg_0),
        .I2(\np_ok_mode.rx_np_ok_int_reg ),
        .I3(blk_lnk_up_latch),
        .I4(\data_width_64.badreadreq_reg_1 ),
        .I5(\data_width_64.zerolenreadreq_reg ),
        .O(tlprequesterid));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \data_width_64.tlplengthsig[9]_i_2 
       (.I0(user_lnk_up_mux_reg),
        .I1(m_axis_cr_tlast_reg_0),
        .I2(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp54_in ),
        .I3(sig_s_axis_cr_tdata[30]),
        .O(\data_width_64.tagsig_reg[0] ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_width_64.tlplengthsig[9]_i_3 
       (.I0(sig_s_axis_cr_tdata[27]),
        .I1(sig_s_axis_cr_tdata[28]),
        .I2(sig_s_axis_cr_tdata[24]),
        .I3(sig_s_axis_cr_tdata[25]),
        .I4(sig_s_axis_cr_tdata[26]),
        .O(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_s_masterbridge_rd/eqOp54_in ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \data_width_64.wrreqpendsig[0]_i_2 
       (.I0(\m_axis_cw_tuser_reg[2]_0 ),
        .I1(user_lnk_up_mux_reg),
        .I2(almost_fullsig),
        .O(\data_width_64.wrreqpendsig_reg[0] ));
  LUT4 #(
    .INIT(16'h0001)) 
    \data_width_64.zerolenreadreq_i_2 
       (.I0(\data_width_64.requesteridsig_reg[15] [26]),
        .I1(\data_width_64.requesteridsig_reg[15] [27]),
        .I2(\data_width_64.requesteridsig_reg[15] [25]),
        .I3(\data_width_64.requesteridsig_reg[15] [24]),
        .O(eqOp56_in));
  LUT1 #(
    .INIT(2'h1)) 
    \end_point.s_axi_ctl_awready_i_1 
       (.I0(sys_rst_n_int),
        .O(SR));
  FDRE \m_axis_cr_tdata_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [0]),
        .Q(\data_width_64.requesteridsig_reg[15] [0]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [10]),
        .Q(\data_width_64.requesteridsig_reg[15] [10]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [11]),
        .Q(\data_width_64.requesteridsig_reg[15] [11]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [12]),
        .Q(\data_width_64.requesteridsig_reg[15] [12]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [13]),
        .Q(\data_width_64.requesteridsig_reg[15] [13]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [14]),
        .Q(\data_width_64.requesteridsig_reg[15] [14]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [15]),
        .Q(\data_width_64.requesteridsig_reg[15] [15]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [16]),
        .Q(\data_width_64.requesteridsig_reg[15] [16]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [17]),
        .Q(\data_width_64.requesteridsig_reg[15] [17]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [18]),
        .Q(\data_width_64.requesteridsig_reg[15] [18]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [19]),
        .Q(\data_width_64.requesteridsig_reg[15] [19]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [1]),
        .Q(\data_width_64.requesteridsig_reg[15] [1]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [20]),
        .Q(\data_width_64.requesteridsig_reg[15] [20]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [21]),
        .Q(\data_width_64.requesteridsig_reg[15] [21]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [22]),
        .Q(\data_width_64.requesteridsig_reg[15] [22]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [23]),
        .Q(sig_s_axis_cr_tdata[24]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [24]),
        .Q(sig_s_axis_cr_tdata[25]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [25]),
        .Q(sig_s_axis_cr_tdata[26]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [26]),
        .Q(sig_s_axis_cr_tdata[27]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [27]),
        .Q(sig_s_axis_cr_tdata[28]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [28]),
        .Q(\data_width_64.requesteridsig_reg[15] [23]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [2]),
        .Q(\data_width_64.requesteridsig_reg[15] [2]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [29]),
        .Q(sig_s_axis_cr_tdata[30]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [30]),
        .Q(\data_width_64.requesteridsig_reg[15] [24]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [31]),
        .Q(\data_width_64.requesteridsig_reg[15] [25]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [32]),
        .Q(\data_width_64.requesteridsig_reg[15] [26]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [33]),
        .Q(\data_width_64.requesteridsig_reg[15] [27]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [34]),
        .Q(\data_width_64.requesteridsig_reg[15] [28]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [35]),
        .Q(\data_width_64.requesteridsig_reg[15] [29]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [36]),
        .Q(\data_width_64.requesteridsig_reg[15] [30]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [37]),
        .Q(\data_width_64.requesteridsig_reg[15] [31]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [3]),
        .Q(\data_width_64.requesteridsig_reg[15] [3]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [38]),
        .Q(\data_width_64.requesteridsig_reg[15] [32]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [39]),
        .Q(\data_width_64.requesteridsig_reg[15] [33]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [40]),
        .Q(\data_width_64.requesteridsig_reg[15] [34]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [41]),
        .Q(\data_width_64.requesteridsig_reg[15] [35]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [42]),
        .Q(\data_width_64.requesteridsig_reg[15] [36]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [43]),
        .Q(\data_width_64.requesteridsig_reg[15] [37]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [44]),
        .Q(\data_width_64.requesteridsig_reg[15] [38]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [45]),
        .Q(\data_width_64.requesteridsig_reg[15] [39]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [46]),
        .Q(\data_width_64.requesteridsig_reg[15] [40]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [47]),
        .Q(\data_width_64.requesteridsig_reg[15] [41]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [4]),
        .Q(\data_width_64.requesteridsig_reg[15] [4]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [48]),
        .Q(\data_width_64.requesteridsig_reg[15] [42]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [49]),
        .Q(\data_width_64.requesteridsig_reg[15] [43]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [50]),
        .Q(\data_width_64.requesteridsig_reg[15] [44]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [51]),
        .Q(\data_width_64.requesteridsig_reg[15] [45]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [52]),
        .Q(\data_width_64.requesteridsig_reg[15] [46]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [53]),
        .Q(\data_width_64.requesteridsig_reg[15] [47]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [54]),
        .Q(\data_width_64.requesteridsig_reg[15] [48]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [55]),
        .Q(\data_width_64.requesteridsig_reg[15] [49]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [56]),
        .Q(\data_width_64.requesteridsig_reg[15] [50]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [57]),
        .Q(\data_width_64.requesteridsig_reg[15] [51]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [5]),
        .Q(\data_width_64.requesteridsig_reg[15] [5]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [58]),
        .Q(\data_width_64.requesteridsig_reg[15] [52]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [59]),
        .Q(\data_width_64.requesteridsig_reg[15] [53]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [60]),
        .Q(\data_width_64.requesteridsig_reg[15] [54]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [61]),
        .Q(\data_width_64.requesteridsig_reg[15] [55]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [6]),
        .Q(\data_width_64.requesteridsig_reg[15] [6]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [7]),
        .Q(\data_width_64.requesteridsig_reg[15] [7]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [8]),
        .Q(\data_width_64.requesteridsig_reg[15] [8]),
        .R(SR));
  FDRE \m_axis_cr_tdata_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63] [9]),
        .Q(\data_width_64.requesteridsig_reg[15] [9]),
        .R(SR));
  FDRE m_axis_cr_tlast_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(reg_tlast_reg_0),
        .Q(\np_ok_mode.rx_np_ok_int_reg ),
        .R(SR));
  FDRE \m_axis_cr_tuser_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6] [0]),
        .Q(\data_width_64.s_axis_cr_tusersig_reg[3][2] [0]),
        .R(SR));
  FDRE \m_axis_cr_tuser_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6] [1]),
        .Q(sig_s_axis_cr_tuser),
        .R(SR));
  FDRE \m_axis_cr_tuser_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6] [2]),
        .Q(\data_width_64.s_axis_cr_tusersig_reg[3][2] [1]),
        .R(SR));
  FDRE \m_axis_cr_tuser_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cr_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6] [3]),
        .Q(\data_width_64.s_axis_cr_tusersig_reg[3][2] [2]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [16]),
        .Q(Q[16]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [17]),
        .Q(Q[17]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [18]),
        .Q(Q[18]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [19]),
        .Q(Q[19]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [20]),
        .Q(Q[20]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [21]),
        .Q(Q[21]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [22]),
        .Q(Q[22]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [23]),
        .Q(Q[23]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [24]),
        .Q(Q[24]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [25]),
        .Q(Q[25]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [26]),
        .Q(Q[26]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [27]),
        .Q(Q[27]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [28]),
        .Q(Q[28]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [29]),
        .Q(Q[29]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [30]),
        .Q(Q[30]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [31]),
        .Q(Q[31]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [32]),
        .Q(Q[32]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [33]),
        .Q(Q[33]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [34]),
        .Q(Q[34]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [35]),
        .Q(Q[35]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [36]),
        .Q(Q[36]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [37]),
        .Q(Q[37]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [38]),
        .Q(Q[38]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [39]),
        .Q(Q[39]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [40]),
        .Q(Q[40]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [41]),
        .Q(Q[41]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [42]),
        .Q(Q[42]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [43]),
        .Q(Q[43]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [44]),
        .Q(Q[44]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [45]),
        .Q(Q[45]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [46]),
        .Q(Q[46]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [47]),
        .Q(Q[47]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [48]),
        .Q(Q[48]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [49]),
        .Q(Q[49]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [50]),
        .Q(Q[50]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [51]),
        .Q(Q[51]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [52]),
        .Q(Q[52]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [53]),
        .Q(Q[53]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [54]),
        .Q(Q[54]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [55]),
        .Q(Q[55]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [56]),
        .Q(Q[56]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [57]),
        .Q(Q[57]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [58]),
        .Q(Q[58]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [59]),
        .Q(Q[59]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [60]),
        .Q(Q[60]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [61]),
        .Q(Q[61]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [62]),
        .Q(Q[62]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [63]),
        .Q(Q[63]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \m_axis_cw_tdata_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tdata_reg[63]_0 [9]),
        .Q(Q[9]),
        .R(SR));
  FDRE m_axis_cw_tlast_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(reg_tlast_reg),
        .Q(\data_width_64.datain_reg[64] ),
        .R(SR));
  FDRE \m_axis_cw_tuser_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6]_0 [0]),
        .Q(\s_axis_cw_tusersig_reg[2] [0]),
        .R(SR));
  FDRE \m_axis_cw_tuser_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6]_0 [1]),
        .Q(sig_s_axis_cw_tuser),
        .R(SR));
  FDRE \m_axis_cw_tuser_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6]_0 [2]),
        .Q(\s_axis_cw_tusersig_reg[2] [1]),
        .R(SR));
  FDRE \m_axis_cw_tuser_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(cw_empty_i_1_n_0),
        .D(\m_axis_rx_tuser_reg[6]_0 [3]),
        .Q(\s_axis_cw_tusersig_reg[2] [2]),
        .R(SR));
  LUT6 #(
    .INIT(64'hF00FF50AF0CFF5CA)) 
    \np_ok_mode.rx_np_okSM[0]_i_1 
       (.I0(\np_ok_mode.rx_np_okSM[1]_i_2_n_0 ),
        .I1(rx_np_okSM),
        .I2(\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .I3(\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .I4(\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .I5(p_6_in),
        .O(\np_ok_mode.rx_np_okSM_reg[0] ));
  LUT6 #(
    .INIT(64'h0F005A100FC05AD0)) 
    \np_ok_mode.rx_np_okSM[1]_i_1 
       (.I0(\np_ok_mode.rx_np_okSM[1]_i_2_n_0 ),
        .I1(rx_np_okSM),
        .I2(\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .I3(\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .I4(\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .I5(p_6_in),
        .O(\np_ok_mode.rx_np_okSM_reg[1] ));
  LUT5 #(
    .INIT(32'h0F00AA88)) 
    \np_ok_mode.rx_np_okSM[1]_i_2 
       (.I0(p_6_in),
        .I1(\np_ok_mode.rx_np_ok_int_reg ),
        .I2(rx_np_ok_cntr),
        .I3(\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .I4(\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .O(\np_ok_mode.rx_np_okSM[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCCFFFFDFCCF000DF)) 
    \np_ok_mode.rx_np_ok_int_i_1 
       (.I0(\np_ok_mode.rx_np_ok_int_reg ),
        .I1(\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .I2(p_6_in),
        .I3(\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .I4(\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .I5(trn_rnp_ok),
        .O(\np_ok_mode.rx_np_ok_int_reg_0 ));
  LUT6 #(
    .INIT(64'h0010111111111111)) 
    null_mux_sel_i_4
       (.I0(null_mux_sel_i_5_n_0),
        .I1(null_mux_sel_i_6_n_0),
        .I2(\m_axis_cw_tuser_reg[2]_0 ),
        .I3(null_mux_sel_i_7_n_0),
        .I4(cw_full_reg_0),
        .I5(m_axis_rx_tvalid_reg_2),
        .O(null_mux_sel_reg));
  LUT6 #(
    .INIT(64'h55F7000000000000)) 
    null_mux_sel_i_5
       (.I0(m_axis_cr_tlast_reg_0),
        .I1(user_lnk_up_mux_reg),
        .I2(sig_s_axis_cr_tready),
        .I3(cr_full_reg_0),
        .I4(cr_full_reg_1),
        .I5(m_axis_rx_tvalid_reg_2),
        .O(null_mux_sel_i_5_n_0));
  LUT5 #(
    .INIT(32'h57000000)) 
    null_mux_sel_i_6
       (.I0(rc_full),
        .I1(user_lnk_up_mux_reg),
        .I2(rc_full_reg_1),
        .I3(rc_full_reg_0),
        .I4(m_axis_rx_tvalid_reg_2),
        .O(null_mux_sel_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'h005D)) 
    null_mux_sel_i_7
       (.I0(user_lnk_up_mux_reg),
        .I1(\data_width_64.s_axis_cw_treadysig_reg ),
        .I2(almost_fullsig),
        .I3(cw_empty_reg_n_0),
        .O(null_mux_sel_i_7_n_0));
  FDSE rc_empty_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axis_rx_tvalid_reg_0),
        .Q(rc_full_reg_1),
        .S(SR));
  FDRE rc_enable_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(rc_enable_reg_0),
        .Q(rc_full_reg_0),
        .R(SR));
  FDRE rc_full_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axis_rx_tvalid_reg),
        .Q(rc_full),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_rx_null_gen" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx_null_gen
   (\m_axis_rx_tuser_reg[2] ,
    null_mux_sel_q,
    \m_axis_rx_tuser_reg[21] ,
    null_mux_sel_reg,
    S,
    SR,
    \resetovrd.reset_reg[4] ,
    cw_full_reg,
    m_axis_rx_tuser,
    new_pkt_len,
    null_mux_sel_reg_0,
    p_7_in,
    Q);
  output \m_axis_rx_tuser_reg[2] ;
  output null_mux_sel_q;
  output \m_axis_rx_tuser_reg[21] ;
  output null_mux_sel_reg;
  output [1:0]S;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input cw_full_reg;
  input [0:0]m_axis_rx_tuser;
  input [10:0]new_pkt_len;
  input null_mux_sel_reg_0;
  input p_7_in;
  input [4:0]Q;

  wire [4:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire cur_state;
  wire cur_state_i_2_n_0;
  wire cw_full_reg;
  wire [0:0]m_axis_rx_tuser;
  wire \m_axis_rx_tuser[21]_i_4_n_0 ;
  wire \m_axis_rx_tuser_reg[21] ;
  wire \m_axis_rx_tuser_reg[2] ;
  wire m_axis_rx_tvalid_i_4_n_0;
  wire [10:0]new_pkt_len;
  wire next_state;
  wire null_mux_sel_q;
  wire null_mux_sel_reg;
  wire null_mux_sel_reg_0;
  wire null_transmit_done_i_2_n_0;
  wire null_transmit_done_i_3_n_0;
  wire null_transmit_done_i_4_n_0;
  wire null_transmit_done_i_5_n_0;
  wire null_transmit_done_i_6_n_0;
  wire null_transmit_done_i_7_n_0;
  wire p_7_in;
  wire [11:1]pkt_len_counter;
  wire [11:0]pkt_len_counter__0;
  wire pkt_len_counter_dec__0_carry__0_i_1_n_0;
  wire pkt_len_counter_dec__0_carry__0_i_2_n_0;
  wire pkt_len_counter_dec__0_carry__0_i_3_n_0;
  wire pkt_len_counter_dec__0_carry__0_i_4_n_0;
  wire pkt_len_counter_dec__0_carry__0_n_0;
  wire pkt_len_counter_dec__0_carry__0_n_1;
  wire pkt_len_counter_dec__0_carry__0_n_2;
  wire pkt_len_counter_dec__0_carry__0_n_3;
  wire pkt_len_counter_dec__0_carry__1_i_1_n_0;
  wire pkt_len_counter_dec__0_carry__1_i_2_n_0;
  wire pkt_len_counter_dec__0_carry__1_i_3_n_0;
  wire pkt_len_counter_dec__0_carry__1_n_2;
  wire pkt_len_counter_dec__0_carry__1_n_3;
  wire pkt_len_counter_dec__0_carry_i_1_n_0;
  wire pkt_len_counter_dec__0_carry_i_2_n_0;
  wire pkt_len_counter_dec__0_carry_i_3_n_0;
  wire pkt_len_counter_dec__0_carry_i_4_n_0;
  wire pkt_len_counter_dec__0_carry_i_5_n_0;
  wire pkt_len_counter_dec__0_carry_n_0;
  wire pkt_len_counter_dec__0_carry_n_1;
  wire pkt_len_counter_dec__0_carry_n_2;
  wire pkt_len_counter_dec__0_carry_n_3;
  wire [11:0]reg_pkt_len_counter;
  wire \reg_pkt_len_counter[10]_i_3_n_0 ;
  wire \reg_pkt_len_counter[10]_i_6_n_0 ;
  wire \reg_pkt_len_counter[10]_i_7_n_0 ;
  wire \resetovrd.reset_reg[4] ;
  wire [3:2]NLW_pkt_len_counter_dec__0_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_pkt_len_counter_dec__0_carry__1_O_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'h5557)) 
    cur_state_i_1
       (.I0(cur_state_i_2_n_0),
        .I1(cur_state),
        .I2(m_axis_rx_tuser),
        .I3(cw_full_reg),
        .O(next_state));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    cur_state_i_2
       (.I0(\reg_pkt_len_counter[10]_i_3_n_0 ),
        .I1(cw_full_reg),
        .I2(cur_state),
        .O(cur_state_i_2_n_0));
  FDRE cur_state_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(next_state),
        .Q(cur_state),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000001000100000)) 
    \m_axis_rx_tuser[21]_i_3 
       (.I0(\m_axis_rx_tuser[21]_i_4_n_0 ),
        .I1(null_transmit_done_i_5_n_0),
        .I2(null_transmit_done_i_4_n_0),
        .I3(null_transmit_done_i_3_n_0),
        .I4(pkt_len_counter__0[1]),
        .I5(pkt_len_counter__0[0]),
        .O(\m_axis_rx_tuser_reg[21] ));
  LUT6 #(
    .INIT(64'hFFFFEFEFFFFEEFEE)) 
    \m_axis_rx_tuser[21]_i_4 
       (.I0(pkt_len_counter__0[2]),
        .I1(pkt_len_counter__0[10]),
        .I2(cur_state_i_2_n_0),
        .I3(pkt_len_counter[11]),
        .I4(new_pkt_len[9]),
        .I5(pkt_len_counter[9]),
        .O(\m_axis_rx_tuser[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAABAA)) 
    m_axis_rx_tvalid_i_3
       (.I0(null_mux_sel_reg_0),
        .I1(m_axis_rx_tvalid_i_4_n_0),
        .I2(null_transmit_done_i_5_n_0),
        .I3(null_transmit_done_i_4_n_0),
        .I4(null_transmit_done_i_3_n_0),
        .I5(null_transmit_done_i_2_n_0),
        .O(\m_axis_rx_tuser_reg[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFBAFFFF)) 
    m_axis_rx_tvalid_i_4
       (.I0(pkt_len_counter__0[10]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[11]),
        .I3(pkt_len_counter__0[9]),
        .I4(p_7_in),
        .I5(pkt_len_counter__0[2]),
        .O(m_axis_rx_tvalid_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    null_mux_sel_i_3
       (.I0(null_transmit_done_i_2_n_0),
        .I1(null_transmit_done_i_3_n_0),
        .I2(null_transmit_done_i_4_n_0),
        .I3(null_transmit_done_i_5_n_0),
        .I4(null_transmit_done_i_7_n_0),
        .I5(pkt_len_counter__0[2]),
        .O(null_mux_sel_reg));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    null_transmit_done_i_1
       (.I0(null_transmit_done_i_2_n_0),
        .I1(null_transmit_done_i_3_n_0),
        .I2(null_transmit_done_i_4_n_0),
        .I3(null_transmit_done_i_5_n_0),
        .I4(null_transmit_done_i_6_n_0),
        .I5(null_transmit_done_i_7_n_0),
        .O(null_mux_sel_q));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'hCCA000A0)) 
    null_transmit_done_i_2
       (.I0(reg_pkt_len_counter[0]),
        .I1(new_pkt_len[0]),
        .I2(pkt_len_counter[1]),
        .I3(cur_state_i_2_n_0),
        .I4(new_pkt_len[1]),
        .O(null_transmit_done_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    null_transmit_done_i_3
       (.I0(pkt_len_counter[4]),
        .I1(new_pkt_len[4]),
        .I2(pkt_len_counter[3]),
        .I3(cur_state_i_2_n_0),
        .I4(new_pkt_len[3]),
        .O(null_transmit_done_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h00053305)) 
    null_transmit_done_i_4
       (.I0(pkt_len_counter[6]),
        .I1(new_pkt_len[6]),
        .I2(pkt_len_counter[5]),
        .I3(cur_state_i_2_n_0),
        .I4(new_pkt_len[5]),
        .O(null_transmit_done_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    null_transmit_done_i_5
       (.I0(pkt_len_counter[8]),
        .I1(new_pkt_len[8]),
        .I2(pkt_len_counter[7]),
        .I3(cur_state_i_2_n_0),
        .I4(new_pkt_len[7]),
        .O(null_transmit_done_i_5_n_0));
  LUT4 #(
    .INIT(16'hE2FF)) 
    null_transmit_done_i_6
       (.I0(pkt_len_counter[2]),
        .I1(cur_state_i_2_n_0),
        .I2(new_pkt_len[2]),
        .I3(p_7_in),
        .O(null_transmit_done_i_6_n_0));
  LUT6 #(
    .INIT(64'hFFFFCCFFFFFACCFA)) 
    null_transmit_done_i_7
       (.I0(pkt_len_counter[9]),
        .I1(new_pkt_len[9]),
        .I2(pkt_len_counter[11]),
        .I3(cur_state_i_2_n_0),
        .I4(new_pkt_len[10]),
        .I5(pkt_len_counter[10]),
        .O(null_transmit_done_i_7_n_0));
  CARRY4 pkt_len_counter_dec__0_carry
       (.CI(1'b0),
        .CO({pkt_len_counter_dec__0_carry_n_0,pkt_len_counter_dec__0_carry_n_1,pkt_len_counter_dec__0_carry_n_2,pkt_len_counter_dec__0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({reg_pkt_len_counter[3:2],pkt_len_counter_dec__0_carry_i_1_n_0,1'b0}),
        .O(pkt_len_counter[4:1]),
        .S({pkt_len_counter_dec__0_carry_i_2_n_0,pkt_len_counter_dec__0_carry_i_3_n_0,pkt_len_counter_dec__0_carry_i_4_n_0,pkt_len_counter_dec__0_carry_i_5_n_0}));
  CARRY4 pkt_len_counter_dec__0_carry__0
       (.CI(pkt_len_counter_dec__0_carry_n_0),
        .CO({pkt_len_counter_dec__0_carry__0_n_0,pkt_len_counter_dec__0_carry__0_n_1,pkt_len_counter_dec__0_carry__0_n_2,pkt_len_counter_dec__0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(reg_pkt_len_counter[7:4]),
        .O(pkt_len_counter[8:5]),
        .S({pkt_len_counter_dec__0_carry__0_i_1_n_0,pkt_len_counter_dec__0_carry__0_i_2_n_0,pkt_len_counter_dec__0_carry__0_i_3_n_0,pkt_len_counter_dec__0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_1
       (.I0(reg_pkt_len_counter[7]),
        .I1(reg_pkt_len_counter[8]),
        .O(pkt_len_counter_dec__0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_2
       (.I0(reg_pkt_len_counter[6]),
        .I1(reg_pkt_len_counter[7]),
        .O(pkt_len_counter_dec__0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_3
       (.I0(reg_pkt_len_counter[5]),
        .I1(reg_pkt_len_counter[6]),
        .O(pkt_len_counter_dec__0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__0_i_4
       (.I0(reg_pkt_len_counter[4]),
        .I1(reg_pkt_len_counter[5]),
        .O(pkt_len_counter_dec__0_carry__0_i_4_n_0));
  CARRY4 pkt_len_counter_dec__0_carry__1
       (.CI(pkt_len_counter_dec__0_carry__0_n_0),
        .CO({NLW_pkt_len_counter_dec__0_carry__1_CO_UNCONNECTED[3:2],pkt_len_counter_dec__0_carry__1_n_2,pkt_len_counter_dec__0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,reg_pkt_len_counter[9:8]}),
        .O({NLW_pkt_len_counter_dec__0_carry__1_O_UNCONNECTED[3],pkt_len_counter[11:9]}),
        .S({1'b0,pkt_len_counter_dec__0_carry__1_i_1_n_0,pkt_len_counter_dec__0_carry__1_i_2_n_0,pkt_len_counter_dec__0_carry__1_i_3_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__1_i_1
       (.I0(reg_pkt_len_counter[10]),
        .I1(reg_pkt_len_counter[11]),
        .O(pkt_len_counter_dec__0_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__1_i_2
       (.I0(reg_pkt_len_counter[9]),
        .I1(reg_pkt_len_counter[10]),
        .O(pkt_len_counter_dec__0_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry__1_i_3
       (.I0(reg_pkt_len_counter[8]),
        .I1(reg_pkt_len_counter[9]),
        .O(pkt_len_counter_dec__0_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    pkt_len_counter_dec__0_carry_i_1
       (.I0(reg_pkt_len_counter[1]),
        .I1(cw_full_reg),
        .O(pkt_len_counter_dec__0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry_i_2
       (.I0(reg_pkt_len_counter[3]),
        .I1(reg_pkt_len_counter[4]),
        .O(pkt_len_counter_dec__0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry_i_3
       (.I0(reg_pkt_len_counter[2]),
        .I1(reg_pkt_len_counter[3]),
        .O(pkt_len_counter_dec__0_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'hE1)) 
    pkt_len_counter_dec__0_carry_i_4
       (.I0(cw_full_reg),
        .I1(reg_pkt_len_counter[1]),
        .I2(reg_pkt_len_counter[2]),
        .O(pkt_len_counter_dec__0_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    pkt_len_counter_dec__0_carry_i_5
       (.I0(reg_pkt_len_counter[1]),
        .I1(cw_full_reg),
        .O(pkt_len_counter_dec__0_carry_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[0]_i_1 
       (.I0(new_pkt_len[0]),
        .I1(cur_state_i_2_n_0),
        .I2(reg_pkt_len_counter[0]),
        .O(pkt_len_counter__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'hFEAA02AA)) 
    \reg_pkt_len_counter[10]_i_1 
       (.I0(new_pkt_len[10]),
        .I1(\reg_pkt_len_counter[10]_i_3_n_0 ),
        .I2(cw_full_reg),
        .I3(cur_state),
        .I4(pkt_len_counter[10]),
        .O(pkt_len_counter__0[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \reg_pkt_len_counter[10]_i_3 
       (.I0(reg_pkt_len_counter[10]),
        .I1(reg_pkt_len_counter[11]),
        .I2(reg_pkt_len_counter[2]),
        .I3(reg_pkt_len_counter[7]),
        .I4(\reg_pkt_len_counter[10]_i_6_n_0 ),
        .I5(\reg_pkt_len_counter[10]_i_7_n_0 ),
        .O(\reg_pkt_len_counter[10]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \reg_pkt_len_counter[10]_i_6 
       (.I0(reg_pkt_len_counter[0]),
        .I1(reg_pkt_len_counter[1]),
        .I2(reg_pkt_len_counter[9]),
        .I3(reg_pkt_len_counter[8]),
        .O(\reg_pkt_len_counter[10]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \reg_pkt_len_counter[10]_i_7 
       (.I0(reg_pkt_len_counter[5]),
        .I1(reg_pkt_len_counter[4]),
        .I2(reg_pkt_len_counter[6]),
        .I3(reg_pkt_len_counter[3]),
        .O(\reg_pkt_len_counter[10]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \reg_pkt_len_counter[11]_i_1 
       (.I0(pkt_len_counter[11]),
        .I1(cur_state_i_2_n_0),
        .O(pkt_len_counter__0[11]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[1]_i_1 
       (.I0(new_pkt_len[1]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[1]),
        .O(pkt_len_counter__0[1]));
  LUT5 #(
    .INIT(32'hFEAA02AA)) 
    \reg_pkt_len_counter[2]_i_1 
       (.I0(new_pkt_len[2]),
        .I1(\reg_pkt_len_counter[10]_i_3_n_0 ),
        .I2(cw_full_reg),
        .I3(cur_state),
        .I4(pkt_len_counter[2]),
        .O(pkt_len_counter__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[3]_i_1 
       (.I0(new_pkt_len[3]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[3]),
        .O(pkt_len_counter__0[3]));
  LUT4 #(
    .INIT(16'h1EEE)) 
    \reg_pkt_len_counter[3]_i_7 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[4]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'h6999)) 
    \reg_pkt_len_counter[3]_i_8 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[4]),
        .O(S[0]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[4]_i_1 
       (.I0(new_pkt_len[4]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[4]),
        .O(pkt_len_counter__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[5]_i_1 
       (.I0(new_pkt_len[5]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[5]),
        .O(pkt_len_counter__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \reg_pkt_len_counter[6]_i_1 
       (.I0(pkt_len_counter[6]),
        .I1(cur_state_i_2_n_0),
        .I2(new_pkt_len[6]),
        .O(pkt_len_counter__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[7]_i_1 
       (.I0(new_pkt_len[7]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[7]),
        .O(pkt_len_counter__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_pkt_len_counter[8]_i_1 
       (.I0(new_pkt_len[8]),
        .I1(cur_state_i_2_n_0),
        .I2(pkt_len_counter[8]),
        .O(pkt_len_counter__0[8]));
  LUT5 #(
    .INIT(32'hFEAA02AA)) 
    \reg_pkt_len_counter[9]_i_1 
       (.I0(new_pkt_len[9]),
        .I1(\reg_pkt_len_counter[10]_i_3_n_0 ),
        .I2(cw_full_reg),
        .I3(cur_state),
        .I4(pkt_len_counter[9]),
        .O(pkt_len_counter__0[9]));
  FDRE \reg_pkt_len_counter_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[0]),
        .Q(reg_pkt_len_counter[0]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[10]),
        .Q(reg_pkt_len_counter[10]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[11]),
        .Q(reg_pkt_len_counter[11]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[1]),
        .Q(reg_pkt_len_counter[1]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[2]),
        .Q(reg_pkt_len_counter[2]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[3]),
        .Q(reg_pkt_len_counter[3]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[4]),
        .Q(reg_pkt_len_counter[4]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[5]),
        .Q(reg_pkt_len_counter[5]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[6]),
        .Q(reg_pkt_len_counter[6]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[7]),
        .Q(reg_pkt_len_counter[7]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[8]),
        .Q(reg_pkt_len_counter[8]),
        .R(SR));
  FDRE \reg_pkt_len_counter_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(pkt_len_counter__0[9]),
        .Q(reg_pkt_len_counter[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_rx_pipeline" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx_pipeline
   (E,
    trn_rsrc_dsc_d,
    null_mux_sel_reg_0,
    trn_in_packet,
    trn_rdst_rdy_reg_0,
    state172_out,
    null_mux_sel_reg_1,
    \m_axis_cw_tuser_reg[6] ,
    \m_axis_cw_tdata_reg[63] ,
    Q,
    m_axis_cw_tlast_reg,
    m_axis_cr_tlast_reg,
    \m_axis_cr_tdata_reg[63] ,
    \m_axis_cr_tuser_reg[6] ,
    rc_enable24_out,
    cr_enable_reg,
    cw_enable_reg,
    cr_enable_reg_0,
    cw_enable_reg_0,
    new_pkt_len,
    cw_enable_reg_1,
    \FSM_sequential_state_reg[0] ,
    \FSM_sequential_state_reg[1] ,
    cw_enable_reg_2,
    \FSM_sequential_state_reg[2] ,
    m_axis_rx_tuser,
    SR,
    \resetovrd.reset_reg[4] ,
    trn_rsrc_dsc,
    rsrc_rdy_filtered,
    null_mux_sel_q,
    trn_reof,
    trn_rsof,
    trn_in_packet_reg_0,
    null_mux_sel_reg_2,
    cw_full_reg,
    \reg_pkt_len_counter_reg[0] ,
    p_7_in,
    null_mux_sel_reg_3,
    cw_empty_reg,
    cr_enable_reg_1,
    user_lnk_up_mux_reg,
    sig_s_axis_cr_tready,
    cr_empty_reg,
    trn_rd,
    trn_rbar_hit,
    S,
    sys_rst_n_int,
    \FSM_sequential_state_reg[2]_0 ,
    \FSM_sequential_state_reg[2]_1 ,
    out,
    \reg_pkt_len_counter_reg[0]_0 );
  output [0:0]E;
  output trn_rsrc_dsc_d;
  output null_mux_sel_reg_0;
  output trn_in_packet;
  output trn_rdst_rdy_reg_0;
  output state172_out;
  output null_mux_sel_reg_1;
  output [3:0]\m_axis_cw_tuser_reg[6] ;
  output [63:0]\m_axis_cw_tdata_reg[63] ;
  output [4:0]Q;
  output m_axis_cw_tlast_reg;
  output m_axis_cr_tlast_reg;
  output [61:0]\m_axis_cr_tdata_reg[63] ;
  output [3:0]\m_axis_cr_tuser_reg[6] ;
  output rc_enable24_out;
  output cr_enable_reg;
  output cw_enable_reg;
  output cr_enable_reg_0;
  output cw_enable_reg_0;
  output [10:0]new_pkt_len;
  output cw_enable_reg_1;
  output \FSM_sequential_state_reg[0] ;
  output [0:0]\FSM_sequential_state_reg[1] ;
  output cw_enable_reg_2;
  output \FSM_sequential_state_reg[2] ;
  output [0:0]m_axis_rx_tuser;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input trn_rsrc_dsc;
  input rsrc_rdy_filtered;
  input null_mux_sel_q;
  input trn_reof;
  input trn_rsof;
  input trn_in_packet_reg_0;
  input null_mux_sel_reg_2;
  input cw_full_reg;
  input \reg_pkt_len_counter_reg[0] ;
  input p_7_in;
  input null_mux_sel_reg_3;
  input cw_empty_reg;
  input cr_enable_reg_1;
  input user_lnk_up_mux_reg;
  input sig_s_axis_cr_tready;
  input cr_empty_reg;
  input [63:0]trn_rd;
  input [3:0]trn_rbar_hit;
  input [1:0]S;
  input sys_rst_n_int;
  input \FSM_sequential_state_reg[2]_0 ;
  input \FSM_sequential_state_reg[2]_1 ;
  input [1:0]out;
  input \reg_pkt_len_counter_reg[0]_0 ;

  wire [0:0]E;
  wire \FSM_sequential_state[1]_i_4_n_0 ;
  wire \FSM_sequential_state_reg[0] ;
  wire [0:0]\FSM_sequential_state_reg[1] ;
  wire \FSM_sequential_state_reg[2] ;
  wire \FSM_sequential_state_reg[2]_0 ;
  wire \FSM_sequential_state_reg[2]_1 ;
  wire [4:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire cr_empty_reg;
  wire cr_enable_reg;
  wire cr_enable_reg_0;
  wire cr_enable_reg_1;
  wire cw_empty_reg;
  wire cw_enable_reg;
  wire cw_enable_reg_0;
  wire cw_enable_reg_1;
  wire cw_enable_reg_2;
  wire cw_full_reg;
  wire data_hold;
  wire data_prev;
  wire [61:0]\m_axis_cr_tdata_reg[63] ;
  wire m_axis_cr_tlast_reg;
  wire [3:0]\m_axis_cr_tuser_reg[6] ;
  wire [63:0]\m_axis_cw_tdata_reg[63] ;
  wire m_axis_cw_tlast_reg;
  wire [3:0]\m_axis_cw_tuser_reg[6] ;
  wire [63:2]m_axis_rx_tdata;
  wire [28:25]m_axis_rx_tdata__0;
  wire m_axis_rx_tlast;
  wire [0:0]m_axis_rx_tuser;
  wire \m_axis_rx_tuser[14]_i_1_n_0 ;
  wire \m_axis_rx_tuser[14]_i_2_n_0 ;
  wire \m_axis_rx_tuser[14]_i_3_n_0 ;
  wire \m_axis_rx_tuser[21]_i_1_n_0 ;
  wire \m_axis_rx_tuser[21]_i_2_n_0 ;
  wire \m_axis_rx_tuser[2]_i_1_n_0 ;
  wire \m_axis_rx_tuser[3]_i_1_n_0 ;
  wire \m_axis_rx_tuser[4]_i_1_n_0 ;
  wire \m_axis_rx_tuser[6]_i_1_n_0 ;
  wire \m_axis_rx_tuser_reg_n_0_[2] ;
  wire \m_axis_rx_tuser_reg_n_0_[3] ;
  wire \m_axis_rx_tuser_reg_n_0_[4] ;
  wire \m_axis_rx_tuser_reg_n_0_[6] ;
  wire m_axis_rx_tvalid_i_1_n_0;
  wire m_axis_rx_tvalid_i_2_n_0;
  wire [10:0]new_pkt_len;
  wire null_mux_sel_i_1_n_0;
  wire null_mux_sel_i_2_n_0;
  wire null_mux_sel_q;
  wire null_mux_sel_reg_0;
  wire null_mux_sel_reg_1;
  wire null_mux_sel_reg_2;
  wire null_mux_sel_reg_3;
  wire null_transmit_done;
  wire [1:0]out;
  wire [63:0]p_1_in;
  wire p_7_in;
  wire rc_enable24_out;
  wire \reg_pkt_len_counter[10]_i_4_n_0 ;
  wire \reg_pkt_len_counter[10]_i_5_n_0 ;
  wire \reg_pkt_len_counter[3]_i_5_n_0 ;
  wire \reg_pkt_len_counter[3]_i_6_n_0 ;
  wire \reg_pkt_len_counter[7]_i_3_n_0 ;
  wire \reg_pkt_len_counter[7]_i_4_n_0 ;
  wire \reg_pkt_len_counter[7]_i_5_n_0 ;
  wire \reg_pkt_len_counter[7]_i_6_n_0 ;
  wire \reg_pkt_len_counter_reg[0] ;
  wire \reg_pkt_len_counter_reg[0]_0 ;
  wire \reg_pkt_len_counter_reg[10]_i_2_n_3 ;
  wire \reg_pkt_len_counter_reg[3]_i_2_n_0 ;
  wire \reg_pkt_len_counter_reg[3]_i_2_n_1 ;
  wire \reg_pkt_len_counter_reg[3]_i_2_n_2 ;
  wire \reg_pkt_len_counter_reg[3]_i_2_n_3 ;
  wire \reg_pkt_len_counter_reg[7]_i_2_n_0 ;
  wire \reg_pkt_len_counter_reg[7]_i_2_n_1 ;
  wire \reg_pkt_len_counter_reg[7]_i_2_n_2 ;
  wire \reg_pkt_len_counter_reg[7]_i_2_n_3 ;
  wire reg_tlast_i_1_n_0;
  wire \resetovrd.reset_reg[4] ;
  wire rsrc_rdy_filtered;
  wire [1:0]\rx_null_gen_inst/p_1_in ;
  wire sig_s_axis_cr_tready;
  wire state172_out;
  wire sys_rst_n_int;
  wire trn_in_packet;
  wire trn_in_packet_reg_0;
  wire [3:0]trn_rbar_hit;
  wire [4:0]trn_rbar_hit_prev;
  wire [63:0]trn_rd;
  wire [63:0]trn_rd_prev;
  wire trn_rdst_rdy_i_1_n_0;
  wire trn_rdst_rdy_reg_0;
  wire trn_reof;
  wire trn_reof_prev;
  wire trn_rsof;
  wire trn_rsof_prev;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_rsrc_dsc_prev;
  wire trn_rsrc_dsc_prev0;
  wire trn_rsrc_rdy_prev;
  wire user_lnk_up_mux_reg;
  wire [3:1]\NLW_reg_pkt_len_counter_reg[10]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_reg_pkt_len_counter_reg[10]_i_2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h000000005D7F0000)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(cr_enable_reg_0),
        .I1(m_axis_rx_tdata__0[28]),
        .I2(m_axis_rx_tdata__0[27]),
        .I3(m_axis_rx_tdata__0[26]),
        .I4(cw_enable_reg),
        .I5(\FSM_sequential_state_reg[2]_0 ),
        .O(\FSM_sequential_state_reg[0] ));
  LUT6 #(
    .INIT(64'hAAAABAAAAABABABA)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 ),
        .I1(\FSM_sequential_state_reg[2]_0 ),
        .I2(\FSM_sequential_state[1]_i_4_n_0 ),
        .I3(m_axis_rx_tdata__0[28]),
        .I4(m_axis_rx_tdata__0[27]),
        .I5(m_axis_rx_tdata__0[26]),
        .O(\FSM_sequential_state_reg[1] ));
  LUT6 #(
    .INIT(64'h8AA88AA88AAA8AA8)) 
    \FSM_sequential_state[1]_i_4 
       (.I0(cw_enable_reg),
        .I1(m_axis_rx_tdata__0[28]),
        .I2(m_axis_rx_tdata__0[26]),
        .I3(m_axis_rx_tdata__0[27]),
        .I4(Q[4]),
        .I5(m_axis_rx_tdata__0[25]),
        .O(\FSM_sequential_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \FSM_sequential_state[2]_i_2 
       (.I0(out[0]),
        .I1(m_axis_rx_tdata__0[26]),
        .I2(m_axis_rx_tdata__0[28]),
        .I3(m_axis_rx_tdata__0[27]),
        .I4(cw_enable_reg),
        .I5(cr_enable_reg_0),
        .O(\FSM_sequential_state_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_state[3]_i_2 
       (.I0(m_axis_rx_tlast),
        .I1(cw_full_reg),
        .O(state172_out));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'hFFFF0FF4)) 
    cr_enable_i_2
       (.I0(m_axis_rx_tdata__0[25]),
        .I1(Q[4]),
        .I2(m_axis_rx_tdata__0[27]),
        .I3(m_axis_rx_tdata__0[26]),
        .I4(m_axis_rx_tdata__0[28]),
        .O(cr_enable_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h1011)) 
    cw_enable_i_2
       (.I0(m_axis_rx_tdata__0[26]),
        .I1(m_axis_rx_tdata__0[28]),
        .I2(m_axis_rx_tdata__0[25]),
        .I3(Q[4]),
        .O(cw_enable_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    cw_enable_i_3
       (.I0(null_mux_sel_reg_0),
        .I1(cr_enable_reg),
        .O(cw_enable_reg));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h45)) 
    cw_enable_i_4
       (.I0(m_axis_rx_tdata__0[27]),
        .I1(m_axis_rx_tdata__0[28]),
        .I2(m_axis_rx_tdata__0[26]),
        .O(cw_enable_reg_1));
  LUT6 #(
    .INIT(64'h000000007F7FF7FF)) 
    cw_enable_i_8
       (.I0(null_mux_sel_reg_0),
        .I1(cr_enable_reg),
        .I2(m_axis_rx_tdata__0[28]),
        .I3(m_axis_rx_tdata__0[26]),
        .I4(m_axis_rx_tdata__0[27]),
        .I5(out[1]),
        .O(cw_enable_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h8)) 
    data_prev_i_1
       (.I0(null_mux_sel_reg_0),
        .I1(cw_full_reg),
        .O(data_hold));
  FDRE data_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(data_hold),
        .Q(data_prev),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[0]_i_1 
       (.I0(Q[0]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [0]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[10]_i_1 
       (.I0(m_axis_rx_tdata[10]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [10]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[11]_i_1 
       (.I0(m_axis_rx_tdata[11]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [11]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[12]_i_1 
       (.I0(m_axis_rx_tdata[12]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [12]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[13]_i_1 
       (.I0(m_axis_rx_tdata[13]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [13]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[14]_i_1 
       (.I0(m_axis_rx_tdata[14]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [14]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[15]_i_1 
       (.I0(Q[2]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [15]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[16]_i_1 
       (.I0(m_axis_rx_tdata[16]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [16]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[17]_i_1 
       (.I0(m_axis_rx_tdata[17]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [17]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[18]_i_1 
       (.I0(m_axis_rx_tdata[18]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [18]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[19]_i_1 
       (.I0(m_axis_rx_tdata[19]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [19]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[1]_i_1 
       (.I0(Q[1]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [1]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[20]_i_1 
       (.I0(m_axis_rx_tdata[20]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [20]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[21]_i_1 
       (.I0(m_axis_rx_tdata[21]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [21]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[22]_i_1 
       (.I0(m_axis_rx_tdata[22]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [22]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[24]_i_1 
       (.I0(m_axis_rx_tdata[24]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [23]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[25]_i_1 
       (.I0(m_axis_rx_tdata__0[25]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [24]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[26]_i_1 
       (.I0(m_axis_rx_tdata__0[26]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [25]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[27]_i_1 
       (.I0(m_axis_rx_tdata__0[27]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [26]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[28]_i_1 
       (.I0(m_axis_rx_tdata__0[28]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [27]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[29]_i_1 
       (.I0(Q[3]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [28]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[2]_i_1 
       (.I0(m_axis_rx_tdata[2]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [2]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[30]_i_1 
       (.I0(Q[4]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [29]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[32]_i_1 
       (.I0(m_axis_rx_tdata[32]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [30]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[33]_i_1 
       (.I0(m_axis_rx_tdata[33]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [31]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[34]_i_1 
       (.I0(m_axis_rx_tdata[34]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [32]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[35]_i_1 
       (.I0(m_axis_rx_tdata[35]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [33]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[36]_i_1 
       (.I0(m_axis_rx_tdata[36]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [34]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[37]_i_1 
       (.I0(m_axis_rx_tdata[37]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [35]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[38]_i_1 
       (.I0(m_axis_rx_tdata[38]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [36]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[39]_i_1 
       (.I0(m_axis_rx_tdata[39]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [37]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[3]_i_1 
       (.I0(m_axis_rx_tdata[3]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [3]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[40]_i_1 
       (.I0(m_axis_rx_tdata[40]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [38]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[41]_i_1 
       (.I0(m_axis_rx_tdata[41]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [39]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[42]_i_1 
       (.I0(m_axis_rx_tdata[42]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [40]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[43]_i_1 
       (.I0(m_axis_rx_tdata[43]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [41]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[44]_i_1 
       (.I0(m_axis_rx_tdata[44]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [42]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[45]_i_1 
       (.I0(m_axis_rx_tdata[45]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [43]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[46]_i_1 
       (.I0(m_axis_rx_tdata[46]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [44]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[47]_i_1 
       (.I0(m_axis_rx_tdata[47]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [45]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[48]_i_1 
       (.I0(m_axis_rx_tdata[48]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [46]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[49]_i_1 
       (.I0(m_axis_rx_tdata[49]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [47]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[4]_i_1 
       (.I0(m_axis_rx_tdata[4]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [4]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[50]_i_1 
       (.I0(m_axis_rx_tdata[50]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [48]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[51]_i_1 
       (.I0(m_axis_rx_tdata[51]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [49]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[52]_i_1 
       (.I0(m_axis_rx_tdata[52]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [50]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[53]_i_1 
       (.I0(m_axis_rx_tdata[53]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [51]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[54]_i_1 
       (.I0(m_axis_rx_tdata[54]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [52]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[55]_i_1 
       (.I0(m_axis_rx_tdata[55]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [53]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[56]_i_1 
       (.I0(m_axis_rx_tdata[56]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [54]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[57]_i_1 
       (.I0(m_axis_rx_tdata[57]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [55]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[58]_i_1 
       (.I0(m_axis_rx_tdata[58]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [56]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[59]_i_1 
       (.I0(m_axis_rx_tdata[59]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [57]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[5]_i_1 
       (.I0(m_axis_rx_tdata[5]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [5]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[60]_i_1 
       (.I0(m_axis_rx_tdata[60]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [58]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[61]_i_1 
       (.I0(m_axis_rx_tdata[61]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [59]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[62]_i_1 
       (.I0(m_axis_rx_tdata[62]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [60]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[63]_i_1 
       (.I0(m_axis_rx_tdata[63]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [61]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[6]_i_1 
       (.I0(m_axis_rx_tdata[6]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [6]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[7]_i_1 
       (.I0(m_axis_rx_tdata[7]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [7]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[8]_i_1 
       (.I0(m_axis_rx_tdata[8]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [8]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tdata[9]_i_1 
       (.I0(m_axis_rx_tdata[9]),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tdata_reg[63] [9]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    m_axis_cr_tlast_i_1
       (.I0(m_axis_rx_tlast),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(m_axis_cr_tlast_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tuser[2]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[2] ),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tuser_reg[6] [0]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tuser[3]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[3] ),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tuser_reg[6] [1]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tuser[4]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[4] ),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tuser_reg[6] [2]));
  LUT6 #(
    .INIT(64'hAAAAAAAA8080AA80)) 
    \m_axis_cr_tuser[6]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[6] ),
        .I1(null_mux_sel_reg_0),
        .I2(cr_enable_reg_1),
        .I3(user_lnk_up_mux_reg),
        .I4(sig_s_axis_cr_tready),
        .I5(cr_empty_reg),
        .O(\m_axis_cr_tuser_reg[6] [3]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[0]_i_1 
       (.I0(Q[0]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [0]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[10]_i_1 
       (.I0(m_axis_rx_tdata[10]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [10]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[11]_i_1 
       (.I0(m_axis_rx_tdata[11]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [11]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[12]_i_1 
       (.I0(m_axis_rx_tdata[12]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [12]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[13]_i_1 
       (.I0(m_axis_rx_tdata[13]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [13]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[14]_i_1 
       (.I0(m_axis_rx_tdata[14]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [14]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[15]_i_1 
       (.I0(Q[2]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [15]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[16]_i_1 
       (.I0(m_axis_rx_tdata[16]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [16]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[17]_i_1 
       (.I0(m_axis_rx_tdata[17]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [17]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[18]_i_1 
       (.I0(m_axis_rx_tdata[18]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [18]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[19]_i_1 
       (.I0(m_axis_rx_tdata[19]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [19]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[1]_i_1 
       (.I0(Q[1]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [1]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[20]_i_1 
       (.I0(m_axis_rx_tdata[20]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [20]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[21]_i_1 
       (.I0(m_axis_rx_tdata[21]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [21]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[22]_i_1 
       (.I0(m_axis_rx_tdata[22]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [22]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[23]_i_1 
       (.I0(m_axis_rx_tdata[23]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [23]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[24]_i_1 
       (.I0(m_axis_rx_tdata[24]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [24]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[25]_i_1 
       (.I0(m_axis_rx_tdata__0[25]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [25]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[26]_i_1 
       (.I0(m_axis_rx_tdata__0[26]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [26]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[27]_i_1 
       (.I0(m_axis_rx_tdata__0[27]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [27]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[28]_i_1 
       (.I0(m_axis_rx_tdata__0[28]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [28]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[29]_i_1 
       (.I0(Q[3]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [29]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[2]_i_1 
       (.I0(m_axis_rx_tdata[2]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [2]));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[30]_i_1 
       (.I0(Q[4]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [30]));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[31]_i_1 
       (.I0(m_axis_rx_tdata[31]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [31]));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[32]_i_1 
       (.I0(m_axis_rx_tdata[32]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [32]));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[33]_i_1 
       (.I0(m_axis_rx_tdata[33]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [33]));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[34]_i_1 
       (.I0(m_axis_rx_tdata[34]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [34]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[35]_i_1 
       (.I0(m_axis_rx_tdata[35]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [35]));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[36]_i_1 
       (.I0(m_axis_rx_tdata[36]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [36]));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[37]_i_1 
       (.I0(m_axis_rx_tdata[37]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [37]));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[38]_i_1 
       (.I0(m_axis_rx_tdata[38]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [38]));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[39]_i_1 
       (.I0(m_axis_rx_tdata[39]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [39]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[3]_i_1 
       (.I0(m_axis_rx_tdata[3]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [3]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[40]_i_1 
       (.I0(m_axis_rx_tdata[40]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [40]));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[41]_i_1 
       (.I0(m_axis_rx_tdata[41]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [41]));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[42]_i_1 
       (.I0(m_axis_rx_tdata[42]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [42]));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[43]_i_1 
       (.I0(m_axis_rx_tdata[43]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [43]));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[44]_i_1 
       (.I0(m_axis_rx_tdata[44]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [44]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[45]_i_1 
       (.I0(m_axis_rx_tdata[45]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [45]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[46]_i_1 
       (.I0(m_axis_rx_tdata[46]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [46]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[47]_i_1 
       (.I0(m_axis_rx_tdata[47]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [47]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[48]_i_1 
       (.I0(m_axis_rx_tdata[48]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [48]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[49]_i_1 
       (.I0(m_axis_rx_tdata[49]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [49]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[4]_i_1 
       (.I0(m_axis_rx_tdata[4]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [4]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[50]_i_1 
       (.I0(m_axis_rx_tdata[50]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [50]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[51]_i_1 
       (.I0(m_axis_rx_tdata[51]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [51]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[52]_i_1 
       (.I0(m_axis_rx_tdata[52]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [52]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[53]_i_1 
       (.I0(m_axis_rx_tdata[53]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [53]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[54]_i_1 
       (.I0(m_axis_rx_tdata[54]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [54]));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[55]_i_1 
       (.I0(m_axis_rx_tdata[55]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [55]));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[56]_i_1 
       (.I0(m_axis_rx_tdata[56]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [56]));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[57]_i_1 
       (.I0(m_axis_rx_tdata[57]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [57]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[58]_i_1 
       (.I0(m_axis_rx_tdata[58]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [58]));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[59]_i_1 
       (.I0(m_axis_rx_tdata[59]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [59]));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[5]_i_1 
       (.I0(m_axis_rx_tdata[5]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [5]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[60]_i_1 
       (.I0(m_axis_rx_tdata[60]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [60]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[61]_i_1 
       (.I0(m_axis_rx_tdata[61]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [61]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[62]_i_1 
       (.I0(m_axis_rx_tdata[62]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [62]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[63]_i_1 
       (.I0(m_axis_rx_tdata[63]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [63]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[6]_i_1 
       (.I0(m_axis_rx_tdata[6]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [6]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[7]_i_1 
       (.I0(m_axis_rx_tdata[7]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [7]));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[8]_i_1 
       (.I0(m_axis_rx_tdata[8]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [8]));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tdata[9]_i_1 
       (.I0(m_axis_rx_tdata[9]),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tdata_reg[63] [9]));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h2)) 
    m_axis_cw_tlast_i_1
       (.I0(m_axis_rx_tlast),
        .I1(cw_empty_reg),
        .O(m_axis_cw_tlast_reg));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tuser[2]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[2] ),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tuser_reg[6] [0]));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tuser[3]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[3] ),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tuser_reg[6] [1]));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tuser[4]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[4] ),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tuser_reg[6] [2]));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \m_axis_cw_tuser[6]_i_1 
       (.I0(\m_axis_rx_tuser_reg_n_0_[6] ),
        .I1(cw_empty_reg),
        .O(\m_axis_cw_tuser_reg[6] [3]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[0]_i_1 
       (.I0(trn_rd_prev[0]),
        .I1(data_prev),
        .I2(trn_rd[32]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[10]_i_1 
       (.I0(trn_rd_prev[10]),
        .I1(data_prev),
        .I2(trn_rd[42]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[11]_i_1 
       (.I0(trn_rd_prev[11]),
        .I1(data_prev),
        .I2(trn_rd[43]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[12]_i_1 
       (.I0(trn_rd_prev[12]),
        .I1(data_prev),
        .I2(trn_rd[44]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[13]_i_1 
       (.I0(trn_rd_prev[13]),
        .I1(data_prev),
        .I2(trn_rd[45]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[14]_i_1 
       (.I0(trn_rd_prev[14]),
        .I1(data_prev),
        .I2(trn_rd[46]),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[15]_i_1 
       (.I0(trn_rd_prev[15]),
        .I1(data_prev),
        .I2(trn_rd[47]),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[16]_i_1 
       (.I0(trn_rd_prev[16]),
        .I1(data_prev),
        .I2(trn_rd[48]),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[17]_i_1 
       (.I0(trn_rd_prev[17]),
        .I1(data_prev),
        .I2(trn_rd[49]),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[18]_i_1 
       (.I0(trn_rd_prev[18]),
        .I1(data_prev),
        .I2(trn_rd[50]),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[19]_i_1 
       (.I0(trn_rd_prev[19]),
        .I1(data_prev),
        .I2(trn_rd[51]),
        .O(p_1_in[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[1]_i_1 
       (.I0(trn_rd_prev[1]),
        .I1(data_prev),
        .I2(trn_rd[33]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[20]_i_1 
       (.I0(trn_rd_prev[20]),
        .I1(data_prev),
        .I2(trn_rd[52]),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[21]_i_1 
       (.I0(trn_rd_prev[21]),
        .I1(data_prev),
        .I2(trn_rd[53]),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[22]_i_1 
       (.I0(trn_rd_prev[22]),
        .I1(data_prev),
        .I2(trn_rd[54]),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[23]_i_1 
       (.I0(trn_rd_prev[23]),
        .I1(data_prev),
        .I2(trn_rd[55]),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[24]_i_1 
       (.I0(trn_rd_prev[24]),
        .I1(data_prev),
        .I2(trn_rd[56]),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[25]_i_1 
       (.I0(trn_rd_prev[25]),
        .I1(data_prev),
        .I2(trn_rd[57]),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[26]_i_1 
       (.I0(trn_rd_prev[26]),
        .I1(data_prev),
        .I2(trn_rd[58]),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[27]_i_1 
       (.I0(trn_rd_prev[27]),
        .I1(data_prev),
        .I2(trn_rd[59]),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[28]_i_1 
       (.I0(trn_rd_prev[28]),
        .I1(data_prev),
        .I2(trn_rd[60]),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[29]_i_1 
       (.I0(trn_rd_prev[29]),
        .I1(data_prev),
        .I2(trn_rd[61]),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[2]_i_1 
       (.I0(trn_rd_prev[2]),
        .I1(data_prev),
        .I2(trn_rd[34]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[30]_i_1 
       (.I0(trn_rd_prev[30]),
        .I1(data_prev),
        .I2(trn_rd[62]),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[31]_i_1 
       (.I0(trn_rd_prev[31]),
        .I1(data_prev),
        .I2(trn_rd[63]),
        .O(p_1_in[31]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[32]_i_1 
       (.I0(trn_rd_prev[32]),
        .I1(data_prev),
        .I2(trn_rd[0]),
        .O(p_1_in[32]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[33]_i_1 
       (.I0(trn_rd_prev[33]),
        .I1(data_prev),
        .I2(trn_rd[1]),
        .O(p_1_in[33]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[34]_i_1 
       (.I0(trn_rd_prev[34]),
        .I1(data_prev),
        .I2(trn_rd[2]),
        .O(p_1_in[34]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[35]_i_1 
       (.I0(trn_rd_prev[35]),
        .I1(data_prev),
        .I2(trn_rd[3]),
        .O(p_1_in[35]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[36]_i_1 
       (.I0(trn_rd_prev[36]),
        .I1(data_prev),
        .I2(trn_rd[4]),
        .O(p_1_in[36]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[37]_i_1 
       (.I0(trn_rd_prev[37]),
        .I1(data_prev),
        .I2(trn_rd[5]),
        .O(p_1_in[37]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[38]_i_1 
       (.I0(trn_rd_prev[38]),
        .I1(data_prev),
        .I2(trn_rd[6]),
        .O(p_1_in[38]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[39]_i_1 
       (.I0(trn_rd_prev[39]),
        .I1(data_prev),
        .I2(trn_rd[7]),
        .O(p_1_in[39]));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[3]_i_1 
       (.I0(trn_rd_prev[3]),
        .I1(data_prev),
        .I2(trn_rd[35]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[40]_i_1 
       (.I0(trn_rd_prev[40]),
        .I1(data_prev),
        .I2(trn_rd[8]),
        .O(p_1_in[40]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[41]_i_1 
       (.I0(trn_rd_prev[41]),
        .I1(data_prev),
        .I2(trn_rd[9]),
        .O(p_1_in[41]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[42]_i_1 
       (.I0(trn_rd_prev[42]),
        .I1(data_prev),
        .I2(trn_rd[10]),
        .O(p_1_in[42]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[43]_i_1 
       (.I0(trn_rd_prev[43]),
        .I1(data_prev),
        .I2(trn_rd[11]),
        .O(p_1_in[43]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[44]_i_1 
       (.I0(trn_rd_prev[44]),
        .I1(data_prev),
        .I2(trn_rd[12]),
        .O(p_1_in[44]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[45]_i_1 
       (.I0(trn_rd_prev[45]),
        .I1(data_prev),
        .I2(trn_rd[13]),
        .O(p_1_in[45]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[46]_i_1 
       (.I0(trn_rd_prev[46]),
        .I1(data_prev),
        .I2(trn_rd[14]),
        .O(p_1_in[46]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[47]_i_1 
       (.I0(trn_rd_prev[47]),
        .I1(data_prev),
        .I2(trn_rd[15]),
        .O(p_1_in[47]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[48]_i_1 
       (.I0(trn_rd_prev[48]),
        .I1(data_prev),
        .I2(trn_rd[16]),
        .O(p_1_in[48]));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[49]_i_1 
       (.I0(trn_rd_prev[49]),
        .I1(data_prev),
        .I2(trn_rd[17]),
        .O(p_1_in[49]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[4]_i_1 
       (.I0(trn_rd_prev[4]),
        .I1(data_prev),
        .I2(trn_rd[36]),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[50]_i_1 
       (.I0(trn_rd_prev[50]),
        .I1(data_prev),
        .I2(trn_rd[18]),
        .O(p_1_in[50]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[51]_i_1 
       (.I0(trn_rd_prev[51]),
        .I1(data_prev),
        .I2(trn_rd[19]),
        .O(p_1_in[51]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[52]_i_1 
       (.I0(trn_rd_prev[52]),
        .I1(data_prev),
        .I2(trn_rd[20]),
        .O(p_1_in[52]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[53]_i_1 
       (.I0(trn_rd_prev[53]),
        .I1(data_prev),
        .I2(trn_rd[21]),
        .O(p_1_in[53]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[54]_i_1 
       (.I0(trn_rd_prev[54]),
        .I1(data_prev),
        .I2(trn_rd[22]),
        .O(p_1_in[54]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[55]_i_1 
       (.I0(trn_rd_prev[55]),
        .I1(data_prev),
        .I2(trn_rd[23]),
        .O(p_1_in[55]));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[56]_i_1 
       (.I0(trn_rd_prev[56]),
        .I1(data_prev),
        .I2(trn_rd[24]),
        .O(p_1_in[56]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[57]_i_1 
       (.I0(trn_rd_prev[57]),
        .I1(data_prev),
        .I2(trn_rd[25]),
        .O(p_1_in[57]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[58]_i_1 
       (.I0(trn_rd_prev[58]),
        .I1(data_prev),
        .I2(trn_rd[26]),
        .O(p_1_in[58]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[59]_i_1 
       (.I0(trn_rd_prev[59]),
        .I1(data_prev),
        .I2(trn_rd[27]),
        .O(p_1_in[59]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[5]_i_1 
       (.I0(trn_rd_prev[5]),
        .I1(data_prev),
        .I2(trn_rd[37]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[60]_i_1 
       (.I0(trn_rd_prev[60]),
        .I1(data_prev),
        .I2(trn_rd[28]),
        .O(p_1_in[60]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[61]_i_1 
       (.I0(trn_rd_prev[61]),
        .I1(data_prev),
        .I2(trn_rd[29]),
        .O(p_1_in[61]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[62]_i_1 
       (.I0(trn_rd_prev[62]),
        .I1(data_prev),
        .I2(trn_rd[30]),
        .O(p_1_in[62]));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[63]_i_1 
       (.I0(trn_rd_prev[63]),
        .I1(data_prev),
        .I2(trn_rd[31]),
        .O(p_1_in[63]));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[6]_i_1 
       (.I0(trn_rd_prev[6]),
        .I1(data_prev),
        .I2(trn_rd[38]),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[7]_i_1 
       (.I0(trn_rd_prev[7]),
        .I1(data_prev),
        .I2(trn_rd[39]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[8]_i_1 
       (.I0(trn_rd_prev[8]),
        .I1(data_prev),
        .I2(trn_rd[40]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tdata[9]_i_1 
       (.I0(trn_rd_prev[9]),
        .I1(data_prev),
        .I2(trn_rd[41]),
        .O(p_1_in[9]));
  FDRE \m_axis_rx_tdata_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[10]),
        .Q(m_axis_rx_tdata[10]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[11]),
        .Q(m_axis_rx_tdata[11]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[12]),
        .Q(m_axis_rx_tdata[12]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[13]),
        .Q(m_axis_rx_tdata[13]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[14]),
        .Q(m_axis_rx_tdata[14]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[15]),
        .Q(Q[2]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[16]),
        .Q(m_axis_rx_tdata[16]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[17]),
        .Q(m_axis_rx_tdata[17]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[18]),
        .Q(m_axis_rx_tdata[18]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[19]),
        .Q(m_axis_rx_tdata[19]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[20]),
        .Q(m_axis_rx_tdata[20]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[21]),
        .Q(m_axis_rx_tdata[21]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[22]),
        .Q(m_axis_rx_tdata[22]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[23]),
        .Q(m_axis_rx_tdata[23]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[24]),
        .Q(m_axis_rx_tdata[24]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[25]),
        .Q(m_axis_rx_tdata__0[25]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[26]),
        .Q(m_axis_rx_tdata__0[26]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[27]),
        .Q(m_axis_rx_tdata__0[27]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[28]),
        .Q(m_axis_rx_tdata__0[28]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[29]),
        .Q(Q[3]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[2]),
        .Q(m_axis_rx_tdata[2]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[30]),
        .Q(Q[4]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[31]),
        .Q(m_axis_rx_tdata[31]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[32]),
        .Q(m_axis_rx_tdata[32]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[33]),
        .Q(m_axis_rx_tdata[33]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[34]),
        .Q(m_axis_rx_tdata[34]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[35]),
        .Q(m_axis_rx_tdata[35]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[36]),
        .Q(m_axis_rx_tdata[36]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[37]),
        .Q(m_axis_rx_tdata[37]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[38]),
        .Q(m_axis_rx_tdata[38]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[39]),
        .Q(m_axis_rx_tdata[39]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[3]),
        .Q(m_axis_rx_tdata[3]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[40]),
        .Q(m_axis_rx_tdata[40]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[41]),
        .Q(m_axis_rx_tdata[41]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[42]),
        .Q(m_axis_rx_tdata[42]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[43]),
        .Q(m_axis_rx_tdata[43]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[44]),
        .Q(m_axis_rx_tdata[44]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[45]),
        .Q(m_axis_rx_tdata[45]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[46]),
        .Q(m_axis_rx_tdata[46]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[47]),
        .Q(m_axis_rx_tdata[47]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[48]),
        .Q(m_axis_rx_tdata[48]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[49]),
        .Q(m_axis_rx_tdata[49]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[4]),
        .Q(m_axis_rx_tdata[4]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[50]),
        .Q(m_axis_rx_tdata[50]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[51]),
        .Q(m_axis_rx_tdata[51]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[52]),
        .Q(m_axis_rx_tdata[52]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[53]),
        .Q(m_axis_rx_tdata[53]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[54]),
        .Q(m_axis_rx_tdata[54]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[55]),
        .Q(m_axis_rx_tdata[55]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[56]),
        .Q(m_axis_rx_tdata[56]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[57]),
        .Q(m_axis_rx_tdata[57]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[58]),
        .Q(m_axis_rx_tdata[58]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[59]),
        .Q(m_axis_rx_tdata[59]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[5]),
        .Q(m_axis_rx_tdata[5]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[60]),
        .Q(m_axis_rx_tdata[60]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[61]),
        .Q(m_axis_rx_tdata[61]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[62]),
        .Q(m_axis_rx_tdata[62]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[63]),
        .Q(m_axis_rx_tdata[63]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[6]),
        .Q(m_axis_rx_tdata[6]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[7]),
        .Q(m_axis_rx_tdata[7]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[8]),
        .Q(m_axis_rx_tdata[8]),
        .R(SR));
  FDRE \m_axis_rx_tdata_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(p_1_in[9]),
        .Q(m_axis_rx_tdata[9]),
        .R(SR));
  LUT3 #(
    .INIT(8'hD0)) 
    \m_axis_rx_tuser[14]_i_1 
       (.I0(sys_rst_n_int),
        .I1(null_mux_sel_reg_3),
        .I2(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .O(\m_axis_rx_tuser[14]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \m_axis_rx_tuser[14]_i_2 
       (.I0(null_mux_sel_reg_0),
        .I1(cw_full_reg),
        .I2(sys_rst_n_int),
        .O(\m_axis_rx_tuser[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0202F202)) 
    \m_axis_rx_tuser[14]_i_3 
       (.I0(trn_rsof),
        .I1(trn_rsrc_dsc),
        .I2(data_prev),
        .I3(trn_rsof_prev),
        .I4(trn_rsrc_dsc_prev),
        .O(\m_axis_rx_tuser[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFC0C0000AAAAAAAA)) 
    \m_axis_rx_tuser[21]_i_1 
       (.I0(m_axis_rx_tuser),
        .I1(\m_axis_rx_tuser[21]_i_2_n_0 ),
        .I2(null_mux_sel_reg_3),
        .I3(\reg_pkt_len_counter_reg[0]_0 ),
        .I4(sys_rst_n_int),
        .I5(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .O(\m_axis_rx_tuser[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tuser[21]_i_2 
       (.I0(trn_reof_prev),
        .I1(data_prev),
        .I2(trn_reof),
        .O(\m_axis_rx_tuser[21]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tuser[2]_i_1 
       (.I0(trn_rbar_hit_prev[0]),
        .I1(data_prev),
        .I2(trn_rbar_hit[0]),
        .O(\m_axis_rx_tuser[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tuser[3]_i_1 
       (.I0(trn_rbar_hit_prev[1]),
        .I1(data_prev),
        .I2(trn_rbar_hit[1]),
        .O(\m_axis_rx_tuser[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tuser[4]_i_1 
       (.I0(trn_rbar_hit_prev[2]),
        .I1(data_prev),
        .I2(trn_rbar_hit[2]),
        .O(\m_axis_rx_tuser[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_axis_rx_tuser[6]_i_1 
       (.I0(trn_rbar_hit_prev[4]),
        .I1(data_prev),
        .I2(trn_rbar_hit[3]),
        .O(\m_axis_rx_tuser[6]_i_1_n_0 ));
  FDRE \m_axis_rx_tuser_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .D(\m_axis_rx_tuser[14]_i_3_n_0 ),
        .Q(cr_enable_reg),
        .R(\m_axis_rx_tuser[14]_i_1_n_0 ));
  FDRE \m_axis_rx_tuser_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\m_axis_rx_tuser[21]_i_1_n_0 ),
        .Q(m_axis_rx_tuser),
        .R(1'b0));
  FDRE \m_axis_rx_tuser_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .D(\m_axis_rx_tuser[2]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg_n_0_[2] ),
        .R(\m_axis_rx_tuser[14]_i_1_n_0 ));
  FDRE \m_axis_rx_tuser_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .D(\m_axis_rx_tuser[3]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg_n_0_[3] ),
        .R(\m_axis_rx_tuser[14]_i_1_n_0 ));
  FDRE \m_axis_rx_tuser_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .D(\m_axis_rx_tuser[4]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg_n_0_[4] ),
        .R(\m_axis_rx_tuser[14]_i_1_n_0 ));
  FDRE \m_axis_rx_tuser_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\m_axis_rx_tuser[14]_i_2_n_0 ),
        .D(\m_axis_rx_tuser[6]_i_1_n_0 ),
        .Q(\m_axis_rx_tuser_reg_n_0_[6] ),
        .R(\m_axis_rx_tuser[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    m_axis_rx_tvalid_i_1
       (.I0(null_mux_sel_reg_0),
        .I1(cw_full_reg),
        .O(m_axis_rx_tvalid_i_1_n_0));
  LUT6 #(
    .INIT(64'h7774447477777777)) 
    m_axis_rx_tvalid_i_2
       (.I0(null_transmit_done),
        .I1(null_mux_sel_reg_3),
        .I2(rsrc_rdy_filtered),
        .I3(data_prev),
        .I4(trn_rsrc_rdy_prev),
        .I5(null_mux_sel_i_2_n_0),
        .O(m_axis_rx_tvalid_i_2_n_0));
  FDRE m_axis_rx_tvalid_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(m_axis_rx_tvalid_i_2_n_0),
        .Q(null_mux_sel_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'hF0F000F010103030)) 
    null_mux_sel_i_1
       (.I0(null_mux_sel_reg_0),
        .I1(null_mux_sel_i_2_n_0),
        .I2(sys_rst_n_int),
        .I3(\reg_pkt_len_counter_reg[0] ),
        .I4(cw_full_reg),
        .I5(null_mux_sel_reg_1),
        .O(null_mux_sel_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'h1)) 
    null_mux_sel_i_2
       (.I0(trn_rdst_rdy_reg_0),
        .I1(p_7_in),
        .O(null_mux_sel_i_2_n_0));
  FDRE null_mux_sel_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(null_mux_sel_i_1_n_0),
        .Q(null_mux_sel_reg_1),
        .R(1'b0));
  FDRE null_transmit_done_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(null_mux_sel_q),
        .Q(null_transmit_done),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h80880800)) 
    rc_enable_i_2
       (.I0(null_mux_sel_reg_0),
        .I1(cr_enable_reg),
        .I2(m_axis_rx_tdata__0[28]),
        .I3(m_axis_rx_tdata__0[26]),
        .I4(m_axis_rx_tdata__0[27]),
        .O(rc_enable24_out));
  FDRE reg_dsc_detect_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(null_mux_sel_reg_2),
        .Q(trn_rdst_rdy_reg_0),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[10]_i_4 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[9]),
        .O(\reg_pkt_len_counter[10]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[10]_i_5 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[8]),
        .O(\reg_pkt_len_counter[10]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \reg_pkt_len_counter[3]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .O(\rx_null_gen_inst/p_1_in [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \reg_pkt_len_counter[3]_i_4 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\rx_null_gen_inst/p_1_in [0]));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[3]_i_5 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[3]),
        .O(\reg_pkt_len_counter[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[3]_i_6 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[2]),
        .O(\reg_pkt_len_counter[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[7]_i_3 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[7]),
        .O(\reg_pkt_len_counter[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[7]_i_4 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[6]),
        .O(\reg_pkt_len_counter[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[7]_i_5 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[5]),
        .O(\reg_pkt_len_counter[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_pkt_len_counter[7]_i_6 
       (.I0(Q[4]),
        .I1(m_axis_rx_tdata[4]),
        .O(\reg_pkt_len_counter[7]_i_6_n_0 ));
  CARRY4 \reg_pkt_len_counter_reg[10]_i_2 
       (.CI(\reg_pkt_len_counter_reg[7]_i_2_n_0 ),
        .CO({\NLW_reg_pkt_len_counter_reg[10]_i_2_CO_UNCONNECTED [3],new_pkt_len[10],\NLW_reg_pkt_len_counter_reg[10]_i_2_CO_UNCONNECTED [1],\reg_pkt_len_counter_reg[10]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_reg_pkt_len_counter_reg[10]_i_2_O_UNCONNECTED [3:2],new_pkt_len[9:8]}),
        .S({1'b0,1'b1,\reg_pkt_len_counter[10]_i_4_n_0 ,\reg_pkt_len_counter[10]_i_5_n_0 }));
  CARRY4 \reg_pkt_len_counter_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\reg_pkt_len_counter_reg[3]_i_2_n_0 ,\reg_pkt_len_counter_reg[3]_i_2_n_1 ,\reg_pkt_len_counter_reg[3]_i_2_n_2 ,\reg_pkt_len_counter_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\rx_null_gen_inst/p_1_in }),
        .O(new_pkt_len[3:0]),
        .S({\reg_pkt_len_counter[3]_i_5_n_0 ,\reg_pkt_len_counter[3]_i_6_n_0 ,S}));
  CARRY4 \reg_pkt_len_counter_reg[7]_i_2 
       (.CI(\reg_pkt_len_counter_reg[3]_i_2_n_0 ),
        .CO({\reg_pkt_len_counter_reg[7]_i_2_n_0 ,\reg_pkt_len_counter_reg[7]_i_2_n_1 ,\reg_pkt_len_counter_reg[7]_i_2_n_2 ,\reg_pkt_len_counter_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(new_pkt_len[7:4]),
        .S({\reg_pkt_len_counter[7]_i_3_n_0 ,\reg_pkt_len_counter[7]_i_4_n_0 ,\reg_pkt_len_counter[7]_i_5_n_0 ,\reg_pkt_len_counter[7]_i_6_n_0 }));
  LUT6 #(
    .INIT(64'h2F202F2F2F202020)) 
    reg_tlast_i_1
       (.I0(\reg_pkt_len_counter_reg[0] ),
        .I1(null_transmit_done),
        .I2(null_mux_sel_reg_3),
        .I3(trn_reof_prev),
        .I4(data_prev),
        .I5(trn_reof),
        .O(reg_tlast_i_1_n_0));
  FDRE reg_tlast_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(m_axis_rx_tvalid_i_1_n_0),
        .D(reg_tlast_i_1_n_0),
        .Q(m_axis_rx_tlast),
        .R(SR));
  FDRE trn_in_packet_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(trn_in_packet_reg_0),
        .Q(trn_in_packet),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rbar_hit[0]),
        .Q(trn_rbar_hit_prev[0]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rbar_hit[1]),
        .Q(trn_rbar_hit_prev[1]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rbar_hit[2]),
        .Q(trn_rbar_hit_prev[2]),
        .R(SR));
  FDRE \trn_rbar_hit_prev_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rbar_hit[3]),
        .Q(trn_rbar_hit_prev[4]),
        .R(SR));
  FDRE \trn_rd_prev_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[32]),
        .Q(trn_rd_prev[0]),
        .R(SR));
  FDRE \trn_rd_prev_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[42]),
        .Q(trn_rd_prev[10]),
        .R(SR));
  FDRE \trn_rd_prev_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[43]),
        .Q(trn_rd_prev[11]),
        .R(SR));
  FDRE \trn_rd_prev_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[44]),
        .Q(trn_rd_prev[12]),
        .R(SR));
  FDRE \trn_rd_prev_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[45]),
        .Q(trn_rd_prev[13]),
        .R(SR));
  FDRE \trn_rd_prev_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[46]),
        .Q(trn_rd_prev[14]),
        .R(SR));
  FDRE \trn_rd_prev_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[47]),
        .Q(trn_rd_prev[15]),
        .R(SR));
  FDRE \trn_rd_prev_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[48]),
        .Q(trn_rd_prev[16]),
        .R(SR));
  FDRE \trn_rd_prev_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[49]),
        .Q(trn_rd_prev[17]),
        .R(SR));
  FDRE \trn_rd_prev_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[50]),
        .Q(trn_rd_prev[18]),
        .R(SR));
  FDRE \trn_rd_prev_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[51]),
        .Q(trn_rd_prev[19]),
        .R(SR));
  FDRE \trn_rd_prev_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[33]),
        .Q(trn_rd_prev[1]),
        .R(SR));
  FDRE \trn_rd_prev_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[52]),
        .Q(trn_rd_prev[20]),
        .R(SR));
  FDRE \trn_rd_prev_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[53]),
        .Q(trn_rd_prev[21]),
        .R(SR));
  FDRE \trn_rd_prev_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[54]),
        .Q(trn_rd_prev[22]),
        .R(SR));
  FDRE \trn_rd_prev_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[55]),
        .Q(trn_rd_prev[23]),
        .R(SR));
  FDRE \trn_rd_prev_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[56]),
        .Q(trn_rd_prev[24]),
        .R(SR));
  FDRE \trn_rd_prev_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[57]),
        .Q(trn_rd_prev[25]),
        .R(SR));
  FDRE \trn_rd_prev_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[58]),
        .Q(trn_rd_prev[26]),
        .R(SR));
  FDRE \trn_rd_prev_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[59]),
        .Q(trn_rd_prev[27]),
        .R(SR));
  FDRE \trn_rd_prev_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[60]),
        .Q(trn_rd_prev[28]),
        .R(SR));
  FDRE \trn_rd_prev_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[61]),
        .Q(trn_rd_prev[29]),
        .R(SR));
  FDRE \trn_rd_prev_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[34]),
        .Q(trn_rd_prev[2]),
        .R(SR));
  FDRE \trn_rd_prev_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[62]),
        .Q(trn_rd_prev[30]),
        .R(SR));
  FDRE \trn_rd_prev_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[63]),
        .Q(trn_rd_prev[31]),
        .R(SR));
  FDRE \trn_rd_prev_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[0]),
        .Q(trn_rd_prev[32]),
        .R(SR));
  FDRE \trn_rd_prev_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[1]),
        .Q(trn_rd_prev[33]),
        .R(SR));
  FDRE \trn_rd_prev_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[2]),
        .Q(trn_rd_prev[34]),
        .R(SR));
  FDRE \trn_rd_prev_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[3]),
        .Q(trn_rd_prev[35]),
        .R(SR));
  FDRE \trn_rd_prev_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[4]),
        .Q(trn_rd_prev[36]),
        .R(SR));
  FDRE \trn_rd_prev_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[5]),
        .Q(trn_rd_prev[37]),
        .R(SR));
  FDRE \trn_rd_prev_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[6]),
        .Q(trn_rd_prev[38]),
        .R(SR));
  FDRE \trn_rd_prev_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[7]),
        .Q(trn_rd_prev[39]),
        .R(SR));
  FDRE \trn_rd_prev_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[35]),
        .Q(trn_rd_prev[3]),
        .R(SR));
  FDRE \trn_rd_prev_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[8]),
        .Q(trn_rd_prev[40]),
        .R(SR));
  FDRE \trn_rd_prev_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[9]),
        .Q(trn_rd_prev[41]),
        .R(SR));
  FDRE \trn_rd_prev_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[10]),
        .Q(trn_rd_prev[42]),
        .R(SR));
  FDRE \trn_rd_prev_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[11]),
        .Q(trn_rd_prev[43]),
        .R(SR));
  FDRE \trn_rd_prev_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[12]),
        .Q(trn_rd_prev[44]),
        .R(SR));
  FDRE \trn_rd_prev_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[13]),
        .Q(trn_rd_prev[45]),
        .R(SR));
  FDRE \trn_rd_prev_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[14]),
        .Q(trn_rd_prev[46]),
        .R(SR));
  FDRE \trn_rd_prev_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[15]),
        .Q(trn_rd_prev[47]),
        .R(SR));
  FDRE \trn_rd_prev_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[16]),
        .Q(trn_rd_prev[48]),
        .R(SR));
  FDRE \trn_rd_prev_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[17]),
        .Q(trn_rd_prev[49]),
        .R(SR));
  FDRE \trn_rd_prev_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[36]),
        .Q(trn_rd_prev[4]),
        .R(SR));
  FDRE \trn_rd_prev_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[18]),
        .Q(trn_rd_prev[50]),
        .R(SR));
  FDRE \trn_rd_prev_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[19]),
        .Q(trn_rd_prev[51]),
        .R(SR));
  FDRE \trn_rd_prev_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[20]),
        .Q(trn_rd_prev[52]),
        .R(SR));
  FDRE \trn_rd_prev_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[21]),
        .Q(trn_rd_prev[53]),
        .R(SR));
  FDRE \trn_rd_prev_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[22]),
        .Q(trn_rd_prev[54]),
        .R(SR));
  FDRE \trn_rd_prev_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[23]),
        .Q(trn_rd_prev[55]),
        .R(SR));
  FDRE \trn_rd_prev_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[24]),
        .Q(trn_rd_prev[56]),
        .R(SR));
  FDRE \trn_rd_prev_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[25]),
        .Q(trn_rd_prev[57]),
        .R(SR));
  FDRE \trn_rd_prev_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[26]),
        .Q(trn_rd_prev[58]),
        .R(SR));
  FDRE \trn_rd_prev_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[27]),
        .Q(trn_rd_prev[59]),
        .R(SR));
  FDRE \trn_rd_prev_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[37]),
        .Q(trn_rd_prev[5]),
        .R(SR));
  FDRE \trn_rd_prev_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[28]),
        .Q(trn_rd_prev[60]),
        .R(SR));
  FDRE \trn_rd_prev_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[29]),
        .Q(trn_rd_prev[61]),
        .R(SR));
  FDRE \trn_rd_prev_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[30]),
        .Q(trn_rd_prev[62]),
        .R(SR));
  FDRE \trn_rd_prev_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[31]),
        .Q(trn_rd_prev[63]),
        .R(SR));
  FDRE \trn_rd_prev_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[38]),
        .Q(trn_rd_prev[6]),
        .R(SR));
  FDRE \trn_rd_prev_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[39]),
        .Q(trn_rd_prev[7]),
        .R(SR));
  FDRE \trn_rd_prev_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[40]),
        .Q(trn_rd_prev[8]),
        .R(SR));
  FDRE \trn_rd_prev_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rd[41]),
        .Q(trn_rd_prev[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0808080B080808FB)) 
    trn_rdst_rdy_i_1
       (.I0(\reg_pkt_len_counter_reg[0] ),
        .I1(null_mux_sel_reg_1),
        .I2(cw_full_reg),
        .I3(p_7_in),
        .I4(trn_rdst_rdy_reg_0),
        .I5(null_mux_sel_reg_0),
        .O(trn_rdst_rdy_i_1_n_0));
  FDRE trn_rdst_rdy_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(trn_rdst_rdy_i_1_n_0),
        .Q(E),
        .R(SR));
  FDRE trn_reof_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_reof),
        .Q(trn_reof_prev),
        .R(SR));
  FDRE trn_rsof_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rsof),
        .Q(trn_rsof_prev),
        .R(SR));
  FDRE trn_rsrc_dsc_d_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(trn_rsrc_dsc),
        .Q(trn_rsrc_dsc_d),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT2 #(
    .INIT(4'hE)) 
    trn_rsrc_dsc_prev_i_1
       (.I0(trn_rdst_rdy_reg_0),
        .I1(trn_rsrc_dsc),
        .O(trn_rsrc_dsc_prev0));
  FDRE trn_rsrc_dsc_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(trn_rsrc_dsc_prev0),
        .Q(trn_rsrc_dsc_prev),
        .R(SR));
  FDRE trn_rsrc_rdy_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rsrc_rdy_filtered),
        .Q(trn_rsrc_rdy_prev),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_top" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_top
   (E,
    SR,
    trn_rsrc_dsc_d,
    m_axis_rx_tvalid,
    m_axis_cr_tlast_reg,
    \m_axis_cw_tuser_reg[2] ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    \tstrb_prev_reg[7] ,
    s_axis_tx_tvalid,
    s_axis_tx_tlast,
    reg_tvalid,
    trn_teof,
    trn_trem,
    pl_directed_link_speed,
    pl_directed_link_auton,
    IP2Bus_WrAck_reg,
    s_axi_ctl_arvalid_blk_bridge,
    s_axi_ctl_awvalid_ev_hndlr,
    s_axi_ctl_arvalid_ev_hndlr,
    trn_in_packet,
    reg_dsc_detect,
    cw_full_reg,
    rc_full,
    rc_full_reg,
    rc_full_reg_0,
    cr_full_reg,
    cc_in_packet_int,
    axi_in_packet,
    flush_axi,
    trn_in_packet_0,
    cc_in_packet_reg,
    \end_point.state_reg[2] ,
    request_type,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    ready_is_given,
    s_axi_ctl_wready,
    bridge_status_control,
    cfg_mgmt_wr_rw1c_as_rw,
    cfg_mgmt_wr_readonly,
    wait_for_idle,
    cfg_mgmt_rd_en,
    \block_is_ep.s_axi_ctl_bvalid_reg ,
    IP2Bus_WrAck_reg_0,
    IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0] ,
    m_axis_cc_tvalid_d50_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    badreadreq,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    flush_axis_tlp2,
    sig_m_axis_cc_tready,
    cr_enable_reg,
    null_mux_sel,
    rc_enable24_out,
    state174_out,
    cr_enable_reg_0,
    sig_s_axis_cw_tvalid,
    cw_enable_reg,
    reg_disable_trn,
    reg_tready_reg,
    flush_axis_tlp,
    trn_tsrc_rdy,
    trn_tsof,
    s_axi_ctl_arready_blk_bridge,
    \block_is_ep.rd_wr_bar_pending_reg ,
    \end_point.wait_for_idle_reg ,
    \end_point.wait_for_idle_reg_0 ,
    \end_point.state_reg[1] ,
    \end_point.state_reg[2]_0 ,
    \end_point.state_reg[0] ,
    \end_point.s_axi_ctl_rvalid_reg ,
    \end_point.s_axi_ctl_bvalid_reg ,
    \end_point.s_axi_ctl_awready_reg ,
    \end_point.s_axi_ctl_arready_reg ,
    \end_point.s_axi_ctl_arready_reg_0 ,
    \end_point.s_axi_ctl_rvalid_reg_0 ,
    \end_point.s_axi_ctl_rvalid_reg_1 ,
    \end_point.interrupt_mask_reg[22] ,
    \end_point.s_axi_ctl_bvalid_reg_0 ,
    \end_point.s_axi_ctl_bvalid_reg_1 ,
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ,
    \end_point.pl_directed_link_auton_reg ,
    \end_point.global_intr_disable_reg ,
    \end_point.state_reg[2]_1 ,
    \end_point.s_axi_ctl_rdata_reg[1] ,
    \end_point.s_axi_ctl_rdata_reg[3] ,
    \end_point.s_axi_ctl_rdata_reg[11] ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    pl_directed_link_change,
    \end_point.s_axi_ctl_rdata_reg[3]_0 ,
    \end_point.s_axi_ctl_rdata_reg[0] ,
    \end_point.wait_for_idle_reg_1 ,
    \end_point.global_intr_disable_reg_0 ,
    \end_point.wait_for_idle_reg_2 ,
    interrupt_out,
    \end_point.s_axi_ctl_awready_reg_0 ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    cw_enable_reg_0,
    cw_enable_reg_1,
    \data_width_64.dataoffset_reg ,
    \end_point.state_reg[0]_0 ,
    \end_point.s_axi_ctl_awready_reg_1 ,
    \end_point.s_axi_ctl_rdata_reg[3]_1 ,
    \sig_bus2ip_ce_reg_reg[3] ,
    cfg_mgmt_byte_en_n,
    cfg_mgmt_wr_rw1c_as_rw_n,
    cfg_mgmt_wr_readonly_n,
    cfg_mgmt_rd_en_n,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ,
    \FSM_sequential_state_reg[1] ,
    \resetovrd.reset_reg[4] ,
    trn_rsrc_dsc,
    rsrc_rdy_filtered,
    trn_reof,
    trn_rsof,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    s_axi_ctl_wdata,
    trn_recrc_err,
    pl_received_hot_rst,
    user_lnk_up_mux_reg,
    trn_in_packet_reg,
    null_mux_sel_reg,
    cw_enable_reg_2,
    m_axis_rx_tvalid_reg,
    rc_enable_reg,
    m_axis_rx_tvalid_reg_0,
    m_axis_rx_tvalid_reg_1,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    axi_in_packet_reg,
    user_lnk_up_mux_reg_0,
    trn_in_packet_reg_0,
    user_lnk_up_mux_reg_1,
    \end_point.axi_lite_intf_busy_reg ,
    \end_point.request_type_reg ,
    \end_point.s_axi_ctl_arready_reg_1 ,
    \end_point.request_type_reg_0 ,
    \end_point.request_type_reg_1 ,
    \end_point.ready_is_given_reg ,
    \end_point.ready_is_given_reg_0 ,
    \end_point.global_intr_disable_reg_1 ,
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ,
    \end_point.cfg_mgmt_wr_readonly_o_reg ,
    \end_point.state_reg[1]_0 ,
    \end_point.s_axi_ctl_arvalid_blk_bridge_reg ,
    \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ,
    out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg_2,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    sig_m_axis_cc_tlast,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    p_7_in,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    trn_tdst_rdy,
    sys_rst_n_int,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_awaddr,
    cfg_mgmt_rd_wr_done_n,
    trn_rd,
    trn_rbar_hit,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    pl_sel_lnk_rate,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    pl_sel_lnk_width,
    \cfg_device_number_d_reg[0] ,
    \cfg_device_number_d_reg[1] ,
    \cfg_device_number_d_reg[2] ,
    \cfg_device_number_d_reg[3] ,
    \cfg_device_number_d_reg[4] ,
    pl_ltssm_state,
    \cfg_bus_number_d_reg[1] ,
    \cfg_bus_number_d_reg[2] ,
    \cfg_bus_number_d_reg[7] ,
    sig_IP2Bus_RdAck,
    pl_link_upcfg_cap,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    sig_IP2Bus_WrAck,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \end_point.psr_reg[2]_1 ,
    sys_rst_n_int_reg,
    \data_width_64.master_int_reg_0 ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    cfg_mgmt_do);
  output [0:0]E;
  output [0:0]SR;
  output trn_rsrc_dsc_d;
  output m_axis_rx_tvalid;
  output m_axis_cr_tlast_reg;
  output \m_axis_cw_tuser_reg[2] ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output \tstrb_prev_reg[7] ;
  output s_axis_tx_tvalid;
  output s_axis_tx_tlast;
  output reg_tvalid;
  output trn_teof;
  output [0:0]trn_trem;
  output pl_directed_link_speed;
  output pl_directed_link_auton;
  output IP2Bus_WrAck_reg;
  output s_axi_ctl_arvalid_blk_bridge;
  output s_axi_ctl_awvalid_ev_hndlr;
  output s_axi_ctl_arvalid_ev_hndlr;
  output trn_in_packet;
  output reg_dsc_detect;
  output cw_full_reg;
  output rc_full;
  output rc_full_reg;
  output rc_full_reg_0;
  output cr_full_reg;
  output cc_in_packet_int;
  output axi_in_packet;
  output flush_axi;
  output trn_in_packet_0;
  output cc_in_packet_reg;
  output \end_point.state_reg[2] ;
  output request_type;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output ready_is_given;
  output s_axi_ctl_wready;
  output [0:0]bridge_status_control;
  output cfg_mgmt_wr_rw1c_as_rw;
  output cfg_mgmt_wr_readonly;
  output wait_for_idle;
  output cfg_mgmt_rd_en;
  output \block_is_ep.s_axi_ctl_bvalid_reg ;
  output IP2Bus_WrAck_reg_0;
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0] ;
  output m_axis_cc_tvalid_d50_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output badreadreq;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output flush_axis_tlp2;
  output sig_m_axis_cc_tready;
  output [0:0]cr_enable_reg;
  output null_mux_sel;
  output rc_enable24_out;
  output state174_out;
  output cr_enable_reg_0;
  output sig_s_axis_cw_tvalid;
  output cw_enable_reg;
  output reg_disable_trn;
  output reg_tready_reg;
  output flush_axis_tlp;
  output trn_tsrc_rdy;
  output trn_tsof;
  output s_axi_ctl_arready_blk_bridge;
  output \block_is_ep.rd_wr_bar_pending_reg ;
  output \end_point.wait_for_idle_reg ;
  output \end_point.wait_for_idle_reg_0 ;
  output \end_point.state_reg[1] ;
  output \end_point.state_reg[2]_0 ;
  output \end_point.state_reg[0] ;
  output \end_point.s_axi_ctl_rvalid_reg ;
  output \end_point.s_axi_ctl_bvalid_reg ;
  output \end_point.s_axi_ctl_awready_reg ;
  output \end_point.s_axi_ctl_arready_reg ;
  output \end_point.s_axi_ctl_arready_reg_0 ;
  output \end_point.s_axi_ctl_rvalid_reg_0 ;
  output \end_point.s_axi_ctl_rvalid_reg_1 ;
  output \end_point.interrupt_mask_reg[22] ;
  output \end_point.s_axi_ctl_bvalid_reg_0 ;
  output \end_point.s_axi_ctl_bvalid_reg_1 ;
  output \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ;
  output \end_point.pl_directed_link_auton_reg ;
  output \end_point.global_intr_disable_reg ;
  output \end_point.state_reg[2]_1 ;
  output \end_point.s_axi_ctl_rdata_reg[1] ;
  output \end_point.s_axi_ctl_rdata_reg[3] ;
  output \end_point.s_axi_ctl_rdata_reg[11] ;
  output [1:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  output [1:0]pl_directed_link_change;
  output \end_point.s_axi_ctl_rdata_reg[3]_0 ;
  output \end_point.s_axi_ctl_rdata_reg[0] ;
  output \end_point.wait_for_idle_reg_1 ;
  output \end_point.global_intr_disable_reg_0 ;
  output \end_point.wait_for_idle_reg_2 ;
  output interrupt_out;
  output \end_point.s_axi_ctl_awready_reg_0 ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output cw_enable_reg_0;
  output cw_enable_reg_1;
  output \data_width_64.dataoffset_reg ;
  output \end_point.state_reg[0]_0 ;
  output \end_point.s_axi_ctl_awready_reg_1 ;
  output \end_point.s_axi_ctl_rdata_reg[3]_1 ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output [0:0]cfg_mgmt_byte_en_n;
  output cfg_mgmt_wr_rw1c_as_rw_n;
  output cfg_mgmt_wr_readonly_n;
  output cfg_mgmt_rd_en_n;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output [63:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [9:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;
  output \FSM_sequential_state_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input trn_rsrc_dsc;
  input rsrc_rdy_filtered;
  input trn_reof;
  input trn_rsof;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input [31:0]s_axi_ctl_wdata;
  input trn_recrc_err;
  input pl_received_hot_rst;
  input user_lnk_up_mux_reg;
  input trn_in_packet_reg;
  input null_mux_sel_reg;
  input cw_enable_reg_2;
  input m_axis_rx_tvalid_reg;
  input rc_enable_reg;
  input m_axis_rx_tvalid_reg_0;
  input m_axis_rx_tvalid_reg_1;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input axi_in_packet_reg;
  input user_lnk_up_mux_reg_0;
  input trn_in_packet_reg_0;
  input user_lnk_up_mux_reg_1;
  input \end_point.axi_lite_intf_busy_reg ;
  input \end_point.request_type_reg ;
  input \end_point.s_axi_ctl_arready_reg_1 ;
  input \end_point.request_type_reg_0 ;
  input \end_point.request_type_reg_1 ;
  input \end_point.ready_is_given_reg ;
  input \end_point.ready_is_given_reg_0 ;
  input \end_point.global_intr_disable_reg_1 ;
  input \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ;
  input \end_point.cfg_mgmt_wr_readonly_o_reg ;
  input \end_point.state_reg[1]_0 ;
  input \end_point.s_axi_ctl_arvalid_blk_bridge_reg ;
  input \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ;
  input [0:0]out;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg_2;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input sig_m_axis_cc_tlast;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input p_7_in;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input trn_tdst_rdy;
  input sys_rst_n_int;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input [11:0]s_axi_ctl_awaddr;
  input cfg_mgmt_rd_wr_done_n;
  input [63:0]trn_rd;
  input [3:0]trn_rbar_hit;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input pl_sel_lnk_rate;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [1:0]pl_sel_lnk_width;
  input \cfg_device_number_d_reg[0] ;
  input \cfg_device_number_d_reg[1] ;
  input \cfg_device_number_d_reg[2] ;
  input \cfg_device_number_d_reg[3] ;
  input \cfg_device_number_d_reg[4] ;
  input [0:0]pl_ltssm_state;
  input \cfg_bus_number_d_reg[1] ;
  input \cfg_bus_number_d_reg[2] ;
  input [5:0]\cfg_bus_number_d_reg[7] ;
  input sig_IP2Bus_RdAck;
  input pl_link_upcfg_cap;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input sig_IP2Bus_WrAck;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input [63:0]\end_point.psr_reg[2]_1 ;
  input sys_rst_n_int_reg;
  input [2:0]\data_width_64.master_int_reg_0 ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [31:0]cfg_mgmt_do;

  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire \FSM_sequential_state_reg[1] ;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire [63:0]Q;
  wire [0:0]SR;
  wire almost_fullsig;
  wire [0:0]\axi_enhanced_cfg_slave_inst/interrupt_decode ;
  wire axi_in_packet;
  wire axi_in_packet_reg;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire \block_is_ep.rd_wr_bar_pending_reg ;
  wire \block_is_ep.s_axi_ctl_bvalid_reg ;
  wire [0:0]bridge_status_control;
  wire cc_in_packet_int;
  wire cc_in_packet_reg;
  wire \cfg_bus_number_d_reg[1] ;
  wire \cfg_bus_number_d_reg[2] ;
  wire [5:0]\cfg_bus_number_d_reg[7] ;
  wire \cfg_device_number_d_reg[0] ;
  wire \cfg_device_number_d_reg[1] ;
  wire \cfg_device_number_d_reg[2] ;
  wire \cfg_device_number_d_reg[3] ;
  wire \cfg_device_number_d_reg[4] ;
  wire [0:0]cfg_mgmt_byte_en_n;
  wire [31:0]cfg_mgmt_do;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_rd_wr_done_n;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_readonly_n;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire cfg_mgmt_wr_rw1c_as_rw_n;
  wire [0:0]cr_enable_reg;
  wire cr_enable_reg_0;
  wire cr_full_reg;
  wire cw_enable_reg;
  wire cw_enable_reg_0;
  wire cw_enable_reg_1;
  wire cw_enable_reg_2;
  wire cw_full_reg;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_reg ;
  wire [2:0]\data_width_64.master_int_reg_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire \end_point.axi_lite_intf_busy_reg ;
  wire \end_point.cfg_mgmt_wr_readonly_o_reg ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ;
  wire \end_point.fifo_rd_ptr_reg[0] ;
  wire \end_point.global_intr_disable_reg ;
  wire \end_point.global_intr_disable_reg_0 ;
  wire \end_point.global_intr_disable_reg_1 ;
  wire \end_point.interrupt_mask_reg[22] ;
  wire \end_point.pl_directed_link_auton_reg ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire \end_point.ready_is_given_reg ;
  wire \end_point.ready_is_given_reg_0 ;
  wire \end_point.request_type_reg ;
  wire \end_point.request_type_reg_0 ;
  wire \end_point.request_type_reg_1 ;
  wire \end_point.s_axi_ctl_arready_reg ;
  wire \end_point.s_axi_ctl_arready_reg_0 ;
  wire \end_point.s_axi_ctl_arready_reg_1 ;
  wire \end_point.s_axi_ctl_arvalid_blk_bridge_reg ;
  wire \end_point.s_axi_ctl_awready_reg ;
  wire \end_point.s_axi_ctl_awready_reg_0 ;
  wire \end_point.s_axi_ctl_awready_reg_1 ;
  wire \end_point.s_axi_ctl_awvalid_ev_hndlr_reg ;
  wire \end_point.s_axi_ctl_bvalid_reg ;
  wire \end_point.s_axi_ctl_bvalid_reg_0 ;
  wire \end_point.s_axi_ctl_bvalid_reg_1 ;
  wire \end_point.s_axi_ctl_rdata_reg[0] ;
  wire \end_point.s_axi_ctl_rdata_reg[11] ;
  wire \end_point.s_axi_ctl_rdata_reg[1] ;
  wire \end_point.s_axi_ctl_rdata_reg[3] ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[3]_1 ;
  wire \end_point.s_axi_ctl_rvalid_reg ;
  wire \end_point.s_axi_ctl_rvalid_reg_0 ;
  wire \end_point.s_axi_ctl_rvalid_reg_1 ;
  wire \end_point.state_reg[0] ;
  wire \end_point.state_reg[0]_0 ;
  wire \end_point.state_reg[1] ;
  wire \end_point.state_reg[1]_0 ;
  wire \end_point.state_reg[2] ;
  wire \end_point.state_reg[2]_0 ;
  wire \end_point.state_reg[2]_1 ;
  wire \end_point.wait_for_idle_reg ;
  wire \end_point.wait_for_idle_reg_0 ;
  wire \end_point.wait_for_idle_reg_1 ;
  wire \end_point.wait_for_idle_reg_2 ;
  wire eqOp;
  wire eqOp56_in;
  wire flush_axi;
  wire flush_axis_tlp;
  wire flush_axis_tlp2;
  wire [1:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [63:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire [9:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ;
  wire \goreg_bm.dout_i_reg[63] ;
  wire interrupt_out;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire m_axis_cr_tlast_reg;
  wire \m_axis_cw_tuser_reg[2] ;
  wire m_axis_rx_tvalid;
  wire m_axis_rx_tvalid_reg;
  wire m_axis_rx_tvalid_reg_0;
  wire m_axis_rx_tvalid_reg_1;
  wire neqOp7_in;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire null_mux_sel;
  wire null_mux_sel_reg;
  wire [0:0]out;
  wire p_0_in0_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire p_6_in;
  wire p_7_in;
  wire padzeroes11_out;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire pl_link_upcfg_cap;
  wire [0:0]pl_ltssm_state;
  wire pl_received_hot_rst;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire rc_enable24_out;
  wire rc_enable_reg;
  wire rc_full;
  wire rc_full_reg;
  wire rc_full_reg_0;
  wire ready_is_given;
  wire reg_disable_trn;
  wire reg_dsc_detect;
  wire reg_tready_reg;
  wire reg_tvalid;
  wire request_completed;
  wire request_type;
  wire \resetovrd.reset_reg[4] ;
  wire rsrc_rdy_filtered;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire [11:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arready_blk_bridge;
  wire s_axi_ctl_arvalid;
  wire s_axi_ctl_arvalid_blk_bridge;
  wire s_axi_ctl_arvalid_ev_hndlr;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_awvalid_ev_hndlr;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire s_axis_tx_tlast;
  wire s_axis_tx_tvalid;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tvalid;
  wire state174_out;
  wire sys_rst_n_int;
  wire sys_rst_n_int_reg;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_in_packet;
  wire trn_in_packet_0;
  wire trn_in_packet_reg;
  wire trn_in_packet_reg_0;
  wire [3:0]trn_rbar_hit;
  wire [63:0]trn_rd;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rnp_ok;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [0:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire \tstrb_prev_reg[7] ;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;
  wire user_lnk_up_mux_reg_2;
  wire wait_for_idle;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_cfg cfg_inst
       (.\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg_0),
        .IP2Bus_WrAck_reg(IP2Bus_WrAck_reg),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg_0),
        .SR(SR),
        .\block_is_ep.rd_wr_bar_pending_reg (s_axi_ctl_awvalid_ev_hndlr),
        .\block_is_ep.rd_wr_bar_pending_reg_0 (\block_is_ep.rd_wr_bar_pending_reg ),
        .\block_is_ep.s_axi_ctl_bvalid_reg (\block_is_ep.s_axi_ctl_bvalid_reg ),
        .bridge_status_control(bridge_status_control),
        .\cfg_bus_number_d_reg[1] (\cfg_bus_number_d_reg[1] ),
        .\cfg_bus_number_d_reg[2] (\cfg_bus_number_d_reg[2] ),
        .\cfg_bus_number_d_reg[7] (\cfg_bus_number_d_reg[7] ),
        .\cfg_device_number_d_reg[0] (\cfg_device_number_d_reg[0] ),
        .\cfg_device_number_d_reg[1] (\cfg_device_number_d_reg[1] ),
        .\cfg_device_number_d_reg[2] (\cfg_device_number_d_reg[2] ),
        .\cfg_device_number_d_reg[3] (\cfg_device_number_d_reg[3] ),
        .\cfg_device_number_d_reg[4] (\cfg_device_number_d_reg[4] ),
        .cfg_mgmt_byte_en_n(cfg_mgmt_byte_en_n),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_rd_en_n(cfg_mgmt_rd_en_n),
        .cfg_mgmt_rd_wr_done_n(cfg_mgmt_rd_wr_done_n),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_readonly_n(cfg_mgmt_wr_readonly_n),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_mgmt_wr_rw1c_as_rw_n(cfg_mgmt_wr_rw1c_as_rw_n),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg_0 ),
        .\end_point.axi_lite_intf_busy_reg (\end_point.axi_lite_intf_busy_reg ),
        .\end_point.cfg_mgmt_wr_readonly_o_reg (\end_point.cfg_mgmt_wr_readonly_o_reg ),
        .\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg (\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg ),
        .\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 (\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 ),
        .\end_point.global_intr_disable_reg (\end_point.global_intr_disable_reg ),
        .\end_point.global_intr_disable_reg_0 (\end_point.global_intr_disable_reg_0 ),
        .\end_point.global_intr_disable_reg_1 (\end_point.global_intr_disable_reg_1 ),
        .\end_point.interrupt_mask_reg[22] (\end_point.interrupt_mask_reg[22] ),
        .\end_point.pl_directed_link_auton_reg (\end_point.pl_directed_link_auton_reg ),
        .\end_point.ready_is_given_reg (\end_point.ready_is_given_reg ),
        .\end_point.ready_is_given_reg_0 (\end_point.ready_is_given_reg_0 ),
        .\end_point.request_type_reg (\end_point.request_type_reg ),
        .\end_point.request_type_reg_0 (\end_point.request_type_reg_0 ),
        .\end_point.request_type_reg_1 (\end_point.request_type_reg_1 ),
        .\end_point.s_axi_ctl_araddr_blk_bridge_reg[2] (request_type),
        .\end_point.s_axi_ctl_arready_reg (\end_point.s_axi_ctl_arready_reg ),
        .\end_point.s_axi_ctl_arready_reg_0 (\end_point.s_axi_ctl_arready_reg_0 ),
        .\end_point.s_axi_ctl_arready_reg_1 (\end_point.s_axi_ctl_arready_reg_1 ),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg (wait_for_idle),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg_0 (\end_point.s_axi_ctl_arvalid_blk_bridge_reg ),
        .\end_point.s_axi_ctl_awready_reg (\end_point.s_axi_ctl_awready_reg ),
        .\end_point.s_axi_ctl_awready_reg_0 (\end_point.s_axi_ctl_awready_reg_0 ),
        .\end_point.s_axi_ctl_awready_reg_1 (\end_point.s_axi_ctl_awready_reg_1 ),
        .\end_point.s_axi_ctl_awvalid_ev_hndlr_reg (\end_point.s_axi_ctl_awvalid_ev_hndlr_reg ),
        .\end_point.s_axi_ctl_bvalid_reg (\end_point.s_axi_ctl_bvalid_reg ),
        .\end_point.s_axi_ctl_bvalid_reg_0 (\end_point.s_axi_ctl_bvalid_reg_0 ),
        .\end_point.s_axi_ctl_bvalid_reg_1 (\end_point.s_axi_ctl_bvalid_reg_1 ),
        .\end_point.s_axi_ctl_rdata_reg[0] (\end_point.s_axi_ctl_rdata_reg[0] ),
        .\end_point.s_axi_ctl_rdata_reg[11] (\end_point.s_axi_ctl_rdata_reg[11] ),
        .\end_point.s_axi_ctl_rdata_reg[1] (\end_point.s_axi_ctl_rdata_reg[1] ),
        .\end_point.s_axi_ctl_rdata_reg[3] (\end_point.s_axi_ctl_rdata_reg[3] ),
        .\end_point.s_axi_ctl_rdata_reg[3]_0 (\end_point.s_axi_ctl_rdata_reg[3]_0 ),
        .\end_point.s_axi_ctl_rdata_reg[3]_1 (\end_point.s_axi_ctl_rdata_reg[3]_1 ),
        .\end_point.s_axi_ctl_rvalid_reg (\end_point.s_axi_ctl_rvalid_reg ),
        .\end_point.s_axi_ctl_rvalid_reg_0 (\end_point.s_axi_ctl_rvalid_reg_0 ),
        .\end_point.s_axi_ctl_rvalid_reg_1 (\end_point.s_axi_ctl_rvalid_reg_1 ),
        .\end_point.state_reg[0] (\end_point.state_reg[0] ),
        .\end_point.state_reg[0]_0 (\end_point.state_reg[0]_0 ),
        .\end_point.state_reg[1] (\end_point.state_reg[1] ),
        .\end_point.state_reg[1]_0 (\end_point.state_reg[1]_0 ),
        .\end_point.state_reg[2] (\end_point.state_reg[2] ),
        .\end_point.state_reg[2]_0 (\end_point.state_reg[2]_0 ),
        .\end_point.state_reg[2]_1 (\end_point.state_reg[2]_1 ),
        .\end_point.wait_for_idle_reg (\end_point.wait_for_idle_reg ),
        .\end_point.wait_for_idle_reg_0 (\end_point.wait_for_idle_reg_0 ),
        .\end_point.wait_for_idle_reg_1 (\end_point.wait_for_idle_reg_1 ),
        .\end_point.wait_for_idle_reg_2 (\end_point.wait_for_idle_reg_2 ),
        .\end_point_1.s_axi_ctl_arready_reg (s_axi_ctl_arvalid_blk_bridge),
        .\end_point_1.s_axi_ctl_arready_reg_0 (s_axi_ctl_arready_blk_bridge),
        .\end_point_1.s_axi_ctl_rvalid_reg (cfg_mgmt_rd_en),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 ),
        .interrupt_decode(\axi_enhanced_cfg_slave_inst/interrupt_decode ),
        .interrupt_out(interrupt_out),
        .out(out),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_link_upcfg_cap(pl_link_upcfg_cap),
        .pl_ltssm_state(pl_ltssm_state),
        .pl_received_hot_rst(pl_received_hot_rst),
        .pl_sel_lnk_rate(pl_sel_lnk_rate),
        .pl_sel_lnk_width(pl_sel_lnk_width),
        .ready_is_given(ready_is_given),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_arvalid_ev_hndlr(s_axi_ctl_arvalid_ev_hndlr),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sys_rst_n_int(sys_rst_n_int),
        .sys_rst_n_int_reg(sys_rst_n_int_reg),
        .trn_recrc_err(trn_recrc_err),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_rx rx_inst
       (.D(D),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .\FSM_sequential_state_reg[1] (\FSM_sequential_state_reg[1] ),
        .Q(Q),
        .SR(SR),
        .almost_fullsig(almost_fullsig),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .cr_enable_reg(cr_enable_reg),
        .cr_enable_reg_0(cr_enable_reg_0),
        .cr_full_reg(cr_full_reg),
        .cw_enable_reg(state174_out),
        .cw_enable_reg_0(cw_enable_reg),
        .cw_enable_reg_1(cw_enable_reg_0),
        .cw_enable_reg_2(cw_enable_reg_1),
        .cw_enable_reg_3(cw_enable_reg_2),
        .cw_full_reg(cw_full_reg),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0]_0 ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .m_axis_cr_tlast_reg(m_axis_cr_tlast_reg),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .m_axis_rx_tvalid_reg(m_axis_rx_tvalid_reg),
        .m_axis_rx_tvalid_reg_0(m_axis_rx_tvalid_reg_0),
        .m_axis_rx_tvalid_reg_1(m_axis_rx_tvalid_reg_1),
        .neqOp7_in(neqOp7_in),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (\np_ok_mode.rx_np_ok_int_reg ),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg_0 ),
        .null_mux_sel_reg(m_axis_rx_tvalid),
        .null_mux_sel_reg_0(null_mux_sel),
        .null_mux_sel_reg_1(null_mux_sel_reg),
        .p_1_out(p_1_out),
        .p_6_in(p_6_in),
        .p_7_in(p_7_in),
        .padzeroes11_out(padzeroes11_out),
        .rc_enable24_out(rc_enable24_out),
        .rc_enable_reg(rc_enable_reg),
        .rc_full(rc_full),
        .rc_full_reg(rc_full_reg),
        .rc_full_reg_0(rc_full_reg_0),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .rsrc_rdy_filtered(rsrc_rdy_filtered),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .sys_rst_n_int(sys_rst_n_int),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_in_packet(trn_in_packet),
        .trn_in_packet_reg(trn_in_packet_reg),
        .trn_rbar_hit(trn_rbar_hit),
        .trn_rd(trn_rd),
        .trn_rdst_rdy_reg(reg_dsc_detect),
        .trn_reof(trn_reof),
        .trn_rnp_ok(trn_rnp_ok),
        .trn_rsof(trn_rsof),
        .trn_rsof_prev_reg(E),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(trn_rsrc_dsc_d),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_2),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx tx_inst
       (.SR(SR),
        .axi_in_packet(axi_in_packet),
        .axi_in_packet_reg(axi_in_packet_reg),
        .cc_in_packet_int(cc_in_packet_int),
        .cc_in_packet_reg(cc_in_packet_reg),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.fifo_rd_ptr_reg[0] (\end_point.fifo_rd_ptr_reg[0] ),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .flush_axi(flush_axi),
        .flush_axis_tlp(flush_axis_tlp),
        .flush_axis_tlp2(flush_axis_tlp2),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .interrupt_decode(\axi_enhanced_cfg_slave_inst/interrupt_decode ),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .reg_disable_trn_reg(reg_disable_trn),
        .reg_tready_reg(reg_tvalid),
        .reg_tready_reg_0(reg_tready_reg),
        .request_completed(request_completed),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .sys_rst_n_int(sys_rst_n_int),
        .tlast_prev_reg(s_axis_tx_tlast),
        .trn_in_packet_0(trn_in_packet_0),
        .trn_in_packet_reg(trn_in_packet_reg_0),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem(trn_trem),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy),
        .\tstrb_prev_reg[7] (\tstrb_prev_reg[7] ),
        .tvalid_prev_reg(s_axis_tx_tvalid),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg_0),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_1),
        .user_lnk_up_mux_reg_1(user_lnk_up_mux_reg));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_tx" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx
   (\tstrb_prev_reg[7] ,
    tvalid_prev_reg,
    tlast_prev_reg,
    reg_tready_reg,
    trn_teof,
    trn_trem,
    cc_in_packet_int,
    axi_in_packet,
    flush_axi,
    trn_in_packet_0,
    cc_in_packet_reg,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0] ,
    m_axis_cc_tvalid_d50_out,
    flush_axis_tlp2,
    sig_m_axis_cc_tready,
    reg_disable_trn_reg,
    reg_tready_reg_0,
    flush_axis_tlp,
    trn_tsrc_rdy,
    trn_tsof,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    SR,
    \resetovrd.reset_reg[4] ,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    axi_in_packet_reg,
    user_lnk_up_mux_reg,
    trn_in_packet_reg,
    user_lnk_up_mux_reg_0,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    sig_m_axis_cc_tlast,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    user_lnk_up_mux_reg_1,
    trn_tdst_rdy,
    sys_rst_n_int,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    interrupt_decode,
    \end_point.psr_reg[2]_1 );
  output \tstrb_prev_reg[7] ;
  output tvalid_prev_reg;
  output tlast_prev_reg;
  output reg_tready_reg;
  output trn_teof;
  output [0:0]trn_trem;
  output cc_in_packet_int;
  output axi_in_packet;
  output flush_axi;
  output trn_in_packet_0;
  output cc_in_packet_reg;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0] ;
  output m_axis_cc_tvalid_d50_out;
  output flush_axis_tlp2;
  output sig_m_axis_cc_tready;
  output reg_disable_trn_reg;
  output reg_tready_reg_0;
  output flush_axis_tlp;
  output trn_tsrc_rdy;
  output trn_tsof;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output [63:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input axi_in_packet_reg;
  input user_lnk_up_mux_reg;
  input trn_in_packet_reg;
  input user_lnk_up_mux_reg_0;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input sig_m_axis_cc_tlast;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input user_lnk_up_mux_reg_1;
  input trn_tdst_rdy;
  input sys_rst_n_int;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input [0:0]interrupt_decode;
  input [63:0]\end_point.psr_reg[2]_1 ;

  wire [0:0]SR;
  wire axi_in_packet;
  wire axi_in_packet_reg;
  wire cc_in_packet_int;
  wire cc_in_packet_reg;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire empty_fwft_i_reg;
  wire \end_point.fifo_rd_ptr_reg[0] ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire flush_axi;
  wire flush_axis_tlp;
  wire flush_axis_tlp2;
  wire [63:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire \goreg_bm.dout_i_reg[63] ;
  wire [0:0]interrupt_decode;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire reg_disable_trn_reg;
  wire reg_tready_reg;
  wire reg_tready_reg_0;
  wire request_completed;
  wire \resetovrd.reset_reg[4] ;
  wire [63:0]s_axis_tx_tdata;
  wire [7:7]s_axis_tx_tstrb;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire sys_rst_n_int;
  wire tlast_prev_reg;
  wire trn_in_packet_0;
  wire trn_in_packet_reg;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [0:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire \tstrb_prev_reg[7] ;
  wire tvalid_prev_reg;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx_arbiter tx_arbiter
       (.SR(SR),
        .cc_in_packet_int(cc_in_packet_int),
        .cc_in_packet_reg_0(cc_in_packet_reg),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.fifo_rd_ptr_reg[0]_0 (\end_point.fifo_rd_ptr_reg[0] ),
        .flush_axis_tlp2(flush_axis_tlp2),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .reg_tready_reg(\tstrb_prev_reg[7] ),
        .request_completed(request_completed),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .sys_rst_n_int(sys_rst_n_int),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg_0),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_1));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx_port_mux tx_axi_port_mux
       (.Q(s_axis_tx_tdata),
        .SR(SR),
        .cc_in_packet_int(cc_in_packet_int),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .flush_axis_tlp(flush_axis_tlp),
        .flush_axis_tlp2(flush_axis_tlp2),
        .interrupt_decode(interrupt_decode),
        .reg_tready_reg(reg_tready_reg_0),
        .reg_tready_reg_0(\tstrb_prev_reg[7] ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axis_tx_tstrb(s_axis_tx_tstrb),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sys_rst_n_int(sys_rst_n_int),
        .tlast_prev_reg(tlast_prev_reg),
        .tvalid_prev_reg(tvalid_prev_reg));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx_pipeline tx_pipeline_inst
       (.D(s_axis_tx_tdata),
        .SR(SR),
        .axi_in_packet(axi_in_packet),
        .axi_in_packet_reg_0(axi_in_packet_reg),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\end_point.psr_reg[2] (\goreg_bm.dout_i_reg[63] ),
        .flush_axi(flush_axi),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .reg_disable_trn_reg_0(reg_disable_trn_reg),
        .reg_tready_reg_0(reg_tready_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axis_tx_tlast_d_reg(tlast_prev_reg),
        .s_axis_tx_tlast_d_reg_0(reg_tready_reg_0),
        .s_axis_tx_tstrb(s_axis_tx_tstrb),
        .s_axis_tx_tvalid_d_reg(tvalid_prev_reg),
        .sys_rst_n_int(sys_rst_n_int),
        .trn_in_packet_0(trn_in_packet_0),
        .trn_in_packet_reg_0(trn_in_packet_reg),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem(trn_trem),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy),
        .\tstrb_prev_reg[7]_0 (\tstrb_prev_reg[7] ),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_1));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_tx_arbiter" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx_arbiter
   (cc_in_packet_reg_0,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0]_0 ,
    m_axis_cc_tvalid_d50_out,
    flush_axis_tlp2,
    sig_m_axis_cc_tready,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    SR,
    request_completed,
    \resetovrd.reset_reg[4] ,
    sig_m_axis_cc_tvalid,
    user_lnk_up_mux_reg,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    reg_tready_reg,
    empty_fwft_i_reg,
    sig_m_axis_cc_tlast,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    cc_in_packet_int,
    user_lnk_up_mux_reg_0,
    sys_rst_n_int,
    \data_width_64.cplndtlpsmsig_reg[1] );
  output cc_in_packet_reg_0;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0]_0 ;
  output m_axis_cc_tvalid_d50_out;
  output flush_axis_tlp2;
  output sig_m_axis_cc_tready;
  output \goreg_bm.dout_i_reg[63] ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  input [0:0]SR;
  input request_completed;
  input \resetovrd.reset_reg[4] ;
  input sig_m_axis_cc_tvalid;
  input user_lnk_up_mux_reg;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input reg_tready_reg;
  input empty_fwft_i_reg;
  input sig_m_axis_cc_tlast;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input cc_in_packet_int;
  input user_lnk_up_mux_reg_0;
  input sys_rst_n_int;
  input \data_width_64.cplndtlpsmsig_reg[1] ;

  wire [0:0]SR;
  wire cc_in_packet_int;
  wire cc_in_packet_reg_0;
  wire cc_vld;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire empty_fwft_i_reg;
  wire \end_point.fifo[0][2]_i_1_n_0 ;
  wire \end_point.fifo[1][2]_i_1_n_0 ;
  wire \end_point.fifo[2][2]_i_1_n_0 ;
  wire \end_point.fifo[3][2]_i_1_n_0 ;
  wire \end_point.fifo_rd_ptr[0]_i_1_n_0 ;
  wire \end_point.fifo_rd_ptr[1]_i_1_n_0 ;
  wire \end_point.fifo_rd_ptr_reg[0]_0 ;
  wire \end_point.fifo_rd_ptr_reg_n_0_[0] ;
  wire \end_point.fifo_rd_ptr_reg_n_0_[1] ;
  wire \end_point.fifo_reg_n_0_[0][2] ;
  wire \end_point.fifo_reg_n_0_[1][2] ;
  wire \end_point.fifo_reg_n_0_[2][2] ;
  wire \end_point.fifo_reg_n_0_[3][2] ;
  wire \end_point.fifo_wr_ptr[0]_i_1_n_0 ;
  wire \end_point.fifo_wr_ptr[1]_i_1_n_0 ;
  wire \end_point.fifo_wr_ptr[1]_i_2_n_0 ;
  wire \end_point.fifo_wr_ptr[1]_i_3_n_0 ;
  wire \end_point.fifo_wr_ptr_reg_n_0_[0] ;
  wire \end_point.fifo_wr_ptr_reg_n_0_[1] ;
  wire \end_point.psr[2]_i_1_n_0 ;
  wire \end_point.psr[2]_i_2_n_0 ;
  wire \end_point.psr[2]_i_4_n_0 ;
  wire \end_point.psr[2]_i_5_n_0 ;
  wire \end_point.psr[2]_i_6_n_0 ;
  wire fifo_rd_ptr;
  wire flush_axis_tlp2;
  wire \goreg_bm.dout_i_reg[63] ;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire reg_tready_reg;
  wire request_completed;
  wire request_completed_reg_n_0;
  wire \resetovrd.reset_reg[4] ;
  wire s_axis_cc_tvalid_q;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire sys_rst_n_int;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;

  FDRE cc_in_packet_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(user_lnk_up_mux_reg),
        .Q(cc_in_packet_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'hAA2A0000)) 
    \data_width_64.cplndtargetpipeline[1]_i_2 
       (.I0(reg_tready_reg),
        .I1(fifo_rd_ptr),
        .I2(sig_m_axis_cc_tvalid),
        .I3(cc_in_packet_reg_0),
        .I4(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .O(sig_m_axis_cc_tready));
  LUT6 #(
    .INIT(64'h0880888888880880)) 
    \data_width_64.cplndtargetpipeline[1]_i_3 
       (.I0(request_completed_reg_n_0),
        .I1(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I2(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I3(\end_point.fifo_rd_ptr_reg_n_0_[1] ),
        .I4(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I5(\end_point.fifo_rd_ptr_reg_n_0_[0] ),
        .O(fifo_rd_ptr));
  LUT6 #(
    .INIT(64'h8AAA000000000000)) 
    \data_width_64.data_phase_i_3 
       (.I0(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I1(cc_in_packet_reg_0),
        .I2(sig_m_axis_cc_tvalid),
        .I3(fifo_rd_ptr),
        .I4(reg_tready_reg),
        .I5(empty_fwft_i_reg),
        .O(m_axis_cc_tvalid_d50_out));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[10]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlptag_reg[2][2] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [0]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[11]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlptag_reg[2][3] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [1]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[14]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlptag_reg[2][6] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [2]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[15]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlptag_reg[2][7] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [3]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[16]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][0] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [4]));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[17]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][1] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [5]));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[18]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][2] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [6]));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[19]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][3] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [7]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[23]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][7] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [8]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[24]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][8] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [9]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.m_axis_cc_tdata_h[25]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][9] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [10]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[26]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][10] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [11]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.m_axis_cc_tdata_h[27]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][11] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [12]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[28]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][12] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [13]));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[29]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][13] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [14]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_h[31]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .I1(\data_width_64.tlprequesterid_reg[2][15] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31] [15]));
  LUT6 #(
    .INIT(64'h8088888800000000)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_6 
       (.I0(\data_width_64.m_axis_cc_tvalid_d_reg ),
        .I1(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I2(cc_in_packet_reg_0),
        .I3(sig_m_axis_cc_tvalid),
        .I4(fifo_rd_ptr),
        .I5(reg_tready_reg),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.m_axis_cc_tvalid_nd_i_1 
       (.I0(sig_m_axis_cc_tready),
        .I1(\data_width_64.cplndtlpsmsig_reg[1] ),
        .O(\data_width_64.rdndreqpipelinedecr_reg ));
  LUT6 #(
    .INIT(64'h8AAA0000FFFFFFFF)) 
    \data_width_64.rdreqpipelinedecr_i_4 
       (.I0(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I1(cc_in_packet_reg_0),
        .I2(sig_m_axis_cc_tvalid),
        .I3(fifo_rd_ptr),
        .I4(reg_tready_reg),
        .I5(\data_width_64.m_axis_cc_tvalid_d_reg ),
        .O(\data_width_64.rdreqpipelinedecr_reg ));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    \end_point.fifo[0][2]_i_1 
       (.I0(cc_vld),
        .I1(\end_point.fifo_wr_ptr[1]_i_3_n_0 ),
        .I2(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I3(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I4(\end_point.fifo_reg_n_0_[0][2] ),
        .O(\end_point.fifo[0][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    \end_point.fifo[1][2]_i_1 
       (.I0(cc_vld),
        .I1(\end_point.fifo_wr_ptr[1]_i_3_n_0 ),
        .I2(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I3(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I4(\end_point.fifo_reg_n_0_[1][2] ),
        .O(\end_point.fifo[1][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFF2000)) 
    \end_point.fifo[2][2]_i_1 
       (.I0(cc_vld),
        .I1(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I2(\end_point.fifo_wr_ptr[1]_i_3_n_0 ),
        .I3(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I4(\end_point.fifo_reg_n_0_[2][2] ),
        .O(\end_point.fifo[2][2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \end_point.fifo[3][2]_i_1 
       (.I0(cc_vld),
        .I1(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I2(\end_point.fifo_wr_ptr[1]_i_3_n_0 ),
        .I3(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I4(\end_point.fifo_reg_n_0_[3][2] ),
        .O(\end_point.fifo[3][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h82FFFFFFBE000000)) 
    \end_point.fifo_rd_ptr[0]_i_1 
       (.I0(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I1(\end_point.fifo_rd_ptr_reg_n_0_[1] ),
        .I2(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I3(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I4(request_completed_reg_n_0),
        .I5(\end_point.fifo_rd_ptr_reg_n_0_[0] ),
        .O(\end_point.fifo_rd_ptr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7807788FF00FF00)) 
    \end_point.fifo_rd_ptr[1]_i_1 
       (.I0(request_completed_reg_n_0),
        .I1(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I2(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .I3(\end_point.fifo_rd_ptr_reg_n_0_[1] ),
        .I4(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I5(\end_point.fifo_rd_ptr_reg_n_0_[0] ),
        .O(\end_point.fifo_rd_ptr[1]_i_1_n_0 ));
  FDRE \end_point.fifo_rd_ptr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo_rd_ptr[0]_i_1_n_0 ),
        .Q(\end_point.fifo_rd_ptr_reg_n_0_[0] ),
        .R(\end_point.fifo_wr_ptr[1]_i_1_n_0 ));
  FDRE \end_point.fifo_rd_ptr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo_rd_ptr[1]_i_1_n_0 ),
        .Q(\end_point.fifo_rd_ptr_reg_n_0_[1] ),
        .R(\end_point.fifo_wr_ptr[1]_i_1_n_0 ));
  FDRE \end_point.fifo_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo[0][2]_i_1_n_0 ),
        .Q(\end_point.fifo_reg_n_0_[0][2] ),
        .R(SR));
  FDRE \end_point.fifo_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo[1][2]_i_1_n_0 ),
        .Q(\end_point.fifo_reg_n_0_[1][2] ),
        .R(SR));
  FDRE \end_point.fifo_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo[2][2]_i_1_n_0 ),
        .Q(\end_point.fifo_reg_n_0_[2][2] ),
        .R(SR));
  FDRE \end_point.fifo_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo[3][2]_i_1_n_0 ),
        .Q(\end_point.fifo_reg_n_0_[3][2] ),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \end_point.fifo_wr_ptr[0]_i_1 
       (.I0(\end_point.fifo_wr_ptr[1]_i_3_n_0 ),
        .I1(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .O(\end_point.fifo_wr_ptr[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \end_point.fifo_wr_ptr[1]_i_1 
       (.I0(sys_rst_n_int),
        .I1(user_lnk_up_mux_reg_0),
        .O(\end_point.fifo_wr_ptr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \end_point.fifo_wr_ptr[1]_i_2 
       (.I0(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I1(\end_point.fifo_wr_ptr[1]_i_3_n_0 ),
        .I2(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .O(\end_point.fifo_wr_ptr[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000100030101010)) 
    \end_point.fifo_wr_ptr[1]_i_3 
       (.I0(s_axis_cc_tvalid_q),
        .I1(cc_in_packet_reg_0),
        .I2(sig_m_axis_cc_tvalid),
        .I3(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I4(request_completed_reg_n_0),
        .I5(\end_point.psr[2]_i_2_n_0 ),
        .O(\end_point.fifo_wr_ptr[1]_i_3_n_0 ));
  FDRE \end_point.fifo_wr_ptr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo_wr_ptr[0]_i_1_n_0 ),
        .Q(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .R(\end_point.fifo_wr_ptr[1]_i_1_n_0 ));
  FDRE \end_point.fifo_wr_ptr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.fifo_wr_ptr[1]_i_2_n_0 ),
        .Q(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .R(\end_point.fifo_wr_ptr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E4ECA0EC)) 
    \end_point.psr[2]_i_1 
       (.I0(\end_point.psr[2]_i_2_n_0 ),
        .I1(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I2(cc_vld),
        .I3(request_completed_reg_n_0),
        .I4(\end_point.psr[2]_i_4_n_0 ),
        .I5(\end_point.psr[2]_i_5_n_0 ),
        .O(\end_point.psr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \end_point.psr[2]_i_2 
       (.I0(\end_point.fifo_rd_ptr_reg_n_0_[0] ),
        .I1(\end_point.fifo_wr_ptr_reg_n_0_[0] ),
        .I2(\end_point.fifo_rd_ptr_reg_n_0_[1] ),
        .I3(\end_point.fifo_wr_ptr_reg_n_0_[1] ),
        .O(\end_point.psr[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h20002222)) 
    \end_point.psr[2]_i_3 
       (.I0(sig_m_axis_cc_tvalid),
        .I1(cc_in_packet_reg_0),
        .I2(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I3(request_completed_reg_n_0),
        .I4(s_axis_cc_tvalid_q),
        .O(cc_vld));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \end_point.psr[2]_i_4 
       (.I0(\end_point.fifo_reg_n_0_[3][2] ),
        .I1(\end_point.fifo_reg_n_0_[1][2] ),
        .I2(\end_point.fifo_rd_ptr_reg_n_0_[0] ),
        .I3(\end_point.fifo_reg_n_0_[2][2] ),
        .I4(\end_point.fifo_rd_ptr_reg_n_0_[1] ),
        .I5(\end_point.fifo_reg_n_0_[0][2] ),
        .O(\end_point.psr[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB000FFFF)) 
    \end_point.psr[2]_i_5 
       (.I0(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I1(cc_vld),
        .I2(\end_point.psr[2]_i_2_n_0 ),
        .I3(\end_point.psr[2]_i_6_n_0 ),
        .I4(sys_rst_n_int),
        .O(\end_point.psr[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000FF4500)) 
    \end_point.psr[2]_i_6 
       (.I0(sig_m_axis_cc_tvalid),
        .I1(sig_m_axis_cc_tlast),
        .I2(cc_in_packet_int),
        .I3(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I4(request_completed_reg_n_0),
        .I5(user_lnk_up_mux_reg_0),
        .O(\end_point.psr[2]_i_6_n_0 ));
  FDRE \end_point.psr_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\end_point.psr[2]_i_1_n_0 ),
        .Q(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000D0000000)) 
    flush_axis_tlp_i_3
       (.I0(fifo_rd_ptr),
        .I1(cc_in_packet_reg_0),
        .I2(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I3(reg_tready_reg),
        .I4(sig_m_axis_cc_tvalid),
        .I5(sig_m_axis_cc_tlast),
        .O(flush_axis_tlp2));
  LUT6 #(
    .INIT(64'h888AAA8AAAAAAAAA)) 
    \goreg_bm.dout_i[63]_i_4 
       (.I0(\end_point.fifo_rd_ptr_reg[0]_0 ),
        .I1(cc_in_packet_reg_0),
        .I2(\data_width_64.m_axis_cc_tvalid_d_reg ),
        .I3(m_axis_cc_tdata1),
        .I4(\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .I5(fifo_rd_ptr),
        .O(\goreg_bm.dout_i_reg[63] ));
  FDRE request_completed_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(request_completed),
        .Q(request_completed_reg_n_0),
        .R(SR));
  FDRE s_axis_cc_tvalid_q_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(sig_m_axis_cc_tvalid),
        .Q(s_axis_cc_tvalid_q),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_tx_pipeline" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx_pipeline
   (\tstrb_prev_reg[7]_0 ,
    reg_tready_reg_0,
    trn_teof,
    trn_trem,
    axi_in_packet,
    flush_axi,
    trn_in_packet_0,
    \data_width_64.tlplengthcntr_reg[0] ,
    reg_disable_trn_reg_0,
    trn_tsrc_rdy,
    trn_tsof,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    SR,
    \resetovrd.reset_reg[4] ,
    s_axis_tx_tvalid_d_reg,
    s_axis_tx_tlast_d_reg,
    s_axis_tx_tstrb,
    axi_in_packet_reg_0,
    user_lnk_up_mux_reg,
    trn_in_packet_reg_0,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    trn_tdst_rdy,
    user_lnk_up_mux_reg_0,
    s_axis_tx_tlast_d_reg_0,
    D,
    sys_rst_n_int);
  output \tstrb_prev_reg[7]_0 ;
  output reg_tready_reg_0;
  output trn_teof;
  output [0:0]trn_trem;
  output axi_in_packet;
  output flush_axi;
  output trn_in_packet_0;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output reg_disable_trn_reg_0;
  output trn_tsrc_rdy;
  output trn_tsof;
  output [63:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input s_axis_tx_tvalid_d_reg;
  input s_axis_tx_tlast_d_reg;
  input [0:0]s_axis_tx_tstrb;
  input axi_in_packet_reg_0;
  input user_lnk_up_mux_reg;
  input trn_in_packet_reg_0;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input trn_tdst_rdy;
  input user_lnk_up_mux_reg_0;
  input s_axis_tx_tlast_d_reg_0;
  input [63:0]D;
  input sys_rst_n_int;

  wire [63:0]D;
  wire [0:0]SR;
  wire axi_in_packet;
  wire axi_in_packet_reg_0;
  wire data_hold;
  wire data_prev;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire \end_point.psr_reg[2] ;
  wire flush_axi;
  wire [63:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [63:0]p_1_in;
  wire reg_disable_trn_i_1_n_0;
  wire reg_disable_trn_reg_0;
  wire reg_tlast_i_1__0_n_0;
  wire reg_tready_i_1_n_0;
  wire reg_tready_reg_0;
  wire \reg_tstrb[7]_i_1_n_0 ;
  wire reg_tvalid_i_1_n_0;
  wire reg_tvalid_i_2_n_0;
  wire \resetovrd.reset_reg[4] ;
  wire s_axis_tx_tlast_d_reg;
  wire s_axis_tx_tlast_d_reg_0;
  wire [0:0]s_axis_tx_tstrb;
  wire s_axis_tx_tvalid_d_reg;
  wire sys_rst_n_int;
  wire [63:0]tdata_prev;
  wire tlast_prev;
  wire trn_in_packet_0;
  wire trn_in_packet_reg_0;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [0:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire [7:7]tstrb_prev;
  wire \tstrb_prev_reg[7]_0 ;
  wire tvalid_prev;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;

  FDRE axi_in_packet_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(axi_in_packet_reg_0),
        .Q(axi_in_packet),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h04)) 
    data_prev_i_1__0
       (.I0(reg_disable_trn_reg_0),
        .I1(reg_tready_reg_0),
        .I2(trn_tdst_rdy),
        .O(data_hold));
  FDRE data_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(data_hold),
        .Q(data_prev),
        .R(SR));
  LUT4 #(
    .INIT(16'hFF80)) 
    \data_width_64.tlplengthcntr[9]_i_12 
       (.I0(\tstrb_prev_reg[7]_0 ),
        .I1(\end_point.psr_reg[2] ),
        .I2(\data_width_64.m_axis_cc_tvalid_d_reg ),
        .I3(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr_reg[0] ));
  FDRE flush_axi_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(user_lnk_up_mux_reg),
        .Q(flush_axi),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    pcie_block_i_i_7
       (.I0(reg_tready_reg_0),
        .I1(trn_in_packet_0),
        .O(trn_tsof));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pcie_block_i_i_8
       (.I0(reg_tready_reg_0),
        .I1(reg_disable_trn_reg_0),
        .O(trn_tsrc_rdy));
  LUT5 #(
    .INIT(32'hD0FFFFFF)) 
    reg_disable_trn_i_1
       (.I0(\tstrb_prev_reg[7]_0 ),
        .I1(flush_axi),
        .I2(reg_disable_trn_reg_0),
        .I3(user_lnk_up_mux_reg_0),
        .I4(sys_rst_n_int),
        .O(reg_disable_trn_i_1_n_0));
  FDRE reg_disable_trn_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(reg_disable_trn_i_1_n_0),
        .Q(reg_disable_trn_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[0]_i_1 
       (.I0(tdata_prev[0]),
        .I1(data_prev),
        .I2(D[0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[10]_i_1 
       (.I0(tdata_prev[10]),
        .I1(data_prev),
        .I2(D[10]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[11]_i_1 
       (.I0(tdata_prev[11]),
        .I1(data_prev),
        .I2(D[11]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[12]_i_1 
       (.I0(tdata_prev[12]),
        .I1(data_prev),
        .I2(D[12]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[13]_i_1 
       (.I0(tdata_prev[13]),
        .I1(data_prev),
        .I2(D[13]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[14]_i_1 
       (.I0(tdata_prev[14]),
        .I1(data_prev),
        .I2(D[14]),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[15]_i_1 
       (.I0(tdata_prev[15]),
        .I1(data_prev),
        .I2(D[15]),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[16]_i_1 
       (.I0(tdata_prev[16]),
        .I1(data_prev),
        .I2(D[16]),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[17]_i_1 
       (.I0(tdata_prev[17]),
        .I1(data_prev),
        .I2(D[17]),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[18]_i_1 
       (.I0(tdata_prev[18]),
        .I1(data_prev),
        .I2(D[18]),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[19]_i_1 
       (.I0(tdata_prev[19]),
        .I1(data_prev),
        .I2(D[19]),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[1]_i_1 
       (.I0(tdata_prev[1]),
        .I1(data_prev),
        .I2(D[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[20]_i_1 
       (.I0(tdata_prev[20]),
        .I1(data_prev),
        .I2(D[20]),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[21]_i_1 
       (.I0(tdata_prev[21]),
        .I1(data_prev),
        .I2(D[21]),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[22]_i_1 
       (.I0(tdata_prev[22]),
        .I1(data_prev),
        .I2(D[22]),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[23]_i_1 
       (.I0(tdata_prev[23]),
        .I1(data_prev),
        .I2(D[23]),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[24]_i_1 
       (.I0(tdata_prev[24]),
        .I1(data_prev),
        .I2(D[24]),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[25]_i_1 
       (.I0(tdata_prev[25]),
        .I1(data_prev),
        .I2(D[25]),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[26]_i_1 
       (.I0(tdata_prev[26]),
        .I1(data_prev),
        .I2(D[26]),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[27]_i_1 
       (.I0(tdata_prev[27]),
        .I1(data_prev),
        .I2(D[27]),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[28]_i_1 
       (.I0(tdata_prev[28]),
        .I1(data_prev),
        .I2(D[28]),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[29]_i_1 
       (.I0(tdata_prev[29]),
        .I1(data_prev),
        .I2(D[29]),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[2]_i_1 
       (.I0(tdata_prev[2]),
        .I1(data_prev),
        .I2(D[2]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[30]_i_1 
       (.I0(tdata_prev[30]),
        .I1(data_prev),
        .I2(D[30]),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[31]_i_1 
       (.I0(tdata_prev[31]),
        .I1(data_prev),
        .I2(D[31]),
        .O(p_1_in[31]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[32]_i_1 
       (.I0(tdata_prev[32]),
        .I1(data_prev),
        .I2(D[32]),
        .O(p_1_in[32]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[33]_i_1 
       (.I0(tdata_prev[33]),
        .I1(data_prev),
        .I2(D[33]),
        .O(p_1_in[33]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[34]_i_1 
       (.I0(tdata_prev[34]),
        .I1(data_prev),
        .I2(D[34]),
        .O(p_1_in[34]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[35]_i_1 
       (.I0(tdata_prev[35]),
        .I1(data_prev),
        .I2(D[35]),
        .O(p_1_in[35]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[36]_i_1 
       (.I0(tdata_prev[36]),
        .I1(data_prev),
        .I2(D[36]),
        .O(p_1_in[36]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[37]_i_1 
       (.I0(tdata_prev[37]),
        .I1(data_prev),
        .I2(D[37]),
        .O(p_1_in[37]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[38]_i_1 
       (.I0(tdata_prev[38]),
        .I1(data_prev),
        .I2(D[38]),
        .O(p_1_in[38]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[39]_i_1 
       (.I0(tdata_prev[39]),
        .I1(data_prev),
        .I2(D[39]),
        .O(p_1_in[39]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[3]_i_1 
       (.I0(tdata_prev[3]),
        .I1(data_prev),
        .I2(D[3]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[40]_i_1 
       (.I0(tdata_prev[40]),
        .I1(data_prev),
        .I2(D[40]),
        .O(p_1_in[40]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[41]_i_1 
       (.I0(tdata_prev[41]),
        .I1(data_prev),
        .I2(D[41]),
        .O(p_1_in[41]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[42]_i_1 
       (.I0(tdata_prev[42]),
        .I1(data_prev),
        .I2(D[42]),
        .O(p_1_in[42]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[43]_i_1 
       (.I0(tdata_prev[43]),
        .I1(data_prev),
        .I2(D[43]),
        .O(p_1_in[43]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[44]_i_1 
       (.I0(tdata_prev[44]),
        .I1(data_prev),
        .I2(D[44]),
        .O(p_1_in[44]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[45]_i_1 
       (.I0(tdata_prev[45]),
        .I1(data_prev),
        .I2(D[45]),
        .O(p_1_in[45]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[46]_i_1 
       (.I0(tdata_prev[46]),
        .I1(data_prev),
        .I2(D[46]),
        .O(p_1_in[46]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[47]_i_1 
       (.I0(tdata_prev[47]),
        .I1(data_prev),
        .I2(D[47]),
        .O(p_1_in[47]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[48]_i_1 
       (.I0(tdata_prev[48]),
        .I1(data_prev),
        .I2(D[48]),
        .O(p_1_in[48]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[49]_i_1 
       (.I0(tdata_prev[49]),
        .I1(data_prev),
        .I2(D[49]),
        .O(p_1_in[49]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[4]_i_1 
       (.I0(tdata_prev[4]),
        .I1(data_prev),
        .I2(D[4]),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[50]_i_1 
       (.I0(tdata_prev[50]),
        .I1(data_prev),
        .I2(D[50]),
        .O(p_1_in[50]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[51]_i_1 
       (.I0(tdata_prev[51]),
        .I1(data_prev),
        .I2(D[51]),
        .O(p_1_in[51]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[52]_i_1 
       (.I0(tdata_prev[52]),
        .I1(data_prev),
        .I2(D[52]),
        .O(p_1_in[52]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[53]_i_1 
       (.I0(tdata_prev[53]),
        .I1(data_prev),
        .I2(D[53]),
        .O(p_1_in[53]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[54]_i_1 
       (.I0(tdata_prev[54]),
        .I1(data_prev),
        .I2(D[54]),
        .O(p_1_in[54]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[55]_i_1 
       (.I0(tdata_prev[55]),
        .I1(data_prev),
        .I2(D[55]),
        .O(p_1_in[55]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[56]_i_1 
       (.I0(tdata_prev[56]),
        .I1(data_prev),
        .I2(D[56]),
        .O(p_1_in[56]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[57]_i_1 
       (.I0(tdata_prev[57]),
        .I1(data_prev),
        .I2(D[57]),
        .O(p_1_in[57]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[58]_i_1 
       (.I0(tdata_prev[58]),
        .I1(data_prev),
        .I2(D[58]),
        .O(p_1_in[58]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[59]_i_1 
       (.I0(tdata_prev[59]),
        .I1(data_prev),
        .I2(D[59]),
        .O(p_1_in[59]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[5]_i_1 
       (.I0(tdata_prev[5]),
        .I1(data_prev),
        .I2(D[5]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[60]_i_1 
       (.I0(tdata_prev[60]),
        .I1(data_prev),
        .I2(D[60]),
        .O(p_1_in[60]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[61]_i_1 
       (.I0(tdata_prev[61]),
        .I1(data_prev),
        .I2(D[61]),
        .O(p_1_in[61]));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[62]_i_1 
       (.I0(tdata_prev[62]),
        .I1(data_prev),
        .I2(D[62]),
        .O(p_1_in[62]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[63]_i_1 
       (.I0(tdata_prev[63]),
        .I1(data_prev),
        .I2(D[63]),
        .O(p_1_in[63]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[6]_i_1 
       (.I0(tdata_prev[6]),
        .I1(data_prev),
        .I2(D[6]),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[7]_i_1 
       (.I0(tdata_prev[7]),
        .I1(data_prev),
        .I2(D[7]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[8]_i_1 
       (.I0(tdata_prev[8]),
        .I1(data_prev),
        .I2(D[8]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tdata[9]_i_1 
       (.I0(tdata_prev[9]),
        .I1(data_prev),
        .I2(D[9]),
        .O(p_1_in[9]));
  FDRE \reg_tdata_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[0]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [0]),
        .R(SR));
  FDRE \reg_tdata_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[10]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [10]),
        .R(SR));
  FDRE \reg_tdata_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[11]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [11]),
        .R(SR));
  FDRE \reg_tdata_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[12]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [12]),
        .R(SR));
  FDRE \reg_tdata_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[13]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [13]),
        .R(SR));
  FDRE \reg_tdata_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[14]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [14]),
        .R(SR));
  FDRE \reg_tdata_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[15]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [15]),
        .R(SR));
  FDRE \reg_tdata_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[16]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [16]),
        .R(SR));
  FDRE \reg_tdata_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[17]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [17]),
        .R(SR));
  FDRE \reg_tdata_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[18]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [18]),
        .R(SR));
  FDRE \reg_tdata_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[19]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [19]),
        .R(SR));
  FDRE \reg_tdata_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[1]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [1]),
        .R(SR));
  FDRE \reg_tdata_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[20]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [20]),
        .R(SR));
  FDRE \reg_tdata_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[21]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [21]),
        .R(SR));
  FDRE \reg_tdata_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[22]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [22]),
        .R(SR));
  FDRE \reg_tdata_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[23]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [23]),
        .R(SR));
  FDRE \reg_tdata_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[24]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [24]),
        .R(SR));
  FDRE \reg_tdata_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[25]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [25]),
        .R(SR));
  FDRE \reg_tdata_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[26]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [26]),
        .R(SR));
  FDRE \reg_tdata_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[27]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [27]),
        .R(SR));
  FDRE \reg_tdata_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[28]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [28]),
        .R(SR));
  FDRE \reg_tdata_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[29]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [29]),
        .R(SR));
  FDRE \reg_tdata_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[2]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [2]),
        .R(SR));
  FDRE \reg_tdata_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[30]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [30]),
        .R(SR));
  FDRE \reg_tdata_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[31]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [31]),
        .R(SR));
  FDRE \reg_tdata_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[32]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [32]),
        .R(SR));
  FDRE \reg_tdata_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[33]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [33]),
        .R(SR));
  FDRE \reg_tdata_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[34]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [34]),
        .R(SR));
  FDRE \reg_tdata_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[35]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [35]),
        .R(SR));
  FDRE \reg_tdata_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[36]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [36]),
        .R(SR));
  FDRE \reg_tdata_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[37]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [37]),
        .R(SR));
  FDRE \reg_tdata_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[38]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [38]),
        .R(SR));
  FDRE \reg_tdata_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[39]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [39]),
        .R(SR));
  FDRE \reg_tdata_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[3]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [3]),
        .R(SR));
  FDRE \reg_tdata_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[40]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [40]),
        .R(SR));
  FDRE \reg_tdata_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[41]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [41]),
        .R(SR));
  FDRE \reg_tdata_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[42]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [42]),
        .R(SR));
  FDRE \reg_tdata_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[43]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [43]),
        .R(SR));
  FDRE \reg_tdata_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[44]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [44]),
        .R(SR));
  FDRE \reg_tdata_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[45]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [45]),
        .R(SR));
  FDRE \reg_tdata_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[46]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [46]),
        .R(SR));
  FDRE \reg_tdata_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[47]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [47]),
        .R(SR));
  FDRE \reg_tdata_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[48]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [48]),
        .R(SR));
  FDRE \reg_tdata_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[49]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [49]),
        .R(SR));
  FDRE \reg_tdata_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[4]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [4]),
        .R(SR));
  FDRE \reg_tdata_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[50]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [50]),
        .R(SR));
  FDRE \reg_tdata_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[51]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [51]),
        .R(SR));
  FDRE \reg_tdata_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[52]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [52]),
        .R(SR));
  FDRE \reg_tdata_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[53]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [53]),
        .R(SR));
  FDRE \reg_tdata_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[54]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [54]),
        .R(SR));
  FDRE \reg_tdata_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[55]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [55]),
        .R(SR));
  FDRE \reg_tdata_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[56]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [56]),
        .R(SR));
  FDRE \reg_tdata_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[57]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [57]),
        .R(SR));
  FDRE \reg_tdata_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[58]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [58]),
        .R(SR));
  FDRE \reg_tdata_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[59]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [59]),
        .R(SR));
  FDRE \reg_tdata_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[5]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [5]),
        .R(SR));
  FDRE \reg_tdata_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[60]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [60]),
        .R(SR));
  FDRE \reg_tdata_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[61]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [61]),
        .R(SR));
  FDRE \reg_tdata_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[62]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [62]),
        .R(SR));
  FDRE \reg_tdata_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[63]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [63]),
        .R(SR));
  FDRE \reg_tdata_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[6]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [6]),
        .R(SR));
  FDRE \reg_tdata_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[7]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [7]),
        .R(SR));
  FDRE \reg_tdata_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[8]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [8]),
        .R(SR));
  FDRE \reg_tdata_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(p_1_in[9]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    reg_tlast_i_1__0
       (.I0(tlast_prev),
        .I1(data_prev),
        .I2(s_axis_tx_tlast_d_reg),
        .O(reg_tlast_i_1__0_n_0));
  FDRE reg_tlast_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(reg_tlast_i_1__0_n_0),
        .Q(trn_teof),
        .R(SR));
  LUT6 #(
    .INIT(64'hFB00FFFFFB00FB00)) 
    reg_tready_i_1
       (.I0(reg_disable_trn_reg_0),
        .I1(reg_tready_reg_0),
        .I2(trn_tdst_rdy),
        .I3(user_lnk_up_mux_reg_0),
        .I4(s_axis_tx_tlast_d_reg_0),
        .I5(flush_axi),
        .O(reg_tready_i_1_n_0));
  FDRE reg_tready_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(reg_tready_i_1_n_0),
        .Q(\tstrb_prev_reg[7]_0 ),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    \reg_tstrb[7]_i_1 
       (.I0(tstrb_prev),
        .I1(data_prev),
        .I2(s_axis_tx_tstrb),
        .O(\reg_tstrb[7]_i_1_n_0 ));
  FDRE \reg_tstrb_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(\reg_tstrb[7]_i_1_n_0 ),
        .Q(trn_trem),
        .R(SR));
  LUT3 #(
    .INIT(8'hFB)) 
    reg_tvalid_i_1
       (.I0(trn_tdst_rdy),
        .I1(reg_tready_reg_0),
        .I2(reg_disable_trn_reg_0),
        .O(reg_tvalid_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    reg_tvalid_i_2
       (.I0(tvalid_prev),
        .I1(data_prev),
        .I2(s_axis_tx_tvalid_d_reg),
        .O(reg_tvalid_i_2_n_0));
  FDRE reg_tvalid_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tvalid_i_1_n_0),
        .D(reg_tvalid_i_2_n_0),
        .Q(reg_tready_reg_0),
        .R(SR));
  FDRE \tdata_prev_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[0]),
        .Q(tdata_prev[0]),
        .R(SR));
  FDRE \tdata_prev_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[10]),
        .Q(tdata_prev[10]),
        .R(SR));
  FDRE \tdata_prev_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[11]),
        .Q(tdata_prev[11]),
        .R(SR));
  FDRE \tdata_prev_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[12]),
        .Q(tdata_prev[12]),
        .R(SR));
  FDRE \tdata_prev_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[13]),
        .Q(tdata_prev[13]),
        .R(SR));
  FDRE \tdata_prev_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[14]),
        .Q(tdata_prev[14]),
        .R(SR));
  FDRE \tdata_prev_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[15]),
        .Q(tdata_prev[15]),
        .R(SR));
  FDRE \tdata_prev_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[16]),
        .Q(tdata_prev[16]),
        .R(SR));
  FDRE \tdata_prev_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[17]),
        .Q(tdata_prev[17]),
        .R(SR));
  FDRE \tdata_prev_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[18]),
        .Q(tdata_prev[18]),
        .R(SR));
  FDRE \tdata_prev_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[19]),
        .Q(tdata_prev[19]),
        .R(SR));
  FDRE \tdata_prev_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[1]),
        .Q(tdata_prev[1]),
        .R(SR));
  FDRE \tdata_prev_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[20]),
        .Q(tdata_prev[20]),
        .R(SR));
  FDRE \tdata_prev_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[21]),
        .Q(tdata_prev[21]),
        .R(SR));
  FDRE \tdata_prev_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[22]),
        .Q(tdata_prev[22]),
        .R(SR));
  FDRE \tdata_prev_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[23]),
        .Q(tdata_prev[23]),
        .R(SR));
  FDRE \tdata_prev_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[24]),
        .Q(tdata_prev[24]),
        .R(SR));
  FDRE \tdata_prev_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[25]),
        .Q(tdata_prev[25]),
        .R(SR));
  FDRE \tdata_prev_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[26]),
        .Q(tdata_prev[26]),
        .R(SR));
  FDRE \tdata_prev_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[27]),
        .Q(tdata_prev[27]),
        .R(SR));
  FDRE \tdata_prev_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[28]),
        .Q(tdata_prev[28]),
        .R(SR));
  FDRE \tdata_prev_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[29]),
        .Q(tdata_prev[29]),
        .R(SR));
  FDRE \tdata_prev_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[2]),
        .Q(tdata_prev[2]),
        .R(SR));
  FDRE \tdata_prev_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[30]),
        .Q(tdata_prev[30]),
        .R(SR));
  FDRE \tdata_prev_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[31]),
        .Q(tdata_prev[31]),
        .R(SR));
  FDRE \tdata_prev_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[32]),
        .Q(tdata_prev[32]),
        .R(SR));
  FDRE \tdata_prev_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[33]),
        .Q(tdata_prev[33]),
        .R(SR));
  FDRE \tdata_prev_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[34]),
        .Q(tdata_prev[34]),
        .R(SR));
  FDRE \tdata_prev_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[35]),
        .Q(tdata_prev[35]),
        .R(SR));
  FDRE \tdata_prev_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[36]),
        .Q(tdata_prev[36]),
        .R(SR));
  FDRE \tdata_prev_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[37]),
        .Q(tdata_prev[37]),
        .R(SR));
  FDRE \tdata_prev_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[38]),
        .Q(tdata_prev[38]),
        .R(SR));
  FDRE \tdata_prev_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[39]),
        .Q(tdata_prev[39]),
        .R(SR));
  FDRE \tdata_prev_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[3]),
        .Q(tdata_prev[3]),
        .R(SR));
  FDRE \tdata_prev_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[40]),
        .Q(tdata_prev[40]),
        .R(SR));
  FDRE \tdata_prev_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[41]),
        .Q(tdata_prev[41]),
        .R(SR));
  FDRE \tdata_prev_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[42]),
        .Q(tdata_prev[42]),
        .R(SR));
  FDRE \tdata_prev_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[43]),
        .Q(tdata_prev[43]),
        .R(SR));
  FDRE \tdata_prev_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[44]),
        .Q(tdata_prev[44]),
        .R(SR));
  FDRE \tdata_prev_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[45]),
        .Q(tdata_prev[45]),
        .R(SR));
  FDRE \tdata_prev_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[46]),
        .Q(tdata_prev[46]),
        .R(SR));
  FDRE \tdata_prev_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[47]),
        .Q(tdata_prev[47]),
        .R(SR));
  FDRE \tdata_prev_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[48]),
        .Q(tdata_prev[48]),
        .R(SR));
  FDRE \tdata_prev_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[49]),
        .Q(tdata_prev[49]),
        .R(SR));
  FDRE \tdata_prev_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[4]),
        .Q(tdata_prev[4]),
        .R(SR));
  FDRE \tdata_prev_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[50]),
        .Q(tdata_prev[50]),
        .R(SR));
  FDRE \tdata_prev_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[51]),
        .Q(tdata_prev[51]),
        .R(SR));
  FDRE \tdata_prev_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[52]),
        .Q(tdata_prev[52]),
        .R(SR));
  FDRE \tdata_prev_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[53]),
        .Q(tdata_prev[53]),
        .R(SR));
  FDRE \tdata_prev_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[54]),
        .Q(tdata_prev[54]),
        .R(SR));
  FDRE \tdata_prev_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[55]),
        .Q(tdata_prev[55]),
        .R(SR));
  FDRE \tdata_prev_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[56]),
        .Q(tdata_prev[56]),
        .R(SR));
  FDRE \tdata_prev_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[57]),
        .Q(tdata_prev[57]),
        .R(SR));
  FDRE \tdata_prev_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[58]),
        .Q(tdata_prev[58]),
        .R(SR));
  FDRE \tdata_prev_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[59]),
        .Q(tdata_prev[59]),
        .R(SR));
  FDRE \tdata_prev_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[5]),
        .Q(tdata_prev[5]),
        .R(SR));
  FDRE \tdata_prev_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[60]),
        .Q(tdata_prev[60]),
        .R(SR));
  FDRE \tdata_prev_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[61]),
        .Q(tdata_prev[61]),
        .R(SR));
  FDRE \tdata_prev_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[62]),
        .Q(tdata_prev[62]),
        .R(SR));
  FDRE \tdata_prev_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[63]),
        .Q(tdata_prev[63]),
        .R(SR));
  FDRE \tdata_prev_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[6]),
        .Q(tdata_prev[6]),
        .R(SR));
  FDRE \tdata_prev_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[7]),
        .Q(tdata_prev[7]),
        .R(SR));
  FDRE \tdata_prev_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[8]),
        .Q(tdata_prev[8]),
        .R(SR));
  FDRE \tdata_prev_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(D[9]),
        .Q(tdata_prev[9]),
        .R(SR));
  FDRE tlast_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(s_axis_tx_tlast_d_reg),
        .Q(tlast_prev),
        .R(SR));
  FDRE trn_in_packet_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(trn_in_packet_reg_0),
        .Q(trn_in_packet_0),
        .R(SR));
  FDRE \tstrb_prev_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(s_axis_tx_tstrb),
        .Q(tstrb_prev),
        .R(SR));
  FDRE tvalid_prev_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tstrb_prev_reg[7]_0 ),
        .D(s_axis_tx_tvalid_d_reg),
        .Q(tvalid_prev),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_enhanced_tx_port_mux" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_tx_port_mux
   (tvalid_prev_reg,
    tlast_prev_reg,
    s_axis_tx_tstrb,
    cc_in_packet_int,
    reg_tready_reg,
    flush_axis_tlp,
    Q,
    SR,
    reg_tready_reg_0,
    \end_point.psr_reg[2] ,
    \resetovrd.reset_reg[4] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    sys_rst_n_int,
    interrupt_decode,
    flush_axis_tlp2,
    sig_m_axis_cc_tlast,
    \end_point.psr_reg[2]_1 );
  output tvalid_prev_reg;
  output tlast_prev_reg;
  output [0:0]s_axis_tx_tstrb;
  output cc_in_packet_int;
  output reg_tready_reg;
  output flush_axis_tlp;
  output [63:0]Q;
  input [0:0]SR;
  input reg_tready_reg_0;
  input \end_point.psr_reg[2] ;
  input \resetovrd.reset_reg[4] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input sys_rst_n_int;
  input [0:0]interrupt_decode;
  input flush_axis_tlp2;
  input sig_m_axis_cc_tlast;
  input [63:0]\end_point.psr_reg[2]_1 ;

  wire [63:0]Q;
  wire [0:0]SR;
  wire cc_in_packet_int;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire flush_axis_tlp;
  wire flush_axis_tlp2;
  wire flush_axis_tlp_i_1_n_0;
  wire [0:0]interrupt_decode;
  wire reg_tready_reg;
  wire reg_tready_reg_0;
  wire \resetovrd.reset_reg[4] ;
  wire [0:0]s_axis_tx_tstrb;
  wire sig_m_axis_cc_tlast;
  wire sys_rst_n_int;
  wire tlast_prev_reg;
  wire tvalid_prev_reg;

  FDRE cc_in_packet_int_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .Q(cc_in_packet_int),
        .R(SR));
  LUT6 #(
    .INIT(64'hE2A2E2E2E2A2E2A2)) 
    flush_axis_tlp_i_1
       (.I0(flush_axis_tlp),
        .I1(sys_rst_n_int),
        .I2(interrupt_decode),
        .I3(flush_axis_tlp2),
        .I4(sig_m_axis_cc_tlast),
        .I5(cc_in_packet_int),
        .O(flush_axis_tlp_i_1_n_0));
  FDRE flush_axis_tlp_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(flush_axis_tlp_i_1_n_0),
        .Q(flush_axis_tlp),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hAA80)) 
    reg_tready_i_2
       (.I0(tlast_prev_reg),
        .I1(tvalid_prev_reg),
        .I2(reg_tready_reg_0),
        .I3(flush_axis_tlp),
        .O(reg_tready_reg));
  FDRE \s_axis_tx_tdata_d_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [16]),
        .Q(Q[16]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [17]),
        .Q(Q[17]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [18]),
        .Q(Q[18]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [19]),
        .Q(Q[19]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [20]),
        .Q(Q[20]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [21]),
        .Q(Q[21]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [22]),
        .Q(Q[22]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [23]),
        .Q(Q[23]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [24]),
        .Q(Q[24]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [25]),
        .Q(Q[25]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [26]),
        .Q(Q[26]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [27]),
        .Q(Q[27]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [28]),
        .Q(Q[28]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [29]),
        .Q(Q[29]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [30]),
        .Q(Q[30]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [31]),
        .Q(Q[31]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [32]),
        .Q(Q[32]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [33]),
        .Q(Q[33]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [34]),
        .Q(Q[34]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [35]),
        .Q(Q[35]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [36]),
        .Q(Q[36]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [37]),
        .Q(Q[37]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [38]),
        .Q(Q[38]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [39]),
        .Q(Q[39]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [40]),
        .Q(Q[40]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [41]),
        .Q(Q[41]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [42]),
        .Q(Q[42]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [43]),
        .Q(Q[43]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [44]),
        .Q(Q[44]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [45]),
        .Q(Q[45]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [46]),
        .Q(Q[46]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [47]),
        .Q(Q[47]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [48]),
        .Q(Q[48]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [49]),
        .Q(Q[49]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [50]),
        .Q(Q[50]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [51]),
        .Q(Q[51]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [52]),
        .Q(Q[52]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [53]),
        .Q(Q[53]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [54]),
        .Q(Q[54]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [55]),
        .Q(Q[55]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [56]),
        .Q(Q[56]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [57]),
        .Q(Q[57]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [58]),
        .Q(Q[58]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [59]),
        .Q(Q[59]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [60]),
        .Q(Q[60]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [61]),
        .Q(Q[61]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [62]),
        .Q(Q[62]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [63]),
        .Q(Q[63]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \s_axis_tx_tdata_d_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_1 [9]),
        .Q(Q[9]),
        .R(SR));
  FDRE s_axis_tx_tlast_d_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\data_width_64.m_axis_cc_tlast_d_reg ),
        .Q(tlast_prev_reg),
        .R(SR));
  FDRE \s_axis_tx_tstrb_d_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2]_0 ),
        .Q(s_axis_tx_tstrb),
        .R(SR));
  FDRE s_axis_tx_tvalid_d_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(reg_tready_reg_0),
        .D(\end_point.psr_reg[2] ),
        .Q(tvalid_prev_reg),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_lite_ipif" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_lite_ipif
   (IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    s_axi_ctl_rvalid_ipic_bridge,
    s_axi_ctl_bvalid_ipic_bridge,
    S_AXI_RDATA,
    out,
    \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ,
    sig_IP2Bus_RdAck,
    sys_rst_n_int,
    s_axi_ctl_rready_ipic_bridge,
    \resetovrd.reset_reg[4] ,
    sig_IP2Bus_WrAck,
    s_axi_ctl_bready_ipic_bridge,
    SR,
    \IP2Bus_Data_reg[31] ,
    s_axi_ctl_wvalid_ipic_bridge,
    s_axi_ctl_awvalid_ipic_bridge);
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output s_axi_ctl_rvalid_ipic_bridge;
  output s_axi_ctl_bvalid_ipic_bridge;
  output [31:0]S_AXI_RDATA;
  input [0:0]out;
  input \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ;
  input sig_IP2Bus_RdAck;
  input sys_rst_n_int;
  input s_axi_ctl_rready_ipic_bridge;
  input \resetovrd.reset_reg[4] ;
  input sig_IP2Bus_WrAck;
  input s_axi_ctl_bready_ipic_bridge;
  input [0:0]SR;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input s_axi_ctl_wvalid_ipic_bridge;
  input s_axi_ctl_awvalid_ipic_bridge;

  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire [0:0]SR;
  wire [31:0]S_AXI_RDATA;
  wire \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire s_axi_ctl_awvalid_ipic_bridge;
  wire s_axi_ctl_bready_ipic_bridge;
  wire s_axi_ctl_bvalid_ipic_bridge;
  wire s_axi_ctl_rready_ipic_bridge;
  wire s_axi_ctl_rvalid_ipic_bridge;
  wire s_axi_ctl_wvalid_ipic_bridge;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sys_rst_n_int;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_slave_attachment I_SLAVE_ATTACHMENT
       (.\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg_0),
        .SR(SR),
        .S_AXI_RDATA(S_AXI_RDATA),
        .\end_point.s_axi_ctl_arvalid_ipic_bridge_reg (\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_awvalid_ipic_bridge(s_axi_ctl_awvalid_ipic_bridge),
        .s_axi_ctl_bready_ipic_bridge(s_axi_ctl_bready_ipic_bridge),
        .s_axi_ctl_bvalid_ipic_bridge(s_axi_ctl_bvalid_ipic_bridge),
        .s_axi_ctl_rready_ipic_bridge(s_axi_ctl_rready_ipic_bridge),
        .s_axi_ctl_rvalid_ipic_bridge(s_axi_ctl_rvalid_ipic_bridge),
        .s_axi_ctl_wvalid_ipic_bridge(s_axi_ctl_wvalid_ipic_bridge),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sys_rst_n_int(sys_rst_n_int));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_axi_pcie_enhanced_core_top" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_pcie_enhanced_core_top
   (clk_txoutclk,
    int_oobclk_out,
    int_pclk_out_slave,
    CLK,
    int_userclk1_out,
    mmcm_lock,
    \int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    pipe_rxsyncdone,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_rxdisperr,
    pipe_rxnotintable,
    out0,
    m_axis_cr_tlast_reg,
    \m_axis_cw_tuser_reg[2] ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    \tstrb_prev_reg[7] ,
    IP2Bus_WrAck_reg,
    \end_point.trn_lnk_up_d_reg ,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    s_axi_ctl_wready,
    pclk_sel_reg1_reg,
    pipe_rate_idle,
    in0,
    pipe_rst_idle,
    pipe_sync_fsm_rx,
    IP2Bus_WrAck_reg_0,
    IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \rd_req_32_64.rdndreqpipeline_reg[0] ,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0] ,
    m_axis_cc_tvalid_d50_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    \ctlplength_reg[2,0][0] ,
    cfg_dev_control_max_payload,
    \length_offset_reg[11] ,
    p_3_in,
    badreadreq,
    \ctlplength_reg[1,3][8] ,
    p_0_in1_in,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \ctlpbytecount_reg[1,0][11] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    sig_m_axis_cc_tready,
    sig_s_axis_cw_tvalid,
    \data_width_64.tlpcompleterid_reg[2][7] ,
    \data_width_64.tlpcompleterid_reg[2][15] ,
    interrupt_out,
    \sig_blk_interrupt_di_reg[7] ,
    legint_msiSM_reg,
    cfg_interrupt_msienable,
    \sig_blk_interrupt_di_reg[4] ,
    \sig_blk_interrupt_di_reg[3] ,
    \sig_blk_interrupt_di_reg[2] ,
    \sig_blk_interrupt_di_reg[1] ,
    \sig_blk_interrupt_di_reg[0] ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \ctlplength_reg[2,3][9] ,
    \ctlplength_reg[2,2][9] ,
    \ctlplength_reg[2,1][9] ,
    \ctlplength_reg[2,0][9] ,
    cpldsplitcount0_out,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    pipe_rst_fsm,
    \data_width_64.dataoffset_reg ,
    \sig_bus2ip_ce_reg_reg[3] ,
    sig_blk_interrupt_assert_reg,
    INTX_state_reg,
    sig_intx_msi_grant_reg,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    legint_msiSM_reg_0,
    \pipe_rate_fsm[3] ,
    \pipe_drp_fsm[2] ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \data_width_64.tlpcompleterid_reg[2][2] ,
    gt_ch_drp_rdy,
    \pipe_qrst_fsm[0] ,
    pipe_qrst_fsm,
    pipe_qrst_idle,
    MSI_Vector_Width,
    REFCLK,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rxprbscntreset,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    pipe_loopback,
    pipe_rxprbssel,
    pipe_txprbssel,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    s_axi_ctl_wdata,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tlast_nd_reg ,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    int_pclk_sel_slave,
    axi_aresetn,
    out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    O,
    \data_width_64.tlplength_reg[3][6] ,
    neqOp_0,
    \data_width_64.tlplength_reg[3][7] ,
    \data_width_64.tlplength_reg[3][7]_0 ,
    \data_width_64.tlplength_reg[3][6]_0 ,
    \data_width_64.tlplength_reg[3][6]_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \data_width_64.tlplength_reg[3][7]_1 ,
    \data_width_64.tlplength_reg[3][7]_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[10] ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[10]_1 ,
    \length_offset_reg[8] ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[6] ,
    R,
    \ctargetpipeline_reg[1] ,
    \ctargetpipeline_reg[1]_0 ,
    \ctargetpipeline_reg[1]_1 ,
    \ctargetpipeline_reg[1]_2 ,
    \ctargetpipeline_reg[1]_3 ,
    \ctargetpipeline_reg[1]_4 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    sig_m_axis_cc_tlast,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    s_axi_ctl_awaddr,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    sig_IP2Bus_RdAck,
    cfg_interrupt_di,
    INTX_state_reg_0,
    sig_blk_interrupt,
    intx_msi_request_2d,
    intx_msi_request_3d,
    INTX_state,
    INTX_MSI_Request,
    \msi_vector_num_2d_reg[4] ,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctargetpipeline_reg[1]_5 ,
    \cpldsplitsm_reg[1] ,
    \data_width_64.tlplength_reg[3][4] ,
    sig_IP2Bus_WrAck,
    pipe_mmcm_rst_n,
    sig_blk_interrupt_assert,
    INTX_MSI_Grant,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \end_point.psr_reg[2]_1 ,
    \data_width_64.master_int_reg_0 ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    UNCONN_IN,
    UNCONN_IN_0,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output clk_txoutclk;
  output int_oobclk_out;
  output int_pclk_out_slave;
  output CLK;
  output int_userclk1_out;
  output mmcm_lock;
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output [0:0]pipe_rxsyncdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [5:0]out0;
  output m_axis_cr_tlast_reg;
  output \m_axis_cw_tuser_reg[2] ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output \tstrb_prev_reg[7] ;
  output IP2Bus_WrAck_reg;
  output \end_point.trn_lnk_up_d_reg ;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output s_axi_ctl_wready;
  output pclk_sel_reg1_reg;
  output [0:0]pipe_rate_idle;
  output in0;
  output pipe_rst_idle;
  output [0:0]pipe_sync_fsm_rx;
  output IP2Bus_WrAck_reg_0;
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output \rd_req_32_64.rdndreqpipeline_reg[0] ;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0] ;
  output m_axis_cc_tvalid_d50_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output \ctlplength_reg[2,0][0] ;
  output [2:0]cfg_dev_control_max_payload;
  output [5:0]\length_offset_reg[11] ;
  output [3:0]p_3_in;
  output badreadreq;
  output [3:0]\ctlplength_reg[1,3][8] ;
  output [1:0]p_0_in1_in;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output [9:0]\ctlpbytecount_reg[1,0][11] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output sig_m_axis_cc_tready;
  output sig_s_axis_cw_tvalid;
  output [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  output [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  output interrupt_out;
  output \sig_blk_interrupt_di_reg[7] ;
  output legint_msiSM_reg;
  output cfg_interrupt_msienable;
  output \sig_blk_interrupt_di_reg[4] ;
  output \sig_blk_interrupt_di_reg[3] ;
  output \sig_blk_interrupt_di_reg[2] ;
  output \sig_blk_interrupt_di_reg[1] ;
  output \sig_blk_interrupt_di_reg[0] ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output \ctlplength_reg[2,3][9] ;
  output \ctlplength_reg[2,2][9] ;
  output \ctlplength_reg[2,1][9] ;
  output \ctlplength_reg[2,0][9] ;
  output cpldsplitcount0_out;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output [3:0]pipe_rst_fsm;
  output \data_width_64.dataoffset_reg ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output sig_blk_interrupt_assert_reg;
  output INTX_state_reg;
  output sig_intx_msi_grant_reg;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output legint_msiSM_reg_0;
  output [3:0]\pipe_rate_fsm[3] ;
  output [2:0]\pipe_drp_fsm[2] ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]\pipe_qrst_fsm[0] ;
  output [2:0]pipe_qrst_fsm;
  output pipe_qrst_idle;
  output [2:0]MSI_Vector_Width;
  input REFCLK;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input pipe_rxprbscntreset;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]pipe_txprbssel;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input [31:0]s_axi_ctl_wdata;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tlast_nd_reg ;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input [0:0]int_pclk_sel_slave;
  input axi_aresetn;
  input [0:0]out;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input [3:0]O;
  input [3:0]\data_width_64.tlplength_reg[3][6] ;
  input neqOp_0;
  input [1:0]\data_width_64.tlplength_reg[3][7] ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  input \length_offset_reg[11]_0 ;
  input \length_offset_reg[10] ;
  input \length_offset_reg[10]_0 ;
  input \length_offset_reg[11]_1 ;
  input \length_offset_reg[10]_1 ;
  input \length_offset_reg[8] ;
  input [2:0]\length_offset_reg[11]_2 ;
  input \length_offset_reg[6] ;
  input [6:0]R;
  input \ctargetpipeline_reg[1] ;
  input \ctargetpipeline_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_2 ;
  input \ctargetpipeline_reg[1]_3 ;
  input \ctargetpipeline_reg[1]_4 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input sig_m_axis_cc_tlast;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input [11:0]s_axi_ctl_awaddr;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input sig_IP2Bus_RdAck;
  input [5:0]cfg_interrupt_di;
  input INTX_state_reg_0;
  input sig_blk_interrupt;
  input intx_msi_request_2d;
  input intx_msi_request_3d;
  input INTX_state;
  input INTX_MSI_Request;
  input [4:0]\msi_vector_num_2d_reg[4] ;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input \ctlplength[0,3] ;
  input \ctlplength[0,2] ;
  input \ctlplength[0,1] ;
  input \ctargetpipeline_reg[1]_5 ;
  input [1:0]\cpldsplitsm_reg[1] ;
  input \data_width_64.tlplength_reg[3][4] ;
  input sig_IP2Bus_WrAck;
  input pipe_mmcm_rst_n;
  input sig_blk_interrupt_assert;
  input INTX_MSI_Grant;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input [63:0]\end_point.psr_reg[2]_1 ;
  input [2:0]\data_width_64.master_int_reg_0 ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [1:0]UNCONN_IN;
  input [1:0]UNCONN_IN_0;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire INTX_state_reg;
  wire INTX_state_reg_0;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire [2:0]MSI_Vector_Width;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire REFCLK;
  wire [1:0]UNCONN_IN;
  wire [1:0]UNCONN_IN_0;
  wire almost_fullsig;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire [2:0]cfg_dev_control_max_payload;
  wire [5:0]cfg_interrupt_di;
  wire cfg_interrupt_msienable;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire cpldsplitcount0_out;
  wire [1:0]\cpldsplitsm_reg[1] ;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire \ctargetpipeline_reg[1]_2 ;
  wire \ctargetpipeline_reg[1]_3 ;
  wire \ctargetpipeline_reg[1]_4 ;
  wire \ctargetpipeline_reg[1]_5 ;
  wire [9:0]\ctlpbytecount_reg[1,0][11] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire [3:0]\ctlplength_reg[1,3][8] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][9] ;
  wire \ctlplength_reg[2,2][9] ;
  wire \ctlplength_reg[2,3][9] ;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tlast_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_reg ;
  wire [2:0]\data_width_64.master_int_reg_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  wire [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  wire [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  wire \data_width_64.tlplength_reg[3][4] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7] ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire \end_point.fifo_rd_ptr_reg[0] ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire \end_point.trn_lnk_up_d_reg ;
  wire eqOp;
  wire eqOp56_in;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire \goreg_bm.dout_i_reg[63] ;
  wire [0:0]gt_ch_drp_rdy;
  wire in0;
  wire int_oobclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire int_userclk1_out;
  wire interrupt_out;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire legint_msiSM_reg;
  wire legint_msiSM_reg_0;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[10]_1 ;
  wire [5:0]\length_offset_reg[11] ;
  wire \length_offset_reg[11]_0 ;
  wire \length_offset_reg[11]_1 ;
  wire [2:0]\length_offset_reg[11]_2 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[8] ;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire m_axis_cr_tlast_reg;
  wire \m_axis_cw_tuser_reg[2] ;
  wire mmcm_lock;
  wire [4:0]\msi_vector_num_2d_reg[4] ;
  wire neqOp7_in;
  wire neqOp_0;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire [0:0]out;
  wire [5:0]out0;
  wire p_0_in0_in;
  wire [1:0]p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_6_in;
  wire padzeroes11_out;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pclk_sel_reg1_reg;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\pipe_drp_fsm[2] ;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [2:0]pipe_qrst_fsm;
  wire [0:0]\pipe_qrst_fsm[0] ;
  wire pipe_qrst_idle;
  wire [3:0]\pipe_rate_fsm[3] ;
  wire [0:0]pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  wire [0:0]pipe_sync_fsm_rx;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire \rd_req_32_64.rdndreqpipeline_reg[0] ;
  wire request_completed;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire [11:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire sig_blk_interrupt_assert_reg;
  wire \sig_blk_interrupt_di_reg[0] ;
  wire \sig_blk_interrupt_di_reg[1] ;
  wire \sig_blk_interrupt_di_reg[2] ;
  wire \sig_blk_interrupt_di_reg[3] ;
  wire \sig_blk_interrupt_di_reg[4] ;
  wire \sig_blk_interrupt_di_reg[7] ;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire sig_intx_msi_grant_reg;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tvalid;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_rnp_ok;
  wire \tstrb_prev_reg[7] ;
  wire user_lnk_up_mux_reg;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2 pcie_7x_v2_0_2_inst
       (.CLK(int_oobclk_out),
        .D(D),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .INTX_state(INTX_state),
        .INTX_state_reg(INTX_state_reg),
        .INTX_state_reg_0(INTX_state_reg_0),
        .\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg_0),
        .IP2Bus_WrAck_reg(IP2Bus_WrAck_reg),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg_0),
        .MSI_Vector_Width(MSI_Vector_Width),
        .O(O),
        .Q(Q),
        .R(R),
        .REFCLK(REFCLK),
        .UNCONN_IN(UNCONN_IN),
        .UNCONN_IN_0(UNCONN_IN_0),
        .almost_fullsig(almost_fullsig),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctargetpipeline_reg[1]_1 (\ctargetpipeline_reg[1]_1 ),
        .\ctargetpipeline_reg[1]_2 (\ctargetpipeline_reg[1]_2 ),
        .\ctargetpipeline_reg[1]_3 (\ctargetpipeline_reg[1]_3 ),
        .\ctargetpipeline_reg[1]_4 (\ctargetpipeline_reg[1]_4 ),
        .\ctargetpipeline_reg[1]_5 (\ctargetpipeline_reg[1]_5 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlplength[0,1] (\ctlplength[0,1] ),
        .\ctlplength[0,2] (\ctlplength[0,2] ),
        .\ctlplength[0,3] (\ctlplength[0,3] ),
        .\ctlplength_reg[1,3][8] (\ctlplength_reg[1,3][8] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][9] (\ctlplength_reg[2,1][9] ),
        .\ctlplength_reg[2,2][9] (\ctlplength_reg[2,2][9] ),
        .\ctlplength_reg[2,3][9] (\ctlplength_reg[2,3][9] ),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0]_0 ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .\data_width_64.m_axis_cc_tlast_nd_reg (\data_width_64.m_axis_cc_tlast_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.master_int_reg_0 (\data_width_64.master_int_reg_0 ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlpcompleterid_reg[2][15] (\data_width_64.tlpcompleterid_reg[2][15] ),
        .\data_width_64.tlpcompleterid_reg[2][2] (\data_width_64.tlpcompleterid_reg[2][2] ),
        .\data_width_64.tlpcompleterid_reg[2][7] (\data_width_64.tlpcompleterid_reg[2][7] ),
        .\data_width_64.tlplength_reg[3][4] (\data_width_64.tlplength_reg[3][4] ),
        .\data_width_64.tlplength_reg[3][6] (\data_width_64.tlplength_reg[3][6] ),
        .\data_width_64.tlplength_reg[3][6]_0 (\data_width_64.tlplength_reg[3][6]_0 ),
        .\data_width_64.tlplength_reg[3][6]_1 (\data_width_64.tlplength_reg[3][6]_1 ),
        .\data_width_64.tlplength_reg[3][7] (\data_width_64.tlplength_reg[3][7] ),
        .\data_width_64.tlplength_reg[3][7]_0 (\data_width_64.tlplength_reg[3][7]_0 ),
        .\data_width_64.tlplength_reg[3][7]_1 (\data_width_64.tlplength_reg[3][7]_1 ),
        .\data_width_64.tlplength_reg[3][7]_2 (\data_width_64.tlplength_reg[3][7]_2 ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.fifo_rd_ptr_reg[0] (\end_point.fifo_rd_ptr_reg[0] ),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .\end_point.trn_lnk_up_d_reg (\end_point.trn_lnk_up_d_reg ),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .in0(in0),
        .int_dclk_out(CLK),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .\int_qplllock_out[0] (\int_qplllock_out[0] ),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .int_userclk1_out(int_userclk1_out),
        .interrupt_out(interrupt_out),
        .intx_msi_request_2d(intx_msi_request_2d),
        .intx_msi_request_3d(intx_msi_request_3d),
        .legint_msiSM_reg(legint_msiSM_reg),
        .legint_msiSM_reg_0(legint_msiSM_reg_0),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[10]_0 (\length_offset_reg[10]_0 ),
        .\length_offset_reg[10]_1 (\length_offset_reg[10]_1 ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[6] (\length_offset_reg[6] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .m_axis_cr_tlast_reg(m_axis_cr_tlast_reg),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .mmcm_lock(mmcm_lock),
        .\msi_vector_num_2d_reg[4] (\msi_vector_num_2d_reg[4] ),
        .neqOp7_in(neqOp7_in),
        .neqOp_0(neqOp_0),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (\np_ok_mode.rx_np_ok_int_reg ),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg_0 ),
        .out(out),
        .out0(out0),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_3_in(p_3_in),
        .p_6_in(p_6_in),
        .padzeroes11_out(padzeroes11_out),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pclk_sel_reg1_reg(pclk_sel_reg1_reg),
        .pipe_dmonitorout(pipe_dmonitorout),
        .\pipe_drp_fsm[2] (\pipe_drp_fsm[2] ),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .\pipe_qrst_fsm[0] (\pipe_qrst_fsm[0] ),
        .pipe_qrst_idle(pipe_qrst_idle),
        .\pipe_rate_fsm[3] (\pipe_rate_fsm[3] ),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .\rd_req_32_64.rdndreqpipeline_reg[0] (\rd_req_32_64.rdndreqpipeline_reg[0] ),
        .request_completed(request_completed),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sig_blk_interrupt(sig_blk_interrupt),
        .sig_blk_interrupt_assert(sig_blk_interrupt_assert),
        .sig_blk_interrupt_assert_reg(sig_blk_interrupt_assert_reg),
        .\sig_blk_interrupt_di_reg[0] (\sig_blk_interrupt_di_reg[0] ),
        .\sig_blk_interrupt_di_reg[1] (\sig_blk_interrupt_di_reg[1] ),
        .\sig_blk_interrupt_di_reg[2] (\sig_blk_interrupt_di_reg[2] ),
        .\sig_blk_interrupt_di_reg[3] (\sig_blk_interrupt_di_reg[3] ),
        .\sig_blk_interrupt_di_reg[4] (\sig_blk_interrupt_di_reg[4] ),
        .\sig_blk_interrupt_di_reg[7] (\sig_blk_interrupt_di_reg[7] ),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .sig_intx_msi_grant_reg(sig_intx_msi_grant_reg),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_rnp_ok(trn_rnp_ok),
        .\tstrb_prev_reg[7] (\tstrb_prev_reg[7] ),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_enhanced_core_top_wrap" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_enhanced_core_top_wrap
   (clk_txoutclk,
    CLK,
    int_pclk_out_slave,
    int_dclk_out,
    int_userclk1_out,
    mmcm_lock,
    \int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    pipe_rxsyncdone,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_rxdisperr,
    pipe_rxnotintable,
    out0,
    m_axis_cr_tlast_reg,
    \m_axis_cw_tuser_reg[2] ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    \tstrb_prev_reg[7] ,
    IP2Bus_WrAck_reg,
    \end_point.trn_lnk_up_d_reg ,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    s_axi_ctl_wready,
    pclk_sel_reg1_reg,
    pipe_rate_idle,
    in0,
    pipe_rst_idle,
    pipe_sync_fsm_rx,
    IP2Bus_WrAck_reg_0,
    IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \rd_req_32_64.rdndreqpipeline_reg[0] ,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0] ,
    m_axis_cc_tvalid_d50_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    \ctlplength_reg[2,0][0] ,
    cfg_dev_control_max_payload,
    \length_offset_reg[11] ,
    p_3_in,
    badreadreq,
    \ctlplength_reg[1,3][8] ,
    p_0_in1_in,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \ctlpbytecount_reg[1,0][11] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    sig_m_axis_cc_tready,
    sig_s_axis_cw_tvalid,
    \data_width_64.tlpcompleterid_reg[2][7] ,
    \data_width_64.tlpcompleterid_reg[2][15] ,
    interrupt_out,
    \sig_blk_interrupt_di_reg[7] ,
    legint_msiSM_reg,
    cfg_interrupt_msienable,
    \sig_blk_interrupt_di_reg[4] ,
    \sig_blk_interrupt_di_reg[3] ,
    \sig_blk_interrupt_di_reg[2] ,
    \sig_blk_interrupt_di_reg[1] ,
    \sig_blk_interrupt_di_reg[0] ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \ctlplength_reg[2,3][9] ,
    \ctlplength_reg[2,2][9] ,
    \ctlplength_reg[2,1][9] ,
    \ctlplength_reg[2,0][9] ,
    cpldsplitcount0_out,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    pipe_rst_fsm,
    \data_width_64.dataoffset_reg ,
    \sig_bus2ip_ce_reg_reg[3] ,
    sig_blk_interrupt_assert_reg,
    INTX_state_reg,
    sig_intx_msi_grant_reg,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    legint_msiSM_reg_0,
    \pipe_rate_fsm[3] ,
    \pipe_drp_fsm[2] ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \data_width_64.tlpcompleterid_reg[2][2] ,
    gt_ch_drp_rdy,
    \pipe_qrst_fsm[0] ,
    pipe_qrst_fsm,
    pipe_qrst_idle,
    MSI_Vector_Width,
    REFCLK,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rxprbscntreset,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    pipe_loopback,
    pipe_rxprbssel,
    pipe_txprbssel,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    s_axi_ctl_wdata,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tlast_nd_reg ,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    int_pclk_sel_slave,
    axi_aresetn,
    out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    O,
    \data_width_64.tlplength_reg[3][6] ,
    neqOp_0,
    \data_width_64.tlplength_reg[3][7] ,
    \data_width_64.tlplength_reg[3][7]_0 ,
    \data_width_64.tlplength_reg[3][6]_0 ,
    \data_width_64.tlplength_reg[3][6]_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \data_width_64.tlplength_reg[3][7]_1 ,
    \data_width_64.tlplength_reg[3][7]_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[10] ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[10]_1 ,
    \length_offset_reg[8] ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[6] ,
    R,
    \ctargetpipeline_reg[1] ,
    \ctargetpipeline_reg[1]_0 ,
    \ctargetpipeline_reg[1]_1 ,
    \ctargetpipeline_reg[1]_2 ,
    \ctargetpipeline_reg[1]_3 ,
    \ctargetpipeline_reg[1]_4 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    sig_m_axis_cc_tlast,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    s_axi_ctl_awaddr,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    sig_IP2Bus_RdAck,
    cfg_interrupt_di,
    INTX_state_reg_0,
    sig_blk_interrupt,
    intx_msi_request_2d,
    intx_msi_request_3d,
    INTX_state,
    INTX_MSI_Request,
    \msi_vector_num_2d_reg[4] ,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctargetpipeline_reg[1]_5 ,
    \cpldsplitsm_reg[1] ,
    \data_width_64.tlplength_reg[3][4] ,
    sig_IP2Bus_WrAck,
    pipe_mmcm_rst_n,
    sig_blk_interrupt_assert,
    INTX_MSI_Grant,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \end_point.psr_reg[2]_1 ,
    \data_width_64.master_int_reg_0 ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    UNCONN_IN,
    UNCONN_IN_0,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output clk_txoutclk;
  output CLK;
  output int_pclk_out_slave;
  output int_dclk_out;
  output int_userclk1_out;
  output mmcm_lock;
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output [0:0]pipe_rxsyncdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [5:0]out0;
  output m_axis_cr_tlast_reg;
  output \m_axis_cw_tuser_reg[2] ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output \tstrb_prev_reg[7] ;
  output IP2Bus_WrAck_reg;
  output \end_point.trn_lnk_up_d_reg ;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output s_axi_ctl_wready;
  output pclk_sel_reg1_reg;
  output [0:0]pipe_rate_idle;
  output in0;
  output pipe_rst_idle;
  output [0:0]pipe_sync_fsm_rx;
  output IP2Bus_WrAck_reg_0;
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output \rd_req_32_64.rdndreqpipeline_reg[0] ;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0] ;
  output m_axis_cc_tvalid_d50_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output \ctlplength_reg[2,0][0] ;
  output [2:0]cfg_dev_control_max_payload;
  output [5:0]\length_offset_reg[11] ;
  output [3:0]p_3_in;
  output badreadreq;
  output [3:0]\ctlplength_reg[1,3][8] ;
  output [1:0]p_0_in1_in;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output [9:0]\ctlpbytecount_reg[1,0][11] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output sig_m_axis_cc_tready;
  output sig_s_axis_cw_tvalid;
  output [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  output [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  output interrupt_out;
  output \sig_blk_interrupt_di_reg[7] ;
  output legint_msiSM_reg;
  output cfg_interrupt_msienable;
  output \sig_blk_interrupt_di_reg[4] ;
  output \sig_blk_interrupt_di_reg[3] ;
  output \sig_blk_interrupt_di_reg[2] ;
  output \sig_blk_interrupt_di_reg[1] ;
  output \sig_blk_interrupt_di_reg[0] ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output \ctlplength_reg[2,3][9] ;
  output \ctlplength_reg[2,2][9] ;
  output \ctlplength_reg[2,1][9] ;
  output \ctlplength_reg[2,0][9] ;
  output cpldsplitcount0_out;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output [3:0]pipe_rst_fsm;
  output \data_width_64.dataoffset_reg ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output sig_blk_interrupt_assert_reg;
  output INTX_state_reg;
  output sig_intx_msi_grant_reg;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output legint_msiSM_reg_0;
  output [3:0]\pipe_rate_fsm[3] ;
  output [2:0]\pipe_drp_fsm[2] ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]\pipe_qrst_fsm[0] ;
  output [2:0]pipe_qrst_fsm;
  output pipe_qrst_idle;
  output [2:0]MSI_Vector_Width;
  input REFCLK;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input pipe_rxprbscntreset;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]pipe_txprbssel;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input [31:0]s_axi_ctl_wdata;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tlast_nd_reg ;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input [0:0]int_pclk_sel_slave;
  input axi_aresetn;
  input [0:0]out;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input [3:0]O;
  input [3:0]\data_width_64.tlplength_reg[3][6] ;
  input neqOp_0;
  input [1:0]\data_width_64.tlplength_reg[3][7] ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  input \length_offset_reg[11]_0 ;
  input \length_offset_reg[10] ;
  input \length_offset_reg[10]_0 ;
  input \length_offset_reg[11]_1 ;
  input \length_offset_reg[10]_1 ;
  input \length_offset_reg[8] ;
  input [2:0]\length_offset_reg[11]_2 ;
  input \length_offset_reg[6] ;
  input [6:0]R;
  input \ctargetpipeline_reg[1] ;
  input \ctargetpipeline_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_2 ;
  input \ctargetpipeline_reg[1]_3 ;
  input \ctargetpipeline_reg[1]_4 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input sig_m_axis_cc_tlast;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input [11:0]s_axi_ctl_awaddr;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input sig_IP2Bus_RdAck;
  input [5:0]cfg_interrupt_di;
  input INTX_state_reg_0;
  input sig_blk_interrupt;
  input intx_msi_request_2d;
  input intx_msi_request_3d;
  input INTX_state;
  input INTX_MSI_Request;
  input [4:0]\msi_vector_num_2d_reg[4] ;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input \ctlplength[0,3] ;
  input \ctlplength[0,2] ;
  input \ctlplength[0,1] ;
  input \ctargetpipeline_reg[1]_5 ;
  input [1:0]\cpldsplitsm_reg[1] ;
  input \data_width_64.tlplength_reg[3][4] ;
  input sig_IP2Bus_WrAck;
  input pipe_mmcm_rst_n;
  input sig_blk_interrupt_assert;
  input INTX_MSI_Grant;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input [63:0]\end_point.psr_reg[2]_1 ;
  input [2:0]\data_width_64.master_int_reg_0 ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [1:0]UNCONN_IN;
  input [1:0]UNCONN_IN_0;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire INTX_state_reg;
  wire INTX_state_reg_0;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire [2:0]MSI_Vector_Width;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire REFCLK;
  wire [1:0]UNCONN_IN;
  wire [1:0]UNCONN_IN_0;
  wire almost_fullsig;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire [2:0]cfg_dev_control_max_payload;
  wire [5:0]cfg_interrupt_di;
  wire cfg_interrupt_msienable;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire cpldsplitcount0_out;
  wire [1:0]\cpldsplitsm_reg[1] ;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire \ctargetpipeline_reg[1]_2 ;
  wire \ctargetpipeline_reg[1]_3 ;
  wire \ctargetpipeline_reg[1]_4 ;
  wire \ctargetpipeline_reg[1]_5 ;
  wire [9:0]\ctlpbytecount_reg[1,0][11] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire [3:0]\ctlplength_reg[1,3][8] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][9] ;
  wire \ctlplength_reg[2,2][9] ;
  wire \ctlplength_reg[2,3][9] ;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tlast_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_reg ;
  wire [2:0]\data_width_64.master_int_reg_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  wire [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  wire [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  wire \data_width_64.tlplength_reg[3][4] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7] ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire \end_point.fifo_rd_ptr_reg[0] ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire \end_point.trn_lnk_up_d_reg ;
  wire eqOp;
  wire eqOp56_in;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire \goreg_bm.dout_i_reg[63] ;
  wire [0:0]gt_ch_drp_rdy;
  wire in0;
  wire int_dclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire int_userclk1_out;
  wire interrupt_out;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire legint_msiSM_reg;
  wire legint_msiSM_reg_0;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[10]_1 ;
  wire [5:0]\length_offset_reg[11] ;
  wire \length_offset_reg[11]_0 ;
  wire \length_offset_reg[11]_1 ;
  wire [2:0]\length_offset_reg[11]_2 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[8] ;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire m_axis_cr_tlast_reg;
  wire \m_axis_cw_tuser_reg[2] ;
  wire mmcm_lock;
  wire [4:0]\msi_vector_num_2d_reg[4] ;
  wire neqOp7_in;
  wire neqOp_0;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire [0:0]out;
  wire [5:0]out0;
  wire p_0_in0_in;
  wire [1:0]p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_6_in;
  wire padzeroes11_out;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pclk_sel_reg1_reg;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\pipe_drp_fsm[2] ;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [2:0]pipe_qrst_fsm;
  wire [0:0]\pipe_qrst_fsm[0] ;
  wire pipe_qrst_idle;
  wire [3:0]\pipe_rate_fsm[3] ;
  wire [0:0]pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  wire [0:0]pipe_sync_fsm_rx;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire \rd_req_32_64.rdndreqpipeline_reg[0] ;
  wire request_completed;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire [11:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire sig_blk_interrupt_assert_reg;
  wire \sig_blk_interrupt_di_reg[0] ;
  wire \sig_blk_interrupt_di_reg[1] ;
  wire \sig_blk_interrupt_di_reg[2] ;
  wire \sig_blk_interrupt_di_reg[3] ;
  wire \sig_blk_interrupt_di_reg[4] ;
  wire \sig_blk_interrupt_di_reg[7] ;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire sig_intx_msi_grant_reg;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tvalid;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_rnp_ok;
  wire \tstrb_prev_reg[7] ;
  wire user_lnk_up_mux_reg;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_pcie_enhanced_core_top axi_pcie_enhanced_core_top_i
       (.CLK(int_dclk_out),
        .D(D),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .INTX_state(INTX_state),
        .INTX_state_reg(INTX_state_reg),
        .INTX_state_reg_0(INTX_state_reg_0),
        .\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg_0),
        .IP2Bus_WrAck_reg(IP2Bus_WrAck_reg),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg_0),
        .MSI_Vector_Width(MSI_Vector_Width),
        .O(O),
        .Q(Q),
        .R(R),
        .REFCLK(REFCLK),
        .UNCONN_IN(UNCONN_IN),
        .UNCONN_IN_0(UNCONN_IN_0),
        .almost_fullsig(almost_fullsig),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctargetpipeline_reg[1]_1 (\ctargetpipeline_reg[1]_1 ),
        .\ctargetpipeline_reg[1]_2 (\ctargetpipeline_reg[1]_2 ),
        .\ctargetpipeline_reg[1]_3 (\ctargetpipeline_reg[1]_3 ),
        .\ctargetpipeline_reg[1]_4 (\ctargetpipeline_reg[1]_4 ),
        .\ctargetpipeline_reg[1]_5 (\ctargetpipeline_reg[1]_5 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlplength[0,1] (\ctlplength[0,1] ),
        .\ctlplength[0,2] (\ctlplength[0,2] ),
        .\ctlplength[0,3] (\ctlplength[0,3] ),
        .\ctlplength_reg[1,3][8] (\ctlplength_reg[1,3][8] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][9] (\ctlplength_reg[2,1][9] ),
        .\ctlplength_reg[2,2][9] (\ctlplength_reg[2,2][9] ),
        .\ctlplength_reg[2,3][9] (\ctlplength_reg[2,3][9] ),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0]_0 ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .\data_width_64.m_axis_cc_tlast_nd_reg (\data_width_64.m_axis_cc_tlast_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.master_int_reg_0 (\data_width_64.master_int_reg_0 ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlpcompleterid_reg[2][15] (\data_width_64.tlpcompleterid_reg[2][15] ),
        .\data_width_64.tlpcompleterid_reg[2][2] (\data_width_64.tlpcompleterid_reg[2][2] ),
        .\data_width_64.tlpcompleterid_reg[2][7] (\data_width_64.tlpcompleterid_reg[2][7] ),
        .\data_width_64.tlplength_reg[3][4] (\data_width_64.tlplength_reg[3][4] ),
        .\data_width_64.tlplength_reg[3][6] (\data_width_64.tlplength_reg[3][6] ),
        .\data_width_64.tlplength_reg[3][6]_0 (\data_width_64.tlplength_reg[3][6]_0 ),
        .\data_width_64.tlplength_reg[3][6]_1 (\data_width_64.tlplength_reg[3][6]_1 ),
        .\data_width_64.tlplength_reg[3][7] (\data_width_64.tlplength_reg[3][7] ),
        .\data_width_64.tlplength_reg[3][7]_0 (\data_width_64.tlplength_reg[3][7]_0 ),
        .\data_width_64.tlplength_reg[3][7]_1 (\data_width_64.tlplength_reg[3][7]_1 ),
        .\data_width_64.tlplength_reg[3][7]_2 (\data_width_64.tlplength_reg[3][7]_2 ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.fifo_rd_ptr_reg[0] (\end_point.fifo_rd_ptr_reg[0] ),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .\end_point.trn_lnk_up_d_reg (\end_point.trn_lnk_up_d_reg ),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .in0(in0),
        .int_oobclk_out(CLK),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .\int_qplllock_out[0] (\int_qplllock_out[0] ),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .int_userclk1_out(int_userclk1_out),
        .interrupt_out(interrupt_out),
        .intx_msi_request_2d(intx_msi_request_2d),
        .intx_msi_request_3d(intx_msi_request_3d),
        .legint_msiSM_reg(legint_msiSM_reg),
        .legint_msiSM_reg_0(legint_msiSM_reg_0),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[10]_0 (\length_offset_reg[10]_0 ),
        .\length_offset_reg[10]_1 (\length_offset_reg[10]_1 ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[6] (\length_offset_reg[6] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .m_axis_cr_tlast_reg(m_axis_cr_tlast_reg),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .mmcm_lock(mmcm_lock),
        .\msi_vector_num_2d_reg[4] (\msi_vector_num_2d_reg[4] ),
        .neqOp7_in(neqOp7_in),
        .neqOp_0(neqOp_0),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (\np_ok_mode.rx_np_ok_int_reg ),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg_0 ),
        .out(out),
        .out0(out0),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_3_in(p_3_in),
        .p_6_in(p_6_in),
        .padzeroes11_out(padzeroes11_out),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pclk_sel_reg1_reg(pclk_sel_reg1_reg),
        .pipe_dmonitorout(pipe_dmonitorout),
        .\pipe_drp_fsm[2] (\pipe_drp_fsm[2] ),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .\pipe_qrst_fsm[0] (\pipe_qrst_fsm[0] ),
        .pipe_qrst_idle(pipe_qrst_idle),
        .\pipe_rate_fsm[3] (\pipe_rate_fsm[3] ),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .\rd_req_32_64.rdndreqpipeline_reg[0] (\rd_req_32_64.rdndreqpipeline_reg[0] ),
        .request_completed(request_completed),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sig_blk_interrupt(sig_blk_interrupt),
        .sig_blk_interrupt_assert(sig_blk_interrupt_assert),
        .sig_blk_interrupt_assert_reg(sig_blk_interrupt_assert_reg),
        .\sig_blk_interrupt_di_reg[0] (\sig_blk_interrupt_di_reg[0] ),
        .\sig_blk_interrupt_di_reg[1] (\sig_blk_interrupt_di_reg[1] ),
        .\sig_blk_interrupt_di_reg[2] (\sig_blk_interrupt_di_reg[2] ),
        .\sig_blk_interrupt_di_reg[3] (\sig_blk_interrupt_di_reg[3] ),
        .\sig_blk_interrupt_di_reg[4] (\sig_blk_interrupt_di_reg[4] ),
        .\sig_blk_interrupt_di_reg[7] (\sig_blk_interrupt_di_reg[7] ),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .sig_intx_msi_grant_reg(sig_intx_msi_grant_reg),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_rnp_ok(trn_rnp_ok),
        .\tstrb_prev_reg[7] (\tstrb_prev_reg[7] ),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2
   (clk_txoutclk,
    CLK,
    int_pclk_out_slave,
    int_dclk_out,
    int_userclk1_out,
    mmcm_lock,
    \int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    pipe_rxsyncdone,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_rxdisperr,
    pipe_rxnotintable,
    out0,
    m_axis_cr_tlast_reg,
    \m_axis_cw_tuser_reg[2] ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    \tstrb_prev_reg[7] ,
    IP2Bus_WrAck_reg,
    \end_point.trn_lnk_up_d_reg ,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    s_axi_ctl_wready,
    pclk_sel_reg1_reg,
    pipe_rate_idle,
    in0,
    pipe_rst_idle,
    pipe_sync_fsm_rx,
    IP2Bus_WrAck_reg_0,
    IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \rd_req_32_64.rdndreqpipeline_reg[0] ,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0] ,
    m_axis_cc_tvalid_d50_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    \ctlplength_reg[2,0][0] ,
    cfg_dev_control_max_payload,
    \length_offset_reg[11] ,
    p_3_in,
    badreadreq,
    \ctlplength_reg[1,3][8] ,
    p_0_in1_in,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \ctlpbytecount_reg[1,0][11] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    sig_m_axis_cc_tready,
    sig_s_axis_cw_tvalid,
    \data_width_64.tlpcompleterid_reg[2][7] ,
    \data_width_64.tlpcompleterid_reg[2][15] ,
    interrupt_out,
    \sig_blk_interrupt_di_reg[7] ,
    legint_msiSM_reg,
    cfg_interrupt_msienable,
    \sig_blk_interrupt_di_reg[4] ,
    \sig_blk_interrupt_di_reg[3] ,
    \sig_blk_interrupt_di_reg[2] ,
    \sig_blk_interrupt_di_reg[1] ,
    \sig_blk_interrupt_di_reg[0] ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \ctlplength_reg[2,3][9] ,
    \ctlplength_reg[2,2][9] ,
    \ctlplength_reg[2,1][9] ,
    \ctlplength_reg[2,0][9] ,
    cpldsplitcount0_out,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    pipe_rst_fsm,
    \data_width_64.dataoffset_reg ,
    \sig_bus2ip_ce_reg_reg[3] ,
    sig_blk_interrupt_assert_reg,
    INTX_state_reg,
    sig_intx_msi_grant_reg,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    legint_msiSM_reg_0,
    \pipe_rate_fsm[3] ,
    \pipe_drp_fsm[2] ,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \data_width_64.tlpcompleterid_reg[2][2] ,
    gt_ch_drp_rdy,
    \pipe_qrst_fsm[0] ,
    pipe_qrst_fsm,
    pipe_qrst_idle,
    MSI_Vector_Width,
    REFCLK,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rxprbscntreset,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    pipe_loopback,
    pipe_rxprbssel,
    pipe_txprbssel,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    s_axi_ctl_wdata,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tlast_nd_reg ,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    int_pclk_sel_slave,
    axi_aresetn,
    out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg_0,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    O,
    \data_width_64.tlplength_reg[3][6] ,
    neqOp_0,
    \data_width_64.tlplength_reg[3][7] ,
    \data_width_64.tlplength_reg[3][7]_0 ,
    \data_width_64.tlplength_reg[3][6]_0 ,
    \data_width_64.tlplength_reg[3][6]_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \data_width_64.tlplength_reg[3][7]_1 ,
    \data_width_64.tlplength_reg[3][7]_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[10] ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[10]_1 ,
    \length_offset_reg[8] ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[6] ,
    R,
    \ctargetpipeline_reg[1] ,
    \ctargetpipeline_reg[1]_0 ,
    \ctargetpipeline_reg[1]_1 ,
    \ctargetpipeline_reg[1]_2 ,
    \ctargetpipeline_reg[1]_3 ,
    \ctargetpipeline_reg[1]_4 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    sig_m_axis_cc_tlast,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    s_axi_ctl_awaddr,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    sig_IP2Bus_RdAck,
    cfg_interrupt_di,
    INTX_state_reg_0,
    sig_blk_interrupt,
    intx_msi_request_2d,
    intx_msi_request_3d,
    INTX_state,
    INTX_MSI_Request,
    \msi_vector_num_2d_reg[4] ,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctargetpipeline_reg[1]_5 ,
    \cpldsplitsm_reg[1] ,
    \data_width_64.tlplength_reg[3][4] ,
    sig_IP2Bus_WrAck,
    pipe_mmcm_rst_n,
    sig_blk_interrupt_assert,
    INTX_MSI_Grant,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \end_point.psr_reg[2]_1 ,
    \data_width_64.master_int_reg_0 ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    UNCONN_IN,
    UNCONN_IN_0,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output clk_txoutclk;
  output CLK;
  output int_pclk_out_slave;
  output int_dclk_out;
  output int_userclk1_out;
  output mmcm_lock;
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output [0:0]pipe_rxsyncdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [5:0]out0;
  output m_axis_cr_tlast_reg;
  output \m_axis_cw_tuser_reg[2] ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output \tstrb_prev_reg[7] ;
  output IP2Bus_WrAck_reg;
  output \end_point.trn_lnk_up_d_reg ;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output s_axi_ctl_wready;
  output pclk_sel_reg1_reg;
  output [0:0]pipe_rate_idle;
  output in0;
  output pipe_rst_idle;
  output [0:0]pipe_sync_fsm_rx;
  output IP2Bus_WrAck_reg_0;
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output \rd_req_32_64.rdndreqpipeline_reg[0] ;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0] ;
  output m_axis_cc_tvalid_d50_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output \ctlplength_reg[2,0][0] ;
  output [2:0]cfg_dev_control_max_payload;
  output [5:0]\length_offset_reg[11] ;
  output [3:0]p_3_in;
  output badreadreq;
  output [3:0]\ctlplength_reg[1,3][8] ;
  output [1:0]p_0_in1_in;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output [9:0]\ctlpbytecount_reg[1,0][11] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output sig_m_axis_cc_tready;
  output sig_s_axis_cw_tvalid;
  output [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  output [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  output interrupt_out;
  output \sig_blk_interrupt_di_reg[7] ;
  output legint_msiSM_reg;
  output cfg_interrupt_msienable;
  output \sig_blk_interrupt_di_reg[4] ;
  output \sig_blk_interrupt_di_reg[3] ;
  output \sig_blk_interrupt_di_reg[2] ;
  output \sig_blk_interrupt_di_reg[1] ;
  output \sig_blk_interrupt_di_reg[0] ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output \ctlplength_reg[2,3][9] ;
  output \ctlplength_reg[2,2][9] ;
  output \ctlplength_reg[2,1][9] ;
  output \ctlplength_reg[2,0][9] ;
  output cpldsplitcount0_out;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output [3:0]pipe_rst_fsm;
  output \data_width_64.dataoffset_reg ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output sig_blk_interrupt_assert_reg;
  output INTX_state_reg;
  output sig_intx_msi_grant_reg;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output legint_msiSM_reg_0;
  output [3:0]\pipe_rate_fsm[3] ;
  output [2:0]\pipe_drp_fsm[2] ;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]\pipe_qrst_fsm[0] ;
  output [2:0]pipe_qrst_fsm;
  output pipe_qrst_idle;
  output [2:0]MSI_Vector_Width;
  input REFCLK;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input pipe_rxprbscntreset;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]pipe_txprbssel;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input [31:0]s_axi_ctl_wdata;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tlast_nd_reg ;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input [0:0]int_pclk_sel_slave;
  input axi_aresetn;
  input [0:0]out;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg_0;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input [3:0]O;
  input [3:0]\data_width_64.tlplength_reg[3][6] ;
  input neqOp_0;
  input [1:0]\data_width_64.tlplength_reg[3][7] ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  input \length_offset_reg[11]_0 ;
  input \length_offset_reg[10] ;
  input \length_offset_reg[10]_0 ;
  input \length_offset_reg[11]_1 ;
  input \length_offset_reg[10]_1 ;
  input \length_offset_reg[8] ;
  input [2:0]\length_offset_reg[11]_2 ;
  input \length_offset_reg[6] ;
  input [6:0]R;
  input \ctargetpipeline_reg[1] ;
  input \ctargetpipeline_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_2 ;
  input \ctargetpipeline_reg[1]_3 ;
  input \ctargetpipeline_reg[1]_4 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input sig_m_axis_cc_tlast;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input [11:0]s_axi_ctl_awaddr;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input sig_IP2Bus_RdAck;
  input [5:0]cfg_interrupt_di;
  input INTX_state_reg_0;
  input sig_blk_interrupt;
  input intx_msi_request_2d;
  input intx_msi_request_3d;
  input INTX_state;
  input INTX_MSI_Request;
  input [4:0]\msi_vector_num_2d_reg[4] ;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input \ctlplength[0,3] ;
  input \ctlplength[0,2] ;
  input \ctlplength[0,1] ;
  input \ctargetpipeline_reg[1]_5 ;
  input [1:0]\cpldsplitsm_reg[1] ;
  input \data_width_64.tlplength_reg[3][4] ;
  input sig_IP2Bus_WrAck;
  input pipe_mmcm_rst_n;
  input sig_blk_interrupt_assert;
  input INTX_MSI_Grant;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input [63:0]\end_point.psr_reg[2]_1 ;
  input [2:0]\data_width_64.master_int_reg_0 ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [1:0]UNCONN_IN;
  input [1:0]UNCONN_IN_0;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire INTX_state_reg;
  wire INTX_state_reg_0;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire [2:0]MSI_Vector_Width;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire REFCLK;
  wire [1:0]UNCONN_IN;
  wire [1:0]UNCONN_IN_0;
  wire almost_fullsig;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire [2:0]cfg_dev_control_max_payload;
  wire [5:0]cfg_interrupt_di;
  wire cfg_interrupt_msienable;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire cpldsplitcount0_out;
  wire [1:0]\cpldsplitsm_reg[1] ;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire \ctargetpipeline_reg[1]_2 ;
  wire \ctargetpipeline_reg[1]_3 ;
  wire \ctargetpipeline_reg[1]_4 ;
  wire \ctargetpipeline_reg[1]_5 ;
  wire [9:0]\ctlpbytecount_reg[1,0][11] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire [3:0]\ctlplength_reg[1,3][8] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][9] ;
  wire \ctlplength_reg[2,2][9] ;
  wire \ctlplength_reg[2,3][9] ;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tlast_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_reg ;
  wire [2:0]\data_width_64.master_int_reg_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  wire [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  wire [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  wire \data_width_64.tlplength_reg[3][4] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7] ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire \end_point.fifo_rd_ptr_reg[0] ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire \end_point.trn_lnk_up_d_reg ;
  wire eqOp;
  wire eqOp56_in;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire \goreg_bm.dout_i_reg[63] ;
  wire [0:0]gt_ch_drp_rdy;
  wire gt_rx_phy_status_q;
  wire gt_rxelecidle_q;
  wire in0;
  wire int_dclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire int_userclk1_out;
  wire interrupt_out;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire legint_msiSM_reg;
  wire legint_msiSM_reg_0;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[10]_1 ;
  wire [5:0]\length_offset_reg[11] ;
  wire \length_offset_reg[11]_0 ;
  wire \length_offset_reg[11]_1 ;
  wire [2:0]\length_offset_reg[11]_2 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[8] ;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire m_axis_cr_tlast_reg;
  wire \m_axis_cw_tuser_reg[2] ;
  wire mmcm_lock;
  wire [4:0]\msi_vector_num_2d_reg[4] ;
  wire neqOp7_in;
  wire neqOp_0;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire [0:0]out;
  wire [5:0]out0;
  wire p_0_in0_in;
  wire [1:0]p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_6_in;
  wire padzeroes11_out;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire \pcie_top_with_gt_top.gt_ges.gt_top_i_n_111 ;
  wire \pcie_top_with_gt_top.gt_ges.gt_top_i_n_112 ;
  wire \pcie_top_with_gt_top.gt_ges.gt_top_i_n_113 ;
  wire \pcie_top_with_gt_top.gt_ges.gt_top_i_n_87 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_0 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_304 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_305 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_306 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_307 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_308 ;
  wire \pcie_top_with_gt_top.pcie_top_i_n_309 ;
  wire pclk_sel_reg1_reg;
  wire phy_rdy_n;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\pipe_drp_fsm[2] ;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [2:0]pipe_qrst_fsm;
  wire [0:0]\pipe_qrst_fsm[0] ;
  wire pipe_qrst_idle;
  wire [3:0]\pipe_rate_fsm[3] ;
  wire [0:0]pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire pipe_rx0_chanisaligned_gt;
  wire [1:0]pipe_rx0_char_is_k_gt;
  wire [15:0]pipe_rx0_data_gt;
  wire pipe_rx0_polarity_gt;
  wire pipe_rx0_valid_gt;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  wire [0:0]pipe_sync_fsm_rx;
  wire [1:0]pipe_tx0_char_is_k_gt;
  wire pipe_tx0_compliance_gt;
  wire [15:0]pipe_tx0_data_gt;
  wire pipe_tx0_elec_idle_gt;
  wire [1:0]pipe_tx0_powerdown_gt;
  wire pipe_tx_deemph_gt;
  wire [2:0]pipe_tx_margin_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire \rd_req_32_64.rdndreqpipeline_reg[0] ;
  wire request_completed;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire [11:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire sig_blk_interrupt_assert_reg;
  wire \sig_blk_interrupt_di_reg[0] ;
  wire \sig_blk_interrupt_di_reg[1] ;
  wire \sig_blk_interrupt_di_reg[2] ;
  wire \sig_blk_interrupt_di_reg[3] ;
  wire \sig_blk_interrupt_di_reg[4] ;
  wire \sig_blk_interrupt_di_reg[7] ;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire sig_intx_msi_grant_reg;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tvalid;
  wire sys_rst_n_int;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_lnk_up;
  wire trn_rnp_ok;
  wire \tstrb_prev_reg[7] ;
  wire user_lnk_up_int;
  wire user_lnk_up_mux_reg_0;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_top \pcie_top_with_gt_top.gt_ges.gt_top_i 
       (.CLK(int_dclk_out),
        .D(pipe_rx0_char_is_k_gt),
        .Q(pipe_tx0_powerdown_gt),
        .REFCLK(REFCLK),
        .SR(\pcie_top_with_gt_top.pcie_top_i_n_0 ),
        .TXCHARDISPMODE(pipe_tx0_compliance_gt),
        .UNCONN_IN(UNCONN_IN),
        .UNCONN_IN_0(UNCONN_IN_0),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .gt_rx_phy_status_q(gt_rx_phy_status_q),
        .gt_rxelecidle_q(gt_rxelecidle_q),
        .gt_rxelecidle_q_reg(phy_rdy_n),
        .int_oobclk_out(CLK),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .\int_qplllock_out[0] (\int_qplllock_out[0] ),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .int_userclk1_out(int_userclk1_out),
        .mmcm_lock(mmcm_lock),
        .out0(out0),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pclk_sel_reg1_reg(pclk_sel_reg1_reg),
        .pipe_dmonitorout(pipe_dmonitorout),
        .\pipe_drp_fsm[2] (\pipe_drp_fsm[2] ),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .\pipe_qrst_fsm[0] (\pipe_qrst_fsm[0] ),
        .pipe_qrst_idle(pipe_qrst_idle),
        .\pipe_rate_fsm[3] (\pipe_rate_fsm[3] ),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rx0_chanisaligned_gt(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_polarity_gt(pipe_rx0_polarity_gt),
        .pipe_rx0_valid_gt(pipe_rx0_valid_gt),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_rx_data_q_reg[15] (pipe_rx0_data_gt),
        .\pipe_stages_1.pipe_rx_status_q_reg[2] ({\pcie_top_with_gt_top.gt_ges.gt_top_i_n_111 ,\pcie_top_with_gt_top.gt_ges.gt_top_i_n_112 ,\pcie_top_with_gt_top.gt_ges.gt_top_i_n_113 }),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] (pipe_tx0_char_is_k_gt),
        .\pipe_stages_1.pipe_tx_data_q_reg[15] (pipe_tx0_data_gt),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (pipe_tx_margin_gt),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .pl_ltssm_state({\pcie_top_with_gt_top.pcie_top_i_n_304 ,\pcie_top_with_gt_top.pcie_top_i_n_305 ,\pcie_top_with_gt_top.pcie_top_i_n_306 ,\pcie_top_with_gt_top.pcie_top_i_n_307 ,\pcie_top_with_gt_top.pcie_top_i_n_308 ,\pcie_top_with_gt_top.pcie_top_i_n_309 }),
        .sys_rst_n(\pcie_top_with_gt_top.gt_ges.gt_top_i_n_87 ));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_top \pcie_top_with_gt_top.pcie_top_i 
       (.CLK(CLK),
        .D(D),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .INTX_state(INTX_state),
        .INTX_state_reg(INTX_state_reg),
        .INTX_state_reg_0(INTX_state_reg_0),
        .\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg_0),
        .IP2Bus_WrAck_reg(IP2Bus_WrAck_reg),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg_0),
        .MSI_Vector_Width(MSI_Vector_Width),
        .O(O),
        .Q(Q),
        .R(R),
        .SR(\pcie_top_with_gt_top.pcie_top_i_n_0 ),
        .TXCHARDISPMODE(pipe_tx0_compliance_gt),
        .almost_fullsig(almost_fullsig),
        .axi_aresetn(axi_aresetn),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctargetpipeline_reg[1]_1 (\ctargetpipeline_reg[1]_1 ),
        .\ctargetpipeline_reg[1]_2 (\ctargetpipeline_reg[1]_2 ),
        .\ctargetpipeline_reg[1]_3 (\ctargetpipeline_reg[1]_3 ),
        .\ctargetpipeline_reg[1]_4 (\ctargetpipeline_reg[1]_4 ),
        .\ctargetpipeline_reg[1]_5 (\ctargetpipeline_reg[1]_5 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlplength[0,1] (\ctlplength[0,1] ),
        .\ctlplength[0,2] (\ctlplength[0,2] ),
        .\ctlplength[0,3] (\ctlplength[0,3] ),
        .\ctlplength_reg[1,3][8] (\ctlplength_reg[1,3][8] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][9] (\ctlplength_reg[2,1][9] ),
        .\ctlplength_reg[2,2][9] (\ctlplength_reg[2,2][9] ),
        .\ctlplength_reg[2,3][9] (\ctlplength_reg[2,3][9] ),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0]_0 ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .\data_width_64.m_axis_cc_tlast_nd_reg (\data_width_64.m_axis_cc_tlast_nd_reg ),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.master_int_reg_0 (\data_width_64.master_int_reg_0 ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlpcompleterid_reg[2][15] (\data_width_64.tlpcompleterid_reg[2][15] ),
        .\data_width_64.tlpcompleterid_reg[2][2] (\data_width_64.tlpcompleterid_reg[2][2] ),
        .\data_width_64.tlpcompleterid_reg[2][7] (\data_width_64.tlpcompleterid_reg[2][7] ),
        .\data_width_64.tlplength_reg[3][4] (\data_width_64.tlplength_reg[3][4] ),
        .\data_width_64.tlplength_reg[3][6] (\data_width_64.tlplength_reg[3][6] ),
        .\data_width_64.tlplength_reg[3][6]_0 (\data_width_64.tlplength_reg[3][6]_0 ),
        .\data_width_64.tlplength_reg[3][6]_1 (\data_width_64.tlplength_reg[3][6]_1 ),
        .\data_width_64.tlplength_reg[3][7] (\data_width_64.tlplength_reg[3][7] ),
        .\data_width_64.tlplength_reg[3][7]_0 (\data_width_64.tlplength_reg[3][7]_0 ),
        .\data_width_64.tlplength_reg[3][7]_1 (\data_width_64.tlplength_reg[3][7]_1 ),
        .\data_width_64.tlplength_reg[3][7]_2 (\data_width_64.tlplength_reg[3][7]_2 ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.fifo_rd_ptr_reg[0] (\end_point.fifo_rd_ptr_reg[0] ),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .gt_rx_phy_status_q(gt_rx_phy_status_q),
        .\gt_rx_status_q_reg[2] ({\pcie_top_with_gt_top.gt_ges.gt_top_i_n_111 ,\pcie_top_with_gt_top.gt_ges.gt_top_i_n_112 ,\pcie_top_with_gt_top.gt_ges.gt_top_i_n_113 }),
        .\gt_rxcharisk_q_reg[1] (pipe_rx0_char_is_k_gt),
        .\gt_rxdata_q_reg[15] (pipe_rx0_data_gt),
        .gt_rxelecidle_q(gt_rxelecidle_q),
        .in0(in0),
        .interrupt_out(interrupt_out),
        .intx_msi_request_2d(intx_msi_request_2d),
        .intx_msi_request_3d(intx_msi_request_3d),
        .legint_msiSM_reg(legint_msiSM_reg),
        .legint_msiSM_reg_0(legint_msiSM_reg_0),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[10]_0 (\length_offset_reg[10]_0 ),
        .\length_offset_reg[10]_1 (\length_offset_reg[10]_1 ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[6] (\length_offset_reg[6] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .m_axis_cr_tlast_reg(m_axis_cr_tlast_reg),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .\msi_vector_num_2d_reg[4] (\msi_vector_num_2d_reg[4] ),
        .neqOp7_in(neqOp7_in),
        .neqOp_0(neqOp_0),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (\np_ok_mode.rx_np_ok_int_reg ),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg_0 ),
        .out(out),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_3_in(p_3_in),
        .p_6_in(p_6_in),
        .padzeroes11_out(padzeroes11_out),
        .phy_rdy_n_int_reg(phy_rdy_n),
        .pipe_rx0_chanisaligned_gt(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_polarity_gt(pipe_rx0_polarity_gt),
        .pipe_rx0_valid_gt(pipe_rx0_valid_gt),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pl_ltssm_state({\pcie_top_with_gt_top.pcie_top_i_n_304 ,\pcie_top_with_gt_top.pcie_top_i_n_305 ,\pcie_top_with_gt_top.pcie_top_i_n_306 ,\pcie_top_with_gt_top.pcie_top_i_n_307 ,\pcie_top_with_gt_top.pcie_top_i_n_308 ,\pcie_top_with_gt_top.pcie_top_i_n_309 }),
        .rdy_reg1_reg(pipe_tx_margin_gt),
        .rdy_reg1_reg_0(pipe_tx0_char_is_k_gt),
        .rdy_reg1_reg_1(pipe_tx0_data_gt),
        .rdy_reg1_reg_2(pipe_tx0_powerdown_gt),
        .request_completed(request_completed),
        .\resetovrd.reset_reg[4] (int_userclk1_out),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sig_blk_interrupt(sig_blk_interrupt),
        .sig_blk_interrupt_assert(sig_blk_interrupt_assert),
        .sig_blk_interrupt_assert_reg(sig_blk_interrupt_assert_reg),
        .\sig_blk_interrupt_di_reg[0] (\sig_blk_interrupt_di_reg[0] ),
        .\sig_blk_interrupt_di_reg[1] (\sig_blk_interrupt_di_reg[1] ),
        .\sig_blk_interrupt_di_reg[2] (\sig_blk_interrupt_di_reg[2] ),
        .\sig_blk_interrupt_di_reg[3] (\sig_blk_interrupt_di_reg[3] ),
        .\sig_blk_interrupt_di_reg[4] (\sig_blk_interrupt_di_reg[4] ),
        .\sig_blk_interrupt_di_reg[7] (\sig_blk_interrupt_di_reg[7] ),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .sig_intx_msi_grant_reg(sig_intx_msi_grant_reg),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .sys_rst_n(\pcie_top_with_gt_top.gt_ges.gt_top_i_n_87 ),
        .sys_rst_n_int(sys_rst_n_int),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_lnk_up(trn_lnk_up),
        .trn_rnp_ok(trn_rnp_ok),
        .\tstrb_prev_reg[7] (\tstrb_prev_reg[7] ),
        .user_lnk_up_mux_reg(\end_point.trn_lnk_up_d_reg ),
        .user_lnk_up_mux_reg_0(user_lnk_up_mux_reg_0),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
  LUT2 #(
    .INIT(4'h7)) 
    \rd_req_32_64.rdreqpipeline[2]_i_1 
       (.I0(\end_point.trn_lnk_up_d_reg ),
        .I1(axi_aresetn),
        .O(\rd_req_32_64.rdndreqpipeline_reg[0] ));
  FDRE #(
    .INIT(1'b1)) 
    sys_rst_n_int_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(axi_aresetn),
        .Q(sys_rst_n_int),
        .R(1'b0));
  FDRE user_lnk_up_int_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(trn_lnk_up),
        .Q(user_lnk_up_int),
        .R(\pcie_top_with_gt_top.pcie_top_i_n_0 ));
  FDRE user_lnk_up_mux_reg
       (.C(int_userclk1_out),
        .CE(1'b1),
        .D(user_lnk_up_int),
        .Q(\end_point.trn_lnk_up_d_reg ),
        .R(\pcie_top_with_gt_top.pcie_top_i_n_0 ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_common" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_common
   (\int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    \drp_done_reg1_reg[0] ,
    CLK,
    REFCLK,
    SR,
    qrst_drp_start,
    gt_cpllpdrefclk,
    rst_cpllreset);
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output \drp_done_reg1_reg[0] ;
  input CLK;
  input REFCLK;
  input [0:0]SR;
  input qrst_drp_start;
  input gt_cpllpdrefclk;
  input rst_cpllreset;

  wire CLK;
  wire REFCLK;
  wire [0:0]SR;
  wire \drp_done_reg1_reg[0] ;
  wire gt_cpllpdrefclk;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire [7:0]qpll_drp_addr;
  wire [15:0]qpll_drp_di;
  wire [15:0]qpll_drp_do;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  wire qrst_drp_start;
  wire rst_cpllreset;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_drp qpll_drp_i
       (.CLK(CLK),
        .D(qpll_drp_do),
        .Q({qpll_drp_addr[7],qpll_drp_addr[5],qpll_drp_addr[2:0]}),
        .SR(SR),
        .\cpllpd_wait_reg[95] (\int_qplllock_out[0] ),
        .\drp_done_reg1_reg[0] (\drp_done_reg1_reg[0] ),
        .qpll_drp_en(qpll_drp_en),
        .qpll_drp_rdy(qpll_drp_rdy),
        .qpll_drp_we(qpll_drp_we),
        .qrst_drp_start(qrst_drp_start),
        .rdy_reg1_reg_0(qpll_drp_di));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_wrapper qpll_wrapper_i
       (.CLK(CLK),
        .D(qpll_drp_do),
        .Q({qpll_drp_addr[7],qpll_drp_addr[5],qpll_drp_addr[2:0]}),
        .REFCLK(REFCLK),
        .\di_reg[15] (qpll_drp_di),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .\int_qplllock_out[0] (\int_qplllock_out[0] ),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .qpll_drp_en(qpll_drp_en),
        .qpll_drp_rdy(qpll_drp_rdy),
        .qpll_drp_we(qpll_drp_we),
        .rst_cpllreset(rst_cpllreset));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_rx_valid_filter_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_rx_valid_filter_7x
   (\pipe_stages_1.pipe_rx_valid_q_reg ,
    gt_rx_phy_status_q,
    gt_rxelecidle_q,
    \pipe_stages_1.pipe_rx_data_q_reg[15] ,
    \gt_rx_status_q_reg[2]_0 ,
    D,
    \pipe_stages_1.pipe_rx_status_q_reg[2] ,
    SR,
    CLK,
    rate_idle_reg2_reg,
    \resetovrd.reset_reg[4] ,
    rate_idle_reg2_reg_0,
    Q,
    \resetovrd.reset_reg[4]_0 ,
    \resetovrd.reset_reg[4]_1 ,
    gt_rxvalid_q_reg_0);
  output \pipe_stages_1.pipe_rx_valid_q_reg ;
  output gt_rx_phy_status_q;
  output gt_rxelecidle_q;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  output \gt_rx_status_q_reg[2]_0 ;
  output [1:0]D;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  input [0:0]SR;
  input CLK;
  input rate_idle_reg2_reg;
  input \resetovrd.reset_reg[4] ;
  input rate_idle_reg2_reg_0;
  input [5:0]Q;
  input [1:0]\resetovrd.reset_reg[4]_0 ;
  input [15:0]\resetovrd.reset_reg[4]_1 ;
  input [2:0]gt_rxvalid_q_reg_0;

  wire CLK;
  wire [1:0]D;
  wire [5:0]Q;
  wire [0:0]SR;
  wire gt_rx_phy_status_q;
  wire \gt_rx_status_q_reg[2]_0 ;
  wire \gt_rxcharisk_q_reg_n_0_[0] ;
  wire gt_rxelecidle_q;
  wire gt_rxvalid_q__0;
  wire gt_rxvalid_q_i_3_n_0;
  wire gt_rxvalid_q_n_0;
  wire [2:0]gt_rxvalid_q_reg_0;
  wire p_1_in;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  wire \pipe_stages_1.pipe_rx_valid_q_reg ;
  wire rate_idle_reg2_reg;
  wire rate_idle_reg2_reg_0;
  wire [3:0]reg_state_eios_det;
  wire \reg_state_eios_det[0]_i_2_n_0 ;
  wire \reg_state_eios_det[0]_i_3_n_0 ;
  wire \reg_state_eios_det[0]_i_4_n_0 ;
  wire \reg_state_eios_det[1]_i_2_n_0 ;
  wire \reg_state_eios_det[2]_i_1_n_0 ;
  wire \reg_state_eios_det[2]_i_2_n_0 ;
  wire \reg_state_eios_det[3]_i_2_n_0 ;
  wire \reg_state_eios_det[3]_i_3_n_0 ;
  wire \reg_state_eios_det[4]_i_1_n_0 ;
  wire \reg_state_eios_det[4]_i_2_n_0 ;
  wire \reg_state_eios_det[4]_i_3_n_0 ;
  wire \reg_state_eios_det[4]_i_4_n_0 ;
  wire reg_symbol_after_eios_i_1_n_0;
  wire \resetovrd.reset_reg[4] ;
  wire [1:0]\resetovrd.reset_reg[4]_0 ;
  wire [15:0]\resetovrd.reset_reg[4]_1 ;
  wire [4:0]state_eios_det;
  wire symbol_after_eios;

  FDRE gt_rx_phy_status_q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rate_idle_reg2_reg),
        .Q(gt_rx_phy_status_q),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFEFFFFFFFFFFF)) 
    \gt_rx_status_q[2]_i_2 
       (.I0(Q[5]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\gt_rx_status_q_reg[2]_0 ));
  FDRE \gt_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid_q_reg_0[0]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2] [0]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid_q_reg_0[1]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2] [1]),
        .R(SR));
  FDRE \gt_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid_q_reg_0[2]),
        .Q(\pipe_stages_1.pipe_rx_status_q_reg[2] [2]),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_0 [0]),
        .Q(\gt_rxcharisk_q_reg_n_0_[0] ),
        .R(SR));
  FDRE \gt_rxcharisk_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_0 [1]),
        .Q(p_1_in),
        .R(SR));
  FDRE \gt_rxdata_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [0]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [0]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [10]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [10]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [11]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [11]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [12]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [12]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [13]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [13]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [14]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [14]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [15]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [15]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [1]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [1]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [2]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [2]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [3]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [3]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [4]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [4]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [5]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [5]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [6]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [6]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [7]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [7]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [8]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [8]),
        .R(SR));
  FDRE \gt_rxdata_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_1 [9]),
        .Q(\pipe_stages_1.pipe_rx_data_q_reg[15] [9]),
        .R(SR));
  FDRE gt_rxelecidle_q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4] ),
        .Q(gt_rxelecidle_q),
        .R(SR));
  LUT5 #(
    .INIT(32'h00010116)) 
    gt_rxvalid_q
       (.I0(state_eios_det[0]),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[4]),
        .O(gt_rxvalid_q_n_0));
  LUT6 #(
    .INIT(64'h000000000000FFFB)) 
    gt_rxvalid_q_i_1
       (.I0(\reg_state_eios_det[0]_i_4_n_0 ),
        .I1(gt_rxvalid_q_n_0),
        .I2(state_eios_det[0]),
        .I3(\reg_state_eios_det[0]_i_2_n_0 ),
        .I4(rate_idle_reg2_reg_0),
        .I5(gt_rxvalid_q_i_3_n_0),
        .O(gt_rxvalid_q__0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    gt_rxvalid_q_i_3
       (.I0(state_eios_det[4]),
        .I1(state_eios_det[0]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[3]),
        .I4(state_eios_det[1]),
        .I5(\gt_rx_status_q_reg[2]_0 ),
        .O(gt_rxvalid_q_i_3_n_0));
  FDRE gt_rxvalid_q_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxvalid_q__0),
        .Q(\pipe_stages_1.pipe_rx_valid_q_reg ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[0]_i_1 
       (.I0(\pipe_stages_1.pipe_rx_valid_q_reg ),
        .I1(\gt_rxcharisk_q_reg_n_0_[0] ),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \pipe_stages_1.pipe_rx_char_is_k_q[1]_i_1 
       (.I0(p_1_in),
        .I1(\pipe_stages_1.pipe_rx_valid_q_reg ),
        .I2(symbol_after_eios),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hFFFFAAEA)) 
    \reg_state_eios_det[0]_i_1 
       (.I0(\reg_state_eios_det[0]_i_2_n_0 ),
        .I1(\reg_state_eios_det[1]_i_2_n_0 ),
        .I2(state_eios_det[0]),
        .I3(\reg_state_eios_det[0]_i_3_n_0 ),
        .I4(\reg_state_eios_det[0]_i_4_n_0 ),
        .O(reg_state_eios_det[0]));
  LUT4 #(
    .INIT(16'hF200)) 
    \reg_state_eios_det[0]_i_2 
       (.I0(state_eios_det[1]),
        .I1(\reg_state_eios_det[4]_i_3_n_0 ),
        .I2(state_eios_det[2]),
        .I3(\reg_state_eios_det[3]_i_2_n_0 ),
        .O(\reg_state_eios_det[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \reg_state_eios_det[0]_i_3 
       (.I0(\reg_state_eios_det[2]_i_2_n_0 ),
        .I1(p_1_in),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [14]),
        .I3(\pipe_stages_1.pipe_rx_data_q_reg[15] [15]),
        .O(\reg_state_eios_det[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \reg_state_eios_det[0]_i_4 
       (.I0(state_eios_det[4]),
        .I1(\reg_state_eios_det[4]_i_3_n_0 ),
        .I2(state_eios_det[3]),
        .O(\reg_state_eios_det[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_state_eios_det[1]_i_1 
       (.I0(state_eios_det[0]),
        .I1(\reg_state_eios_det[1]_i_2_n_0 ),
        .O(reg_state_eios_det[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \reg_state_eios_det[1]_i_2 
       (.I0(\reg_state_eios_det[3]_i_3_n_0 ),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [6]),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [7]),
        .I3(\pipe_stages_1.pipe_rx_data_q_reg[15] [14]),
        .I4(\pipe_stages_1.pipe_rx_data_q_reg[15] [15]),
        .I5(\reg_state_eios_det[2]_i_2_n_0 ),
        .O(\reg_state_eios_det[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \reg_state_eios_det[2]_i_1 
       (.I0(\pipe_stages_1.pipe_rx_data_q_reg[15] [15]),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [14]),
        .I2(p_1_in),
        .I3(\reg_state_eios_det[2]_i_2_n_0 ),
        .I4(state_eios_det[0]),
        .O(\reg_state_eios_det[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFBFFFFFFFFFFFFFF)) 
    \reg_state_eios_det[2]_i_2 
       (.I0(\pipe_stages_1.pipe_rx_data_q_reg[15] [9]),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [11]),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [8]),
        .I3(\pipe_stages_1.pipe_rx_data_q_reg[15] [10]),
        .I4(\pipe_stages_1.pipe_rx_data_q_reg[15] [12]),
        .I5(\pipe_stages_1.pipe_rx_data_q_reg[15] [13]),
        .O(\reg_state_eios_det[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \reg_state_eios_det[3]_i_1 
       (.I0(state_eios_det[2]),
        .I1(\reg_state_eios_det[3]_i_2_n_0 ),
        .O(reg_state_eios_det[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFBFFFFFFFF)) 
    \reg_state_eios_det[3]_i_2 
       (.I0(\reg_state_eios_det[3]_i_3_n_0 ),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [14]),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [15]),
        .I3(\reg_state_eios_det[2]_i_2_n_0 ),
        .I4(\pipe_stages_1.pipe_rx_data_q_reg[15] [7]),
        .I5(\pipe_stages_1.pipe_rx_data_q_reg[15] [6]),
        .O(\reg_state_eios_det[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    \reg_state_eios_det[3]_i_3 
       (.I0(\pipe_stages_1.pipe_rx_data_q_reg[15] [3]),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [0]),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [1]),
        .I3(\reg_state_eios_det[4]_i_4_n_0 ),
        .I4(p_1_in),
        .O(\reg_state_eios_det[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \reg_state_eios_det[4]_i_1 
       (.I0(state_eios_det[3]),
        .I1(state_eios_det[4]),
        .I2(state_eios_det[2]),
        .I3(state_eios_det[0]),
        .I4(state_eios_det[1]),
        .O(\reg_state_eios_det[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \reg_state_eios_det[4]_i_2 
       (.I0(\reg_state_eios_det[4]_i_3_n_0 ),
        .I1(state_eios_det[1]),
        .I2(state_eios_det[3]),
        .O(\reg_state_eios_det[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \reg_state_eios_det[4]_i_3 
       (.I0(\pipe_stages_1.pipe_rx_data_q_reg[15] [6]),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [7]),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [3]),
        .I3(\pipe_stages_1.pipe_rx_data_q_reg[15] [0]),
        .I4(\pipe_stages_1.pipe_rx_data_q_reg[15] [1]),
        .I5(\reg_state_eios_det[4]_i_4_n_0 ),
        .O(\reg_state_eios_det[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \reg_state_eios_det[4]_i_4 
       (.I0(\gt_rxcharisk_q_reg_n_0_[0] ),
        .I1(\pipe_stages_1.pipe_rx_data_q_reg[15] [5]),
        .I2(\pipe_stages_1.pipe_rx_data_q_reg[15] [4]),
        .I3(\pipe_stages_1.pipe_rx_data_q_reg[15] [2]),
        .O(\reg_state_eios_det[4]_i_4_n_0 ));
  FDSE \reg_state_eios_det_reg[0] 
       (.C(CLK),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(reg_state_eios_det[0]),
        .Q(state_eios_det[0]),
        .S(SR));
  FDRE \reg_state_eios_det_reg[1] 
       (.C(CLK),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(reg_state_eios_det[1]),
        .Q(state_eios_det[1]),
        .R(SR));
  FDRE \reg_state_eios_det_reg[2] 
       (.C(CLK),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(\reg_state_eios_det[2]_i_1_n_0 ),
        .Q(state_eios_det[2]),
        .R(SR));
  FDRE \reg_state_eios_det_reg[3] 
       (.C(CLK),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(reg_state_eios_det[3]),
        .Q(state_eios_det[3]),
        .R(SR));
  FDRE \reg_state_eios_det_reg[4] 
       (.C(CLK),
        .CE(\reg_state_eios_det[4]_i_1_n_0 ),
        .D(\reg_state_eios_det[4]_i_2_n_0 ),
        .Q(state_eios_det[4]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    reg_symbol_after_eios_i_1
       (.I0(state_eios_det[2]),
        .I1(\reg_state_eios_det[3]_i_2_n_0 ),
        .I2(state_eios_det[0]),
        .I3(state_eios_det[1]),
        .I4(state_eios_det[4]),
        .I5(state_eios_det[3]),
        .O(reg_symbol_after_eios_i_1_n_0));
  FDRE reg_symbol_after_eios_reg
       (.C(CLK),
        .CE(1'b1),
        .D(reg_symbol_after_eios_i_1_n_0),
        .Q(symbol_after_eios),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_top" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_top
   (clk_txoutclk,
    int_oobclk_out,
    int_pclk_out_slave,
    CLK,
    int_userclk1_out,
    mmcm_lock,
    \int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rx0_chanisaligned_gt,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    pipe_rxsyncdone,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    pipe_rxdisperr,
    pipe_rxnotintable,
    out0,
    pclk_sel_reg1_reg,
    pipe_rate_idle,
    pipe_rst_idle,
    pipe_sync_fsm_rx,
    pipe_rx0_valid_gt,
    gt_rxelecidle_q_reg,
    gt_rx_phy_status_q,
    gt_rxelecidle_q,
    pipe_rst_fsm,
    sys_rst_n,
    \pipe_stages_1.pipe_rx_data_q_reg[15] ,
    \pipe_rate_fsm[3] ,
    \pipe_drp_fsm[2] ,
    \pipe_stages_1.pipe_rx_status_q_reg[2] ,
    gt_ch_drp_rdy,
    \pipe_qrst_fsm[0] ,
    pipe_qrst_fsm,
    pipe_qrst_idle,
    D,
    REFCLK,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rx0_polarity_gt,
    pipe_rxprbscntreset,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    pipe_tx0_elec_idle_gt,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    Q,
    pipe_loopback,
    pipe_rxprbssel,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    pipe_txprbssel,
    \pipe_stages_1.pipe_tx_data_q_reg[15] ,
    TXCHARDISPMODE,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ,
    int_pclk_sel_slave,
    SR,
    pipe_mmcm_rst_n,
    UNCONN_IN,
    UNCONN_IN_0,
    pl_ltssm_state,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output clk_txoutclk;
  output int_oobclk_out;
  output int_pclk_out_slave;
  output CLK;
  output int_userclk1_out;
  output mmcm_lock;
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output pipe_rx0_chanisaligned_gt;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output [0:0]pipe_rxsyncdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [5:0]out0;
  output pclk_sel_reg1_reg;
  output [0:0]pipe_rate_idle;
  output pipe_rst_idle;
  output [0:0]pipe_sync_fsm_rx;
  output pipe_rx0_valid_gt;
  output [0:0]gt_rxelecidle_q_reg;
  output gt_rx_phy_status_q;
  output gt_rxelecidle_q;
  output [3:0]pipe_rst_fsm;
  output sys_rst_n;
  output [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  output [3:0]\pipe_rate_fsm[3] ;
  output [2:0]\pipe_drp_fsm[2] ;
  output [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]\pipe_qrst_fsm[0] ;
  output [2:0]pipe_qrst_fsm;
  output pipe_qrst_idle;
  output [1:0]D;
  input REFCLK;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input pipe_rx0_polarity_gt;
  input pipe_rxprbscntreset;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input pipe_tx0_elec_idle_gt;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [1:0]Q;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  input [2:0]pipe_txprbssel;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  input [0:0]TXCHARDISPMODE;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  input [0:0]int_pclk_sel_slave;
  input [0:0]SR;
  input pipe_mmcm_rst_n;
  input [1:0]UNCONN_IN;
  input [1:0]UNCONN_IN_0;
  input [5:0]pl_ltssm_state;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire [1:0]D;
  wire [1:0]Q;
  wire REFCLK;
  wire [0:0]SR;
  wire [0:0]TXCHARDISPMODE;
  wire [1:0]UNCONN_IN;
  wire [1:0]UNCONN_IN_0;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [0:0]gt_ch_drp_rdy;
  wire gt_rx_phy_status_q;
  wire \gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_19 ;
  wire gt_rxelecidle_q;
  wire [0:0]gt_rxelecidle_q_reg;
  wire int_oobclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire int_userclk1_out;
  wire mmcm_lock;
  wire [5:0]out0;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pclk_sel_reg1_reg;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\pipe_drp_fsm[2] ;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [2:0]pipe_qrst_fsm;
  wire [0:0]\pipe_qrst_fsm[0] ;
  wire pipe_qrst_idle;
  wire [3:0]\pipe_rate_fsm[3] ;
  wire [0:0]pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire pipe_rx0_chanisaligned_gt;
  wire pipe_rx0_polarity_gt;
  wire pipe_rx0_valid_gt;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire [15:0]\pipe_stages_1.pipe_rx_data_q_reg[15] ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire [0:0]pipe_sync_fsm_rx;
  wire pipe_tx0_elec_idle_gt;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire pipe_wrapper_i_n_102;
  wire pipe_wrapper_i_n_110;
  wire pipe_wrapper_i_n_111;
  wire pipe_wrapper_i_n_112;
  wire pipe_wrapper_i_n_113;
  wire pipe_wrapper_i_n_114;
  wire pipe_wrapper_i_n_115;
  wire pipe_wrapper_i_n_16;
  wire pipe_wrapper_i_n_62;
  wire pipe_wrapper_i_n_63;
  wire pipe_wrapper_i_n_64;
  wire pipe_wrapper_i_n_65;
  wire pipe_wrapper_i_n_66;
  wire pipe_wrapper_i_n_67;
  wire pipe_wrapper_i_n_68;
  wire pipe_wrapper_i_n_69;
  wire pipe_wrapper_i_n_70;
  wire pipe_wrapper_i_n_71;
  wire pipe_wrapper_i_n_72;
  wire pipe_wrapper_i_n_73;
  wire pipe_wrapper_i_n_74;
  wire pipe_wrapper_i_n_75;
  wire pipe_wrapper_i_n_76;
  wire pipe_wrapper_i_n_77;
  wire pipe_wrapper_i_n_78;
  wire pipe_wrapper_i_n_79;
  wire [5:0]pl_ltssm_state;
  wire [5:0]pl_ltssm_state_q;
  wire reg_clock_locked;
  wire sys_rst_n;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_rx_valid_filter_7x \gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst 
       (.CLK(int_oobclk_out),
        .D(D),
        .Q(pl_ltssm_state_q),
        .SR(gt_rxelecidle_q_reg),
        .gt_rx_phy_status_q(gt_rx_phy_status_q),
        .\gt_rx_status_q_reg[2]_0 (\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_19 ),
        .gt_rxelecidle_q(gt_rxelecidle_q),
        .gt_rxvalid_q_reg_0({pipe_wrapper_i_n_112,pipe_wrapper_i_n_113,pipe_wrapper_i_n_114}),
        .\pipe_stages_1.pipe_rx_data_q_reg[15] (\pipe_stages_1.pipe_rx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_rx_status_q_reg[2] (\pipe_stages_1.pipe_rx_status_q_reg[2] ),
        .\pipe_stages_1.pipe_rx_valid_q_reg (pipe_rx0_valid_gt),
        .rate_idle_reg2_reg(pipe_wrapper_i_n_115),
        .rate_idle_reg2_reg_0(pipe_wrapper_i_n_111),
        .\resetovrd.reset_reg[4] (pipe_wrapper_i_n_16),
        .\resetovrd.reset_reg[4]_0 ({pipe_wrapper_i_n_78,pipe_wrapper_i_n_79}),
        .\resetovrd.reset_reg[4]_1 ({pipe_wrapper_i_n_62,pipe_wrapper_i_n_63,pipe_wrapper_i_n_64,pipe_wrapper_i_n_65,pipe_wrapper_i_n_66,pipe_wrapper_i_n_67,pipe_wrapper_i_n_68,pipe_wrapper_i_n_69,pipe_wrapper_i_n_70,pipe_wrapper_i_n_71,pipe_wrapper_i_n_72,pipe_wrapper_i_n_73,pipe_wrapper_i_n_74,pipe_wrapper_i_n_75,pipe_wrapper_i_n_76,pipe_wrapper_i_n_77}));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_6
       (.I0(gt_rxelecidle_q_reg),
        .O(sys_rst_n));
  FDRE phy_rdy_n_int_reg
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(pipe_wrapper_i_n_110),
        .Q(gt_rxelecidle_q_reg),
        .R(1'b0));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_wrapper pipe_wrapper_i
       (.CLK(int_oobclk_out),
        .Q(Q),
        .REFCLK(REFCLK),
        .SR(SR),
        .TXCHARDISPMODE(TXCHARDISPMODE),
        .UNCONN_IN(UNCONN_IN),
        .UNCONN_IN_0(UNCONN_IN_0),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .gt_ch_drp_rdy(gt_ch_drp_rdy),
        .gt_rx_phy_status_q_reg(pipe_wrapper_i_n_115),
        .\gt_rx_status_q_reg[2] ({pipe_wrapper_i_n_112,pipe_wrapper_i_n_113,pipe_wrapper_i_n_114}),
        .\gt_rxcharisk_q_reg[1] ({pipe_wrapper_i_n_78,pipe_wrapper_i_n_79}),
        .\gt_rxdata_q_reg[15] ({pipe_wrapper_i_n_62,pipe_wrapper_i_n_63,pipe_wrapper_i_n_64,pipe_wrapper_i_n_65,pipe_wrapper_i_n_66,pipe_wrapper_i_n_67,pipe_wrapper_i_n_68,pipe_wrapper_i_n_69,pipe_wrapper_i_n_70,pipe_wrapper_i_n_71,pipe_wrapper_i_n_72,pipe_wrapper_i_n_73,pipe_wrapper_i_n_74,pipe_wrapper_i_n_75,pipe_wrapper_i_n_76,pipe_wrapper_i_n_77}),
        .gt_rxvalid_q_reg(pipe_wrapper_i_n_111),
        .gt_rxvalid_q_reg_0(pipe_rx0_valid_gt),
        .int_dclk_out(CLK),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .\int_qplllock_out[0] (\int_qplllock_out[0] ),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .int_userclk1_out(int_userclk1_out),
        .mmcm_lock(mmcm_lock),
        .out0(out0),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pclk_sel_reg1_reg(pclk_sel_reg1_reg),
        .phy_rdy_n_int_reg(pipe_wrapper_i_n_110),
        .pipe_dmonitorout(pipe_dmonitorout),
        .\pipe_drp_fsm[2] (\pipe_drp_fsm[2] ),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .\pipe_qrst_fsm[0] (\pipe_qrst_fsm[0] ),
        .pipe_qrst_idle(pipe_qrst_idle),
        .\pipe_rate_fsm[3] (\pipe_rate_fsm[3] ),
        .pipe_rate_idle(pipe_rate_idle),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rx0_chanisaligned_gt(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_polarity_gt(pipe_rx0_polarity_gt),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15] (\pipe_stages_1.pipe_tx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (\pipe_stages_1.pipe_tx_margin_q_reg[2] ),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .\pl_ltssm_state_q_reg[0] (pipe_wrapper_i_n_102),
        .\pl_ltssm_state_q_reg[5] (\gt_rx_valid_filter[0].GT_RX_VALID_FILTER_7x_inst_n_19 ),
        .reg_clock_locked(reg_clock_locked),
        .rxelecidle_reg1_reg(pipe_wrapper_i_n_16));
  FDCE \pl_ltssm_state_q_reg[0] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(pl_ltssm_state[0]),
        .Q(pl_ltssm_state_q[0]));
  FDCE \pl_ltssm_state_q_reg[1] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(pl_ltssm_state[1]),
        .Q(pl_ltssm_state_q[1]));
  FDCE \pl_ltssm_state_q_reg[2] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(pl_ltssm_state[2]),
        .Q(pl_ltssm_state_q[2]));
  FDCE \pl_ltssm_state_q_reg[3] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(pl_ltssm_state[3]),
        .Q(pl_ltssm_state_q[3]));
  FDCE \pl_ltssm_state_q_reg[4] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(pl_ltssm_state[4]),
        .Q(pl_ltssm_state_q[4]));
  FDCE \pl_ltssm_state_q_reg[5] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(pl_ltssm_state[5]),
        .Q(pl_ltssm_state_q[5]));
  FDCE reg_clock_locked_reg
       (.C(int_oobclk_out),
        .CE(1'b1),
        .CLR(pipe_wrapper_i_n_102),
        .D(1'b1),
        .Q(reg_clock_locked));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_wrapper" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_wrapper
   (ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    gt_phystatus,
    gt_rxcdrlock,
    pipe_rx0_chanisaligned_gt,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    rxelecidle_reg1_reg,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    gt_rxratedone,
    gt_rxresetdone,
    pipe_rxsyncdone,
    gt_rxvalid,
    pipe_txdlysresetdone,
    clk_txoutclk,
    pipe_txphaligndone,
    pipe_txphinitdone,
    gt_txratedone,
    gt_txresetdone,
    gt_txsyncdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    \gt_rxdata_q_reg[15] ,
    \gt_rxcharisk_q_reg[1] ,
    pipe_rxdisperr,
    pipe_rxnotintable,
    \gt_rx_status_q_reg[2] ,
    CLK,
    drp_mux_en,
    drp_mux_we,
    user_eyescanreset,
    pci_exp_rxn,
    pci_exp_rxp,
    rst_gtreset,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    user_resetovrd,
    user_rxbufreset,
    user_rxcdrfreqreset,
    user_rxcdrreset,
    user_rxpcsreset,
    gt_rxpmareset_i,
    pipe_rx0_polarity_gt,
    pipe_rxprbscntreset,
    txcompliance_reg2_reg,
    rst_userrdy,
    pclk_sel_reg,
    oobclk,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    sync_txdlyen,
    out0,
    pipe_tx0_elec_idle_gt,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    txcompliance_reg2_reg_0,
    DRPDI,
    Q,
    pipe_loopback,
    pipe_rxprbssel,
    RXRATE,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    pipe_txprbssel,
    \pipe_stages_1.pipe_tx_data_q_reg[15] ,
    TXCHARDISPMODE,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ,
    TXPOSTCURSOR,
    TXPRECURSOR,
    TXMAINCURSOR,
    DRPADDR,
    REFCLK,
    \pl_ltssm_state_q_reg[5] ,
    gt_rxvalid_q_reg);
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output gt_phystatus;
  output gt_rxcdrlock;
  output pipe_rx0_chanisaligned_gt;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output rxelecidle_reg1_reg;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output gt_rxratedone;
  output gt_rxresetdone;
  output [0:0]pipe_rxsyncdone;
  output gt_rxvalid;
  output [0:0]pipe_txdlysresetdone;
  output clk_txoutclk;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output gt_txratedone;
  output gt_txresetdone;
  output gt_txsyncdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [15:0]\gt_rxdata_q_reg[15] ;
  output [1:0]\gt_rxcharisk_q_reg[1] ;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [2:0]\gt_rx_status_q_reg[2] ;
  input CLK;
  input drp_mux_en;
  input drp_mux_we;
  input user_eyescanreset;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input rst_gtreset;
  input [0:0]int_qplloutclk_out;
  input [0:0]int_qplloutrefclk_out;
  input user_resetovrd;
  input user_rxbufreset;
  input user_rxcdrfreqreset;
  input user_rxcdrreset;
  input user_rxpcsreset;
  input gt_rxpmareset_i;
  input pipe_rx0_polarity_gt;
  input pipe_rxprbscntreset;
  input txcompliance_reg2_reg;
  input rst_userrdy;
  input pclk_sel_reg;
  input oobclk;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input sync_txdlyen;
  input [2:0]out0;
  input pipe_tx0_elec_idle_gt;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input txcompliance_reg2_reg_0;
  input [15:0]DRPDI;
  input [1:0]Q;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [0:0]RXRATE;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  input [2:0]pipe_txprbssel;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  input [0:0]TXCHARDISPMODE;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  input [4:0]TXPOSTCURSOR;
  input [4:0]TXPRECURSOR;
  input [6:0]TXMAINCURSOR;
  input [8:0]DRPADDR;
  input REFCLK;
  input \pl_ltssm_state_q_reg[5] ;
  input gt_rxvalid_q_reg;

  wire CLK;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire [1:0]Q;
  wire REFCLK;
  wire [0:0]RXRATE;
  wire [0:0]TXCHARDISPMODE;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire drp_mux_en;
  wire drp_mux_we;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drprdy;
  wire gt_phystatus;
  wire [2:0]\gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock;
  wire [1:0]\gt_rxcharisk_q_reg[1] ;
  wire [15:0]\gt_rxdata_q_reg[15] ;
  wire gt_rxpmareset_i;
  wire gt_rxratedone;
  wire gt_rxresetdone;
  wire gt_rxsyncout;
  wire gt_rxvalid;
  wire gt_rxvalid_q_reg;
  wire gt_txratedone;
  wire gt_txresetdone;
  wire gt_txsyncdone;
  wire gt_txsyncout;
  wire \gtp_channel.gtpe2_channel_i_n_112 ;
  wire \gtp_channel.gtpe2_channel_i_n_113 ;
  wire \gtp_channel.gtpe2_channel_i_n_114 ;
  wire \gtp_channel.gtpe2_channel_i_n_115 ;
  wire \gtp_channel.gtpe2_channel_i_n_116 ;
  wire \gtp_channel.gtpe2_channel_i_n_117 ;
  wire \gtp_channel.gtpe2_channel_i_n_118 ;
  wire \gtp_channel.gtpe2_channel_i_n_119 ;
  wire \gtp_channel.gtpe2_channel_i_n_120 ;
  wire \gtp_channel.gtpe2_channel_i_n_121 ;
  wire \gtp_channel.gtpe2_channel_i_n_122 ;
  wire \gtp_channel.gtpe2_channel_i_n_123 ;
  wire \gtp_channel.gtpe2_channel_i_n_124 ;
  wire \gtp_channel.gtpe2_channel_i_n_125 ;
  wire \gtp_channel.gtpe2_channel_i_n_126 ;
  wire \gtp_channel.gtpe2_channel_i_n_127 ;
  wire \gtp_channel.gtpe2_channel_i_n_144 ;
  wire \gtp_channel.gtpe2_channel_i_n_145 ;
  wire \gtp_channel.gtpe2_channel_i_n_146 ;
  wire \gtp_channel.gtpe2_channel_i_n_147 ;
  wire \gtp_channel.gtpe2_channel_i_n_148 ;
  wire \gtp_channel.gtpe2_channel_i_n_149 ;
  wire \gtp_channel.gtpe2_channel_i_n_152 ;
  wire \gtp_channel.gtpe2_channel_i_n_153 ;
  wire \gtp_channel.gtpe2_channel_i_n_154 ;
  wire \gtp_channel.gtpe2_channel_i_n_155 ;
  wire \gtp_channel.gtpe2_channel_i_n_7 ;
  wire \gtp_channel.gtpe2_channel_i_n_8 ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire oobclk;
  wire [2:0]out0;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pclk_sel_reg;
  wire [14:0]pipe_dmonitorout;
  wire [0:0]pipe_eyescandataerror;
  wire [2:0]pipe_loopback;
  wire pipe_rx0_chanisaligned_gt;
  wire pipe_rx0_polarity_gt;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire pipe_tx0_elec_idle_gt;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire \pl_ltssm_state_q_reg[5] ;
  wire rst_gtreset;
  wire rst_userrdy;
  wire rxelecidle_reg1_reg;
  wire sync_txdlyen;
  wire txcompliance_reg2_reg;
  wire txcompliance_reg2_reg_0;
  wire user_eyescanreset;
  wire user_resetovrd;
  wire user_rxbufreset;
  wire user_rxcdrfreqreset;
  wire user_rxcdrreset;
  wire user_rxpcsreset;
  wire NLW_gInst_O_UNCONNECTED;
  wire \NLW_gtp_channel.gtpe2_channel_i_PMARSVDOUT0_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_PMARSVDOUT1_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXCHANREALIGN_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXCOMINITDET_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXCOMSASDET_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXCOMWAKEDET_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXHEADERVALID_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXOSINTDONE_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXOSINTSTARTED_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_RXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_TXCOMFINISH_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_TXGEARBOXREADY_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_TXOUTCLKPCS_UNCONNECTED ;
  wire \NLW_gtp_channel.gtpe2_channel_i_TXPMARESETDONE_UNCONNECTED ;
  wire [15:0]\NLW_gtp_channel.gtpe2_channel_i_PCSRSVDOUT_UNCONNECTED ;
  wire [1:0]\NLW_gtp_channel.gtpe2_channel_i_RXCLKCORCNT_UNCONNECTED ;
  wire [1:0]\NLW_gtp_channel.gtpe2_channel_i_RXDATAVALID_UNCONNECTED ;
  wire [2:0]\NLW_gtp_channel.gtpe2_channel_i_RXHEADER_UNCONNECTED ;
  wire [4:0]\NLW_gtp_channel.gtpe2_channel_i_RXPHMONITOR_UNCONNECTED ;
  wire [4:0]\NLW_gtp_channel.gtpe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED ;
  wire [1:0]\NLW_gtp_channel.gtpe2_channel_i_RXSTARTOFSEQ_UNCONNECTED ;
  wire [1:0]\NLW_gtp_channel.gtpe2_channel_i_TXBUFSTATUS_UNCONNECTED ;

  (* box_type = "PRIMITIVE" *) 
  BUFG gInst
       (.I(REFCLK),
        .O(NLW_gInst_O_UNCONNECTED));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[0]_i_1 
       (.I0(pipe_rxstatus[0]),
        .I1(\pl_ltssm_state_q_reg[5] ),
        .I2(gt_rxvalid_q_reg),
        .O(\gt_rx_status_q_reg[2] [0]));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[1]_i_1 
       (.I0(pipe_rxstatus[1]),
        .I1(\pl_ltssm_state_q_reg[5] ),
        .I2(gt_rxvalid_q_reg),
        .O(\gt_rx_status_q_reg[2] [1]));
  LUT3 #(
    .INIT(8'hA8)) 
    \gt_rx_status_q[2]_i_1 
       (.I0(pipe_rxstatus[2]),
        .I1(\pl_ltssm_state_q_reg[5] ),
        .I2(gt_rxvalid_q_reg),
        .O(\gt_rx_status_q_reg[2] [2]));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(20'b00000000000000000000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b1111111111),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("TRUE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("TRUE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .CBCC_DATA_SOURCE_SEL("DECODED"),
    .CFOK_CFG(43'b1001001000000000000000001000000111010000000),
    .CFOK_CFG2(7'b0100000),
    .CFOK_CFG3(7'b0100000),
    .CFOK_CFG4(1'b0),
    .CFOK_CFG5(2'b00),
    .CFOK_CFG6(4'b0000),
    .CHAN_BOND_KEEP_ALIGN("TRUE"),
    .CHAN_BOND_MAX_SKEW(7),
    .CHAN_BOND_SEQ_1_1(10'b0001001010),
    .CHAN_BOND_SEQ_1_2(10'b0001001010),
    .CHAN_BOND_SEQ_1_3(10'b0001001010),
    .CHAN_BOND_SEQ_1_4(10'b0110111100),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0001000101),
    .CHAN_BOND_SEQ_2_2(10'b0001000101),
    .CHAN_BOND_SEQ_2_3(10'b0001000101),
    .CHAN_BOND_SEQ_2_4(10'b0110111100),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("TRUE"),
    .CHAN_BOND_SEQ_LEN(4),
    .CLK_COMMON_SWING(1'b0),
    .CLK_CORRECT_USE("TRUE"),
    .CLK_COR_KEEP_IDLE("TRUE"),
    .CLK_COR_MAX_LAT(15),
    .CLK_COR_MIN_LAT(13),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0100011100),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b0000),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .DEC_MCOMMA_DETECT("TRUE"),
    .DEC_PCOMMA_DETECT("TRUE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DMONITOR_CFG(24'h000B01),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h010),
    .ES_PMA_CFG(10'b0000000000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER(80'h00000000000000000000),
    .ES_QUAL_MASK(80'h00000000000000000000),
    .ES_SDATA_MASK(80'h00000000000000000000),
    .ES_VERT_OFFSET(9'b000000000),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("TRUE"),
    .GEARBOX_MODE(3'b000),
    .IS_CLKRSVD0_INVERTED(1'b0),
    .IS_CLKRSVD1_INVERTED(1'b0),
    .IS_DMONITORCLK_INVERTED(1'b0),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_RXUSRCLK2_INVERTED(1'b0),
    .IS_RXUSRCLK_INVERTED(1'b0),
    .IS_SIGVALIDCLK_INVERTED(1'b0),
    .IS_TXPHDLYTSTCLK_INVERTED(1'b0),
    .IS_TXUSRCLK2_INVERTED(1'b0),
    .IS_TXUSRCLK_INVERTED(1'b0),
    .LOOPBACK_CFG(1'b0),
    .OUTREFCLK_SEL_INV(2'b11),
    .PCS_PCIE_EN("TRUE"),
    .PCS_RSVD_ATTR(48'h000000000100),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h09),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PMA_LOOPBACK_CFG(1'b0),
    .PMA_RSV(32'h00000333),
    .PMA_RSV2(32'h00002040),
    .PMA_RSV3(2'b00),
    .PMA_RSV4(4'b0000),
    .PMA_RSV5(1'b0),
    .PMA_RSV6(1'b0),
    .PMA_RSV7(1'b0),
    .RXBUFRESET_TIME(5'b00001),
    .RXBUF_ADDR_MODE("FULL"),
    .RXBUF_EIDLE_HI_CNT(4'b0100),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("TRUE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(61),
    .RXBUF_THRESH_OVRD("FALSE"),
    .RXBUF_THRESH_UNDFLW(4),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG(83'h0000107FE406001041010),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b1),
    .RXCDR_LOCK_CFG(6'b010101),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXDLY_CFG(16'h001F),
    .RXDLY_LCFG(9'h030),
    .RXDLY_TAP_CFG(16'h0000),
    .RXGEARBOX_EN("FALSE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPMRESET_TIME(7'b0001111),
    .RXLPM_BIAS_STARTUP_DISABLE(1'b0),
    .RXLPM_CFG(4'b0110),
    .RXLPM_CFG1(1'b0),
    .RXLPM_CM_CFG(1'b0),
    .RXLPM_GC_CFG(9'b111100010),
    .RXLPM_GC_CFG2(3'b001),
    .RXLPM_HF_CFG(14'b00001111110000),
    .RXLPM_HF_CFG2(5'b01010),
    .RXLPM_HF_CFG3(4'b0000),
    .RXLPM_HOLD_DURING_EIDLE(1'b1),
    .RXLPM_INCM_CFG(1'b1),
    .RXLPM_IPCM_CFG(1'b0),
    .RXLPM_LF_CFG(18'b000000001111110000),
    .RXLPM_LF_CFG2(5'b01010),
    .RXLPM_OSINT_CFG(3'b100),
    .RXOOB_CFG(7'b0000110),
    .RXOOB_CLK_CFG("FABRIC"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOSCALRESET_TIMEOUT(5'b00000),
    .RXOUT_DIV(2),
    .RXPCSRESET_TIME(5'b00001),
    .RXPHDLY_CFG(24'h004020),
    .RXPH_CFG(24'h000000),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(3'b000),
    .RXPI_CFG1(1'b1),
    .RXPI_CFG2(1'b1),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("PMA"),
    .RXSYNC_MULTILANE(1'b0),
    .RXSYNC_OVRD(1'b1),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_BIAS_CFG(16'b0000111100110011),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CLK25_DIV(4),
    .RX_CLKMUX_EN(1'b1),
    .RX_CM_SEL(2'b11),
    .RX_CM_TRIM(4'b1010),
    .RX_DATA_WIDTH(20),
    .RX_DDI_SEL(6'b000000),
    .RX_DEBUG_CFG(14'b00000000000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_OS_CFG(13'b0000010000000),
    .RX_SIG_VALID_DLY(10),
    .RX_XCLK_SEL("RXREC"),
    .SAS_MAX_COM(64),
    .SAS_MIN_COM(36),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_EIDLE_VAL(3'b100),
    .SATA_MAX_BURST(8),
    .SATA_MAX_INIT(21),
    .SATA_MAX_WAKE(7),
    .SATA_MIN_BURST(4),
    .SATA_MIN_INIT(12),
    .SATA_MIN_WAKE(4),
    .SATA_PLL_CFG("VCO_3000MHZ"),
    .SHOW_REALIGN_COMMA("FALSE"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("1"),
    .SIM_VERSION("1.0"),
    .TERM_RCAL_CFG(15'b100001000010000),
    .TERM_RCAL_OVRD(3'b000),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV(32'h00000000),
    .TXBUF_EN("FALSE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h001F),
    .TXDLY_LCFG(9'h030),
    .TXDLY_TAP_CFG(16'h0000),
    .TXGEARBOX_EN("FALSE"),
    .TXOOB_CFG(1'b1),
    .TXOUT_DIV(2),
    .TXPCSRESET_TIME(5'b00001),
    .TXPHDLY_CFG(24'h084020),
    .TXPH_CFG(16'h0780),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(2'b00),
    .TXPI_CFG1(2'b00),
    .TXPI_CFG2(2'b00),
    .TXPI_CFG3(1'b0),
    .TXPI_CFG4(1'b0),
    .TXPI_CFG5(3'b000),
    .TXPI_GREY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPMCLK_SEL("TXUSRCLK2"),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b000),
    .TXPMARESET_TIME(5'b00011),
    .TXSYNC_MULTILANE(1'b0),
    .TXSYNC_OVRD(1'b1),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(4),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(20),
    .TX_DEEMPH0(6'b010100),
    .TX_DEEMPH1(6'b001011),
    .TX_DRIVE_MODE("PIPE"),
    .TX_EIDLE_ASSERT_DELAY(3'b010),
    .TX_EIDLE_DEASSERT_DELAY(3'b010),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1001111),
    .TX_MARGIN_FULL_1(7'b1001110),
    .TX_MARGIN_FULL_2(7'b1001101),
    .TX_MARGIN_FULL_3(7'b1001100),
    .TX_MARGIN_FULL_4(7'b1000011),
    .TX_MARGIN_LOW_0(7'b1000101),
    .TX_MARGIN_LOW_1(7'b1000110),
    .TX_MARGIN_LOW_2(7'b1000011),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PREDRIVER_MODE(1'b0),
    .TX_RXDETECT_CFG(14'h0064),
    .TX_RXDETECT_REF(3'b011),
    .TX_XCLK_SEL("TXUSR"),
    .UCODEER_CLR(1'b0),
    .USE_PCS_CLK_PHASE_SEL(1'b0)) 
    \gtp_channel.gtpe2_channel_i 
       (.CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT(pipe_dmonitorout),
        .DRPADDR(DRPADDR),
        .DRPCLK(CLK),
        .DRPDI(DRPDI),
        .DRPDO(ext_ch_gt_drpdo),
        .DRPEN(drp_mux_en),
        .DRPRDY(ext_ch_gt_drprdy),
        .DRPWE(drp_mux_we),
        .EYESCANDATAERROR(pipe_eyescandataerror),
        .EYESCANMODE(1'b0),
        .EYESCANRESET(user_eyescanreset),
        .EYESCANTRIGGER(1'b0),
        .GTPRXN(pci_exp_rxn),
        .GTPRXP(pci_exp_rxp),
        .GTPTXN(pci_exp_txn),
        .GTPTXP(pci_exp_txp),
        .GTRESETSEL(1'b0),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(rst_gtreset),
        .GTTXRESET(rst_gtreset),
        .LOOPBACK(pipe_loopback),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT(\NLW_gtp_channel.gtpe2_channel_i_PCSRSVDOUT_UNCONNECTED [15:0]),
        .PHYSTATUS(gt_phystatus),
        .PLL0CLK(int_qplloutclk_out),
        .PLL0REFCLK(int_qplloutrefclk_out),
        .PLL1CLK(1'b0),
        .PLL1REFCLK(1'b0),
        .PMARSVDIN0(1'b0),
        .PMARSVDIN1(1'b0),
        .PMARSVDIN2(1'b0),
        .PMARSVDIN3(1'b0),
        .PMARSVDIN4(1'b0),
        .PMARSVDOUT0(\NLW_gtp_channel.gtpe2_channel_i_PMARSVDOUT0_UNCONNECTED ),
        .PMARSVDOUT1(\NLW_gtp_channel.gtpe2_channel_i_PMARSVDOUT1_UNCONNECTED ),
        .RESETOVRD(user_resetovrd),
        .RX8B10BEN(1'b1),
        .RXADAPTSELTEST({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXBUFRESET(user_rxbufreset),
        .RXBUFSTATUS(pipe_rxbufstatus),
        .RXBYTEISALIGNED(\gtp_channel.gtpe2_channel_i_n_7 ),
        .RXBYTEREALIGN(\gtp_channel.gtpe2_channel_i_n_8 ),
        .RXCDRFREQRESET(user_rxcdrfreqreset),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(gt_rxcdrlock),
        .RXCDROVRDEN(1'b0),
        .RXCDRRESET(user_rxcdrreset),
        .RXCDRRESETRSV(1'b0),
        .RXCHANBONDSEQ(\NLW_gtp_channel.gtpe2_channel_i_RXCHANBONDSEQ_UNCONNECTED ),
        .RXCHANISALIGNED(pipe_rx0_chanisaligned_gt),
        .RXCHANREALIGN(\NLW_gtp_channel.gtpe2_channel_i_RXCHANREALIGN_UNCONNECTED ),
        .RXCHARISCOMMA({\gtp_channel.gtpe2_channel_i_n_144 ,\gtp_channel.gtpe2_channel_i_n_145 ,\gtp_channel.gtpe2_channel_i_n_146 ,\gtp_channel.gtpe2_channel_i_n_147 }),
        .RXCHARISK({\gtp_channel.gtpe2_channel_i_n_148 ,\gtp_channel.gtpe2_channel_i_n_149 ,\gt_rxcharisk_q_reg[1] }),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b1),
        .RXCHBONDO({\gtp_channel.gtpe2_channel_i_n_152 ,\gtp_channel.gtpe2_channel_i_n_153 ,\gtp_channel.gtpe2_channel_i_n_154 ,\gtp_channel.gtpe2_channel_i_n_155 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCLKCORCNT(\NLW_gtp_channel.gtpe2_channel_i_RXCLKCORCNT_UNCONNECTED [1:0]),
        .RXCOMINITDET(\NLW_gtp_channel.gtpe2_channel_i_RXCOMINITDET_UNCONNECTED ),
        .RXCOMMADET(pipe_rxcommadet),
        .RXCOMMADETEN(1'b1),
        .RXCOMSASDET(\NLW_gtp_channel.gtpe2_channel_i_RXCOMSASDET_UNCONNECTED ),
        .RXCOMWAKEDET(\NLW_gtp_channel.gtpe2_channel_i_RXCOMWAKEDET_UNCONNECTED ),
        .RXDATA({\gtp_channel.gtpe2_channel_i_n_112 ,\gtp_channel.gtpe2_channel_i_n_113 ,\gtp_channel.gtpe2_channel_i_n_114 ,\gtp_channel.gtpe2_channel_i_n_115 ,\gtp_channel.gtpe2_channel_i_n_116 ,\gtp_channel.gtpe2_channel_i_n_117 ,\gtp_channel.gtpe2_channel_i_n_118 ,\gtp_channel.gtpe2_channel_i_n_119 ,\gtp_channel.gtpe2_channel_i_n_120 ,\gtp_channel.gtpe2_channel_i_n_121 ,\gtp_channel.gtpe2_channel_i_n_122 ,\gtp_channel.gtpe2_channel_i_n_123 ,\gtp_channel.gtpe2_channel_i_n_124 ,\gtp_channel.gtpe2_channel_i_n_125 ,\gtp_channel.gtpe2_channel_i_n_126 ,\gtp_channel.gtpe2_channel_i_n_127 ,\gt_rxdata_q_reg[15] }),
        .RXDATAVALID(\NLW_gtp_channel.gtpe2_channel_i_RXDATAVALID_UNCONNECTED [1:0]),
        .RXDDIEN(1'b0),
        .RXDFEXYDEN(1'b0),
        .RXDISPERR(pipe_rxdisperr),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(pipe_rxdlysresetdone),
        .RXELECIDLE(rxelecidle_reg1_reg),
        .RXELECIDLEMODE({1'b0,1'b0}),
        .RXGEARBOXSLIP(1'b0),
        .RXHEADER(\NLW_gtp_channel.gtpe2_channel_i_RXHEADER_UNCONNECTED [2:0]),
        .RXHEADERVALID(\NLW_gtp_channel.gtpe2_channel_i_RXHEADERVALID_UNCONNECTED ),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFOVRDEN(1'b0),
        .RXLPMOSINTNTRLEN(1'b0),
        .RXLPMRESET(1'b0),
        .RXMCOMMAALIGNEN(1'b1),
        .RXNOTINTABLE(pipe_rxnotintable),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTCFG({1'b0,1'b0,1'b1,1'b0}),
        .RXOSINTDONE(\NLW_gtp_channel.gtpe2_channel_i_RXOSINTDONE_UNCONNECTED ),
        .RXOSINTEN(1'b1),
        .RXOSINTHOLD(1'b0),
        .RXOSINTID0({1'b0,1'b0,1'b0,1'b0}),
        .RXOSINTNTRLEN(1'b0),
        .RXOSINTOVRDEN(1'b0),
        .RXOSINTPD(1'b0),
        .RXOSINTSTARTED(\NLW_gtp_channel.gtpe2_channel_i_RXOSINTSTARTED_UNCONNECTED ),
        .RXOSINTSTROBE(1'b0),
        .RXOSINTSTROBEDONE(\NLW_gtp_channel.gtpe2_channel_i_RXOSINTSTROBEDONE_UNCONNECTED ),
        .RXOSINTSTROBESTARTED(\NLW_gtp_channel.gtpe2_channel_i_RXOSINTSTROBESTARTED_UNCONNECTED ),
        .RXOSINTTESTOVRDEN(1'b0),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(clk_rxoutclk),
        .RXOUTCLKFABRIC(\NLW_gtp_channel.gtpe2_channel_i_RXOUTCLKFABRIC_UNCONNECTED ),
        .RXOUTCLKPCS(\NLW_gtp_channel.gtpe2_channel_i_RXOUTCLKPCS_UNCONNECTED ),
        .RXOUTCLKSEL({1'b0,1'b0,1'b0}),
        .RXPCOMMAALIGNEN(1'b1),
        .RXPCSRESET(user_rxpcsreset),
        .RXPD(Q),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(pipe_rxphaligndone),
        .RXPHALIGNEN(1'b0),
        .RXPHDLYPD(1'b0),
        .RXPHDLYRESET(1'b0),
        .RXPHMONITOR(\NLW_gtp_channel.gtpe2_channel_i_RXPHMONITOR_UNCONNECTED [4:0]),
        .RXPHOVRDEN(1'b0),
        .RXPHSLIPMONITOR(\NLW_gtp_channel.gtpe2_channel_i_RXPHSLIPMONITOR_UNCONNECTED [4:0]),
        .RXPMARESET(gt_rxpmareset_i),
        .RXPMARESETDONE(pipe_rxpmaresetdone),
        .RXPOLARITY(pipe_rx0_polarity_gt),
        .RXPRBSCNTRESET(pipe_rxprbscntreset),
        .RXPRBSERR(pipe_rxprbserr),
        .RXPRBSSEL(pipe_rxprbssel),
        .RXRATE({1'b0,1'b0,RXRATE}),
        .RXRATEDONE(gt_rxratedone),
        .RXRATEMODE(1'b0),
        .RXRESETDONE(gt_rxresetdone),
        .RXSLIDE(1'b0),
        .RXSTARTOFSEQ(\NLW_gtp_channel.gtpe2_channel_i_RXSTARTOFSEQ_UNCONNECTED [1:0]),
        .RXSTATUS(pipe_rxstatus),
        .RXSYNCALLIN(txcompliance_reg2_reg),
        .RXSYNCDONE(pipe_rxsyncdone),
        .RXSYNCIN(gt_rxsyncout),
        .RXSYNCMODE(1'b1),
        .RXSYNCOUT(gt_rxsyncout),
        .RXSYSCLKSEL({1'b0,1'b0}),
        .RXUSERRDY(rst_userrdy),
        .RXUSRCLK(pclk_sel_reg),
        .RXUSRCLK2(pclk_sel_reg),
        .RXVALID(gt_rxvalid),
        .SETERRSTATUS(1'b0),
        .SIGVALIDCLK(oobclk),
        .TSTIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b1),
        .TXBUFDIFFCTRL({1'b1,1'b0,1'b0}),
        .TXBUFSTATUS(\NLW_gtp_channel.gtpe2_channel_i_TXBUFSTATUS_UNCONNECTED [1:0]),
        .TXCHARDISPMODE({1'b0,1'b0,1'b0,TXCHARDISPMODE}),
        .TXCHARDISPVAL({1'b0,1'b0,1'b0,1'b0}),
        .TXCHARISK({1'b0,1'b0,\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] }),
        .TXCOMFINISH(\NLW_gtp_channel.gtpe2_channel_i_TXCOMFINISH_UNCONNECTED ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\pipe_stages_1.pipe_tx_data_q_reg[15] }),
        .TXDEEMPH(pipe_tx_deemph_gt),
        .TXDETECTRX(pipe_tx_rcvr_det_gt),
        .TXDIFFCTRL({1'b1,1'b1,1'b0,1'b0}),
        .TXDIFFPD(1'b0),
        .TXDLYBYPASS(1'b0),
        .TXDLYEN(sync_txdlyen),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(out0[0]),
        .TXDLYSRESETDONE(pipe_txdlysresetdone),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(pipe_tx0_elec_idle_gt),
        .TXGEARBOXREADY(\NLW_gtp_channel.gtpe2_channel_i_TXGEARBOXREADY_UNCONNECTED ),
        .TXHEADER({1'b0,1'b0,1'b0}),
        .TXINHIBIT(pipe_txinhibit),
        .TXMAINCURSOR(TXMAINCURSOR),
        .TXMARGIN(\pipe_stages_1.pipe_tx_margin_q_reg[2] ),
        .TXOUTCLK(clk_txoutclk),
        .TXOUTCLKFABRIC(\NLW_gtp_channel.gtpe2_channel_i_TXOUTCLKFABRIC_UNCONNECTED ),
        .TXOUTCLKPCS(\NLW_gtp_channel.gtpe2_channel_i_TXOUTCLKPCS_UNCONNECTED ),
        .TXOUTCLKSEL({1'b0,1'b1,1'b1}),
        .TXPCSRESET(1'b0),
        .TXPD(Q),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(out0[2]),
        .TXPHALIGNDONE(pipe_txphaligndone),
        .TXPHALIGNEN(1'b1),
        .TXPHDLYPD(1'b0),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(out0[1]),
        .TXPHINITDONE(pipe_txphinitdone),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b0),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(1'b0),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(\NLW_gtp_channel.gtpe2_channel_i_TXPMARESETDONE_UNCONNECTED ),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR(TXPOSTCURSOR),
        .TXPOSTCURSORINV(1'b0),
        .TXPRBSFORCEERR(pipe_txprbsforceerr),
        .TXPRBSSEL(pipe_txprbssel),
        .TXPRECURSOR(TXPRECURSOR),
        .TXPRECURSORINV(1'b0),
        .TXRATE({1'b0,1'b0,RXRATE}),
        .TXRATEDONE(gt_txratedone),
        .TXRATEMODE(1'b0),
        .TXRESETDONE(gt_txresetdone),
        .TXSEQUENCE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXSTARTSEQ(1'b0),
        .TXSWING(1'b0),
        .TXSYNCALLIN(txcompliance_reg2_reg_0),
        .TXSYNCDONE(gt_txsyncdone),
        .TXSYNCIN(gt_txsyncout),
        .TXSYNCMODE(1'b1),
        .TXSYNCOUT(gt_txsyncout),
        .TXSYSCLKSEL({1'b0,1'b0}),
        .TXUSERRDY(rst_userrdy),
        .TXUSRCLK(pclk_sel_reg),
        .TXUSRCLK2(pclk_sel_reg));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_cpllpd_ovrd" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_cpllpd_ovrd
   (cpllpd,
    PLL0RESET0,
    gt_cpllpdrefclk,
    rst_cpllreset);
  output cpllpd;
  output PLL0RESET0;
  input gt_cpllpdrefclk;
  input rst_cpllreset;

  wire PLL0RESET0;
  wire cpllpd;
  wire \cpllpd_wait_reg[31]_srl32_n_1 ;
  wire \cpllpd_wait_reg[63]_srl32_n_1 ;
  wire \cpllpd_wait_reg[94]_srl31_n_0 ;
  wire \cpllreset_wait_reg[126]_srl31_n_0 ;
  wire \cpllreset_wait_reg[31]_srl32_n_1 ;
  wire \cpllreset_wait_reg[63]_srl32_n_1 ;
  wire \cpllreset_wait_reg[95]_srl32_n_1 ;
  wire cpllrst;
  wire gt_cpllpdrefclk;
  wire rst_cpllreset;
  wire \NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ;
  wire \NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ;

  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllpd_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllpd_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllpd_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'hFFFFFFFF)) 
    \cpllpd_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllpd_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllpd_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllpd_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllpd_wait_reg[94]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h7FFFFFFF)) 
    \cpllpd_wait_reg[94]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllpd_wait_reg[63]_srl32_n_1 ),
        .Q(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q31(\NLW_cpllpd_wait_reg[94]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b1)) 
    \cpllpd_wait_reg[95] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[94]_srl31_n_0 ),
        .Q(cpllpd),
        .R(1'b0));
  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg[126]_srl31 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[126]_srl31 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[95]_srl32_n_1 ),
        .Q(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q31(\NLW_cpllreset_wait_reg[126]_srl31_Q31_UNCONNECTED ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \cpllreset_wait_reg[127] 
       (.C(gt_cpllpdrefclk),
        .CE(1'b1),
        .D(\cpllreset_wait_reg[126]_srl31_n_0 ),
        .Q(cpllrst),
        .R(1'b0));
  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg[31]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h000000FF)) 
    \cpllreset_wait_reg[31]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(1'b0),
        .Q(\NLW_cpllreset_wait_reg[31]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[31]_srl32_n_1 ));
  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg[63]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[63]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[31]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[63]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[63]_srl32_n_1 ));
  (* srl_bus_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg " *) 
  (* srl_name = "inst/\comp_axi_enhanced_pcie/comp_enhanced_core_top_wrap/axi_pcie_enhanced_core_top_i/pcie_7x_v2_0_2_inst/pcie_top_with_gt_top.gt_ges.gt_top_i/pipe_wrapper_i/pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i/qpll_wrapper_i/cpllPDInst/cpllreset_wait_reg[95]_srl32 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \cpllreset_wait_reg[95]_srl32 
       (.A({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(gt_cpllpdrefclk),
        .D(\cpllreset_wait_reg[63]_srl32_n_1 ),
        .Q(\NLW_cpllreset_wait_reg[95]_srl32_Q_UNCONNECTED ),
        .Q31(\cpllreset_wait_reg[95]_srl32_n_1 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gtp_common.gtpe2_common_i_i_3 
       (.I0(cpllrst),
        .I1(rst_cpllreset),
        .O(PLL0RESET0));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_drp" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_drp
   (done,
    Q,
    drp_mux_en,
    DRPADDR,
    DRPDI,
    gt_ch_drp_rdy,
    drp_mux_we,
    SR,
    CLK,
    DRP_START0,
    ext_ch_gt_drprdy,
    DRP_X160,
    ext_ch_gt_drpdo,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output done;
  output [2:0]Q;
  output drp_mux_en;
  output [8:0]DRPADDR;
  output [15:0]DRPDI;
  output [0:0]gt_ch_drp_rdy;
  output drp_mux_we;
  input [0:0]SR;
  input CLK;
  input DRP_START0;
  input [0:0]ext_ch_gt_drprdy;
  input DRP_X160;
  input [15:0]ext_ch_gt_drpdo;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire [8:0]DRPADDR;
  wire [15:0]DRPDI;
  wire DRP_START0;
  wire DRP_X160;
  wire [2:0]Q;
  wire [0:0]SR;
  wire \addr_reg[4]_i_1_n_0 ;
  wire \addr_reg_reg_n_0_[4] ;
  wire [15:0]di_reg;
  wire \di_reg[11]_i_1_n_0 ;
  wire \di_reg[15]_i_1_n_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [15:0]do_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [15:0]do_reg2;
  wire done;
  wire done0;
  wire drp_mux_en;
  wire drp_mux_we;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [2:0]fsm;
  wire \fsm[0]_i_2__0_n_0 ;
  wire \fsm[0]_i_3_n_0 ;
  wire [0:0]gt_ch_drp_rdy;
  wire [4:0]index;
  wire \index[0]_i_1_n_0 ;
  wire \index[1]_i_1_n_0 ;
  wire \index[2]_i_1_n_0 ;
  wire \index[3]_i_1_n_0 ;
  wire \index[4]_i_1_n_0 ;
  wire \index[4]_i_2_n_0 ;
  wire [0:0]load_cnt;
  wire \load_cnt[0]_i_1__0_n_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rdy_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rdy_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire start_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire start_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire x16_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire x16_reg2;

  LUT5 #(
    .INIT(32'h00000001)) 
    \addr_reg[4]_i_1 
       (.I0(index[1]),
        .I1(index[0]),
        .I2(index[2]),
        .I3(index[3]),
        .I4(index[4]),
        .O(\addr_reg[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\addr_reg[4]_i_1_n_0 ),
        .Q(\addr_reg_reg_n_0_[4] ),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \di_reg[11]_i_1 
       (.I0(x16_reg2),
        .O(\di_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \di_reg[15]_i_1 
       (.I0(SR),
        .I1(index[4]),
        .I2(index[3]),
        .I3(index[2]),
        .I4(index[0]),
        .I5(index[1]),
        .O(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[0]),
        .Q(di_reg[0]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[10]),
        .Q(di_reg[10]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\di_reg[11]_i_1_n_0 ),
        .Q(di_reg[11]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[12]),
        .Q(di_reg[12]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[13]),
        .Q(di_reg[13]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[14]),
        .Q(di_reg[14]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[15]),
        .Q(di_reg[15]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[1]),
        .Q(di_reg[1]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[2]),
        .Q(di_reg[2]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[3]),
        .Q(di_reg[3]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[4]),
        .Q(di_reg[4]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[5]),
        .Q(di_reg[5]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[6]),
        .Q(di_reg[6]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[7]),
        .Q(di_reg[7]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[8]),
        .Q(di_reg[8]),
        .R(\di_reg[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg2[9]),
        .Q(di_reg[9]),
        .R(\di_reg[15]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[0]),
        .Q(do_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[10]),
        .Q(do_reg1[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[11]),
        .Q(do_reg1[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[12]),
        .Q(do_reg1[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[13]),
        .Q(do_reg1[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[14]),
        .Q(do_reg1[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[15]),
        .Q(do_reg1[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[1]),
        .Q(do_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[2]),
        .Q(do_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[3]),
        .Q(do_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[4]),
        .Q(do_reg1[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[5]),
        .Q(do_reg1[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[6]),
        .Q(do_reg1[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[7]),
        .Q(do_reg1[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[8]),
        .Q(do_reg1[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drpdo[9]),
        .Q(do_reg1[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFA000003)) 
    done_i_1
       (.I0(\addr_reg[4]_i_1_n_0 ),
        .I1(start_reg2),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(done0));
  FDSE #(
    .INIT(1'b0)) 
    done_reg
       (.C(CLK),
        .CE(1'b1),
        .D(done0),
        .Q(done),
        .S(SR));
  LUT2 #(
    .INIT(4'hE)) 
    \fsm[0]_i_1 
       (.I0(\fsm[0]_i_2__0_n_0 ),
        .I1(\fsm[0]_i_3_n_0 ),
        .O(fsm[0]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \fsm[0]_i_2__0 
       (.I0(Q[2]),
        .I1(\addr_reg[4]_i_1_n_0 ),
        .I2(Q[0]),
        .O(\fsm[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000FFF0FFF33AA)) 
    \fsm[0]_i_3 
       (.I0(start_reg2),
        .I1(load_cnt),
        .I2(rdy_reg2),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(\fsm[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h005FA0C0)) 
    \fsm[1]_i_1 
       (.I0(rdy_reg2),
        .I1(load_cnt),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(fsm[1]));
  LUT4 #(
    .INIT(16'h5580)) 
    \fsm[2]_i_1__0 
       (.I0(Q[1]),
        .I1(rdy_reg2),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(fsm[2]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(Q[2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \gt_ch_drp_rdy[0]_INST_0 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(gt_ch_drp_rdy));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h003E)) 
    \gtp_channel.gtpe2_channel_i_i_1 
       (.I0(ext_ch_gt_drpen),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(drp_mux_en));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_10 
       (.I0(ext_ch_gt_drpdi[11]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[11]),
        .O(DRPDI[11]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_11 
       (.I0(ext_ch_gt_drpdi[10]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[10]),
        .O(DRPDI[10]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_12 
       (.I0(ext_ch_gt_drpdi[9]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[9]),
        .O(DRPDI[9]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_13 
       (.I0(ext_ch_gt_drpdi[8]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[8]),
        .O(DRPDI[8]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_14 
       (.I0(ext_ch_gt_drpdi[7]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[7]),
        .O(DRPDI[7]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_15 
       (.I0(ext_ch_gt_drpdi[6]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[6]),
        .O(DRPDI[6]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_16 
       (.I0(ext_ch_gt_drpdi[5]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[5]),
        .O(DRPDI[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_17 
       (.I0(ext_ch_gt_drpdi[4]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[4]),
        .O(DRPDI[4]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_18 
       (.I0(ext_ch_gt_drpdi[3]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[3]),
        .O(DRPDI[3]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_19 
       (.I0(ext_ch_gt_drpdi[2]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[2]),
        .O(DRPDI[2]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h1110)) 
    \gtp_channel.gtpe2_channel_i_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(ext_ch_gt_drpwe),
        .O(drp_mux_we));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_20 
       (.I0(ext_ch_gt_drpdi[1]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[1]),
        .O(DRPDI[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_21 
       (.I0(ext_ch_gt_drpdi[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[0]),
        .O(DRPDI[0]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_39 
       (.I0(ext_ch_gt_drpaddr[8]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[8]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_40 
       (.I0(ext_ch_gt_drpaddr[7]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[7]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_41 
       (.I0(ext_ch_gt_drpaddr[6]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[6]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_42 
       (.I0(ext_ch_gt_drpaddr[5]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[5]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_43 
       (.I0(ext_ch_gt_drpaddr[4]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\addr_reg_reg_n_0_[4] ),
        .O(DRPADDR[4]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_44 
       (.I0(ext_ch_gt_drpaddr[3]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[3]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_45 
       (.I0(ext_ch_gt_drpaddr[2]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[2]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gtp_channel.gtpe2_channel_i_i_46 
       (.I0(ext_ch_gt_drpaddr[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(DRPADDR[1]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_47 
       (.I0(ext_ch_gt_drpaddr[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\addr_reg_reg_n_0_[4] ),
        .O(DRPADDR[0]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_6 
       (.I0(ext_ch_gt_drpdi[15]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[15]),
        .O(DRPDI[15]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_7 
       (.I0(ext_ch_gt_drpdi[14]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[14]),
        .O(DRPDI[14]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_8 
       (.I0(ext_ch_gt_drpdi[13]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[13]),
        .O(DRPDI[13]));
  LUT5 #(
    .INIT(32'hFFFE0002)) 
    \gtp_channel.gtpe2_channel_i_i_9 
       (.I0(ext_ch_gt_drpdi[12]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(di_reg[12]),
        .O(DRPDI[12]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \index[0]_i_1 
       (.I0(index[0]),
        .I1(\fsm[0]_i_2__0_n_0 ),
        .O(\index[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \index[1]_i_1 
       (.I0(\fsm[0]_i_2__0_n_0 ),
        .I1(index[1]),
        .I2(index[0]),
        .O(\index[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \index[2]_i_1 
       (.I0(\fsm[0]_i_2__0_n_0 ),
        .I1(index[0]),
        .I2(index[1]),
        .I3(index[2]),
        .O(\index[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \index[3]_i_1 
       (.I0(\fsm[0]_i_2__0_n_0 ),
        .I1(index[2]),
        .I2(index[1]),
        .I3(index[0]),
        .I4(index[3]),
        .O(\index[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hC1)) 
    \index[4]_i_1 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .O(\index[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \index[4]_i_2 
       (.I0(index[0]),
        .I1(index[1]),
        .I2(index[2]),
        .I3(index[3]),
        .I4(index[4]),
        .I5(\fsm[0]_i_2__0_n_0 ),
        .O(\index[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(CLK),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[0]_i_1_n_0 ),
        .Q(index[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(CLK),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[1]_i_1_n_0 ),
        .Q(index[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(CLK),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[2]_i_1_n_0 ),
        .Q(index[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[3] 
       (.C(CLK),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[3]_i_1_n_0 ),
        .Q(index[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[4] 
       (.C(CLK),
        .CE(\index[4]_i_1_n_0 ),
        .D(\index[4]_i_2_n_0 ),
        .Q(index[4]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \load_cnt[0]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .O(\load_cnt[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1__0_n_0 ),
        .Q(load_cnt),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(ext_ch_gt_drprdy),
        .Q(rdy_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(DRP_START0),
        .Q(start_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(DRP_X160),
        .Q(x16_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE x16_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(x16_reg1),
        .Q(x16_reg2),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_rate" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_rate
   (pclk_sel_reg1_reg,
    RXRATE,
    Q,
    DRP_START0,
    DRP_X160,
    out0,
    rst_cpllreset,
    done,
    pclk_sel_reg_0,
    pipe_rxpmaresetdone,
    gt_txratedone,
    gt_phystatus,
    gt_rxratedone,
    txsync_done,
    UNCONN_IN,
    p_1_in,
    p_3_in);
  output pclk_sel_reg1_reg;
  output [0:0]RXRATE;
  output [3:0]Q;
  output DRP_START0;
  output DRP_X160;
  output [2:0]out0;
  input rst_cpllreset;
  input done;
  input pclk_sel_reg_0;
  input [0:0]pipe_rxpmaresetdone;
  input gt_txratedone;
  input gt_phystatus;
  input gt_rxratedone;
  input txsync_done;
  input [1:0]UNCONN_IN;
  input p_1_in;
  input p_3_in;

  wire DRP_START0;
  wire DRP_X160;
  wire \FSM_onehot_fsm[0]_i_1_n_0 ;
  wire \FSM_onehot_fsm[10]_i_1_n_0 ;
  wire \FSM_onehot_fsm[10]_i_2_n_0 ;
  wire \FSM_onehot_fsm[11]_i_1_n_0 ;
  wire \FSM_onehot_fsm[12]_i_1_n_0 ;
  wire \FSM_onehot_fsm[12]_i_2_n_0 ;
  wire \FSM_onehot_fsm[1]_i_1_n_0 ;
  wire \FSM_onehot_fsm[1]_i_2_n_0 ;
  wire \FSM_onehot_fsm[1]_i_3_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1_n_0 ;
  wire \FSM_onehot_fsm[5]_i_1_n_0 ;
  wire \FSM_onehot_fsm[6]_i_1_n_0 ;
  wire \FSM_onehot_fsm[7]_i_1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_1_n_0 ;
  wire \FSM_onehot_fsm[8]_i_2_n_0 ;
  wire \FSM_onehot_fsm[9]_i_1_n_0 ;
  wire \FSM_onehot_fsm[9]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[11] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[6] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[9] ;
  wire [3:0]Q;
  wire [0:0]RXRATE;
  wire [1:0]UNCONN_IN;
  wire done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire drp_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire drp_done_reg2;
  wire [3:0]fsm;
  wire \fsm[0]_i_2_n_0 ;
  wire \fsm[0]_i_3__0_n_0 ;
  wire \fsm[0]_i_4_n_0 ;
  wire \fsm[1]_i_2_n_0 ;
  wire \fsm[1]_i_3__0_n_0 ;
  wire \fsm[1]_i_4_n_0 ;
  wire gt_phystatus;
  wire gt_rxratedone;
  wire gt_txratedone;
  (* RTL_KEEP = "yes" *) wire [2:0]out0;
  (* RTL_KEEP = "yes" *) wire p_0_in1_in;
  wire [3:0]p_0_in__1;
  wire p_1_in;
  (* RTL_KEEP = "yes" *) wire p_2_in;
  wire p_3_in;
  (* RTL_KEEP = "yes" *) wire p_3_in_1;
  (* RTL_KEEP = "yes" *) wire pclk_sel;
  wire pclk_sel_i_1_n_0;
  wire pclk_sel_reg1_reg;
  wire pclk_sel_reg_0;
  wire phystatus_i_1_n_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire phystatus_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire phystatus_reg2;
  wire phystatus_reg_n_0;
  wire [0:0]pipe_rxpmaresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]rate_in_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]rate_in_reg2;
  (* RTL_KEEP = "yes" *) wire rate_out;
  wire \rate_out[0]_i_1_n_0 ;
  wire ratedone_i_1_n_0;
  wire ratedone_reg_n_0;
  wire rst_cpllreset;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxpmaresetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxpmaresetdone_reg2;
  wire rxratedone_i_1_n_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxratedone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxratedone_reg2;
  wire rxratedone_reg_n_0;
  wire [3:0]txdata_wait_cnt_reg__0;
  wire txratedone1__2;
  wire txratedone_i_1_n_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txratedone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txratedone_reg2;
  wire txratedone_reg_n_0;
  wire txsync_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_done_reg2;

  LUT5 #(
    .INIT(32'h888F8888)) 
    \FSM_onehot_fsm[0]_i_1 
       (.I0(out0[2]),
        .I1(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I2(out0[0]),
        .I3(\FSM_onehot_fsm_reg_n_0_[11] ),
        .I4(\FSM_onehot_fsm[12]_i_2_n_0 ),
        .O(\FSM_onehot_fsm[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8C808080)) 
    \FSM_onehot_fsm[10]_i_1 
       (.I0(ratedone_reg_n_0),
        .I1(\FSM_onehot_fsm[10]_i_2_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I3(txsync_done_reg2),
        .I4(out0[0]),
        .O(\FSM_onehot_fsm[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000004)) 
    \FSM_onehot_fsm[10]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I2(rate_out),
        .I3(p_3_in_1),
        .I4(p_2_in),
        .O(\FSM_onehot_fsm[10]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h5400)) 
    \FSM_onehot_fsm[11]_i_1 
       (.I0(txsync_done_reg2),
        .I1(out0[0]),
        .I2(\FSM_onehot_fsm_reg_n_0_[11] ),
        .I3(\FSM_onehot_fsm[12]_i_2_n_0 ),
        .O(\FSM_onehot_fsm[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \FSM_onehot_fsm[12]_i_1 
       (.I0(txsync_done_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[11] ),
        .I2(out0[0]),
        .I3(\FSM_onehot_fsm[12]_i_2_n_0 ),
        .O(\FSM_onehot_fsm[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \FSM_onehot_fsm[12]_i_2 
       (.I0(p_2_in),
        .I1(p_3_in_1),
        .I2(rate_out),
        .I3(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I4(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I5(\FSM_onehot_fsm_reg_n_0_[9] ),
        .O(\FSM_onehot_fsm[12]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h5C50)) 
    \FSM_onehot_fsm[1]_i_1 
       (.I0(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(out0[2]),
        .I3(\FSM_onehot_fsm[1]_i_3_n_0 ),
        .O(\FSM_onehot_fsm[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \FSM_onehot_fsm[1]_i_2 
       (.I0(rate_in_reg1[1]),
        .I1(rate_in_reg2[1]),
        .I2(rate_in_reg1[0]),
        .I3(rate_in_reg2[0]),
        .O(\FSM_onehot_fsm[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[1]_i_3 
       (.I0(txdata_wait_cnt_reg__0[1]),
        .I1(txdata_wait_cnt_reg__0[0]),
        .I2(txdata_wait_cnt_reg__0[3]),
        .I3(txdata_wait_cnt_reg__0[2]),
        .O(\FSM_onehot_fsm[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \FSM_onehot_fsm[2]_i_1 
       (.I0(out0[2]),
        .I1(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I2(txdata_wait_cnt_reg__0[2]),
        .I3(txdata_wait_cnt_reg__0[3]),
        .I4(txdata_wait_cnt_reg__0[0]),
        .I5(txdata_wait_cnt_reg__0[1]),
        .O(\FSM_onehot_fsm[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h03020202)) 
    \FSM_onehot_fsm[3]_i_1 
       (.I0(pclk_sel),
        .I1(out0[2]),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(drp_done_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000054)) 
    \FSM_onehot_fsm[4]_i_1 
       (.I0(drp_done_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(p_0_in1_in),
        .I3(pclk_sel),
        .I4(out0[2]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \FSM_onehot_fsm[5]_i_1 
       (.I0(drp_done_reg2),
        .I1(p_0_in1_in),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(pclk_sel),
        .I4(out0[2]),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hC888)) 
    \FSM_onehot_fsm[6]_i_1 
       (.I0(rate_out),
        .I1(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I2(rxpmaresetdone_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1030100010001000)) 
    \FSM_onehot_fsm[7]_i_1 
       (.I0(rxpmaresetdone_reg2),
        .I1(rate_out),
        .I2(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I3(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I4(drp_done_reg2),
        .I5(p_2_in),
        .O(\FSM_onehot_fsm[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000540000)) 
    \FSM_onehot_fsm[8]_i_1 
       (.I0(drp_done_reg2),
        .I1(p_2_in),
        .I2(p_3_in_1),
        .I3(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I4(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I5(rate_out),
        .O(\FSM_onehot_fsm[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \FSM_onehot_fsm[8]_i_2 
       (.I0(pclk_sel),
        .I1(out0[2]),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(p_0_in1_in),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00F0002000000020)) 
    \FSM_onehot_fsm[9]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I1(ratedone_reg_n_0),
        .I2(\FSM_onehot_fsm[9]_i_2_n_0 ),
        .I3(p_2_in),
        .I4(p_3_in_1),
        .I5(drp_done_reg2),
        .O(\FSM_onehot_fsm[9]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \FSM_onehot_fsm[9]_i_2 
       (.I0(rate_out),
        .I1(\FSM_onehot_fsm[8]_i_2_n_0 ),
        .I2(\FSM_onehot_fsm_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm[9]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[0]_i_1_n_0 ),
        .Q(out0[2]),
        .S(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[10] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[10]_i_1_n_0 ),
        .Q(out0[0]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[11] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[11]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[11] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[12] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[12]_i_1_n_0 ),
        .Q(out0[1]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1_n_0 ),
        .Q(pclk_sel),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1_n_0 ),
        .Q(p_0_in1_in),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[5] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[5]_i_1_n_0 ),
        .Q(rate_out),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[6] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[6]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[6] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[7] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[7]_i_1_n_0 ),
        .Q(p_2_in),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[8] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[8]_i_1_n_0 ),
        .Q(p_3_in_1),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[9] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[9]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[9] ),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(done),
        .Q(drp_done_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE drp_done_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'hEAAEAAAAEFAEAAAA)) 
    \fsm[0]_i_2 
       (.I0(\fsm[0]_i_4_n_0 ),
        .I1(drp_done_reg2),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(rxpmaresetdone_reg2),
        .O(\fsm[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000115055551150)) 
    \fsm[0]_i_3__0 
       (.I0(Q[2]),
        .I1(ratedone_reg_n_0),
        .I2(drp_done_reg2),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(txsync_done_reg2),
        .O(\fsm[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000F5F3000005F3)) 
    \fsm[0]_i_4 
       (.I0(\fsm[1]_i_4_n_0 ),
        .I1(\FSM_onehot_fsm[1]_i_2_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(drp_done_reg2),
        .O(\fsm[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFCEC3C2C)) 
    \fsm[1]_i_2 
       (.I0(\fsm[1]_i_4_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(drp_done_reg2),
        .O(\fsm[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h10445444)) 
    \fsm[1]_i_3__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(ratedone_reg_n_0),
        .I3(Q[0]),
        .I4(txsync_done_reg2),
        .O(\fsm[1]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[1]_i_4 
       (.I0(txdata_wait_cnt_reg__0[3]),
        .I1(txdata_wait_cnt_reg__0[2]),
        .I2(txdata_wait_cnt_reg__0[1]),
        .I3(txdata_wait_cnt_reg__0[0]),
        .O(\fsm[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h380B303030303030)) 
    \fsm[2]_i_1 
       (.I0(txsync_done_reg2),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(drp_done_reg2),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(fsm[2]));
  LUT5 #(
    .INIT(32'h1000AAAA)) 
    \fsm[3]_i_1 
       (.I0(Q[3]),
        .I1(drp_done_reg2),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(fsm[3]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(Q[0]),
        .R(rst_cpllreset));
  MUXF7 \fsm_reg[0]_i_1 
       (.I0(\fsm[0]_i_2_n_0 ),
        .I1(\fsm[0]_i_3__0_n_0 ),
        .O(fsm[0]),
        .S(Q[3]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(Q[1]),
        .R(rst_cpllreset));
  MUXF7 \fsm_reg[1]_i_1 
       (.I0(\fsm[1]_i_2_n_0 ),
        .I1(\fsm[1]_i_3__0_n_0 ),
        .O(fsm[1]),
        .S(Q[3]));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(Q[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(fsm[3]),
        .Q(Q[3]),
        .R(rst_cpllreset));
  LUT4 #(
    .INIT(16'h4F40)) 
    pclk_sel_i_1
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(pclk_sel),
        .I3(pclk_sel_reg1_reg),
        .O(pclk_sel_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pclk_sel_i_1_n_0),
        .Q(pclk_sel_reg1_reg),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'hFFFFFFFCAAAAAAA8)) 
    phystatus_i_1
       (.I0(phystatus_reg2),
        .I1(p_3_in_1),
        .I2(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I3(p_2_in),
        .I4(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I5(phystatus_reg_n_0),
        .O(phystatus_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    phystatus_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(phystatus_i_1_n_0),
        .Q(phystatus_reg_n_0),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(phystatus_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE phystatus_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(UNCONN_IN[0]),
        .Q(rate_in_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg1_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(UNCONN_IN[1]),
        .Q(rate_in_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rate_in_reg1[0]),
        .Q(rate_in_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_in_reg2_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rate_in_reg1[1]),
        .Q(rate_in_reg2[1]),
        .R(rst_cpllreset));
  LUT4 #(
    .INIT(16'h4F40)) 
    \rate_out[0]_i_1 
       (.I0(rate_in_reg2[1]),
        .I1(rate_in_reg2[0]),
        .I2(rate_out),
        .I3(RXRATE),
        .O(\rate_out[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rate_out_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\rate_out[0]_i_1_n_0 ),
        .Q(RXRATE),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'hFF008000)) 
    ratedone_i_1
       (.I0(txratedone_reg_n_0),
        .I1(rxratedone_reg_n_0),
        .I2(phystatus_reg_n_0),
        .I3(txratedone1__2),
        .I4(ratedone_reg_n_0),
        .O(ratedone_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ratedone_i_2
       (.I0(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I1(p_2_in),
        .I2(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I3(p_3_in_1),
        .O(txratedone1__2));
  FDRE #(
    .INIT(1'b0)) 
    ratedone_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(ratedone_i_1_n_0),
        .Q(ratedone_reg_n_0),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pipe_rxpmaresetdone),
        .Q(rxpmaresetdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxpmaresetdone_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'hFFFFFFFCAAAAAAA8)) 
    rxratedone_i_1
       (.I0(rxratedone_reg2),
        .I1(p_3_in_1),
        .I2(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I3(p_2_in),
        .I4(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I5(rxratedone_reg_n_0),
        .O(rxratedone_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rxratedone_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxratedone_i_1_n_0),
        .Q(rxratedone_reg_n_0),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_rxratedone),
        .Q(rxratedone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxratedone_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxratedone_reg1),
        .Q(rxratedone_reg2),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'hFE)) 
    start_reg1_i_1__0
       (.I0(p_1_in),
        .I1(p_2_in),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(DRP_START0));
  LUT5 #(
    .INIT(32'h8000AAAA)) 
    \txdata_wait_cnt[0]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(txdata_wait_cnt_reg__0[3]),
        .I2(txdata_wait_cnt_reg__0[2]),
        .I3(txdata_wait_cnt_reg__0[1]),
        .I4(txdata_wait_cnt_reg__0[0]),
        .O(p_0_in__1[0]));
  LUT5 #(
    .INIT(32'hA8282828)) 
    \txdata_wait_cnt[1]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(txdata_wait_cnt_reg__0[1]),
        .I2(txdata_wait_cnt_reg__0[0]),
        .I3(txdata_wait_cnt_reg__0[3]),
        .I4(txdata_wait_cnt_reg__0[2]),
        .O(p_0_in__1[1]));
  LUT5 #(
    .INIT(32'hBCCC0000)) 
    \txdata_wait_cnt[2]_i_1 
       (.I0(txdata_wait_cnt_reg__0[3]),
        .I1(txdata_wait_cnt_reg__0[2]),
        .I2(txdata_wait_cnt_reg__0[0]),
        .I3(txdata_wait_cnt_reg__0[1]),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(p_0_in__1[2]));
  LUT5 #(
    .INIT(32'hA8888888)) 
    \txdata_wait_cnt[3]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(txdata_wait_cnt_reg__0[3]),
        .I2(txdata_wait_cnt_reg__0[0]),
        .I3(txdata_wait_cnt_reg__0[1]),
        .I4(txdata_wait_cnt_reg__0[2]),
        .O(p_0_in__1[3]));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__1[0]),
        .Q(txdata_wait_cnt_reg__0[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(txdata_wait_cnt_reg__0[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(txdata_wait_cnt_reg__0[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txdata_wait_cnt_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(txdata_wait_cnt_reg__0[3]),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'hFFFFFFFCAAAAAAA8)) 
    txratedone_i_1
       (.I0(txratedone_reg2),
        .I1(p_3_in_1),
        .I2(\FSM_onehot_fsm_reg_n_0_[9] ),
        .I3(p_2_in),
        .I4(\FSM_onehot_fsm_reg_n_0_[6] ),
        .I5(txratedone_reg_n_0),
        .O(txratedone_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txratedone_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txratedone_i_1_n_0),
        .Q(txratedone_reg_n_0),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_txratedone),
        .Q(txratedone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txratedone_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txratedone_reg1),
        .Q(txratedone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txsync_done),
        .Q(txsync_done_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_done_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'hFE)) 
    x16_reg1_i_1
       (.I0(p_3_in),
        .I1(p_0_in1_in),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .O(DRP_X160));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_reset" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_reset
   (SR,
    \di_reg[0] ,
    p_1_in,
    p_3_in,
    rst_cpllreset,
    rxvalid_reg1_reg,
    rst_gtreset,
    rst_userrdy,
    pipe_rst_fsm,
    SYNC_TXSYNC_START0,
    E,
    pipe_rst_idle,
    \resetovrd.reset_reg[4] ,
    pclk_sel_reg,
    \cpllpd_wait_reg[95] ,
    user_resetdone,
    CLK,
    done,
    pipe_rxpmaresetdone,
    gt_phystatus,
    txsync_done,
    out0,
    user_rxcdrlock,
    out,
    out1);
  output [0:0]SR;
  output [0:0]\di_reg[0] ;
  output p_1_in;
  output p_3_in;
  output rst_cpllreset;
  output [0:0]rxvalid_reg1_reg;
  output rst_gtreset;
  output rst_userrdy;
  output [3:0]pipe_rst_fsm;
  output SYNC_TXSYNC_START0;
  output [0:0]E;
  output pipe_rst_idle;
  input \resetovrd.reset_reg[4] ;
  input pclk_sel_reg;
  input \cpllpd_wait_reg[95] ;
  input user_resetdone;
  input CLK;
  input done;
  input [0:0]pipe_rxpmaresetdone;
  input gt_phystatus;
  input txsync_done;
  input [1:0]out0;
  input user_rxcdrlock;
  input out;
  input out1;

  wire CLK;
  wire [0:0]E;
  wire \FSM_sequential_fsm[0]_i_1_n_0 ;
  wire \FSM_sequential_fsm[0]_i_2_n_0 ;
  wire \FSM_sequential_fsm[0]_i_3_n_0 ;
  wire \FSM_sequential_fsm[0]_i_4_n_0 ;
  wire \FSM_sequential_fsm[0]_i_5_n_0 ;
  wire \FSM_sequential_fsm[1]_i_1_n_0 ;
  wire \FSM_sequential_fsm[1]_i_2_n_0 ;
  wire \FSM_sequential_fsm[1]_i_3_n_0 ;
  wire \FSM_sequential_fsm[1]_i_4_n_0 ;
  wire \FSM_sequential_fsm[1]_i_5_n_0 ;
  wire \FSM_sequential_fsm[1]_i_6_n_0 ;
  wire \FSM_sequential_fsm[2]_i_2_n_0 ;
  wire \FSM_sequential_fsm[2]_i_3_n_0 ;
  wire \FSM_sequential_fsm[3]_i_2_n_0 ;
  wire \FSM_sequential_fsm_reg[2]_i_1_n_0 ;
  wire RST_DRP_START0;
  wire RST_DRP_X160;
  wire [0:0]SR;
  wire SYNC_TXSYNC_START0;
  wire \cfg_wait_cnt[3]_i_2_n_0 ;
  wire \cfg_wait_cnt[4]_i_2_n_0 ;
  wire \cfg_wait_cnt[5]_i_2_n_0 ;
  wire [5:0]cfg_wait_cnt_reg__0;
  wire \cpllpd_wait_reg[95] ;
  wire dclk_rst_reg1;
  wire dclk_rst_reg1_0;
  wire [0:0]\di_reg[0] ;
  wire done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire drp_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire drp_done_reg2;
  (* RTL_KEEP = "yes" *) wire [3:0]fsm;
  wire gt_phystatus;
  wire gtreset_i_1_n_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire mmcm_lock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire mmcm_lock_reg2;
  wire out;
  wire [1:0]out0;
  wire out1;
  wire [5:0]p_0_in__0;
  wire p_1_in;
  wire p_3_in;
  wire pclk_sel_reg;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire phystatus_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire phystatus_reg2;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire [0:0]pipe_rxpmaresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire plllock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire plllock_reg2;
  wire pllreset_i_1_n_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_idle_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_idle_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire resetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire resetdone_reg2;
  wire \resetovrd.reset_reg[4] ;
  wire rst_cpllreset;
  wire rst_gtreset;
  wire rst_userrdy;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxcdrlock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxcdrlock_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxpmaresetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxpmaresetdone_reg2;
  wire rxusrclk_rst_reg1;
  wire [0:0]rxvalid_reg1_reg;
  wire txsync_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_done_reg2;
  wire user_resetdone;
  wire user_rxcdrlock;
  wire userrdy_i_1_n_0;

  LUT6 #(
    .INIT(64'h4F4F404F4F404040)) 
    \FSM_sequential_fsm[0]_i_1 
       (.I0(\FSM_sequential_fsm[0]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm[0]_i_3_n_0 ),
        .I2(fsm[0]),
        .I3(fsm[1]),
        .I4(\FSM_sequential_fsm[0]_i_4_n_0 ),
        .I5(\FSM_sequential_fsm[0]_i_5_n_0 ),
        .O(\FSM_sequential_fsm[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h010D1C1C010D1010)) 
    \FSM_sequential_fsm[0]_i_2 
       (.I0(drp_done_reg2),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .I3(txsync_done_reg2),
        .I4(fsm[3]),
        .I5(plllock_reg2),
        .O(\FSM_sequential_fsm[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0757FFFF)) 
    \FSM_sequential_fsm[0]_i_3 
       (.I0(fsm[2]),
        .I1(rxpmaresetdone_reg2),
        .I2(fsm[3]),
        .I3(mmcm_lock_reg2),
        .I4(fsm[1]),
        .O(\FSM_sequential_fsm[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF01100FFF011)) 
    \FSM_sequential_fsm[0]_i_4 
       (.I0(plllock_reg2),
        .I1(resetdone_reg2),
        .I2(drp_done_reg2),
        .I3(fsm[3]),
        .I4(fsm[2]),
        .I5(txsync_done_reg2),
        .O(\FSM_sequential_fsm[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h202FF0F0202F0000)) 
    \FSM_sequential_fsm[0]_i_5 
       (.I0(resetdone_reg2),
        .I1(phystatus_reg2),
        .I2(fsm[2]),
        .I3(rxpmaresetdone_reg2),
        .I4(fsm[3]),
        .I5(drp_done_reg2),
        .O(\FSM_sequential_fsm[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF45454555)) 
    \FSM_sequential_fsm[1]_i_1 
       (.I0(\FSM_sequential_fsm[1]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm[1]_i_3_n_0 ),
        .I2(txsync_done_reg2),
        .I3(fsm[1]),
        .I4(fsm[0]),
        .I5(\FSM_sequential_fsm[1]_i_4_n_0 ),
        .O(\FSM_sequential_fsm[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFBF)) 
    \FSM_sequential_fsm[1]_i_2 
       (.I0(fsm[0]),
        .I1(cfg_wait_cnt_reg__0[5]),
        .I2(cfg_wait_cnt_reg__0[4]),
        .I3(\FSM_sequential_fsm[1]_i_5_n_0 ),
        .I4(\FSM_sequential_fsm[1]_i_6_n_0 ),
        .O(\FSM_sequential_fsm[1]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_fsm[1]_i_3 
       (.I0(fsm[2]),
        .I1(fsm[3]),
        .O(\FSM_sequential_fsm[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0050005000C0F0C0)) 
    \FSM_sequential_fsm[1]_i_4 
       (.I0(mmcm_lock_reg2),
        .I1(drp_done_reg2),
        .I2(fsm[1]),
        .I3(fsm[2]),
        .I4(rxpmaresetdone_reg2),
        .I5(fsm[3]),
        .O(\FSM_sequential_fsm[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFFFFFFFFFF)) 
    \FSM_sequential_fsm[1]_i_5 
       (.I0(fsm[3]),
        .I1(fsm[2]),
        .I2(cfg_wait_cnt_reg__0[1]),
        .I3(cfg_wait_cnt_reg__0[2]),
        .I4(cfg_wait_cnt_reg__0[3]),
        .I5(cfg_wait_cnt_reg__0[0]),
        .O(\FSM_sequential_fsm[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFFEE0C0000)) 
    \FSM_sequential_fsm[1]_i_6 
       (.I0(plllock_reg2),
        .I1(fsm[3]),
        .I2(drp_done_reg2),
        .I3(fsm[2]),
        .I4(fsm[0]),
        .I5(fsm[1]),
        .O(\FSM_sequential_fsm[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h88080008)) 
    \FSM_sequential_fsm[2]_i_2 
       (.I0(fsm[0]),
        .I1(fsm[1]),
        .I2(drp_done_reg2),
        .I3(fsm[3]),
        .I4(mmcm_lock_reg2),
        .O(\FSM_sequential_fsm[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h555F7F7F)) 
    \FSM_sequential_fsm[2]_i_3 
       (.I0(fsm[1]),
        .I1(txsync_done_reg2),
        .I2(fsm[3]),
        .I3(rxpmaresetdone_reg2),
        .I4(fsm[0]),
        .O(\FSM_sequential_fsm[2]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_sequential_fsm[3]_i_1 
       (.I0(out),
        .O(SR));
  LUT6 #(
    .INIT(64'h4AAA0AAA4AAAAAAA)) 
    \FSM_sequential_fsm[3]_i_2 
       (.I0(fsm[3]),
        .I1(rxpmaresetdone_reg2),
        .I2(fsm[2]),
        .I3(fsm[1]),
        .I4(fsm[0]),
        .I5(txsync_done_reg2),
        .O(\FSM_sequential_fsm[3]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm[0]_i_1_n_0 ),
        .Q(fsm[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm[1]_i_1_n_0 ),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm_reg[2]_i_1_n_0 ),
        .Q(fsm[2]),
        .R(SR));
  MUXF7 \FSM_sequential_fsm_reg[2]_i_1 
       (.I0(\FSM_sequential_fsm[2]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm[2]_i_3_n_0 ),
        .O(\FSM_sequential_fsm_reg[2]_i_1_n_0 ),
        .S(fsm[2]));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm[3]_i_2_n_0 ),
        .Q(fsm[3]),
        .R(SR));
  LUT4 #(
    .INIT(16'h1400)) 
    RST_DRP_START_i_1
       (.I0(fsm[2]),
        .I1(fsm[3]),
        .I2(fsm[1]),
        .I3(fsm[0]),
        .O(RST_DRP_START0));
  FDRE RST_DRP_START_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(RST_DRP_START0),
        .Q(p_1_in),
        .R(SR));
  LUT4 #(
    .INIT(16'h0018)) 
    RST_DRP_X16_i_1
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(fsm[3]),
        .O(RST_DRP_X160));
  FDRE RST_DRP_X16_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(RST_DRP_X160),
        .Q(p_3_in),
        .R(SR));
  LUT6 #(
    .INIT(64'h0001000000010001)) 
    \cfg_wait_cnt[0]_i_1 
       (.I0(fsm[2]),
        .I1(fsm[3]),
        .I2(fsm[1]),
        .I3(fsm[0]),
        .I4(\cfg_wait_cnt[3]_i_2_n_0 ),
        .I5(cfg_wait_cnt_reg__0[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'hAA28)) 
    \cfg_wait_cnt[1]_i_1 
       (.I0(dclk_rst_reg1_0),
        .I1(cfg_wait_cnt_reg__0[1]),
        .I2(cfg_wait_cnt_reg__0[0]),
        .I3(\cfg_wait_cnt[3]_i_2_n_0 ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h8AA8A8A8)) 
    \cfg_wait_cnt[2]_i_1 
       (.I0(dclk_rst_reg1_0),
        .I1(\cfg_wait_cnt[3]_i_2_n_0 ),
        .I2(cfg_wait_cnt_reg__0[2]),
        .I3(cfg_wait_cnt_reg__0[0]),
        .I4(cfg_wait_cnt_reg__0[1]),
        .O(p_0_in__0[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAA28888888)) 
    \cfg_wait_cnt[3]_i_1 
       (.I0(dclk_rst_reg1_0),
        .I1(cfg_wait_cnt_reg__0[3]),
        .I2(cfg_wait_cnt_reg__0[1]),
        .I3(cfg_wait_cnt_reg__0[0]),
        .I4(cfg_wait_cnt_reg__0[2]),
        .I5(\cfg_wait_cnt[3]_i_2_n_0 ),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \cfg_wait_cnt[3]_i_2 
       (.I0(cfg_wait_cnt_reg__0[5]),
        .I1(cfg_wait_cnt_reg__0[4]),
        .I2(cfg_wait_cnt_reg__0[3]),
        .I3(cfg_wait_cnt_reg__0[1]),
        .I4(cfg_wait_cnt_reg__0[0]),
        .I5(cfg_wait_cnt_reg__0[2]),
        .O(\cfg_wait_cnt[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hC80C)) 
    \cfg_wait_cnt[4]_i_1 
       (.I0(cfg_wait_cnt_reg__0[5]),
        .I1(dclk_rst_reg1_0),
        .I2(\cfg_wait_cnt[4]_i_2_n_0 ),
        .I3(cfg_wait_cnt_reg__0[4]),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \cfg_wait_cnt[4]_i_2 
       (.I0(cfg_wait_cnt_reg__0[3]),
        .I1(cfg_wait_cnt_reg__0[1]),
        .I2(cfg_wait_cnt_reg__0[0]),
        .I3(cfg_wait_cnt_reg__0[2]),
        .O(\cfg_wait_cnt[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0001000000010001)) 
    \cfg_wait_cnt[5]_i_1 
       (.I0(fsm[2]),
        .I1(fsm[3]),
        .I2(fsm[1]),
        .I3(fsm[0]),
        .I4(cfg_wait_cnt_reg__0[5]),
        .I5(\cfg_wait_cnt[5]_i_2_n_0 ),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \cfg_wait_cnt[5]_i_2 
       (.I0(cfg_wait_cnt_reg__0[2]),
        .I1(cfg_wait_cnt_reg__0[0]),
        .I2(cfg_wait_cnt_reg__0[1]),
        .I3(cfg_wait_cnt_reg__0[3]),
        .I4(cfg_wait_cnt_reg__0[4]),
        .O(\cfg_wait_cnt[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(p_0_in__0[0]),
        .Q(cfg_wait_cnt_reg__0[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(p_0_in__0[1]),
        .Q(cfg_wait_cnt_reg__0[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(p_0_in__0[2]),
        .Q(cfg_wait_cnt_reg__0[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(p_0_in__0[3]),
        .Q(cfg_wait_cnt_reg__0[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(p_0_in__0[4]),
        .Q(cfg_wait_cnt_reg__0[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cfg_wait_cnt_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(p_0_in__0[5]),
        .Q(cfg_wait_cnt_reg__0[5]),
        .R(SR));
  LUT4 #(
    .INIT(16'h0001)) 
    dclk_rst_reg1_i_1
       (.I0(fsm[0]),
        .I1(fsm[1]),
        .I2(fsm[3]),
        .I3(fsm[2]),
        .O(dclk_rst_reg1_0));
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dclk_rst_reg1_0),
        .Q(dclk_rst_reg1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    dclk_rst_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dclk_rst_reg1),
        .Q(\di_reg[0] ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(done),
        .Q(drp_done_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(SR));
  LUT5 #(
    .INIT(32'hFDFF0100)) 
    gtreset_i_1
       (.I0(fsm[2]),
        .I1(fsm[3]),
        .I2(fsm[0]),
        .I3(fsm[1]),
        .I4(rst_gtreset),
        .O(gtreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtreset_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(gtreset_i_1_n_0),
        .Q(rst_gtreset),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4] ),
        .Q(mmcm_lock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(gt_phystatus),
        .Q(phystatus_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \phystatus_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(phystatus_reg1),
        .Q(phystatus_reg2),
        .R(SR));
  LUT4 #(
    .INIT(16'h2AA9)) 
    \pipe_rst_fsm[0]_INST_0 
       (.I0(fsm[0]),
        .I1(fsm[1]),
        .I2(fsm[3]),
        .I3(fsm[2]),
        .O(pipe_rst_fsm[0]));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \pipe_rst_fsm[1]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .I2(fsm[3]),
        .I3(fsm[0]),
        .O(pipe_rst_fsm[1]));
  LUT4 #(
    .INIT(16'h7F00)) 
    \pipe_rst_fsm[2]_INST_0 
       (.I0(fsm[3]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(fsm[2]),
        .O(pipe_rst_fsm[2]));
  LUT4 #(
    .INIT(16'h7F00)) 
    \pipe_rst_fsm[3]_INST_0 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .I2(fsm[2]),
        .I3(fsm[3]),
        .O(pipe_rst_fsm[3]));
  LUT4 #(
    .INIT(16'h0010)) 
    pipe_rst_idle_INST_0
       (.I0(fsm[3]),
        .I1(fsm[2]),
        .I2(fsm[0]),
        .I3(fsm[1]),
        .O(pipe_rst_idle));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE plllock_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[95] ),
        .Q(plllock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE plllock_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(plllock_reg1),
        .Q(plllock_reg2),
        .R(SR));
  LUT5 #(
    .INIT(32'hFDFF0010)) 
    pllreset_i_1
       (.I0(fsm[2]),
        .I1(fsm[3]),
        .I2(fsm[1]),
        .I3(fsm[0]),
        .I4(rst_cpllreset),
        .O(pllreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(pllreset_i_1_n_0),
        .Q(rst_cpllreset),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(out0[1]),
        .Q(rate_idle_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_idle_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(user_resetdone),
        .Q(resetdone_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \resetdone_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(resetdone_reg1),
        .Q(resetdone_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(user_rxcdrlock),
        .Q(rxcdrlock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxcdrlock_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(pipe_rxpmaresetdone),
        .Q(rxpmaresetdone_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxpmaresetdone_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxpmaresetdone_reg1),
        .Q(rxpmaresetdone_reg2),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    rxusrclk_rst_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rst_cpllreset),
        .Q(rxusrclk_rst_reg1),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    rxusrclk_rst_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxusrclk_rst_reg1),
        .Q(rxvalid_reg1_reg),
        .S(rst_cpllreset));
  LUT2 #(
    .INIT(4'hE)) 
    \txeq_preset[17]_i_1 
       (.I0(rst_cpllreset),
        .I1(out1),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txsync_done),
        .Q(txsync_done_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txsync_done_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txsync_done_reg1),
        .Q(txsync_done_reg2),
        .R(SR));
  LUT5 #(
    .INIT(32'hBAAAAAAA)) 
    txsync_start_reg1_i_1
       (.I0(out0[0]),
        .I1(fsm[1]),
        .I2(fsm[0]),
        .I3(fsm[2]),
        .I4(fsm[3]),
        .O(SYNC_TXSYNC_START0));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    userrdy_i_1
       (.I0(mmcm_lock_reg2),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .I3(fsm[3]),
        .I4(fsm[2]),
        .I5(rst_userrdy),
        .O(userrdy_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    userrdy_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(userrdy_i_1_n_0),
        .Q(rst_userrdy),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_7x
   (\ctlplength_reg[2,0][0] ,
    cfg_dev_control_max_payload,
    \length_offset_reg[11] ,
    p_3_in,
    \ctlplength_reg[1,3][8] ,
    p_0_in1_in,
    \ctlpbytecount_reg[1,0][11] ,
    p_7_in,
    trn_rsof,
    trn_reof,
    trn_rsrc_dsc,
    rsrc_rdy_filtered,
    trn_rsrc_rdy,
    \end_point.s_axi_ctl_rdata_reg[3] ,
    pl_ltssm_state,
    \end_point.s_axi_ctl_rdata_reg[4] ,
    \end_point.s_axi_ctl_rdata_reg[5] ,
    \end_point.s_axi_ctl_rdata_reg[6] ,
    \end_point.s_axi_ctl_rdata_reg[7] ,
    \end_point.s_axi_ctl_rdata_reg[9] ,
    \end_point.s_axi_ctl_rdata_reg[10] ,
    \end_point.s_axi_ctl_rdata_reg[0] ,
    pl_sel_lnk_rate,
    \sig_blk_interrupt_di_reg[7] ,
    legint_msiSM_reg,
    cfg_interrupt_msienable,
    \sig_blk_interrupt_di_reg[4] ,
    \sig_blk_interrupt_di_reg[3] ,
    \sig_blk_interrupt_di_reg[2] ,
    \sig_blk_interrupt_di_reg[1] ,
    \sig_blk_interrupt_di_reg[0] ,
    \ctlplength_reg[2,3][9] ,
    \ctlplength_reg[2,2][9] ,
    \ctlplength_reg[2,1][9] ,
    \ctlplength_reg[2,0][9] ,
    cpldsplitcount0_out,
    \end_point.pl_directed_link_change_d_reg[1] ,
    E,
    sig_blk_interrupt_assert_reg,
    INTX_state_reg,
    sig_intx_msi_grant_reg,
    legint_msiSM_reg_0,
    cfg_mgmt_rd_wr_done_n,
    pipe_rx0_polarity,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    pipe_tx_deemph,
    pipe_tx_rate,
    pipe_tx_rcvr_det,
    pl_link_upcfg_cap,
    pl_received_hot_rst,
    trn_lnk_up,
    trn_recrc_err,
    trn_rd,
    cfg_msg_data,
    pipe_tx0_data,
    pipe_tx0_char_is_k,
    pipe_tx0_powerdown,
    pl_sel_lnk_width,
    MSI_Vector_Width,
    pipe_tx_margin,
    cfg_mgmt_do,
    trn_tdst_rdy,
    \trn_rbar_hit_prev_reg[4] ,
    O,
    \data_width_64.tlplength_reg[3][6] ,
    neqOp_0,
    \data_width_64.tlplength_reg[3][7] ,
    \data_width_64.tlplength_reg[3][7]_0 ,
    \data_width_64.tlplength_reg[3][6]_0 ,
    \data_width_64.tlplength_reg[3][6]_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \data_width_64.tlplength_reg[3][7]_1 ,
    \data_width_64.tlplength_reg[3][7]_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[10] ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[10]_1 ,
    \length_offset_reg[8] ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[6] ,
    R,
    \ctargetpipeline_reg[1] ,
    \ctargetpipeline_reg[1]_0 ,
    \ctargetpipeline_reg[1]_1 ,
    \ctargetpipeline_reg[1]_2 ,
    \ctargetpipeline_reg[1]_3 ,
    \ctargetpipeline_reg[1]_4 ,
    trn_rdst_rdy,
    trn_in_packet,
    trn_rsrc_dsc_d,
    \s_axi_ctl_araddr_0__s_port_] ,
    \end_point.interrupt_decode_reg[3] ,
    \s_axi_ctl_araddr_3__s_port_] ,
    \s_axi_ctl_araddr[5] ,
    \cfg_device_number_d_reg[4] ,
    \end_point.state_reg[1] ,
    s_axi_ctl_araddr,
    \cfg_bus_number_d_reg[2] ,
    \s_axi_ctl_araddr[0]_0 ,
    \end_point.interrupt_decode_reg[0] ,
    pl_directed_link_change,
    cfg_interrupt_di,
    INTX_state_reg_0,
    sig_blk_interrupt,
    intx_msi_request_2d,
    intx_msi_request_3d,
    axi_aresetn,
    INTX_state,
    INTX_MSI_Request,
    \msi_vector_num_2d_reg[4] ,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctargetpipeline_reg[1]_5 ,
    \cpldsplitsm_reg[1] ,
    \data_width_64.tlplength_reg[3][4] ,
    sys_rst_n_int,
    sig_blk_interrupt_assert,
    INTX_MSI_Grant,
    \resetovrd.reset_reg[4] ,
    cfg_mgmt_rd_en_n,
    cfg_mgmt_wr_readonly_n,
    cfg_mgmt_wr_rw1c_as_rw_n,
    CLK,
    pipe_rx0_chanisaligned,
    pipe_rx0_elec_idle,
    pipe_rx0_phy_status,
    pipe_rx0_valid,
    pl_directed_link_auton,
    pl_directed_link_speed,
    sys_rst_n,
    trn_rnp_ok,
    trn_teof,
    trn_tsof,
    trn_tsrc_rdy,
    trn_td,
    Q,
    \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ,
    pl_directed_link_width,
    trn_trem,
    \pipe_stages_1.pipe_rx_status_q_reg[2] ,
    cfg_mgmt_byte_en_n,
    cfg_mgmt_dwaddr);
  output \ctlplength_reg[2,0][0] ;
  output [2:0]cfg_dev_control_max_payload;
  output [5:0]\length_offset_reg[11] ;
  output [3:0]p_3_in;
  output [3:0]\ctlplength_reg[1,3][8] ;
  output [1:0]p_0_in1_in;
  output [9:0]\ctlpbytecount_reg[1,0][11] ;
  output p_7_in;
  output trn_rsof;
  output trn_reof;
  output trn_rsrc_dsc;
  output rsrc_rdy_filtered;
  output trn_rsrc_rdy;
  output \end_point.s_axi_ctl_rdata_reg[3] ;
  output [5:0]pl_ltssm_state;
  output \end_point.s_axi_ctl_rdata_reg[4] ;
  output \end_point.s_axi_ctl_rdata_reg[5] ;
  output \end_point.s_axi_ctl_rdata_reg[6] ;
  output \end_point.s_axi_ctl_rdata_reg[7] ;
  output \end_point.s_axi_ctl_rdata_reg[9] ;
  output \end_point.s_axi_ctl_rdata_reg[10] ;
  output \end_point.s_axi_ctl_rdata_reg[0] ;
  output pl_sel_lnk_rate;
  output \sig_blk_interrupt_di_reg[7] ;
  output legint_msiSM_reg;
  output cfg_interrupt_msienable;
  output \sig_blk_interrupt_di_reg[4] ;
  output \sig_blk_interrupt_di_reg[3] ;
  output \sig_blk_interrupt_di_reg[2] ;
  output \sig_blk_interrupt_di_reg[1] ;
  output \sig_blk_interrupt_di_reg[0] ;
  output \ctlplength_reg[2,3][9] ;
  output \ctlplength_reg[2,2][9] ;
  output \ctlplength_reg[2,1][9] ;
  output \ctlplength_reg[2,0][9] ;
  output cpldsplitcount0_out;
  output \end_point.pl_directed_link_change_d_reg[1] ;
  output [0:0]E;
  output sig_blk_interrupt_assert_reg;
  output INTX_state_reg;
  output sig_intx_msi_grant_reg;
  output legint_msiSM_reg_0;
  output cfg_mgmt_rd_wr_done_n;
  output pipe_rx0_polarity;
  output pipe_tx0_compliance;
  output pipe_tx0_elec_idle;
  output pipe_tx_deemph;
  output pipe_tx_rate;
  output pipe_tx_rcvr_det;
  output pl_link_upcfg_cap;
  output pl_received_hot_rst;
  output trn_lnk_up;
  output trn_recrc_err;
  output [63:0]trn_rd;
  output [15:0]cfg_msg_data;
  output [15:0]pipe_tx0_data;
  output [1:0]pipe_tx0_char_is_k;
  output [1:0]pipe_tx0_powerdown;
  output [1:0]pl_sel_lnk_width;
  output [2:0]MSI_Vector_Width;
  output [2:0]pipe_tx_margin;
  output [31:0]cfg_mgmt_do;
  output trn_tdst_rdy;
  output [3:0]\trn_rbar_hit_prev_reg[4] ;
  input [3:0]O;
  input [3:0]\data_width_64.tlplength_reg[3][6] ;
  input neqOp_0;
  input [1:0]\data_width_64.tlplength_reg[3][7] ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  input \length_offset_reg[11]_0 ;
  input \length_offset_reg[10] ;
  input \length_offset_reg[10]_0 ;
  input \length_offset_reg[11]_1 ;
  input \length_offset_reg[10]_1 ;
  input \length_offset_reg[8] ;
  input [2:0]\length_offset_reg[11]_2 ;
  input \length_offset_reg[6] ;
  input [6:0]R;
  input \ctargetpipeline_reg[1] ;
  input \ctargetpipeline_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_2 ;
  input \ctargetpipeline_reg[1]_3 ;
  input \ctargetpipeline_reg[1]_4 ;
  input trn_rdst_rdy;
  input trn_in_packet;
  input trn_rsrc_dsc_d;
  input \s_axi_ctl_araddr_0__s_port_] ;
  input \end_point.interrupt_decode_reg[3] ;
  input \s_axi_ctl_araddr_3__s_port_] ;
  input \s_axi_ctl_araddr[5] ;
  input [4:0]\cfg_device_number_d_reg[4] ;
  input \end_point.state_reg[1] ;
  input [4:0]s_axi_ctl_araddr;
  input [1:0]\cfg_bus_number_d_reg[2] ;
  input \s_axi_ctl_araddr[0]_0 ;
  input \end_point.interrupt_decode_reg[0] ;
  input [1:0]pl_directed_link_change;
  input [5:0]cfg_interrupt_di;
  input INTX_state_reg_0;
  input sig_blk_interrupt;
  input intx_msi_request_2d;
  input intx_msi_request_3d;
  input axi_aresetn;
  input INTX_state;
  input INTX_MSI_Request;
  input [4:0]\msi_vector_num_2d_reg[4] ;
  input \ctlplength[0,3] ;
  input \ctlplength[0,2] ;
  input \ctlplength[0,1] ;
  input \ctargetpipeline_reg[1]_5 ;
  input [1:0]\cpldsplitsm_reg[1] ;
  input \data_width_64.tlplength_reg[3][4] ;
  input sys_rst_n_int;
  input sig_blk_interrupt_assert;
  input INTX_MSI_Grant;
  input \resetovrd.reset_reg[4] ;
  input cfg_mgmt_rd_en_n;
  input cfg_mgmt_wr_readonly_n;
  input cfg_mgmt_wr_rw1c_as_rw_n;
  input CLK;
  input pipe_rx0_chanisaligned;
  input pipe_rx0_elec_idle;
  input pipe_rx0_phy_status;
  input pipe_rx0_valid;
  input pl_directed_link_auton;
  input pl_directed_link_speed;
  input sys_rst_n;
  input trn_rnp_ok;
  input trn_teof;
  input trn_tsof;
  input trn_tsrc_rdy;
  input [63:0]trn_td;
  input [15:0]Q;
  input [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  input [1:0]pl_directed_link_width;
  input [0:0]trn_trem;
  input [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  input [0:0]cfg_mgmt_byte_en_n;
  input [9:0]cfg_mgmt_dwaddr;

  wire CLK;
  wire [0:0]E;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire INTX_state_reg;
  wire INTX_state_reg_0;
  wire [2:0]MSI_Vector_Width;
  wire [3:0]O;
  wire [15:0]Q;
  wire [6:0]R;
  wire axi_aresetn;
  wire [1:0]\cfg_bus_number_d_reg[2] ;
  wire [2:0]cfg_dev_control_max_payload;
  wire [4:0]\cfg_device_number_d_reg[4] ;
  wire cfg_err_aer_headerlog_set_n;
  wire cfg_err_cpl_rdy_n;
  wire [5:0]cfg_interrupt_di;
  wire cfg_interrupt_msienable;
  wire cfg_interrupt_rdy_n;
  wire [0:0]cfg_mgmt_byte_en_n;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en_n;
  wire cfg_mgmt_rd_wr_done_n;
  wire cfg_mgmt_wr_readonly_n;
  wire cfg_mgmt_wr_rw1c_as_rw_n;
  wire [15:0]cfg_msg_data;
  wire cfg_received_func_lvl_rst_n;
  wire cpldsplitcount0_out;
  wire [1:0]\cpldsplitsm_reg[1] ;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire \ctargetpipeline_reg[1]_2 ;
  wire \ctargetpipeline_reg[1]_3 ;
  wire \ctargetpipeline_reg[1]_4 ;
  wire \ctargetpipeline_reg[1]_5 ;
  wire [9:0]\ctlpbytecount_reg[1,0][11] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire [3:0]\ctlplength_reg[1,3][8] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][9] ;
  wire \ctlplength_reg[2,2][9] ;
  wire \ctlplength_reg[2,3][9] ;
  wire \data_width_64.tlplength_reg[3][4] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7] ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  wire \end_point.interrupt_decode_reg[0] ;
  wire \end_point.interrupt_decode_reg[3] ;
  wire \end_point.pl_directed_link_change_d[1]_i_3_n_0 ;
  wire \end_point.pl_directed_link_change_d_reg[1] ;
  wire \end_point.s_axi_ctl_rdata[0]_i_4_n_0 ;
  wire \end_point.s_axi_ctl_rdata_reg[0] ;
  wire \end_point.s_axi_ctl_rdata_reg[10] ;
  wire \end_point.s_axi_ctl_rdata_reg[3] ;
  wire \end_point.s_axi_ctl_rdata_reg[4] ;
  wire \end_point.s_axi_ctl_rdata_reg[5] ;
  wire \end_point.s_axi_ctl_rdata_reg[6] ;
  wire \end_point.s_axi_ctl_rdata_reg[7] ;
  wire \end_point.s_axi_ctl_rdata_reg[9] ;
  wire \end_point.state_reg[1] ;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire legint_msiSM_reg;
  wire legint_msiSM_reg_0;
  wire \length_offset[10]_i_2_n_0 ;
  wire \length_offset[11]_i_5_n_0 ;
  wire \length_offset[6]_i_2_n_0 ;
  wire \length_offset[7]_i_2_n_0 ;
  wire \length_offset[8]_i_2_n_0 ;
  wire \length_offset[9]_i_4_n_0 ;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[10]_1 ;
  wire [5:0]\length_offset_reg[11] ;
  wire \length_offset_reg[11]_0 ;
  wire \length_offset_reg[11]_1 ;
  wire [2:0]\length_offset_reg[11]_2 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[8] ;
  wire [12:0]mim_rx_raddr;
  wire [67:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [12:0]mim_rx_waddr;
  wire [67:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire [12:0]mim_tx_raddr;
  wire [68:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [12:0]mim_tx_waddr;
  wire [68:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire [4:0]\msi_vector_num_2d_reg[4] ;
  wire neqOp_0;
  wire [1:0]p_0_in1_in;
  wire [3:0]p_3_in;
  wire p_7_in;
  wire pcie_block_i_i_1_n_0;
  wire pcie_block_i_i_2_n_0;
  wire pcie_block_i_n_0;
  wire pcie_block_i_n_1;
  wire pcie_block_i_n_100;
  wire pcie_block_i_n_101;
  wire pcie_block_i_n_102;
  wire pcie_block_i_n_103;
  wire pcie_block_i_n_104;
  wire pcie_block_i_n_105;
  wire pcie_block_i_n_106;
  wire pcie_block_i_n_107;
  wire pcie_block_i_n_108;
  wire pcie_block_i_n_1097;
  wire pcie_block_i_n_1098;
  wire pcie_block_i_n_1099;
  wire pcie_block_i_n_1100;
  wire pcie_block_i_n_1101;
  wire pcie_block_i_n_1102;
  wire pcie_block_i_n_1103;
  wire pcie_block_i_n_1104;
  wire pcie_block_i_n_1105;
  wire pcie_block_i_n_1106;
  wire pcie_block_i_n_1107;
  wire pcie_block_i_n_1108;
  wire pcie_block_i_n_1109;
  wire pcie_block_i_n_1110;
  wire pcie_block_i_n_1111;
  wire pcie_block_i_n_1112;
  wire pcie_block_i_n_1113;
  wire pcie_block_i_n_1114;
  wire pcie_block_i_n_1115;
  wire pcie_block_i_n_1116;
  wire pcie_block_i_n_1117;
  wire pcie_block_i_n_1118;
  wire pcie_block_i_n_1119;
  wire pcie_block_i_n_1120;
  wire pcie_block_i_n_1121;
  wire pcie_block_i_n_1122;
  wire pcie_block_i_n_1123;
  wire pcie_block_i_n_1124;
  wire pcie_block_i_n_1125;
  wire pcie_block_i_n_1126;
  wire pcie_block_i_n_1127;
  wire pcie_block_i_n_1128;
  wire pcie_block_i_n_1129;
  wire pcie_block_i_n_1130;
  wire pcie_block_i_n_1131;
  wire pcie_block_i_n_1132;
  wire pcie_block_i_n_1133;
  wire pcie_block_i_n_1134;
  wire pcie_block_i_n_1135;
  wire pcie_block_i_n_1136;
  wire pcie_block_i_n_1137;
  wire pcie_block_i_n_1138;
  wire pcie_block_i_n_1139;
  wire pcie_block_i_n_1140;
  wire pcie_block_i_n_1141;
  wire pcie_block_i_n_1142;
  wire pcie_block_i_n_14;
  wire pcie_block_i_n_140;
  wire pcie_block_i_n_141;
  wire pcie_block_i_n_142;
  wire pcie_block_i_n_143;
  wire pcie_block_i_n_144;
  wire pcie_block_i_n_145;
  wire pcie_block_i_n_146;
  wire pcie_block_i_n_147;
  wire pcie_block_i_n_148;
  wire pcie_block_i_n_149;
  wire pcie_block_i_n_15;
  wire pcie_block_i_n_155;
  wire pcie_block_i_n_156;
  wire pcie_block_i_n_157;
  wire pcie_block_i_n_158;
  wire pcie_block_i_n_159;
  wire pcie_block_i_n_16;
  wire pcie_block_i_n_160;
  wire pcie_block_i_n_168;
  wire pcie_block_i_n_169;
  wire pcie_block_i_n_17;
  wire pcie_block_i_n_170;
  wire pcie_block_i_n_172;
  wire pcie_block_i_n_173;
  wire pcie_block_i_n_174;
  wire pcie_block_i_n_175;
  wire pcie_block_i_n_176;
  wire pcie_block_i_n_177;
  wire pcie_block_i_n_178;
  wire pcie_block_i_n_179;
  wire pcie_block_i_n_18;
  wire pcie_block_i_n_180;
  wire pcie_block_i_n_181;
  wire pcie_block_i_n_182;
  wire pcie_block_i_n_183;
  wire pcie_block_i_n_184;
  wire pcie_block_i_n_185;
  wire pcie_block_i_n_186;
  wire pcie_block_i_n_187;
  wire pcie_block_i_n_188;
  wire pcie_block_i_n_189;
  wire pcie_block_i_n_19;
  wire pcie_block_i_n_190;
  wire pcie_block_i_n_191;
  wire pcie_block_i_n_192;
  wire pcie_block_i_n_193;
  wire pcie_block_i_n_194;
  wire pcie_block_i_n_195;
  wire pcie_block_i_n_196;
  wire pcie_block_i_n_197;
  wire pcie_block_i_n_198;
  wire pcie_block_i_n_199;
  wire pcie_block_i_n_2;
  wire pcie_block_i_n_20;
  wire pcie_block_i_n_200;
  wire pcie_block_i_n_201;
  wire pcie_block_i_n_202;
  wire pcie_block_i_n_203;
  wire pcie_block_i_n_204;
  wire pcie_block_i_n_205;
  wire pcie_block_i_n_206;
  wire pcie_block_i_n_207;
  wire pcie_block_i_n_208;
  wire pcie_block_i_n_209;
  wire pcie_block_i_n_21;
  wire pcie_block_i_n_210;
  wire pcie_block_i_n_211;
  wire pcie_block_i_n_212;
  wire pcie_block_i_n_213;
  wire pcie_block_i_n_214;
  wire pcie_block_i_n_215;
  wire pcie_block_i_n_216;
  wire pcie_block_i_n_217;
  wire pcie_block_i_n_218;
  wire pcie_block_i_n_219;
  wire pcie_block_i_n_220;
  wire pcie_block_i_n_221;
  wire pcie_block_i_n_222;
  wire pcie_block_i_n_223;
  wire pcie_block_i_n_224;
  wire pcie_block_i_n_225;
  wire pcie_block_i_n_226;
  wire pcie_block_i_n_227;
  wire pcie_block_i_n_228;
  wire pcie_block_i_n_229;
  wire pcie_block_i_n_230;
  wire pcie_block_i_n_231;
  wire pcie_block_i_n_3;
  wire pcie_block_i_n_31;
  wire pcie_block_i_n_32;
  wire pcie_block_i_n_33;
  wire pcie_block_i_n_34;
  wire pcie_block_i_n_38;
  wire pcie_block_i_n_39;
  wire pcie_block_i_n_4;
  wire pcie_block_i_n_41;
  wire pcie_block_i_n_42;
  wire pcie_block_i_n_428;
  wire pcie_block_i_n_429;
  wire pcie_block_i_n_43;
  wire pcie_block_i_n_430;
  wire pcie_block_i_n_431;
  wire pcie_block_i_n_432;
  wire pcie_block_i_n_433;
  wire pcie_block_i_n_434;
  wire pcie_block_i_n_435;
  wire pcie_block_i_n_436;
  wire pcie_block_i_n_437;
  wire pcie_block_i_n_438;
  wire pcie_block_i_n_439;
  wire pcie_block_i_n_44;
  wire pcie_block_i_n_440;
  wire pcie_block_i_n_441;
  wire pcie_block_i_n_442;
  wire pcie_block_i_n_443;
  wire pcie_block_i_n_45;
  wire pcie_block_i_n_46;
  wire pcie_block_i_n_47;
  wire pcie_block_i_n_48;
  wire pcie_block_i_n_49;
  wire pcie_block_i_n_5;
  wire pcie_block_i_n_55;
  wire pcie_block_i_n_56;
  wire pcie_block_i_n_57;
  wire pcie_block_i_n_572;
  wire pcie_block_i_n_573;
  wire pcie_block_i_n_576;
  wire pcie_block_i_n_577;
  wire pcie_block_i_n_58;
  wire pcie_block_i_n_59;
  wire pcie_block_i_n_6;
  wire pcie_block_i_n_60;
  wire pcie_block_i_n_61;
  wire pcie_block_i_n_610;
  wire pcie_block_i_n_611;
  wire pcie_block_i_n_612;
  wire pcie_block_i_n_613;
  wire pcie_block_i_n_614;
  wire pcie_block_i_n_615;
  wire pcie_block_i_n_618;
  wire pcie_block_i_n_619;
  wire pcie_block_i_n_62;
  wire pcie_block_i_n_63;
  wire pcie_block_i_n_631;
  wire pcie_block_i_n_632;
  wire pcie_block_i_n_633;
  wire pcie_block_i_n_637;
  wire pcie_block_i_n_638;
  wire pcie_block_i_n_639;
  wire pcie_block_i_n_64;
  wire pcie_block_i_n_640;
  wire pcie_block_i_n_641;
  wire pcie_block_i_n_642;
  wire pcie_block_i_n_65;
  wire pcie_block_i_n_66;
  wire pcie_block_i_n_67;
  wire pcie_block_i_n_675;
  wire pcie_block_i_n_676;
  wire pcie_block_i_n_677;
  wire pcie_block_i_n_678;
  wire pcie_block_i_n_68;
  wire pcie_block_i_n_687;
  wire pcie_block_i_n_688;
  wire pcie_block_i_n_689;
  wire pcie_block_i_n_69;
  wire pcie_block_i_n_690;
  wire pcie_block_i_n_691;
  wire pcie_block_i_n_698;
  wire pcie_block_i_n_699;
  wire pcie_block_i_n_7;
  wire pcie_block_i_n_70;
  wire pcie_block_i_n_700;
  wire pcie_block_i_n_701;
  wire pcie_block_i_n_702;
  wire pcie_block_i_n_703;
  wire pcie_block_i_n_704;
  wire pcie_block_i_n_705;
  wire pcie_block_i_n_706;
  wire pcie_block_i_n_707;
  wire pcie_block_i_n_708;
  wire pcie_block_i_n_709;
  wire pcie_block_i_n_71;
  wire pcie_block_i_n_710;
  wire pcie_block_i_n_711;
  wire pcie_block_i_n_712;
  wire pcie_block_i_n_713;
  wire pcie_block_i_n_714;
  wire pcie_block_i_n_715;
  wire pcie_block_i_n_716;
  wire pcie_block_i_n_717;
  wire pcie_block_i_n_718;
  wire pcie_block_i_n_719;
  wire pcie_block_i_n_72;
  wire pcie_block_i_n_720;
  wire pcie_block_i_n_721;
  wire pcie_block_i_n_722;
  wire pcie_block_i_n_723;
  wire pcie_block_i_n_724;
  wire pcie_block_i_n_725;
  wire pcie_block_i_n_726;
  wire pcie_block_i_n_727;
  wire pcie_block_i_n_728;
  wire pcie_block_i_n_729;
  wire pcie_block_i_n_73;
  wire pcie_block_i_n_730;
  wire pcie_block_i_n_731;
  wire pcie_block_i_n_732;
  wire pcie_block_i_n_733;
  wire pcie_block_i_n_734;
  wire pcie_block_i_n_735;
  wire pcie_block_i_n_736;
  wire pcie_block_i_n_737;
  wire pcie_block_i_n_738;
  wire pcie_block_i_n_739;
  wire pcie_block_i_n_74;
  wire pcie_block_i_n_740;
  wire pcie_block_i_n_741;
  wire pcie_block_i_n_742;
  wire pcie_block_i_n_743;
  wire pcie_block_i_n_744;
  wire pcie_block_i_n_745;
  wire pcie_block_i_n_746;
  wire pcie_block_i_n_747;
  wire pcie_block_i_n_748;
  wire pcie_block_i_n_749;
  wire pcie_block_i_n_75;
  wire pcie_block_i_n_750;
  wire pcie_block_i_n_751;
  wire pcie_block_i_n_752;
  wire pcie_block_i_n_753;
  wire pcie_block_i_n_754;
  wire pcie_block_i_n_755;
  wire pcie_block_i_n_756;
  wire pcie_block_i_n_757;
  wire pcie_block_i_n_758;
  wire pcie_block_i_n_759;
  wire pcie_block_i_n_76;
  wire pcie_block_i_n_760;
  wire pcie_block_i_n_761;
  wire pcie_block_i_n_762;
  wire pcie_block_i_n_763;
  wire pcie_block_i_n_764;
  wire pcie_block_i_n_765;
  wire pcie_block_i_n_766;
  wire pcie_block_i_n_767;
  wire pcie_block_i_n_768;
  wire pcie_block_i_n_769;
  wire pcie_block_i_n_77;
  wire pcie_block_i_n_770;
  wire pcie_block_i_n_771;
  wire pcie_block_i_n_772;
  wire pcie_block_i_n_773;
  wire pcie_block_i_n_774;
  wire pcie_block_i_n_775;
  wire pcie_block_i_n_776;
  wire pcie_block_i_n_777;
  wire pcie_block_i_n_778;
  wire pcie_block_i_n_779;
  wire pcie_block_i_n_78;
  wire pcie_block_i_n_780;
  wire pcie_block_i_n_781;
  wire pcie_block_i_n_782;
  wire pcie_block_i_n_783;
  wire pcie_block_i_n_784;
  wire pcie_block_i_n_785;
  wire pcie_block_i_n_786;
  wire pcie_block_i_n_787;
  wire pcie_block_i_n_788;
  wire pcie_block_i_n_789;
  wire pcie_block_i_n_79;
  wire pcie_block_i_n_790;
  wire pcie_block_i_n_791;
  wire pcie_block_i_n_792;
  wire pcie_block_i_n_793;
  wire pcie_block_i_n_794;
  wire pcie_block_i_n_795;
  wire pcie_block_i_n_796;
  wire pcie_block_i_n_797;
  wire pcie_block_i_n_798;
  wire pcie_block_i_n_799;
  wire pcie_block_i_n_8;
  wire pcie_block_i_n_80;
  wire pcie_block_i_n_800;
  wire pcie_block_i_n_801;
  wire pcie_block_i_n_802;
  wire pcie_block_i_n_803;
  wire pcie_block_i_n_804;
  wire pcie_block_i_n_805;
  wire pcie_block_i_n_806;
  wire pcie_block_i_n_807;
  wire pcie_block_i_n_808;
  wire pcie_block_i_n_809;
  wire pcie_block_i_n_81;
  wire pcie_block_i_n_810;
  wire pcie_block_i_n_811;
  wire pcie_block_i_n_812;
  wire pcie_block_i_n_813;
  wire pcie_block_i_n_814;
  wire pcie_block_i_n_815;
  wire pcie_block_i_n_816;
  wire pcie_block_i_n_817;
  wire pcie_block_i_n_818;
  wire pcie_block_i_n_819;
  wire pcie_block_i_n_82;
  wire pcie_block_i_n_820;
  wire pcie_block_i_n_821;
  wire pcie_block_i_n_822;
  wire pcie_block_i_n_823;
  wire pcie_block_i_n_824;
  wire pcie_block_i_n_825;
  wire pcie_block_i_n_826;
  wire pcie_block_i_n_827;
  wire pcie_block_i_n_828;
  wire pcie_block_i_n_829;
  wire pcie_block_i_n_83;
  wire pcie_block_i_n_830;
  wire pcie_block_i_n_831;
  wire pcie_block_i_n_832;
  wire pcie_block_i_n_833;
  wire pcie_block_i_n_834;
  wire pcie_block_i_n_835;
  wire pcie_block_i_n_836;
  wire pcie_block_i_n_837;
  wire pcie_block_i_n_838;
  wire pcie_block_i_n_839;
  wire pcie_block_i_n_84;
  wire pcie_block_i_n_840;
  wire pcie_block_i_n_841;
  wire pcie_block_i_n_842;
  wire pcie_block_i_n_843;
  wire pcie_block_i_n_844;
  wire pcie_block_i_n_845;
  wire pcie_block_i_n_846;
  wire pcie_block_i_n_847;
  wire pcie_block_i_n_848;
  wire pcie_block_i_n_849;
  wire pcie_block_i_n_85;
  wire pcie_block_i_n_850;
  wire pcie_block_i_n_851;
  wire pcie_block_i_n_852;
  wire pcie_block_i_n_853;
  wire pcie_block_i_n_854;
  wire pcie_block_i_n_855;
  wire pcie_block_i_n_856;
  wire pcie_block_i_n_857;
  wire pcie_block_i_n_858;
  wire pcie_block_i_n_859;
  wire pcie_block_i_n_86;
  wire pcie_block_i_n_860;
  wire pcie_block_i_n_861;
  wire pcie_block_i_n_862;
  wire pcie_block_i_n_863;
  wire pcie_block_i_n_864;
  wire pcie_block_i_n_865;
  wire pcie_block_i_n_866;
  wire pcie_block_i_n_867;
  wire pcie_block_i_n_868;
  wire pcie_block_i_n_869;
  wire pcie_block_i_n_87;
  wire pcie_block_i_n_870;
  wire pcie_block_i_n_871;
  wire pcie_block_i_n_872;
  wire pcie_block_i_n_873;
  wire pcie_block_i_n_874;
  wire pcie_block_i_n_875;
  wire pcie_block_i_n_876;
  wire pcie_block_i_n_877;
  wire pcie_block_i_n_878;
  wire pcie_block_i_n_879;
  wire pcie_block_i_n_88;
  wire pcie_block_i_n_880;
  wire pcie_block_i_n_881;
  wire pcie_block_i_n_882;
  wire pcie_block_i_n_883;
  wire pcie_block_i_n_884;
  wire pcie_block_i_n_885;
  wire pcie_block_i_n_886;
  wire pcie_block_i_n_887;
  wire pcie_block_i_n_888;
  wire pcie_block_i_n_889;
  wire pcie_block_i_n_89;
  wire pcie_block_i_n_890;
  wire pcie_block_i_n_891;
  wire pcie_block_i_n_892;
  wire pcie_block_i_n_893;
  wire pcie_block_i_n_894;
  wire pcie_block_i_n_895;
  wire pcie_block_i_n_896;
  wire pcie_block_i_n_897;
  wire pcie_block_i_n_898;
  wire pcie_block_i_n_899;
  wire pcie_block_i_n_90;
  wire pcie_block_i_n_900;
  wire pcie_block_i_n_901;
  wire pcie_block_i_n_902;
  wire pcie_block_i_n_903;
  wire pcie_block_i_n_904;
  wire pcie_block_i_n_905;
  wire pcie_block_i_n_906;
  wire pcie_block_i_n_907;
  wire pcie_block_i_n_908;
  wire pcie_block_i_n_909;
  wire pcie_block_i_n_91;
  wire pcie_block_i_n_910;
  wire pcie_block_i_n_911;
  wire pcie_block_i_n_912;
  wire pcie_block_i_n_913;
  wire pcie_block_i_n_914;
  wire pcie_block_i_n_915;
  wire pcie_block_i_n_916;
  wire pcie_block_i_n_917;
  wire pcie_block_i_n_918;
  wire pcie_block_i_n_919;
  wire pcie_block_i_n_92;
  wire pcie_block_i_n_920;
  wire pcie_block_i_n_921;
  wire pcie_block_i_n_922;
  wire pcie_block_i_n_923;
  wire pcie_block_i_n_924;
  wire pcie_block_i_n_925;
  wire pcie_block_i_n_926;
  wire pcie_block_i_n_927;
  wire pcie_block_i_n_928;
  wire pcie_block_i_n_929;
  wire pcie_block_i_n_93;
  wire pcie_block_i_n_930;
  wire pcie_block_i_n_931;
  wire pcie_block_i_n_932;
  wire pcie_block_i_n_933;
  wire pcie_block_i_n_934;
  wire pcie_block_i_n_935;
  wire pcie_block_i_n_936;
  wire pcie_block_i_n_937;
  wire pcie_block_i_n_938;
  wire pcie_block_i_n_939;
  wire pcie_block_i_n_94;
  wire pcie_block_i_n_940;
  wire pcie_block_i_n_941;
  wire pcie_block_i_n_942;
  wire pcie_block_i_n_943;
  wire pcie_block_i_n_944;
  wire pcie_block_i_n_945;
  wire pcie_block_i_n_946;
  wire pcie_block_i_n_947;
  wire pcie_block_i_n_948;
  wire pcie_block_i_n_949;
  wire pcie_block_i_n_95;
  wire pcie_block_i_n_950;
  wire pcie_block_i_n_951;
  wire pcie_block_i_n_952;
  wire pcie_block_i_n_953;
  wire pcie_block_i_n_954;
  wire pcie_block_i_n_955;
  wire pcie_block_i_n_956;
  wire pcie_block_i_n_957;
  wire pcie_block_i_n_958;
  wire pcie_block_i_n_959;
  wire pcie_block_i_n_96;
  wire pcie_block_i_n_97;
  wire pcie_block_i_n_98;
  wire pcie_block_i_n_99;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_valid;
  wire pipe_rx1_polarity;
  wire pipe_rx2_polarity;
  wire pipe_rx3_polarity;
  wire pipe_rx4_polarity;
  wire pipe_rx5_polarity;
  wire pipe_rx6_polarity;
  wire pipe_rx7_polarity;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  wire [1:0]\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ;
  wire [2:0]\pipe_stages_1.pipe_rx_status_q_reg[2] ;
  wire [1:0]pipe_tx0_char_is_k;
  wire pipe_tx0_compliance;
  wire [15:0]pipe_tx0_data;
  wire pipe_tx0_elec_idle;
  wire [1:0]pipe_tx0_powerdown;
  wire [1:0]pipe_tx1_char_is_k;
  wire pipe_tx1_compliance;
  wire [15:0]pipe_tx1_data;
  wire pipe_tx1_elec_idle;
  wire [1:0]pipe_tx1_powerdown;
  wire [1:0]pipe_tx2_char_is_k;
  wire pipe_tx2_compliance;
  wire [15:0]pipe_tx2_data;
  wire pipe_tx2_elec_idle;
  wire [1:0]pipe_tx2_powerdown;
  wire [1:0]pipe_tx3_char_is_k;
  wire pipe_tx3_compliance;
  wire [15:0]pipe_tx3_data;
  wire pipe_tx3_elec_idle;
  wire [1:0]pipe_tx3_powerdown;
  wire [1:0]pipe_tx4_char_is_k;
  wire pipe_tx4_compliance;
  wire [15:0]pipe_tx4_data;
  wire pipe_tx4_elec_idle;
  wire [1:0]pipe_tx4_powerdown;
  wire [1:0]pipe_tx5_char_is_k;
  wire pipe_tx5_compliance;
  wire [15:0]pipe_tx5_data;
  wire pipe_tx5_elec_idle;
  wire [1:0]pipe_tx5_powerdown;
  wire [1:0]pipe_tx6_char_is_k;
  wire pipe_tx6_compliance;
  wire [15:0]pipe_tx6_data;
  wire pipe_tx6_elec_idle;
  wire [1:0]pipe_tx6_powerdown;
  wire [1:0]pipe_tx7_char_is_k;
  wire pipe_tx7_compliance;
  wire [15:0]pipe_tx7_data;
  wire pipe_tx7_elec_idle;
  wire [1:0]pipe_tx7_powerdown;
  wire pipe_tx_deemph;
  wire [2:0]pipe_tx_margin;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire pl_link_upcfg_cap;
  wire [5:0]pl_ltssm_state;
  wire pl_phy_lnk_up_n;
  wire pl_received_hot_rst;
  wire pl_sel_lnk_rate;
  wire [1:0]pl_sel_lnk_width;
  wire \resetovrd.reset_reg[4] ;
  wire rsrc_rdy_filtered;
  wire [4:0]s_axi_ctl_araddr;
  wire \s_axi_ctl_araddr[0]_0 ;
  wire \s_axi_ctl_araddr[5] ;
  wire s_axi_ctl_araddr_0__s_net_1;
  wire s_axi_ctl_araddr_3__s_net_1;
  wire [10:0]sig_blk_command;
  wire [14:0]sig_blk_dcontrol;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire sig_blk_interrupt_assert_i_2_n_0;
  wire sig_blk_interrupt_assert_reg;
  wire \sig_blk_interrupt_di[7]_i_2_n_0 ;
  wire \sig_blk_interrupt_di_reg[0] ;
  wire \sig_blk_interrupt_di_reg[1] ;
  wire \sig_blk_interrupt_di_reg[2] ;
  wire \sig_blk_interrupt_di_reg[3] ;
  wire \sig_blk_interrupt_di_reg[4] ;
  wire \sig_blk_interrupt_di_reg[7] ;
  wire [15:0]sig_blk_lstatus;
  wire sig_intx_msi_grant_reg;
  wire sys_rst_n;
  wire sys_rst_n_int;
  wire trn_in_packet;
  wire trn_lnk_up;
  wire [7:3]trn_rbar_hit;
  wire [3:0]\trn_rbar_hit_prev_reg[4] ;
  wire [63:0]trn_rd;
  wire trn_rdst_rdy;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rerrfwd;
  wire trn_rnp_ok;
  wire trn_rrem;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire trn_rsrc_dsc_d;
  wire trn_rsrc_rdy;
  wire [63:0]trn_td;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire [0:0]trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire user_rst_n;
  wire [127:64]NLW_pcie_block_i_TRNRD_UNCONNECTED;
  wire [1:1]NLW_pcie_block_i_TRNRREM_UNCONNECTED;
  wire [3:1]NLW_pcie_block_i_TRNTDSTRDY_UNCONNECTED;

  assign s_axi_ctl_araddr_0__s_net_1 = \s_axi_ctl_araddr_0__s_port_] ;
  assign s_axi_ctl_araddr_3__s_net_1 = \s_axi_ctl_araddr_3__s_port_] ;
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT4 #(
    .INIT(16'hCCD8)) 
    INTX_state_i_1
       (.I0(cfg_interrupt_msienable),
        .I1(INTX_state),
        .I2(INTX_MSI_Request),
        .I3(sig_blk_interrupt),
        .O(INTX_state_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \cfg_bus_number_d[7]_i_2 
       (.I0(pcie_block_i_n_55),
        .O(E));
  LUT5 #(
    .INIT(32'h00002A00)) 
    cpldsplitcount_reg_0_3_0_0_i_2
       (.I0(axi_aresetn),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\cpldsplitsm_reg[1] [0]),
        .I4(\cpldsplitsm_reg[1] [1]),
        .O(cpldsplitcount0_out));
  LUT6 #(
    .INIT(64'h0D000DDDDDDDDDDD)) 
    cpldsplitcount_reg_0_3_1_1_i_1
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[1]),
        .I2(\length_offset_reg[11]_0 ),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(\length_offset_reg[10] ),
        .I5(neqOp_0),
        .O(p_3_in[0]));
  LUT6 #(
    .INIT(64'h4045454540554555)) 
    cpldsplitcount_reg_0_3_2_2_i_1
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(\length_offset_reg[10]_0 ),
        .I2(cfg_dev_control_max_payload[0]),
        .I3(neqOp_0),
        .I4(\length_offset_reg[11]_1 ),
        .I5(cfg_dev_control_max_payload[1]),
        .O(p_3_in[1]));
  LUT3 #(
    .INIT(8'h10)) 
    cpldsplitcount_reg_0_3_3_3_i_1
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[1]),
        .I2(\length_offset_reg[10]_1 ),
        .O(p_3_in[2]));
  LUT6 #(
    .INIT(64'h0000000011010101)) 
    cpldsplitcount_reg_0_3_4_4_i_1
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(neqOp_0),
        .I3(\length_offset_reg[11]_2 [2]),
        .I4(\data_width_64.tlplength_reg[3][4] ),
        .I5(cfg_dev_control_max_payload[1]),
        .O(p_3_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \ctlpbytecount[1,3][0]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(R[0]),
        .O(\ctlpbytecount_reg[1,0][11] [0]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT5 #(
    .INIT(32'h30008844)) 
    \ctlpbytecount[1,3][10]_i_1 
       (.I0(R[6]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\ctargetpipeline_reg[1]_4 ),
        .I4(cfg_dev_control_max_payload[0]),
        .O(\ctlpbytecount_reg[1,0][11] [8]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \ctlpbytecount[1,3][11]_i_1 
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\ctargetpipeline_reg[1]_4 ),
        .I3(R[6]),
        .O(\ctlpbytecount_reg[1,0][11] [9]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT4 #(
    .INIT(16'h0770)) 
    \ctlpbytecount[1,3][1]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(R[0]),
        .I3(R[1]),
        .O(\ctlpbytecount_reg[1,0][11] [1]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \ctlpbytecount[1,3][4]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(\ctargetpipeline_reg[1] ),
        .O(\ctlpbytecount_reg[1,0][11] [2]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \ctlpbytecount[1,3][5]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(\ctargetpipeline_reg[1]_0 ),
        .O(\ctlpbytecount_reg[1,0][11] [3]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT4 #(
    .INIT(16'h7007)) 
    \ctlpbytecount[1,3][6]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(\ctargetpipeline_reg[1]_1 ),
        .I3(R[2]),
        .O(\ctlpbytecount_reg[1,0][11] [4]));
  LUT6 #(
    .INIT(64'h050E050E50F1050E)) 
    \ctlpbytecount[1,3][7]_i_1 
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[1]),
        .I2(R[3]),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(\ctargetpipeline_reg[1]_1 ),
        .I5(R[2]),
        .O(\ctlpbytecount_reg[1,0][11] [5]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT5 #(
    .INIT(32'h45C81032)) 
    \ctlpbytecount[1,3][8]_i_1 
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(R[4]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(\ctargetpipeline_reg[1]_2 ),
        .O(\ctlpbytecount_reg[1,0][11] [6]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT5 #(
    .INIT(32'h40E0044A)) 
    \ctlpbytecount[1,3][9]_i_1 
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[1]),
        .I2(\ctargetpipeline_reg[1]_3 ),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(R[5]),
        .O(\ctlpbytecount_reg[1,0][11] [7]));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \ctlplength[1,3][5]_i_1 
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[1]),
        .O(\ctlplength_reg[1,3][8] [0]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \ctlplength[1,3][6]_i_1 
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[1]),
        .O(\ctlplength_reg[1,3][8] [1]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ctlplength[1,3][7]_i_1 
       (.I0(cfg_dev_control_max_payload[1]),
        .I1(cfg_dev_control_max_payload[0]),
        .O(\ctlplength_reg[1,3][8] [2]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \ctlplength[1,3][8]_i_2 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[1]),
        .O(\ctlplength_reg[1,3][8] [3]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \ctlplength[1,3][8]_i_3 
       (.I0(cfg_dev_control_max_payload[1]),
        .I1(cfg_dev_control_max_payload[2]),
        .O(\ctlplength_reg[2,0][0] ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \ctlplength[2,0][9]_i_1 
       (.I0(\ctargetpipeline_reg[1]_5 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .O(\ctlplength_reg[2,0][9] ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \ctlplength[2,1][9]_i_1 
       (.I0(\ctlplength[0,1] ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .O(\ctlplength_reg[2,1][9] ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \ctlplength[2,2][9]_i_1 
       (.I0(\ctlplength[0,2] ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .O(\ctlplength_reg[2,2][9] ));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT5 #(
    .INIT(32'h6666666A)) 
    \ctlplength[2,3][5]_i_1 
       (.I0(\length_offset_reg[6] ),
        .I1(\length_offset_reg[11]_2 [0]),
        .I2(cfg_dev_control_max_payload[0]),
        .I3(cfg_dev_control_max_payload[1]),
        .I4(cfg_dev_control_max_payload[2]),
        .O(p_0_in1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT5 #(
    .INIT(32'h5A5A6AAA)) 
    \ctlplength[2,3][7]_i_1 
       (.I0(\length_offset_reg[8] ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[11]_2 [1]),
        .I3(cfg_dev_control_max_payload[1]),
        .I4(cfg_dev_control_max_payload[2]),
        .O(p_0_in1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \ctlplength[2,3][9]_i_1 
       (.I0(\ctlplength[0,3] ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .O(\ctlplength_reg[2,3][9] ));
  LUT5 #(
    .INIT(32'h4001FFFF)) 
    \end_point.pl_directed_link_change_d[1]_i_2 
       (.I0(\end_point.pl_directed_link_change_d[1]_i_3_n_0 ),
        .I1(pl_ltssm_state[0]),
        .I2(pl_ltssm_state[2]),
        .I3(pl_ltssm_state[4]),
        .I4(sys_rst_n_int),
        .O(\end_point.pl_directed_link_change_d_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFFEFEEEEEFEF)) 
    \end_point.pl_directed_link_change_d[1]_i_3 
       (.I0(pl_ltssm_state[3]),
        .I1(pl_ltssm_state[1]),
        .I2(pl_directed_link_change[1]),
        .I3(pl_ltssm_state[0]),
        .I4(pl_directed_link_change[0]),
        .I5(pl_ltssm_state[5]),
        .O(\end_point.pl_directed_link_change_d[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF08FF00000800)) 
    \end_point.s_axi_ctl_rdata[0]_i_3 
       (.I0(pcie_block_i_n_148),
        .I1(s_axi_ctl_araddr[2]),
        .I2(s_axi_ctl_araddr[0]),
        .I3(\s_axi_ctl_araddr[0]_0 ),
        .I4(\end_point.s_axi_ctl_rdata[0]_i_4_n_0 ),
        .I5(\end_point.interrupt_decode_reg[0] ),
        .O(\end_point.s_axi_ctl_rdata_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFEFECFCCFFFF)) 
    \end_point.s_axi_ctl_rdata[0]_i_4 
       (.I0(s_axi_ctl_araddr[0]),
        .I1(s_axi_ctl_araddr[1]),
        .I2(s_axi_ctl_araddr[2]),
        .I3(pl_sel_lnk_rate),
        .I4(s_axi_ctl_araddr[3]),
        .I5(s_axi_ctl_araddr[4]),
        .O(\end_point.s_axi_ctl_rdata[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[10]_i_2 
       (.I0(pcie_block_i_n_612),
        .I1(\end_point.state_reg[1] ),
        .I2(s_axi_ctl_araddr_0__s_net_1),
        .I3(s_axi_ctl_araddr[1]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\cfg_bus_number_d_reg[2] [1]),
        .O(\end_point.s_axi_ctl_rdata_reg[10] ));
  LUT6 #(
    .INIT(64'hD0DDD0D0D0DDD0DD)) 
    \end_point.s_axi_ctl_rdata[3]_i_2 
       (.I0(pl_ltssm_state[0]),
        .I1(s_axi_ctl_araddr_0__s_net_1),
        .I2(\end_point.interrupt_decode_reg[3] ),
        .I3(s_axi_ctl_araddr_3__s_net_1),
        .I4(\s_axi_ctl_araddr[5] ),
        .I5(\cfg_device_number_d_reg[4] [0]),
        .O(\end_point.s_axi_ctl_rdata_reg[3] ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[4]_i_2 
       (.I0(pl_ltssm_state[1]),
        .I1(\end_point.state_reg[1] ),
        .I2(s_axi_ctl_araddr_0__s_net_1),
        .I3(s_axi_ctl_araddr[1]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\cfg_device_number_d_reg[4] [1]),
        .O(\end_point.s_axi_ctl_rdata_reg[4] ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[5]_i_2 
       (.I0(pl_ltssm_state[2]),
        .I1(\end_point.state_reg[1] ),
        .I2(s_axi_ctl_araddr_0__s_net_1),
        .I3(s_axi_ctl_araddr[1]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\cfg_device_number_d_reg[4] [2]),
        .O(\end_point.s_axi_ctl_rdata_reg[5] ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[6]_i_2 
       (.I0(pl_ltssm_state[3]),
        .I1(\end_point.state_reg[1] ),
        .I2(s_axi_ctl_araddr_0__s_net_1),
        .I3(s_axi_ctl_araddr[1]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\cfg_device_number_d_reg[4] [3]),
        .O(\end_point.s_axi_ctl_rdata_reg[6] ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[7]_i_2 
       (.I0(pl_ltssm_state[4]),
        .I1(\end_point.state_reg[1] ),
        .I2(s_axi_ctl_araddr_0__s_net_1),
        .I3(s_axi_ctl_araddr[1]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\cfg_device_number_d_reg[4] [4]),
        .O(\end_point.s_axi_ctl_rdata_reg[7] ));
  LUT6 #(
    .INIT(64'h080808C808080808)) 
    \end_point.s_axi_ctl_rdata[9]_i_2 
       (.I0(pcie_block_i_n_613),
        .I1(\end_point.state_reg[1] ),
        .I2(s_axi_ctl_araddr_0__s_net_1),
        .I3(s_axi_ctl_araddr[1]),
        .I4(s_axi_ctl_araddr[2]),
        .I5(\cfg_bus_number_d_reg[2] [0]),
        .O(\end_point.s_axi_ctl_rdata_reg[9] ));
  LUT6 #(
    .INIT(64'h0000000006F60606)) 
    legint_msiSM_i_1
       (.I0(INTX_MSI_Request),
        .I1(INTX_state),
        .I2(cfg_interrupt_msienable),
        .I3(intx_msi_request_3d),
        .I4(intx_msi_request_2d),
        .I5(sig_blk_interrupt),
        .O(legint_msiSM_reg_0));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[10]_i_1 
       (.I0(\data_width_64.tlplength_reg[3][7] [0]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][7]_0 [0]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[10]_i_2_n_0 ),
        .O(\length_offset_reg[11] [4]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[10]_i_2 
       (.I0(\data_width_64.tlplength_reg[3][7]_1 [0]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][7]_2 [0]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ),
        .O(\length_offset[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[11]_i_2 
       (.I0(\data_width_64.tlplength_reg[3][7] [1]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][7]_0 [1]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[11]_i_5_n_0 ),
        .O(\length_offset_reg[11] [5]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[11]_i_5 
       (.I0(\data_width_64.tlplength_reg[3][7]_1 [1]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][7]_2 [1]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ),
        .O(\length_offset[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[6]_i_1 
       (.I0(O[0]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6] [0]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[6]_i_2_n_0 ),
        .O(\length_offset_reg[11] [0]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[6]_i_2 
       (.I0(\data_width_64.tlplength_reg[3][6]_0 [0]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6]_1 [0]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .O(\length_offset[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[7]_i_1 
       (.I0(O[1]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6] [1]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[7]_i_2_n_0 ),
        .O(\length_offset_reg[11] [1]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[7]_i_2 
       (.I0(\data_width_64.tlplength_reg[3][6]_0 [1]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6]_1 [1]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .O(\length_offset[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[8]_i_1 
       (.I0(O[2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6] [2]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[8]_i_2_n_0 ),
        .O(\length_offset_reg[11] [2]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[8]_i_2 
       (.I0(\data_width_64.tlplength_reg[3][6]_0 [2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6]_1 [2]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .O(\length_offset[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[9]_i_1 
       (.I0(O[3]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6] [3]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[9]_i_4_n_0 ),
        .O(\length_offset_reg[11] [3]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[9]_i_4 
       (.I0(\data_width_64.tlplength_reg[3][6]_0 [3]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.tlplength_reg[3][6]_1 [3]),
        .I3(neqOp_0),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .O(\length_offset[9]_i_4_n_0 ));
  (* box_type = "PRIMITIVE" *) 
  PCIE_2_1 #(
    .AER_BASE_PTR(12'h000),
    .AER_CAP_ECRC_CHECK_CAPABLE("FALSE"),
    .AER_CAP_ECRC_GEN_CAPABLE("FALSE"),
    .AER_CAP_ID(16'h0001),
    .AER_CAP_MULTIHEADER("FALSE"),
    .AER_CAP_NEXTPTR(12'h160),
    .AER_CAP_ON("FALSE"),
    .AER_CAP_OPTIONAL_ERR_SUPPORT(24'h000000),
    .AER_CAP_PERMIT_ROOTERR_UPDATE("TRUE"),
    .AER_CAP_VERSION(4'h1),
    .ALLOW_X8_GEN2("FALSE"),
    .BAR0(32'hFF80000C),
    .BAR1(32'hFFFFFFFF),
    .BAR2(32'hFFFE000C),
    .BAR3(32'hFFFFFFFF),
    .BAR4(32'hFFFF000C),
    .BAR5(32'hFFFFFFFF),
    .CAPABILITIES_PTR(8'h40),
    .CARDBUS_CIS_POINTER(32'h00000000),
    .CFG_ECRC_ERR_CPLSTAT(0),
    .CLASS_CODE(24'h058000),
    .CMD_INTX_IMPLEMENTED("TRUE"),
    .CPL_TIMEOUT_DISABLE_SUPPORTED("FALSE"),
    .CPL_TIMEOUT_RANGES_SUPPORTED(4'h0),
    .CRM_MODULE_RSTS(7'h00),
    .DEV_CAP2_ARI_FORWARDING_SUPPORTED("FALSE"),
    .DEV_CAP2_ATOMICOP32_COMPLETER_SUPPORTED("FALSE"),
    .DEV_CAP2_ATOMICOP64_COMPLETER_SUPPORTED("FALSE"),
    .DEV_CAP2_ATOMICOP_ROUTING_SUPPORTED("FALSE"),
    .DEV_CAP2_CAS128_COMPLETER_SUPPORTED("FALSE"),
    .DEV_CAP2_ENDEND_TLP_PREFIX_SUPPORTED("FALSE"),
    .DEV_CAP2_EXTENDED_FMT_FIELD_SUPPORTED("FALSE"),
    .DEV_CAP2_LTR_MECHANISM_SUPPORTED("FALSE"),
    .DEV_CAP2_MAX_ENDEND_TLP_PREFIXES(2'h0),
    .DEV_CAP2_NO_RO_ENABLED_PRPR_PASSING("FALSE"),
    .DEV_CAP2_TPH_COMPLETER_SUPPORTED(2'h0),
    .DEV_CAP_ENABLE_SLOT_PWR_LIMIT_SCALE("TRUE"),
    .DEV_CAP_ENABLE_SLOT_PWR_LIMIT_VALUE("TRUE"),
    .DEV_CAP_ENDPOINT_L0S_LATENCY(0),
    .DEV_CAP_ENDPOINT_L1_LATENCY(0),
    .DEV_CAP_EXT_TAG_SUPPORTED("TRUE"),
    .DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE("FALSE"),
    .DEV_CAP_MAX_PAYLOAD_SUPPORTED(1),
    .DEV_CAP_PHANTOM_FUNCTIONS_SUPPORT(1),
    .DEV_CAP_ROLE_BASED_ERROR("TRUE"),
    .DEV_CAP_RSVD_14_12(0),
    .DEV_CAP_RSVD_17_16(0),
    .DEV_CAP_RSVD_31_29(0),
    .DEV_CONTROL_AUX_POWER_SUPPORTED("FALSE"),
    .DEV_CONTROL_EXT_TAG_DEFAULT("FALSE"),
    .DISABLE_ASPM_L1_TIMER("FALSE"),
    .DISABLE_BAR_FILTERING("FALSE"),
    .DISABLE_ERR_MSG("FALSE"),
    .DISABLE_ID_CHECK("FALSE"),
    .DISABLE_LANE_REVERSAL("TRUE"),
    .DISABLE_LOCKED_FILTER("FALSE"),
    .DISABLE_PPM_FILTER("FALSE"),
    .DISABLE_RX_POISONED_RESP("FALSE"),
    .DISABLE_RX_TC_FILTER("FALSE"),
    .DISABLE_SCRAMBLING("FALSE"),
    .DNSTREAM_LINK_NUM(8'h00),
    .DSN_BASE_PTR(12'h100),
    .DSN_CAP_ID(16'h0003),
    .DSN_CAP_NEXTPTR(12'h000),
    .DSN_CAP_ON("TRUE"),
    .DSN_CAP_VERSION(4'h1),
    .ENABLE_MSG_ROUTE(11'h27F),
    .ENABLE_RX_TD_ECRC_TRIM("TRUE"),
    .ENDEND_TLP_PREFIX_FORWARDING_SUPPORTED("FALSE"),
    .ENTER_RVRY_EI_L0("TRUE"),
    .EXIT_LOOPBACK_ON_EI("TRUE"),
    .EXPANSION_ROM(32'h00000000),
    .EXT_CFG_CAP_PTR(6'h3F),
    .EXT_CFG_XP_CAP_PTR(10'h3FF),
    .HEADER_TYPE(8'h00),
    .INFER_EI(5'h00),
    .INTERRUPT_PIN(8'h00),
    .INTERRUPT_STAT_AUTO("TRUE"),
    .IS_SWITCH("FALSE"),
    .LAST_CONFIG_DWORD(10'h042),
    .LINK_CAP_ASPM_OPTIONALITY("FALSE"),
    .LINK_CAP_ASPM_SUPPORT(1),
    .LINK_CAP_CLOCK_POWER_MANAGEMENT("FALSE"),
    .LINK_CAP_DLL_LINK_ACTIVE_REPORTING_CAP("FALSE"),
    .LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN1(7),
    .LINK_CAP_L0S_EXIT_LATENCY_COMCLK_GEN2(7),
    .LINK_CAP_L0S_EXIT_LATENCY_GEN1(7),
    .LINK_CAP_L0S_EXIT_LATENCY_GEN2(7),
    .LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN1(7),
    .LINK_CAP_L1_EXIT_LATENCY_COMCLK_GEN2(7),
    .LINK_CAP_L1_EXIT_LATENCY_GEN1(7),
    .LINK_CAP_L1_EXIT_LATENCY_GEN2(7),
    .LINK_CAP_LINK_BANDWIDTH_NOTIFICATION_CAP("FALSE"),
    .LINK_CAP_MAX_LINK_SPEED(4'h2),
    .LINK_CAP_MAX_LINK_WIDTH(6'h01),
    .LINK_CAP_RSVD_23(0),
    .LINK_CAP_SURPRISE_DOWN_ERROR_CAPABLE("FALSE"),
    .LINK_CONTROL_RCB(0),
    .LINK_CTRL2_DEEMPHASIS("FALSE"),
    .LINK_CTRL2_HW_AUTONOMOUS_SPEED_DISABLE("FALSE"),
    .LINK_CTRL2_TARGET_LINK_SPEED(4'h2),
    .LINK_STATUS_SLOT_CLOCK_CONFIG("TRUE"),
    .LL_ACK_TIMEOUT(15'h0000),
    .LL_ACK_TIMEOUT_EN("FALSE"),
    .LL_ACK_TIMEOUT_FUNC(0),
    .LL_REPLAY_TIMEOUT(15'h0000),
    .LL_REPLAY_TIMEOUT_EN("FALSE"),
    .LL_REPLAY_TIMEOUT_FUNC(1),
    .LTSSM_MAX_LINK_WIDTH(6'h01),
    .MPS_FORCE("FALSE"),
    .MSIX_BASE_PTR(8'h9C),
    .MSIX_CAP_ID(8'h11),
    .MSIX_CAP_NEXTPTR(8'h00),
    .MSIX_CAP_ON("FALSE"),
    .MSIX_CAP_PBA_BIR(0),
    .MSIX_CAP_PBA_OFFSET(29'h00000050),
    .MSIX_CAP_TABLE_BIR(0),
    .MSIX_CAP_TABLE_OFFSET(29'h00000040),
    .MSIX_CAP_TABLE_SIZE(11'h000),
    .MSI_BASE_PTR(8'h48),
    .MSI_CAP_64_BIT_ADDR_CAPABLE("TRUE"),
    .MSI_CAP_ID(8'h05),
    .MSI_CAP_MULTIMSGCAP(0),
    .MSI_CAP_MULTIMSG_EXTENSION(0),
    .MSI_CAP_NEXTPTR(8'h60),
    .MSI_CAP_ON("TRUE"),
    .MSI_CAP_PER_VECTOR_MASKING_CAPABLE("FALSE"),
    .N_FTS_COMCLK_GEN1(255),
    .N_FTS_COMCLK_GEN2(254),
    .N_FTS_GEN1(255),
    .N_FTS_GEN2(255),
    .PCIE_BASE_PTR(8'h60),
    .PCIE_CAP_CAPABILITY_ID(8'h10),
    .PCIE_CAP_CAPABILITY_VERSION(4'h2),
    .PCIE_CAP_DEVICE_PORT_TYPE(4'h0),
    .PCIE_CAP_NEXTPTR(8'h00),
    .PCIE_CAP_ON("TRUE"),
    .PCIE_CAP_RSVD_15_14(0),
    .PCIE_CAP_SLOT_IMPLEMENTED("FALSE"),
    .PCIE_REVISION(2),
    .PL_AUTO_CONFIG(1),
    .PL_FAST_TRAIN("TRUE"),
    .PM_ASPML0S_TIMEOUT(15'h0000),
    .PM_ASPML0S_TIMEOUT_EN("FALSE"),
    .PM_ASPML0S_TIMEOUT_FUNC(0),
    .PM_ASPM_FASTEXIT("FALSE"),
    .PM_BASE_PTR(8'h40),
    .PM_CAP_AUXCURRENT(0),
    .PM_CAP_D1SUPPORT("FALSE"),
    .PM_CAP_D2SUPPORT("FALSE"),
    .PM_CAP_DSI("TRUE"),
    .PM_CAP_ID(8'h01),
    .PM_CAP_NEXTPTR(8'h48),
    .PM_CAP_ON("TRUE"),
    .PM_CAP_PMESUPPORT(5'h00),
    .PM_CAP_PME_CLOCK("FALSE"),
    .PM_CAP_RSVD_04(0),
    .PM_CAP_VERSION(3),
    .PM_CSR_B2B3("FALSE"),
    .PM_CSR_BPCCEN("FALSE"),
    .PM_CSR_NOSOFTRST("TRUE"),
    .PM_DATA0(8'h00),
    .PM_DATA1(8'h00),
    .PM_DATA2(8'h00),
    .PM_DATA3(8'h00),
    .PM_DATA4(8'h00),
    .PM_DATA5(8'h00),
    .PM_DATA6(8'h00),
    .PM_DATA7(8'h00),
    .PM_DATA_SCALE0(2'h0),
    .PM_DATA_SCALE1(2'h0),
    .PM_DATA_SCALE2(2'h0),
    .PM_DATA_SCALE3(2'h0),
    .PM_DATA_SCALE4(2'h0),
    .PM_DATA_SCALE5(2'h0),
    .PM_DATA_SCALE6(2'h0),
    .PM_DATA_SCALE7(2'h0),
    .PM_MF("FALSE"),
    .RBAR_BASE_PTR(12'h000),
    .RBAR_CAP_CONTROL_ENCODEDBAR0(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR1(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR2(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR3(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR4(5'h00),
    .RBAR_CAP_CONTROL_ENCODEDBAR5(5'h00),
    .RBAR_CAP_ID(16'h0015),
    .RBAR_CAP_INDEX0(3'h0),
    .RBAR_CAP_INDEX1(3'h0),
    .RBAR_CAP_INDEX2(3'h0),
    .RBAR_CAP_INDEX3(3'h0),
    .RBAR_CAP_INDEX4(3'h0),
    .RBAR_CAP_INDEX5(3'h0),
    .RBAR_CAP_NEXTPTR(12'h000),
    .RBAR_CAP_ON("FALSE"),
    .RBAR_CAP_SUP0(32'h00000001),
    .RBAR_CAP_SUP1(32'h00000001),
    .RBAR_CAP_SUP2(32'h00000001),
    .RBAR_CAP_SUP3(32'h00000001),
    .RBAR_CAP_SUP4(32'h00000001),
    .RBAR_CAP_SUP5(32'h00000001),
    .RBAR_CAP_VERSION(4'h1),
    .RBAR_NUM(3'h0),
    .RECRC_CHK(0),
    .RECRC_CHK_TRIM("FALSE"),
    .ROOT_CAP_CRS_SW_VISIBILITY("FALSE"),
    .RP_AUTO_SPD(2'h1),
    .RP_AUTO_SPD_LOOPCNT(5'h1F),
    .SELECT_DLL_IF("FALSE"),
    .SIM_VERSION("1.0"),
    .SLOT_CAP_ATT_BUTTON_PRESENT("FALSE"),
    .SLOT_CAP_ATT_INDICATOR_PRESENT("FALSE"),
    .SLOT_CAP_ELEC_INTERLOCK_PRESENT("FALSE"),
    .SLOT_CAP_HOTPLUG_CAPABLE("FALSE"),
    .SLOT_CAP_HOTPLUG_SURPRISE("FALSE"),
    .SLOT_CAP_MRL_SENSOR_PRESENT("FALSE"),
    .SLOT_CAP_NO_CMD_COMPLETED_SUPPORT("FALSE"),
    .SLOT_CAP_PHYSICAL_SLOT_NUM(13'h0000),
    .SLOT_CAP_POWER_CONTROLLER_PRESENT("FALSE"),
    .SLOT_CAP_POWER_INDICATOR_PRESENT("FALSE"),
    .SLOT_CAP_SLOT_POWER_LIMIT_SCALE(0),
    .SLOT_CAP_SLOT_POWER_LIMIT_VALUE(8'h00),
    .SPARE_BIT0(0),
    .SPARE_BIT1(0),
    .SPARE_BIT2(0),
    .SPARE_BIT3(0),
    .SPARE_BIT4(0),
    .SPARE_BIT5(0),
    .SPARE_BIT6(0),
    .SPARE_BIT7(0),
    .SPARE_BIT8(0),
    .SPARE_BYTE0(8'h00),
    .SPARE_BYTE1(8'h00),
    .SPARE_BYTE2(8'h00),
    .SPARE_BYTE3(8'h00),
    .SPARE_WORD0(32'h00000000),
    .SPARE_WORD1(32'h00000000),
    .SPARE_WORD2(32'h00000000),
    .SPARE_WORD3(32'h00000000),
    .SSL_MESSAGE_AUTO("FALSE"),
    .TECRC_EP_INV("FALSE"),
    .TL_RBYPASS("FALSE"),
    .TL_RX_RAM_RADDR_LATENCY(0),
    .TL_RX_RAM_RDATA_LATENCY(2),
    .TL_RX_RAM_WRITE_LATENCY(0),
    .TL_TFC_DISABLE("FALSE"),
    .TL_TX_CHECKS_DISABLE("FALSE"),
    .TL_TX_RAM_RADDR_LATENCY(0),
    .TL_TX_RAM_RDATA_LATENCY(2),
    .TL_TX_RAM_WRITE_LATENCY(0),
    .TRN_DW("FALSE"),
    .TRN_NP_FC("FALSE"),
    .UPCONFIG_CAPABLE("TRUE"),
    .UPSTREAM_FACING("TRUE"),
    .UR_ATOMIC("FALSE"),
    .UR_CFG1("TRUE"),
    .UR_INV_REQ("TRUE"),
    .UR_PRS_RESPONSE("TRUE"),
    .USER_CLK2_DIV2("FALSE"),
    .USER_CLK_FREQ(2),
    .USE_RID_PINS("FALSE"),
    .VC0_CPL_INFINITE("TRUE"),
    .VC0_RX_RAM_LIMIT(13'h03FF),
    .VC0_TOTAL_CREDITS_CD(205),
    .VC0_TOTAL_CREDITS_CH(36),
    .VC0_TOTAL_CREDITS_NPD(24),
    .VC0_TOTAL_CREDITS_NPH(12),
    .VC0_TOTAL_CREDITS_PD(181),
    .VC0_TOTAL_CREDITS_PH(32),
    .VC0_TX_LASTPACKET(28),
    .VC_BASE_PTR(12'h10C),
    .VC_CAP_ID(16'h0002),
    .VC_CAP_NEXTPTR(12'h000),
    .VC_CAP_ON("FALSE"),
    .VC_CAP_REJECT_SNOOP_TRANSACTIONS("FALSE"),
    .VC_CAP_VERSION(4'h1),
    .VSEC_BASE_PTR(12'h000),
    .VSEC_CAP_HDR_ID(16'h1234),
    .VSEC_CAP_HDR_LENGTH(12'h018),
    .VSEC_CAP_HDR_REVISION(4'h1),
    .VSEC_CAP_ID(16'h000B),
    .VSEC_CAP_IS_LINK_VISIBLE("FALSE"),
    .VSEC_CAP_NEXTPTR(12'h000),
    .VSEC_CAP_ON("FALSE"),
    .VSEC_CAP_VERSION(4'h1)) 
    pcie_block_i
       (.CFGAERECRCCHECKEN(pcie_block_i_n_0),
        .CFGAERECRCGENEN(pcie_block_i_n_1),
        .CFGAERINTERRUPTMSGNUM({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGAERROOTERRCORRERRRECEIVED(pcie_block_i_n_2),
        .CFGAERROOTERRCORRERRREPORTINGEN(pcie_block_i_n_3),
        .CFGAERROOTERRFATALERRRECEIVED(pcie_block_i_n_4),
        .CFGAERROOTERRFATALERRREPORTINGEN(pcie_block_i_n_5),
        .CFGAERROOTERRNONFATALERRRECEIVED(pcie_block_i_n_6),
        .CFGAERROOTERRNONFATALERRREPORTINGEN(pcie_block_i_n_7),
        .CFGBRIDGESERREN(pcie_block_i_n_8),
        .CFGCOMMANDBUSMASTERENABLE(sig_blk_command[2]),
        .CFGCOMMANDINTERRUPTDISABLE(sig_blk_command[10]),
        .CFGCOMMANDIOENABLE(sig_blk_command[0]),
        .CFGCOMMANDMEMENABLE(sig_blk_command[1]),
        .CFGCOMMANDSERREN(sig_blk_command[8]),
        .CFGDEVCONTROL2ARIFORWARDEN(pcie_block_i_n_14),
        .CFGDEVCONTROL2ATOMICEGRESSBLOCK(pcie_block_i_n_15),
        .CFGDEVCONTROL2ATOMICREQUESTEREN(pcie_block_i_n_16),
        .CFGDEVCONTROL2CPLTIMEOUTDIS(pcie_block_i_n_17),
        .CFGDEVCONTROL2CPLTIMEOUTVAL({pcie_block_i_n_675,pcie_block_i_n_676,pcie_block_i_n_677,pcie_block_i_n_678}),
        .CFGDEVCONTROL2IDOCPLEN(pcie_block_i_n_18),
        .CFGDEVCONTROL2IDOREQEN(pcie_block_i_n_19),
        .CFGDEVCONTROL2LTREN(pcie_block_i_n_20),
        .CFGDEVCONTROL2TLPPREFIXBLOCK(pcie_block_i_n_21),
        .CFGDEVCONTROLAUXPOWEREN(sig_blk_dcontrol[10]),
        .CFGDEVCONTROLCORRERRREPORTINGEN(sig_blk_dcontrol[0]),
        .CFGDEVCONTROLENABLERO(sig_blk_dcontrol[4]),
        .CFGDEVCONTROLEXTTAGEN(sig_blk_dcontrol[8]),
        .CFGDEVCONTROLFATALERRREPORTINGEN(sig_blk_dcontrol[2]),
        .CFGDEVCONTROLMAXPAYLOAD(cfg_dev_control_max_payload),
        .CFGDEVCONTROLMAXREADREQ(sig_blk_dcontrol[14:12]),
        .CFGDEVCONTROLNONFATALREPORTINGEN(sig_blk_dcontrol[1]),
        .CFGDEVCONTROLNOSNOOPEN(sig_blk_dcontrol[11]),
        .CFGDEVCONTROLPHANTOMEN(sig_blk_dcontrol[9]),
        .CFGDEVCONTROLURERRREPORTINGEN(sig_blk_dcontrol[3]),
        .CFGDEVID({1'b0,1'b1,1'b1,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .CFGDEVSTATUSCORRERRDETECTED(pcie_block_i_n_31),
        .CFGDEVSTATUSFATALERRDETECTED(pcie_block_i_n_32),
        .CFGDEVSTATUSNONFATALERRDETECTED(pcie_block_i_n_33),
        .CFGDEVSTATUSURDETECTED(pcie_block_i_n_34),
        .CFGDSBUSNUMBER({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGDSDEVICENUMBER({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGDSFUNCTIONNUMBER({1'b0,1'b0,1'b0}),
        .CFGDSN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGERRACSN(1'b1),
        .CFGERRAERHEADERLOG({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGERRAERHEADERLOGSETN(cfg_err_aer_headerlog_set_n),
        .CFGERRATOMICEGRESSBLOCKEDN(1'b1),
        .CFGERRCORN(1'b1),
        .CFGERRCPLABORTN(1'b1),
        .CFGERRCPLRDYN(cfg_err_cpl_rdy_n),
        .CFGERRCPLTIMEOUTN(1'b1),
        .CFGERRCPLUNEXPECTN(1'b1),
        .CFGERRECRCN(1'b1),
        .CFGERRINTERNALCORN(1'b1),
        .CFGERRINTERNALUNCORN(1'b1),
        .CFGERRLOCKEDN(1'b1),
        .CFGERRMALFORMEDN(1'b1),
        .CFGERRMCBLOCKEDN(1'b1),
        .CFGERRNORECOVERYN(1'b1),
        .CFGERRPOISONEDN(1'b1),
        .CFGERRPOSTEDN(1'b1),
        .CFGERRTLPCPLHEADER({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGERRURN(1'b1),
        .CFGFORCECOMMONCLOCKOFF(1'b0),
        .CFGFORCEEXTENDEDSYNCON(1'b0),
        .CFGFORCEMPS({1'b0,1'b0,1'b0}),
        .CFGINTERRUPTASSERTN(pcie_block_i_i_1_n_0),
        .CFGINTERRUPTDI({cfg_interrupt_di[5],cfg_interrupt_di[5],cfg_interrupt_di}),
        .CFGINTERRUPTDO({pcie_block_i_n_1111,pcie_block_i_n_1112,pcie_block_i_n_1113,pcie_block_i_n_1114,pcie_block_i_n_1115,pcie_block_i_n_1116,pcie_block_i_n_1117,pcie_block_i_n_1118}),
        .CFGINTERRUPTMMENABLE(MSI_Vector_Width),
        .CFGINTERRUPTMSIENABLE(cfg_interrupt_msienable),
        .CFGINTERRUPTMSIXENABLE(pcie_block_i_n_38),
        .CFGINTERRUPTMSIXFM(pcie_block_i_n_39),
        .CFGINTERRUPTN(pcie_block_i_i_2_n_0),
        .CFGINTERRUPTRDYN(cfg_interrupt_rdy_n),
        .CFGINTERRUPTSTATN(1'b1),
        .CFGLINKCONTROLASPMCONTROL({pcie_block_i_n_572,pcie_block_i_n_573}),
        .CFGLINKCONTROLAUTOBANDWIDTHINTEN(pcie_block_i_n_41),
        .CFGLINKCONTROLBANDWIDTHINTEN(pcie_block_i_n_42),
        .CFGLINKCONTROLCLOCKPMEN(pcie_block_i_n_43),
        .CFGLINKCONTROLCOMMONCLOCK(pcie_block_i_n_44),
        .CFGLINKCONTROLEXTENDEDSYNC(pcie_block_i_n_45),
        .CFGLINKCONTROLHWAUTOWIDTHDIS(pcie_block_i_n_46),
        .CFGLINKCONTROLLINKDISABLE(pcie_block_i_n_47),
        .CFGLINKCONTROLRCB(pcie_block_i_n_48),
        .CFGLINKCONTROLRETRAINLINK(pcie_block_i_n_49),
        .CFGLINKSTATUSAUTOBANDWIDTHSTATUS(sig_blk_lstatus[15]),
        .CFGLINKSTATUSBANDWIDTHSTATUS(sig_blk_lstatus[14]),
        .CFGLINKSTATUSCURRENTSPEED(sig_blk_lstatus[1:0]),
        .CFGLINKSTATUSDLLACTIVE(sig_blk_lstatus[13]),
        .CFGLINKSTATUSLINKTRAINING(sig_blk_lstatus[11]),
        .CFGLINKSTATUSNEGOTIATEDWIDTH(sig_blk_lstatus[7:4]),
        .CFGMGMTBYTEENN({cfg_mgmt_byte_en_n,cfg_mgmt_byte_en_n,cfg_mgmt_byte_en_n,cfg_mgmt_byte_en_n}),
        .CFGMGMTDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGMGMTDO(cfg_mgmt_do),
        .CFGMGMTDWADDR(cfg_mgmt_dwaddr),
        .CFGMGMTRDENN(cfg_mgmt_rd_en_n),
        .CFGMGMTRDWRDONEN(cfg_mgmt_rd_wr_done_n),
        .CFGMGMTWRENN(1'b1),
        .CFGMGMTWRREADONLYN(cfg_mgmt_wr_readonly_n),
        .CFGMGMTWRRW1CASRWN(cfg_mgmt_wr_rw1c_as_rw_n),
        .CFGMSGDATA(cfg_msg_data),
        .CFGMSGRECEIVED(pcie_block_i_n_55),
        .CFGMSGRECEIVEDASSERTINTA(pcie_block_i_n_56),
        .CFGMSGRECEIVEDASSERTINTB(pcie_block_i_n_57),
        .CFGMSGRECEIVEDASSERTINTC(pcie_block_i_n_58),
        .CFGMSGRECEIVEDASSERTINTD(pcie_block_i_n_59),
        .CFGMSGRECEIVEDDEASSERTINTA(pcie_block_i_n_60),
        .CFGMSGRECEIVEDDEASSERTINTB(pcie_block_i_n_61),
        .CFGMSGRECEIVEDDEASSERTINTC(pcie_block_i_n_62),
        .CFGMSGRECEIVEDDEASSERTINTD(pcie_block_i_n_63),
        .CFGMSGRECEIVEDERRCOR(pcie_block_i_n_64),
        .CFGMSGRECEIVEDERRFATAL(pcie_block_i_n_65),
        .CFGMSGRECEIVEDERRNONFATAL(pcie_block_i_n_66),
        .CFGMSGRECEIVEDPMASNAK(pcie_block_i_n_67),
        .CFGMSGRECEIVEDPMETO(pcie_block_i_n_68),
        .CFGMSGRECEIVEDPMETOACK(pcie_block_i_n_69),
        .CFGMSGRECEIVEDPMPME(pcie_block_i_n_70),
        .CFGMSGRECEIVEDSETSLOTPOWERLIMIT(pcie_block_i_n_71),
        .CFGMSGRECEIVEDUNLOCK(pcie_block_i_n_72),
        .CFGPCIECAPINTERRUPTMSGNUM({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGPCIELINKSTATE({pcie_block_i_n_631,pcie_block_i_n_632,pcie_block_i_n_633}),
        .CFGPMCSRPMEEN(pcie_block_i_n_73),
        .CFGPMCSRPMESTATUS(pcie_block_i_n_74),
        .CFGPMCSRPOWERSTATE({pcie_block_i_n_576,pcie_block_i_n_577}),
        .CFGPMFORCESTATE({1'b0,1'b0}),
        .CFGPMFORCESTATEENN(1'b1),
        .CFGPMHALTASPML0SN(1'b1),
        .CFGPMHALTASPML1N(1'b1),
        .CFGPMRCVASREQL1N(pcie_block_i_n_75),
        .CFGPMRCVENTERL1N(pcie_block_i_n_76),
        .CFGPMRCVENTERL23N(pcie_block_i_n_77),
        .CFGPMRCVREQACKN(pcie_block_i_n_78),
        .CFGPMSENDPMETON(1'b1),
        .CFGPMTURNOFFOKN(1'b1),
        .CFGPMWAKEN(1'b1),
        .CFGPORTNUMBER({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGREVID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CFGROOTCONTROLPMEINTEN(pcie_block_i_n_79),
        .CFGROOTCONTROLSYSERRCORRERREN(pcie_block_i_n_80),
        .CFGROOTCONTROLSYSERRFATALERREN(pcie_block_i_n_81),
        .CFGROOTCONTROLSYSERRNONFATALERREN(pcie_block_i_n_82),
        .CFGSLOTCONTROLELECTROMECHILCTLPULSE(pcie_block_i_n_83),
        .CFGSUBSYSID({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1}),
        .CFGSUBSYSVENDID({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0}),
        .CFGTRANSACTION(pcie_block_i_n_84),
        .CFGTRANSACTIONADDR({pcie_block_i_n_1097,pcie_block_i_n_1098,pcie_block_i_n_1099,pcie_block_i_n_1100,pcie_block_i_n_1101,pcie_block_i_n_1102,pcie_block_i_n_1103}),
        .CFGTRANSACTIONTYPE(pcie_block_i_n_85),
        .CFGTRNPENDINGN(1'b1),
        .CFGVCTCVCMAP({pcie_block_i_n_1104,pcie_block_i_n_1105,pcie_block_i_n_1106,pcie_block_i_n_1107,pcie_block_i_n_1108,pcie_block_i_n_1109,pcie_block_i_n_1110}),
        .CFGVENDID({1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0}),
        .CMRSTN(1'b1),
        .CMSTICKYRSTN(1'b1),
        .DBGMODE({1'b0,1'b0}),
        .DBGSCLRA(pcie_block_i_n_86),
        .DBGSCLRB(pcie_block_i_n_87),
        .DBGSCLRC(pcie_block_i_n_88),
        .DBGSCLRD(pcie_block_i_n_89),
        .DBGSCLRE(pcie_block_i_n_90),
        .DBGSCLRF(pcie_block_i_n_91),
        .DBGSCLRG(pcie_block_i_n_92),
        .DBGSCLRH(pcie_block_i_n_93),
        .DBGSCLRI(pcie_block_i_n_94),
        .DBGSCLRJ(pcie_block_i_n_95),
        .DBGSCLRK(pcie_block_i_n_96),
        .DBGSUBMODE(1'b0),
        .DBGVECA({pcie_block_i_n_704,pcie_block_i_n_705,pcie_block_i_n_706,pcie_block_i_n_707,pcie_block_i_n_708,pcie_block_i_n_709,pcie_block_i_n_710,pcie_block_i_n_711,pcie_block_i_n_712,pcie_block_i_n_713,pcie_block_i_n_714,pcie_block_i_n_715,pcie_block_i_n_716,pcie_block_i_n_717,pcie_block_i_n_718,pcie_block_i_n_719,pcie_block_i_n_720,pcie_block_i_n_721,pcie_block_i_n_722,pcie_block_i_n_723,pcie_block_i_n_724,pcie_block_i_n_725,pcie_block_i_n_726,pcie_block_i_n_727,pcie_block_i_n_728,pcie_block_i_n_729,pcie_block_i_n_730,pcie_block_i_n_731,pcie_block_i_n_732,pcie_block_i_n_733,pcie_block_i_n_734,pcie_block_i_n_735,pcie_block_i_n_736,pcie_block_i_n_737,pcie_block_i_n_738,pcie_block_i_n_739,pcie_block_i_n_740,pcie_block_i_n_741,pcie_block_i_n_742,pcie_block_i_n_743,pcie_block_i_n_744,pcie_block_i_n_745,pcie_block_i_n_746,pcie_block_i_n_747,pcie_block_i_n_748,pcie_block_i_n_749,pcie_block_i_n_750,pcie_block_i_n_751,pcie_block_i_n_752,pcie_block_i_n_753,pcie_block_i_n_754,pcie_block_i_n_755,pcie_block_i_n_756,pcie_block_i_n_757,pcie_block_i_n_758,pcie_block_i_n_759,pcie_block_i_n_760,pcie_block_i_n_761,pcie_block_i_n_762,pcie_block_i_n_763,pcie_block_i_n_764,pcie_block_i_n_765,pcie_block_i_n_766,pcie_block_i_n_767}),
        .DBGVECB({pcie_block_i_n_768,pcie_block_i_n_769,pcie_block_i_n_770,pcie_block_i_n_771,pcie_block_i_n_772,pcie_block_i_n_773,pcie_block_i_n_774,pcie_block_i_n_775,pcie_block_i_n_776,pcie_block_i_n_777,pcie_block_i_n_778,pcie_block_i_n_779,pcie_block_i_n_780,pcie_block_i_n_781,pcie_block_i_n_782,pcie_block_i_n_783,pcie_block_i_n_784,pcie_block_i_n_785,pcie_block_i_n_786,pcie_block_i_n_787,pcie_block_i_n_788,pcie_block_i_n_789,pcie_block_i_n_790,pcie_block_i_n_791,pcie_block_i_n_792,pcie_block_i_n_793,pcie_block_i_n_794,pcie_block_i_n_795,pcie_block_i_n_796,pcie_block_i_n_797,pcie_block_i_n_798,pcie_block_i_n_799,pcie_block_i_n_800,pcie_block_i_n_801,pcie_block_i_n_802,pcie_block_i_n_803,pcie_block_i_n_804,pcie_block_i_n_805,pcie_block_i_n_806,pcie_block_i_n_807,pcie_block_i_n_808,pcie_block_i_n_809,pcie_block_i_n_810,pcie_block_i_n_811,pcie_block_i_n_812,pcie_block_i_n_813,pcie_block_i_n_814,pcie_block_i_n_815,pcie_block_i_n_816,pcie_block_i_n_817,pcie_block_i_n_818,pcie_block_i_n_819,pcie_block_i_n_820,pcie_block_i_n_821,pcie_block_i_n_822,pcie_block_i_n_823,pcie_block_i_n_824,pcie_block_i_n_825,pcie_block_i_n_826,pcie_block_i_n_827,pcie_block_i_n_828,pcie_block_i_n_829,pcie_block_i_n_830,pcie_block_i_n_831}),
        .DBGVECC({pcie_block_i_n_172,pcie_block_i_n_173,pcie_block_i_n_174,pcie_block_i_n_175,pcie_block_i_n_176,pcie_block_i_n_177,pcie_block_i_n_178,pcie_block_i_n_179,pcie_block_i_n_180,pcie_block_i_n_181,pcie_block_i_n_182,pcie_block_i_n_183}),
        .DLRSTN(1'b1),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b0),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({pcie_block_i_n_428,pcie_block_i_n_429,pcie_block_i_n_430,pcie_block_i_n_431,pcie_block_i_n_432,pcie_block_i_n_433,pcie_block_i_n_434,pcie_block_i_n_435,pcie_block_i_n_436,pcie_block_i_n_437,pcie_block_i_n_438,pcie_block_i_n_439,pcie_block_i_n_440,pcie_block_i_n_441,pcie_block_i_n_442,pcie_block_i_n_443}),
        .DRPEN(1'b0),
        .DRPRDY(pcie_block_i_n_97),
        .DRPWE(1'b0),
        .FUNCLVLRSTN(1'b1),
        .LL2BADDLLPERR(pcie_block_i_n_98),
        .LL2BADTLPERR(pcie_block_i_n_99),
        .LL2LINKSTATUS({pcie_block_i_n_687,pcie_block_i_n_688,pcie_block_i_n_689,pcie_block_i_n_690,pcie_block_i_n_691}),
        .LL2PROTOCOLERR(pcie_block_i_n_100),
        .LL2RECEIVERERR(pcie_block_i_n_101),
        .LL2REPLAYROERR(pcie_block_i_n_102),
        .LL2REPLAYTOERR(pcie_block_i_n_103),
        .LL2SENDASREQL1(1'b0),
        .LL2SENDENTERL1(1'b0),
        .LL2SENDENTERL23(1'b0),
        .LL2SENDPMACK(1'b0),
        .LL2SUSPENDNOW(1'b0),
        .LL2SUSPENDOK(pcie_block_i_n_104),
        .LL2TFCINIT1SEQ(pcie_block_i_n_105),
        .LL2TFCINIT2SEQ(pcie_block_i_n_106),
        .LL2TLPRCV(1'b0),
        .LL2TXIDLE(pcie_block_i_n_107),
        .LNKCLKEN(pcie_block_i_n_108),
        .MIMRXRADDR(mim_rx_raddr),
        .MIMRXRDATA(mim_rx_rdata),
        .MIMRXREN(mim_rx_ren),
        .MIMRXWADDR(mim_rx_waddr),
        .MIMRXWDATA(mim_rx_wdata),
        .MIMRXWEN(mim_rx_wen),
        .MIMTXRADDR(mim_tx_raddr),
        .MIMTXRDATA(mim_tx_rdata),
        .MIMTXREN(mim_tx_ren),
        .MIMTXWADDR(mim_tx_waddr),
        .MIMTXWDATA(mim_tx_wdata),
        .MIMTXWEN(mim_tx_wen),
        .PIPECLK(CLK),
        .PIPERX0CHANISALIGNED(pipe_rx0_chanisaligned),
        .PIPERX0CHARISK(\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] ),
        .PIPERX0DATA(Q),
        .PIPERX0ELECIDLE(pipe_rx0_elec_idle),
        .PIPERX0PHYSTATUS(pipe_rx0_phy_status),
        .PIPERX0POLARITY(pipe_rx0_polarity),
        .PIPERX0STATUS(\pipe_stages_1.pipe_rx_status_q_reg[2] ),
        .PIPERX0VALID(pipe_rx0_valid),
        .PIPERX1CHANISALIGNED(1'b0),
        .PIPERX1CHARISK({1'b0,1'b0}),
        .PIPERX1DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX1ELECIDLE(1'b1),
        .PIPERX1PHYSTATUS(1'b0),
        .PIPERX1POLARITY(pipe_rx1_polarity),
        .PIPERX1STATUS({1'b0,1'b0,1'b0}),
        .PIPERX1VALID(1'b0),
        .PIPERX2CHANISALIGNED(1'b0),
        .PIPERX2CHARISK({1'b0,1'b0}),
        .PIPERX2DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX2ELECIDLE(1'b1),
        .PIPERX2PHYSTATUS(1'b0),
        .PIPERX2POLARITY(pipe_rx2_polarity),
        .PIPERX2STATUS({1'b0,1'b0,1'b0}),
        .PIPERX2VALID(1'b0),
        .PIPERX3CHANISALIGNED(1'b0),
        .PIPERX3CHARISK({1'b0,1'b0}),
        .PIPERX3DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX3ELECIDLE(1'b1),
        .PIPERX3PHYSTATUS(1'b0),
        .PIPERX3POLARITY(pipe_rx3_polarity),
        .PIPERX3STATUS({1'b0,1'b0,1'b0}),
        .PIPERX3VALID(1'b0),
        .PIPERX4CHANISALIGNED(1'b0),
        .PIPERX4CHARISK({1'b0,1'b0}),
        .PIPERX4DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX4ELECIDLE(1'b1),
        .PIPERX4PHYSTATUS(1'b0),
        .PIPERX4POLARITY(pipe_rx4_polarity),
        .PIPERX4STATUS({1'b0,1'b0,1'b0}),
        .PIPERX4VALID(1'b0),
        .PIPERX5CHANISALIGNED(1'b0),
        .PIPERX5CHARISK({1'b0,1'b0}),
        .PIPERX5DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX5ELECIDLE(1'b1),
        .PIPERX5PHYSTATUS(1'b0),
        .PIPERX5POLARITY(pipe_rx5_polarity),
        .PIPERX5STATUS({1'b0,1'b0,1'b0}),
        .PIPERX5VALID(1'b0),
        .PIPERX6CHANISALIGNED(1'b0),
        .PIPERX6CHARISK({1'b0,1'b0}),
        .PIPERX6DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX6ELECIDLE(1'b1),
        .PIPERX6PHYSTATUS(1'b0),
        .PIPERX6POLARITY(pipe_rx6_polarity),
        .PIPERX6STATUS({1'b0,1'b0,1'b0}),
        .PIPERX6VALID(1'b0),
        .PIPERX7CHANISALIGNED(1'b0),
        .PIPERX7CHARISK({1'b0,1'b0}),
        .PIPERX7DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PIPERX7ELECIDLE(1'b1),
        .PIPERX7PHYSTATUS(1'b0),
        .PIPERX7POLARITY(pipe_rx7_polarity),
        .PIPERX7STATUS({1'b0,1'b0,1'b0}),
        .PIPERX7VALID(1'b0),
        .PIPETX0CHARISK(pipe_tx0_char_is_k),
        .PIPETX0COMPLIANCE(pipe_tx0_compliance),
        .PIPETX0DATA(pipe_tx0_data),
        .PIPETX0ELECIDLE(pipe_tx0_elec_idle),
        .PIPETX0POWERDOWN(pipe_tx0_powerdown),
        .PIPETX1CHARISK(pipe_tx1_char_is_k),
        .PIPETX1COMPLIANCE(pipe_tx1_compliance),
        .PIPETX1DATA(pipe_tx1_data),
        .PIPETX1ELECIDLE(pipe_tx1_elec_idle),
        .PIPETX1POWERDOWN(pipe_tx1_powerdown),
        .PIPETX2CHARISK(pipe_tx2_char_is_k),
        .PIPETX2COMPLIANCE(pipe_tx2_compliance),
        .PIPETX2DATA(pipe_tx2_data),
        .PIPETX2ELECIDLE(pipe_tx2_elec_idle),
        .PIPETX2POWERDOWN(pipe_tx2_powerdown),
        .PIPETX3CHARISK(pipe_tx3_char_is_k),
        .PIPETX3COMPLIANCE(pipe_tx3_compliance),
        .PIPETX3DATA(pipe_tx3_data),
        .PIPETX3ELECIDLE(pipe_tx3_elec_idle),
        .PIPETX3POWERDOWN(pipe_tx3_powerdown),
        .PIPETX4CHARISK(pipe_tx4_char_is_k),
        .PIPETX4COMPLIANCE(pipe_tx4_compliance),
        .PIPETX4DATA(pipe_tx4_data),
        .PIPETX4ELECIDLE(pipe_tx4_elec_idle),
        .PIPETX4POWERDOWN(pipe_tx4_powerdown),
        .PIPETX5CHARISK(pipe_tx5_char_is_k),
        .PIPETX5COMPLIANCE(pipe_tx5_compliance),
        .PIPETX5DATA(pipe_tx5_data),
        .PIPETX5ELECIDLE(pipe_tx5_elec_idle),
        .PIPETX5POWERDOWN(pipe_tx5_powerdown),
        .PIPETX6CHARISK(pipe_tx6_char_is_k),
        .PIPETX6COMPLIANCE(pipe_tx6_compliance),
        .PIPETX6DATA(pipe_tx6_data),
        .PIPETX6ELECIDLE(pipe_tx6_elec_idle),
        .PIPETX6POWERDOWN(pipe_tx6_powerdown),
        .PIPETX7CHARISK(pipe_tx7_char_is_k),
        .PIPETX7COMPLIANCE(pipe_tx7_compliance),
        .PIPETX7DATA(pipe_tx7_data),
        .PIPETX7ELECIDLE(pipe_tx7_elec_idle),
        .PIPETX7POWERDOWN(pipe_tx7_powerdown),
        .PIPETXDEEMPH(pipe_tx_deemph),
        .PIPETXMARGIN(pipe_tx_margin),
        .PIPETXRATE(pipe_tx_rate),
        .PIPETXRCVRDET(pipe_tx_rcvr_det),
        .PIPETXRESET(pcie_block_i_n_140),
        .PL2DIRECTEDLSTATE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PL2L0REQ(pcie_block_i_n_141),
        .PL2LINKUP(pcie_block_i_n_142),
        .PL2RECEIVERERR(pcie_block_i_n_143),
        .PL2RECOVERY(pcie_block_i_n_144),
        .PL2RXELECIDLE(pcie_block_i_n_145),
        .PL2RXPMSTATE({pcie_block_i_n_610,pcie_block_i_n_611}),
        .PL2SUSPENDOK(pcie_block_i_n_146),
        .PLDBGMODE({1'b0,1'b0,1'b0}),
        .PLDBGVEC({pcie_block_i_n_184,pcie_block_i_n_185,pcie_block_i_n_186,pcie_block_i_n_187,pcie_block_i_n_188,pcie_block_i_n_189,pcie_block_i_n_190,pcie_block_i_n_191,pcie_block_i_n_192,pcie_block_i_n_193,pcie_block_i_n_194,pcie_block_i_n_195}),
        .PLDIRECTEDCHANGEDONE(pcie_block_i_n_147),
        .PLDIRECTEDLINKAUTON(pl_directed_link_auton),
        .PLDIRECTEDLINKCHANGE(pl_directed_link_change),
        .PLDIRECTEDLINKSPEED(pl_directed_link_speed),
        .PLDIRECTEDLINKWIDTH(pl_directed_link_width),
        .PLDIRECTEDLTSSMNEW({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PLDIRECTEDLTSSMNEWVLD(1'b0),
        .PLDIRECTEDLTSSMSTALL(1'b0),
        .PLDOWNSTREAMDEEMPHSOURCE(1'b0),
        .PLINITIALLINKWIDTH({pcie_block_i_n_637,pcie_block_i_n_638,pcie_block_i_n_639}),
        .PLLANEREVERSALMODE({pcie_block_i_n_612,pcie_block_i_n_613}),
        .PLLINKGEN2CAP(pcie_block_i_n_148),
        .PLLINKPARTNERGEN2SUPPORTED(pcie_block_i_n_149),
        .PLLINKUPCFGCAP(pl_link_upcfg_cap),
        .PLLTSSMSTATE(pl_ltssm_state),
        .PLPHYLNKUPN(pl_phy_lnk_up_n),
        .PLRECEIVEDHOTRST(pl_received_hot_rst),
        .PLRSTN(1'b1),
        .PLRXPMSTATE({pcie_block_i_n_614,pcie_block_i_n_615}),
        .PLSELLNKRATE(pl_sel_lnk_rate),
        .PLSELLNKWIDTH(pl_sel_lnk_width),
        .PLTRANSMITHOTRST(1'b0),
        .PLTXPMSTATE({pcie_block_i_n_640,pcie_block_i_n_641,pcie_block_i_n_642}),
        .PLUPSTREAMPREFERDEEMPH(1'b0),
        .RECEIVEDFUNCLVLRSTN(cfg_received_func_lvl_rst_n),
        .SYSRSTN(sys_rst_n),
        .TL2ASPMSUSPENDCREDITCHECK(1'b0),
        .TL2ASPMSUSPENDCREDITCHECKOK(pcie_block_i_n_155),
        .TL2ASPMSUSPENDREQ(pcie_block_i_n_156),
        .TL2ERRFCPE(pcie_block_i_n_157),
        .TL2ERRHDR({pcie_block_i_n_832,pcie_block_i_n_833,pcie_block_i_n_834,pcie_block_i_n_835,pcie_block_i_n_836,pcie_block_i_n_837,pcie_block_i_n_838,pcie_block_i_n_839,pcie_block_i_n_840,pcie_block_i_n_841,pcie_block_i_n_842,pcie_block_i_n_843,pcie_block_i_n_844,pcie_block_i_n_845,pcie_block_i_n_846,pcie_block_i_n_847,pcie_block_i_n_848,pcie_block_i_n_849,pcie_block_i_n_850,pcie_block_i_n_851,pcie_block_i_n_852,pcie_block_i_n_853,pcie_block_i_n_854,pcie_block_i_n_855,pcie_block_i_n_856,pcie_block_i_n_857,pcie_block_i_n_858,pcie_block_i_n_859,pcie_block_i_n_860,pcie_block_i_n_861,pcie_block_i_n_862,pcie_block_i_n_863,pcie_block_i_n_864,pcie_block_i_n_865,pcie_block_i_n_866,pcie_block_i_n_867,pcie_block_i_n_868,pcie_block_i_n_869,pcie_block_i_n_870,pcie_block_i_n_871,pcie_block_i_n_872,pcie_block_i_n_873,pcie_block_i_n_874,pcie_block_i_n_875,pcie_block_i_n_876,pcie_block_i_n_877,pcie_block_i_n_878,pcie_block_i_n_879,pcie_block_i_n_880,pcie_block_i_n_881,pcie_block_i_n_882,pcie_block_i_n_883,pcie_block_i_n_884,pcie_block_i_n_885,pcie_block_i_n_886,pcie_block_i_n_887,pcie_block_i_n_888,pcie_block_i_n_889,pcie_block_i_n_890,pcie_block_i_n_891,pcie_block_i_n_892,pcie_block_i_n_893,pcie_block_i_n_894,pcie_block_i_n_895}),
        .TL2ERRMALFORMED(pcie_block_i_n_158),
        .TL2ERRRXOVERFLOW(pcie_block_i_n_159),
        .TL2PPMSUSPENDOK(pcie_block_i_n_160),
        .TL2PPMSUSPENDREQ(1'b0),
        .TLRSTN(1'b1),
        .TRNFCCPLD({pcie_block_i_n_196,pcie_block_i_n_197,pcie_block_i_n_198,pcie_block_i_n_199,pcie_block_i_n_200,pcie_block_i_n_201,pcie_block_i_n_202,pcie_block_i_n_203,pcie_block_i_n_204,pcie_block_i_n_205,pcie_block_i_n_206,pcie_block_i_n_207}),
        .TRNFCCPLH({pcie_block_i_n_1119,pcie_block_i_n_1120,pcie_block_i_n_1121,pcie_block_i_n_1122,pcie_block_i_n_1123,pcie_block_i_n_1124,pcie_block_i_n_1125,pcie_block_i_n_1126}),
        .TRNFCNPD({pcie_block_i_n_208,pcie_block_i_n_209,pcie_block_i_n_210,pcie_block_i_n_211,pcie_block_i_n_212,pcie_block_i_n_213,pcie_block_i_n_214,pcie_block_i_n_215,pcie_block_i_n_216,pcie_block_i_n_217,pcie_block_i_n_218,pcie_block_i_n_219}),
        .TRNFCNPH({pcie_block_i_n_1127,pcie_block_i_n_1128,pcie_block_i_n_1129,pcie_block_i_n_1130,pcie_block_i_n_1131,pcie_block_i_n_1132,pcie_block_i_n_1133,pcie_block_i_n_1134}),
        .TRNFCPD({pcie_block_i_n_220,pcie_block_i_n_221,pcie_block_i_n_222,pcie_block_i_n_223,pcie_block_i_n_224,pcie_block_i_n_225,pcie_block_i_n_226,pcie_block_i_n_227,pcie_block_i_n_228,pcie_block_i_n_229,pcie_block_i_n_230,pcie_block_i_n_231}),
        .TRNFCPH({pcie_block_i_n_1135,pcie_block_i_n_1136,pcie_block_i_n_1137,pcie_block_i_n_1138,pcie_block_i_n_1139,pcie_block_i_n_1140,pcie_block_i_n_1141,pcie_block_i_n_1142}),
        .TRNFCSEL({1'b1,1'b0,1'b0}),
        .TRNLNKUP(trn_lnk_up),
        .TRNRBARHIT({trn_rbar_hit[7:5],\trn_rbar_hit_prev_reg[4] [3],trn_rbar_hit[3],\trn_rbar_hit_prev_reg[4] [2:0]}),
        .TRNRD({NLW_pcie_block_i_TRNRD_UNCONNECTED[127:64],trn_rd}),
        .TRNRDLLPDATA({pcie_block_i_n_896,pcie_block_i_n_897,pcie_block_i_n_898,pcie_block_i_n_899,pcie_block_i_n_900,pcie_block_i_n_901,pcie_block_i_n_902,pcie_block_i_n_903,pcie_block_i_n_904,pcie_block_i_n_905,pcie_block_i_n_906,pcie_block_i_n_907,pcie_block_i_n_908,pcie_block_i_n_909,pcie_block_i_n_910,pcie_block_i_n_911,pcie_block_i_n_912,pcie_block_i_n_913,pcie_block_i_n_914,pcie_block_i_n_915,pcie_block_i_n_916,pcie_block_i_n_917,pcie_block_i_n_918,pcie_block_i_n_919,pcie_block_i_n_920,pcie_block_i_n_921,pcie_block_i_n_922,pcie_block_i_n_923,pcie_block_i_n_924,pcie_block_i_n_925,pcie_block_i_n_926,pcie_block_i_n_927,pcie_block_i_n_928,pcie_block_i_n_929,pcie_block_i_n_930,pcie_block_i_n_931,pcie_block_i_n_932,pcie_block_i_n_933,pcie_block_i_n_934,pcie_block_i_n_935,pcie_block_i_n_936,pcie_block_i_n_937,pcie_block_i_n_938,pcie_block_i_n_939,pcie_block_i_n_940,pcie_block_i_n_941,pcie_block_i_n_942,pcie_block_i_n_943,pcie_block_i_n_944,pcie_block_i_n_945,pcie_block_i_n_946,pcie_block_i_n_947,pcie_block_i_n_948,pcie_block_i_n_949,pcie_block_i_n_950,pcie_block_i_n_951,pcie_block_i_n_952,pcie_block_i_n_953,pcie_block_i_n_954,pcie_block_i_n_955,pcie_block_i_n_956,pcie_block_i_n_957,pcie_block_i_n_958,pcie_block_i_n_959}),
        .TRNRDLLPSRCRDY({pcie_block_i_n_618,pcie_block_i_n_619}),
        .TRNRDSTRDY(trn_rdst_rdy),
        .TRNRECRCERR(trn_recrc_err),
        .TRNREOF(trn_reof),
        .TRNRERRFWD(trn_rerrfwd),
        .TRNRFCPRET(1'b1),
        .TRNRNPOK(trn_rnp_ok),
        .TRNRNPREQ(1'b1),
        .TRNRREM({NLW_pcie_block_i_TRNRREM_UNCONNECTED[1],trn_rrem}),
        .TRNRSOF(trn_rsof),
        .TRNRSRCDSC(trn_rsrc_dsc),
        .TRNRSRCRDY(trn_rsrc_rdy),
        .TRNTBUFAV({pcie_block_i_n_698,pcie_block_i_n_699,pcie_block_i_n_700,pcie_block_i_n_701,pcie_block_i_n_702,pcie_block_i_n_703}),
        .TRNTCFGGNT(1'b1),
        .TRNTCFGREQ(pcie_block_i_n_168),
        .TRNTD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,trn_td}),
        .TRNTDLLPDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TRNTDLLPDSTRDY(pcie_block_i_n_169),
        .TRNTDLLPSRCRDY(1'b0),
        .TRNTDSTRDY({NLW_pcie_block_i_TRNTDSTRDY_UNCONNECTED[3:1],trn_tdst_rdy}),
        .TRNTECRCGEN(1'b0),
        .TRNTEOF(trn_teof),
        .TRNTERRDROP(pcie_block_i_n_170),
        .TRNTERRFWD(1'b0),
        .TRNTREM({1'b0,trn_trem}),
        .TRNTSOF(trn_tsof),
        .TRNTSRCDSC(1'b0),
        .TRNTSRCRDY(trn_tsrc_rdy),
        .TRNTSTR(1'b0),
        .USERCLK(\resetovrd.reset_reg[4] ),
        .USERCLK2(\resetovrd.reset_reg[4] ),
        .USERRSTN(user_rst_n));
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_1
       (.I0(sig_blk_interrupt_assert),
        .O(pcie_block_i_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT1 #(
    .INIT(2'h1)) 
    pcie_block_i_i_2
       (.I0(sig_blk_interrupt),
        .O(pcie_block_i_i_2_n_0));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_top_7x pcie_bram_top
       (.mim_rx_raddr(mim_rx_raddr[9:0]),
        .mim_rx_rdata(mim_rx_rdata),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_waddr(mim_rx_waddr[9:0]),
        .mim_rx_wdata(mim_rx_wdata),
        .mim_rx_wen(mim_rx_wen),
        .mim_tx_raddr(mim_tx_raddr[9:0]),
        .mim_tx_rdata(mim_tx_rdata),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_waddr(mim_tx_waddr[9:0]),
        .mim_tx_wdata(mim_tx_wdata),
        .mim_tx_wen(mim_tx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  LUT6 #(
    .INIT(64'h00000000AE0EA202)) 
    sig_blk_interrupt_assert_i_1
       (.I0(sig_blk_interrupt_assert),
        .I1(sig_blk_interrupt_assert_i_2_n_0),
        .I2(sig_blk_interrupt),
        .I3(cfg_interrupt_rdy_n),
        .I4(INTX_MSI_Request),
        .I5(\sig_blk_interrupt_di[7]_i_2_n_0 ),
        .O(sig_blk_interrupt_assert_reg));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h06)) 
    sig_blk_interrupt_assert_i_2
       (.I0(INTX_MSI_Request),
        .I1(INTX_state),
        .I2(cfg_interrupt_msienable),
        .O(sig_blk_interrupt_assert_i_2_n_0));
  LUT5 #(
    .INIT(32'h0000BE14)) 
    \sig_blk_interrupt_di[0]_i_1 
       (.I0(cfg_interrupt_msienable),
        .I1(INTX_state),
        .I2(INTX_MSI_Request),
        .I3(\msi_vector_num_2d_reg[4] [0]),
        .I4(sig_blk_interrupt),
        .O(\sig_blk_interrupt_di_reg[0] ));
  LUT5 #(
    .INIT(32'h0000BE14)) 
    \sig_blk_interrupt_di[1]_i_1 
       (.I0(cfg_interrupt_msienable),
        .I1(INTX_state),
        .I2(INTX_MSI_Request),
        .I3(\msi_vector_num_2d_reg[4] [1]),
        .I4(sig_blk_interrupt),
        .O(\sig_blk_interrupt_di_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT5 #(
    .INIT(32'h0000BE14)) 
    \sig_blk_interrupt_di[2]_i_1 
       (.I0(cfg_interrupt_msienable),
        .I1(INTX_state),
        .I2(INTX_MSI_Request),
        .I3(\msi_vector_num_2d_reg[4] [2]),
        .I4(sig_blk_interrupt),
        .O(\sig_blk_interrupt_di_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT5 #(
    .INIT(32'h0000BE14)) 
    \sig_blk_interrupt_di[3]_i_1 
       (.I0(cfg_interrupt_msienable),
        .I1(INTX_state),
        .I2(INTX_MSI_Request),
        .I3(\msi_vector_num_2d_reg[4] [3]),
        .I4(sig_blk_interrupt),
        .O(\sig_blk_interrupt_di_reg[3] ));
  LUT6 #(
    .INIT(64'h4474777744744444)) 
    \sig_blk_interrupt_di[4]_i_1 
       (.I0(cfg_interrupt_rdy_n),
        .I1(sig_blk_interrupt),
        .I2(intx_msi_request_2d),
        .I3(intx_msi_request_3d),
        .I4(cfg_interrupt_msienable),
        .I5(INTX_state_reg_0),
        .O(legint_msiSM_reg));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT5 #(
    .INIT(32'h0000BE14)) 
    \sig_blk_interrupt_di[4]_i_2 
       (.I0(cfg_interrupt_msienable),
        .I1(INTX_state),
        .I2(INTX_MSI_Request),
        .I3(\msi_vector_num_2d_reg[4] [4]),
        .I4(sig_blk_interrupt),
        .O(\sig_blk_interrupt_di_reg[4] ));
  LUT6 #(
    .INIT(64'h0000000022222E22)) 
    \sig_blk_interrupt_di[7]_i_1 
       (.I0(cfg_interrupt_di[5]),
        .I1(legint_msiSM_reg),
        .I2(cfg_interrupt_msienable),
        .I3(INTX_state_reg_0),
        .I4(sig_blk_interrupt),
        .I5(\sig_blk_interrupt_di[7]_i_2_n_0 ),
        .O(\sig_blk_interrupt_di_reg[7] ));
  LUT5 #(
    .INIT(32'h55555D55)) 
    \sig_blk_interrupt_di[7]_i_2 
       (.I0(axi_aresetn),
        .I1(cfg_interrupt_msienable),
        .I2(intx_msi_request_3d),
        .I3(intx_msi_request_2d),
        .I4(sig_blk_interrupt),
        .O(\sig_blk_interrupt_di[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hD000)) 
    sig_intx_msi_grant_i_1
       (.I0(cfg_interrupt_rdy_n),
        .I1(INTX_MSI_Grant),
        .I2(axi_aresetn),
        .I3(sig_blk_interrupt),
        .O(sig_intx_msi_grant_reg));
  LUT6 #(
    .INIT(64'h00001D0000000000)) 
    trn_rdst_rdy_i_2
       (.I0(trn_rsof),
        .I1(trn_reof),
        .I2(trn_rdst_rdy),
        .I3(trn_in_packet),
        .I4(trn_rsrc_dsc_d),
        .I5(trn_rsrc_dsc),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'hAA08)) 
    trn_rsrc_rdy_prev_i_1
       (.I0(trn_rsrc_rdy),
        .I1(trn_rsof),
        .I2(trn_rsrc_dsc),
        .I3(trn_in_packet),
        .O(rsrc_rdy_filtered));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x
   (mim_tx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_tx_wen,
    mim_tx_ren,
    mim_tx_waddr,
    mim_tx_raddr,
    mim_tx_wdata);
  output [35:0]mim_tx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_tx_wen;
  input mim_tx_ren;
  input [9:0]mim_tx_waddr;
  input [9:0]mim_tx_raddr;
  input [35:0]mim_tx_wdata;

  wire [9:0]mim_tx_raddr;
  wire [35:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [9:0]mim_tx_waddr;
  wire [35:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_BRAM_TDP_MACRO_7 \use_tdp.ramb36 
       (.mim_tx_raddr(mim_tx_raddr),
        .mim_tx_rdata(mim_tx_rdata),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_waddr(mim_tx_waddr),
        .mim_tx_wdata(mim_tx_wdata),
        .mim_tx_wen(mim_tx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x_6
   (mim_tx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_tx_wen,
    mim_tx_ren,
    mim_tx_waddr,
    mim_tx_raddr,
    mim_tx_wdata);
  output [32:0]mim_tx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_tx_wen;
  input mim_tx_ren;
  input [9:0]mim_tx_waddr;
  input [9:0]mim_tx_raddr;
  input [32:0]mim_tx_wdata;

  wire [9:0]mim_tx_raddr;
  wire [32:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [9:0]mim_tx_waddr;
  wire [32:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_BRAM_TDP_MACRO \use_tdp.ramb36 
       (.mim_tx_raddr(mim_tx_raddr),
        .mim_tx_rdata(mim_tx_rdata),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_waddr(mim_tx_waddr),
        .mim_tx_wdata(mim_tx_wdata),
        .mim_tx_wen(mim_tx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x_8
   (mim_rx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_rx_wen,
    mim_rx_ren,
    mim_rx_waddr,
    mim_rx_raddr,
    mim_rx_wdata);
  output [35:0]mim_rx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_rx_wen;
  input mim_rx_ren;
  input [9:0]mim_rx_waddr;
  input [9:0]mim_rx_raddr;
  input [35:0]mim_rx_wdata;

  wire [9:0]mim_rx_raddr;
  wire [35:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [9:0]mim_rx_waddr;
  wire [35:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_BRAM_TDP_MACRO_11 \use_tdp.ramb36 
       (.mim_rx_raddr(mim_rx_raddr),
        .mim_rx_rdata(mim_rx_rdata),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_waddr(mim_rx_waddr),
        .mim_rx_wdata(mim_rx_wdata),
        .mim_rx_wen(mim_rx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x_9
   (mim_rx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_rx_wen,
    mim_rx_ren,
    mim_rx_waddr,
    mim_rx_raddr,
    mim_rx_wdata);
  output [31:0]mim_rx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_rx_wen;
  input mim_rx_ren;
  input [9:0]mim_rx_waddr;
  input [9:0]mim_rx_raddr;
  input [31:0]mim_rx_wdata;

  wire [9:0]mim_rx_raddr;
  wire [31:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [9:0]mim_rx_waddr;
  wire [31:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_BRAM_TDP_MACRO_10 \use_tdp.ramb36 
       (.mim_rx_raddr(mim_rx_raddr),
        .mim_rx_rdata(mim_rx_rdata),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_waddr(mim_rx_waddr),
        .mim_rx_wdata(mim_rx_wdata),
        .mim_rx_wen(mim_rx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_top_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_top_7x
   (mim_tx_rdata,
    mim_rx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_tx_wen,
    mim_tx_ren,
    mim_tx_waddr,
    mim_tx_raddr,
    mim_tx_wdata,
    mim_rx_wen,
    mim_rx_ren,
    mim_rx_waddr,
    mim_rx_raddr,
    mim_rx_wdata);
  output [68:0]mim_tx_rdata;
  output [67:0]mim_rx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_tx_wen;
  input mim_tx_ren;
  input [9:0]mim_tx_waddr;
  input [9:0]mim_tx_raddr;
  input [68:0]mim_tx_wdata;
  input mim_rx_wen;
  input mim_rx_ren;
  input [9:0]mim_rx_waddr;
  input [9:0]mim_rx_raddr;
  input [67:0]mim_rx_wdata;

  wire [9:0]mim_rx_raddr;
  wire [67:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [9:0]mim_rx_waddr;
  wire [67:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire [9:0]mim_tx_raddr;
  wire [68:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [9:0]mim_tx_waddr;
  wire [68:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_brams_7x pcie_brams_rx
       (.mim_rx_raddr(mim_rx_raddr),
        .mim_rx_rdata(mim_rx_rdata),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_waddr(mim_rx_waddr),
        .mim_rx_wdata(mim_rx_wdata),
        .mim_rx_wen(mim_rx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_brams_7x_5 pcie_brams_tx
       (.mim_tx_raddr(mim_tx_raddr),
        .mim_tx_rdata(mim_tx_rdata),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_waddr(mim_tx_waddr),
        .mim_tx_wdata(mim_tx_wdata),
        .mim_tx_wen(mim_tx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_brams_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_brams_7x
   (mim_rx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_rx_wen,
    mim_rx_ren,
    mim_rx_waddr,
    mim_rx_raddr,
    mim_rx_wdata);
  output [67:0]mim_rx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_rx_wen;
  input mim_rx_ren;
  input [9:0]mim_rx_waddr;
  input [9:0]mim_rx_raddr;
  input [67:0]mim_rx_wdata;

  wire [9:0]mim_rx_raddr;
  wire [67:0]mim_rx_rdata;
  wire mim_rx_ren;
  wire [9:0]mim_rx_waddr;
  wire [67:0]mim_rx_wdata;
  wire mim_rx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x_8 \brams[0].ram 
       (.mim_rx_raddr(mim_rx_raddr),
        .mim_rx_rdata(mim_rx_rdata[35:0]),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_waddr(mim_rx_waddr),
        .mim_rx_wdata(mim_rx_wdata[35:0]),
        .mim_rx_wen(mim_rx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x_9 \brams[1].ram 
       (.mim_rx_raddr(mim_rx_raddr),
        .mim_rx_rdata(mim_rx_rdata[67:36]),
        .mim_rx_ren(mim_rx_ren),
        .mim_rx_waddr(mim_rx_waddr),
        .mim_rx_wdata(mim_rx_wdata[67:36]),
        .mim_rx_wen(mim_rx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_brams_7x" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_brams_7x_5
   (mim_tx_rdata,
    \resetovrd.reset_reg[4] ,
    mim_tx_wen,
    mim_tx_ren,
    mim_tx_waddr,
    mim_tx_raddr,
    mim_tx_wdata);
  output [68:0]mim_tx_rdata;
  input \resetovrd.reset_reg[4] ;
  input mim_tx_wen;
  input mim_tx_ren;
  input [9:0]mim_tx_waddr;
  input [9:0]mim_tx_raddr;
  input [68:0]mim_tx_wdata;

  wire [9:0]mim_tx_raddr;
  wire [68:0]mim_tx_rdata;
  wire mim_tx_ren;
  wire [9:0]mim_tx_waddr;
  wire [68:0]mim_tx_wdata;
  wire mim_tx_wen;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x \brams[0].ram 
       (.mim_tx_raddr(mim_tx_raddr),
        .mim_tx_rdata(mim_tx_rdata[35:0]),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_waddr(mim_tx_waddr),
        .mim_tx_wdata(mim_tx_wdata[35:0]),
        .mim_tx_wen(mim_tx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_bram_7x_6 \brams[1].ram 
       (.mim_tx_raddr(mim_tx_raddr),
        .mim_tx_rdata(mim_tx_rdata[68:36]),
        .mim_tx_ren(mim_tx_ren),
        .mim_tx_waddr(mim_tx_waddr),
        .mim_tx_wdata(mim_tx_wdata[68:36]),
        .mim_tx_wen(mim_tx_wen),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_lane" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_lane
   (TXCHARDISPMODE,
    pipe_tx0_elec_idle_gt,
    pipe_rx0_valid,
    pipe_rx0_chanisaligned,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    pipe_rx0_polarity_gt,
    Q,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    rdy_reg1_reg,
    rdy_reg1_reg_0,
    rdy_reg1_reg_1,
    phy_rdy_n_int_reg,
    pipe_tx0_compliance,
    CLK,
    pipe_tx0_elec_idle,
    pipe_rx0_valid_gt,
    pipe_rx0_chanisaligned_gt,
    gt_rx_phy_status_q,
    gt_rxelecidle_q,
    pipe_rx0_polarity,
    \gt_rxcharisk_q_reg[1] ,
    \gt_rxdata_q_reg[15] ,
    \gt_rx_status_q_reg[2] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 );
  output [0:0]TXCHARDISPMODE;
  output pipe_tx0_elec_idle_gt;
  output pipe_rx0_valid;
  output pipe_rx0_chanisaligned;
  output pipe_rx0_phy_status;
  output pipe_rx0_elec_idle;
  output pipe_rx0_polarity_gt;
  output [1:0]Q;
  output [15:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  output [2:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  output [1:0]rdy_reg1_reg;
  output [15:0]rdy_reg1_reg_0;
  output [1:0]rdy_reg1_reg_1;
  input [0:0]phy_rdy_n_int_reg;
  input pipe_tx0_compliance;
  input CLK;
  input pipe_tx0_elec_idle;
  input pipe_rx0_valid_gt;
  input pipe_rx0_chanisaligned_gt;
  input gt_rx_phy_status_q;
  input gt_rxelecidle_q;
  input pipe_rx0_polarity;
  input [1:0]\gt_rxcharisk_q_reg[1] ;
  input [15:0]\gt_rxdata_q_reg[15] ;
  input [2:0]\gt_rx_status_q_reg[2] ;
  input [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input [15:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;

  wire CLK;
  wire [1:0]Q;
  wire [0:0]TXCHARDISPMODE;
  wire [15:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [2:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire gt_rx_phy_status_q;
  wire [2:0]\gt_rx_status_q_reg[2] ;
  wire [1:0]\gt_rxcharisk_q_reg[1] ;
  wire [15:0]\gt_rxdata_q_reg[15] ;
  wire gt_rxelecidle_q;
  wire [0:0]phy_rdy_n_int_reg;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_chanisaligned_gt;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_polarity_gt;
  wire pipe_rx0_valid;
  wire pipe_rx0_valid_gt;
  wire [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [15:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire pipe_tx0_compliance;
  wire pipe_tx0_elec_idle;
  wire pipe_tx0_elec_idle_gt;
  wire [1:0]rdy_reg1_reg;
  wire [15:0]rdy_reg1_reg_0;
  wire [1:0]rdy_reg1_reg_1;

  FDRE \pipe_stages_1.pipe_rx_chanisaligned_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx0_chanisaligned_gt),
        .Q(pipe_rx0_chanisaligned),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxcharisk_q_reg[1] [0]),
        .Q(Q[0]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxcharisk_q_reg[1] [1]),
        .Q(Q[1]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [0]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [0]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [10]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [10]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [11]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [11]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [12]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [12]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [13]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [13]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [14]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [14]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [15]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [15]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [1]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [1]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [2]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [2]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [3]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [3]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [4]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [4]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [5]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [5]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [6]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [6]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [7]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [7]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [8]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [8]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rxdata_q_reg[15] [9]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl [9]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rxelecidle_q),
        .Q(pipe_rx0_elec_idle),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_phy_status_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(gt_rx_phy_status_q),
        .Q(pipe_rx0_phy_status),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_polarity_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx0_polarity),
        .Q(pipe_rx0_polarity_gt),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rx_status_q_reg[2] [0]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [0]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rx_status_q_reg[2] [1]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [1]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_status_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\gt_rx_status_q_reg[2] [2]),
        .Q(\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 [2]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_rx_valid_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_rx0_valid_gt),
        .Q(pipe_rx0_valid),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [0]),
        .Q(rdy_reg1_reg[0]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [1]),
        .Q(rdy_reg1_reg[1]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_compliance_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_compliance),
        .Q(TXCHARDISPMODE),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [0]),
        .Q(rdy_reg1_reg_0[0]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [10]),
        .Q(rdy_reg1_reg_0[10]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [11]),
        .Q(rdy_reg1_reg_0[11]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [12]),
        .Q(rdy_reg1_reg_0[12]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [13]),
        .Q(rdy_reg1_reg_0[13]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [14]),
        .Q(rdy_reg1_reg_0[14]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [15]),
        .Q(rdy_reg1_reg_0[15]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [1]),
        .Q(rdy_reg1_reg_0[1]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [2]),
        .Q(rdy_reg1_reg_0[2]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [3]),
        .Q(rdy_reg1_reg_0[3]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [4]),
        .Q(rdy_reg1_reg_0[4]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [5]),
        .Q(rdy_reg1_reg_0[5]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [6]),
        .Q(rdy_reg1_reg_0[6]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [7]),
        .Q(rdy_reg1_reg_0[7]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [8]),
        .Q(rdy_reg1_reg_0[8]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_data_q_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [9]),
        .Q(rdy_reg1_reg_0[9]),
        .R(phy_rdy_n_int_reg));
  FDSE \pipe_stages_1.pipe_tx_elec_idle_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx0_elec_idle),
        .Q(pipe_tx0_elec_idle_gt),
        .S(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_powerdown_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [0]),
        .Q(rdy_reg1_reg_1[0]),
        .R(phy_rdy_n_int_reg));
  FDSE \pipe_stages_1.pipe_tx_powerdown_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [1]),
        .Q(rdy_reg1_reg_1[1]),
        .S(phy_rdy_n_int_reg));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_misc" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_misc
   (in0,
    pipe_tx_rcvr_det_gt,
    pipe_tx_deemph_gt,
    rdy_reg1_reg,
    phy_rdy_n_int_reg,
    pipe_tx_rate,
    CLK,
    pipe_tx_rcvr_det,
    pipe_tx_deemph,
    D);
  output in0;
  output pipe_tx_rcvr_det_gt;
  output pipe_tx_deemph_gt;
  output [2:0]rdy_reg1_reg;
  input [0:0]phy_rdy_n_int_reg;
  input pipe_tx_rate;
  input CLK;
  input pipe_tx_rcvr_det;
  input pipe_tx_deemph;
  input [2:0]D;

  wire CLK;
  wire [2:0]D;
  wire in0;
  wire [0:0]phy_rdy_n_int_reg;
  wire pipe_tx_deemph;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_rcvr_det_gt;
  wire [2:0]rdy_reg1_reg;

  FDSE \pipe_stages_1.pipe_tx_deemph_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx_deemph),
        .Q(pipe_tx_deemph_gt),
        .S(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[0]),
        .Q(rdy_reg1_reg[0]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[1]),
        .Q(rdy_reg1_reg[1]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_margin_q_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[2]),
        .Q(rdy_reg1_reg[2]),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_rate_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx_rate),
        .Q(in0),
        .R(phy_rdy_n_int_reg));
  FDRE \pipe_stages_1.pipe_tx_rcvr_det_q_reg 
       (.C(CLK),
        .CE(1'b1),
        .D(pipe_tx_rcvr_det),
        .Q(pipe_tx_rcvr_det_gt),
        .R(phy_rdy_n_int_reg));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_pipeline" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_pipeline
   (in0,
    TXCHARDISPMODE,
    pipe_tx0_elec_idle_gt,
    pipe_tx_rcvr_det_gt,
    pipe_tx_deemph_gt,
    pipe_rx0_valid,
    pipe_rx0_chanisaligned,
    pipe_rx0_phy_status,
    pipe_rx0_elec_idle,
    pipe_rx0_polarity_gt,
    rdy_reg1_reg,
    Q,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl ,
    \genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ,
    rdy_reg1_reg_0,
    rdy_reg1_reg_1,
    rdy_reg1_reg_2,
    phy_rdy_n_int_reg,
    pipe_tx_rate,
    CLK,
    pipe_tx0_compliance,
    pipe_tx0_elec_idle,
    pipe_tx_rcvr_det,
    pipe_tx_deemph,
    pipe_rx0_valid_gt,
    pipe_rx0_chanisaligned_gt,
    gt_rx_phy_status_q,
    gt_rxelecidle_q,
    pipe_rx0_polarity,
    D,
    \gt_rxcharisk_q_reg[1] ,
    \gt_rxdata_q_reg[15] ,
    \gt_rx_status_q_reg[2] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 );
  output in0;
  output [0:0]TXCHARDISPMODE;
  output pipe_tx0_elec_idle_gt;
  output pipe_tx_rcvr_det_gt;
  output pipe_tx_deemph_gt;
  output pipe_rx0_valid;
  output pipe_rx0_chanisaligned;
  output pipe_rx0_phy_status;
  output pipe_rx0_elec_idle;
  output pipe_rx0_polarity_gt;
  output [2:0]rdy_reg1_reg;
  output [1:0]Q;
  output [15:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  output [2:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  output [1:0]rdy_reg1_reg_0;
  output [15:0]rdy_reg1_reg_1;
  output [1:0]rdy_reg1_reg_2;
  input [0:0]phy_rdy_n_int_reg;
  input pipe_tx_rate;
  input CLK;
  input pipe_tx0_compliance;
  input pipe_tx0_elec_idle;
  input pipe_tx_rcvr_det;
  input pipe_tx_deemph;
  input pipe_rx0_valid_gt;
  input pipe_rx0_chanisaligned_gt;
  input gt_rx_phy_status_q;
  input gt_rxelecidle_q;
  input pipe_rx0_polarity;
  input [2:0]D;
  input [1:0]\gt_rxcharisk_q_reg[1] ;
  input [15:0]\gt_rxdata_q_reg[15] ;
  input [2:0]\gt_rx_status_q_reg[2] ;
  input [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [15:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;

  wire CLK;
  wire [2:0]D;
  wire [1:0]Q;
  wire [0:0]TXCHARDISPMODE;
  wire [15:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ;
  wire [2:0]\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ;
  wire gt_rx_phy_status_q;
  wire [2:0]\gt_rx_status_q_reg[2] ;
  wire [1:0]\gt_rxcharisk_q_reg[1] ;
  wire [15:0]\gt_rxdata_q_reg[15] ;
  wire gt_rxelecidle_q;
  wire in0;
  wire [0:0]phy_rdy_n_int_reg;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_chanisaligned_gt;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_polarity_gt;
  wire pipe_rx0_valid;
  wire pipe_rx0_valid_gt;
  wire [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire [15:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [1:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire pipe_tx0_compliance;
  wire pipe_tx0_elec_idle;
  wire pipe_tx0_elec_idle_gt;
  wire pipe_tx_deemph;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_rcvr_det_gt;
  wire [2:0]rdy_reg1_reg;
  wire [1:0]rdy_reg1_reg_0;
  wire [15:0]rdy_reg1_reg_1;
  wire [1:0]rdy_reg1_reg_2;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_lane pipe_lane_0_i
       (.CLK(CLK),
        .Q(Q),
        .TXCHARDISPMODE(TXCHARDISPMODE),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ),
        .gt_rx_phy_status_q(gt_rx_phy_status_q),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .\gt_rxcharisk_q_reg[1] (\gt_rxcharisk_q_reg[1] ),
        .\gt_rxdata_q_reg[15] (\gt_rxdata_q_reg[15] ),
        .gt_rxelecidle_q(gt_rxelecidle_q),
        .phy_rdy_n_int_reg(phy_rdy_n_int_reg),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned),
        .pipe_rx0_chanisaligned_gt(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_polarity_gt(pipe_rx0_polarity_gt),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx0_valid_gt(pipe_rx0_valid_gt),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .rdy_reg1_reg(rdy_reg1_reg_0),
        .rdy_reg1_reg_0(rdy_reg1_reg_1),
        .rdy_reg1_reg_1(rdy_reg1_reg_2));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_misc pipe_misc_i
       (.CLK(CLK),
        .D(D),
        .in0(in0),
        .phy_rdy_n_int_reg(phy_rdy_n_int_reg),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rate(pipe_tx_rate),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .rdy_reg1_reg(rdy_reg1_reg));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_top" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_top
   (SR,
    m_axis_cr_tlast_reg,
    \m_axis_cw_tuser_reg[2] ,
    \data_width_64.datain_reg[64] ,
    \np_ok_mode.rx_np_ok_int_reg ,
    \tstrb_prev_reg[7] ,
    IP2Bus_WrAck_reg,
    s_axi_ctl_arready,
    s_axi_ctl_rvalid,
    s_axi_ctl_bvalid,
    s_axi_ctl_wready,
    in0,
    TXCHARDISPMODE,
    pipe_tx0_elec_idle_gt,
    pipe_tx_rcvr_det_gt,
    pipe_tx_deemph_gt,
    pipe_rx0_polarity_gt,
    IP2Bus_WrAck_reg_0,
    IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    tlpfmtsig,
    Q,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ,
    s_axis_cw_treadysig45_out,
    D,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    \data_width_64.master_int_reg ,
    \data_width_64.wrreqpendsig_reg[0] ,
    \data_width_64.lastdwbesig_reg[0] ,
    \data_width_64.tlpaddrl_reg[22] ,
    \data_width_64.rdreqsmsig_reg[0] ,
    sig_s_axis_cr_tvalid,
    \data_width_64.tlpbytecount_reg[0][0] ,
    \data_width_64.rdreqpipelineincr_reg ,
    \data_width_64.rdndtlpaddrlow_reg[0] ,
    tlprequesterid,
    s_axis_cr_tready_sig106_out,
    \data_width_64.tlplengthcntr_reg[0] ,
    \goreg_bm.dout_i_reg[63] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \end_point.fifo_rd_ptr_reg[0] ,
    m_axis_cc_tvalid_d50_out,
    \data_width_64.rdndtlpaddrlow_reg[6] ,
    \data_width_64.requesteridsig_reg[15] ,
    \ctlplength_reg[2,0][0] ,
    cfg_dev_control_max_payload,
    \length_offset_reg[11] ,
    p_3_in,
    badreadreq,
    \ctlplength_reg[1,3][8] ,
    p_0_in1_in,
    eqOp56_in,
    \data_width_64.tlpaddrlow_reg[22] ,
    \ctlpbytecount_reg[1,0][11] ,
    \data_width_64.s_axis_cw_tlasttemp_reg ,
    \data_width_64.dataen_reg ,
    s_axis_cw_treadysig34_out,
    p_1_out,
    \data_width_64.tempdatareg_reg[0] ,
    delaylast40_out,
    \data_width_64.delaylast_reg ,
    padzeroes11_out,
    eqOp,
    \s_axis_cw_tusersig_reg[2] ,
    \data_width_64.s_axis_cw_tdatatemp_reg[31] ,
    sig_m_axis_cc_tready,
    sig_s_axis_cw_tvalid,
    pl_ltssm_state,
    \data_width_64.tlpcompleterid_reg[2][7] ,
    \data_width_64.tlpcompleterid_reg[2][15] ,
    interrupt_out,
    \sig_blk_interrupt_di_reg[7] ,
    legint_msiSM_reg,
    cfg_interrupt_msienable,
    \sig_blk_interrupt_di_reg[4] ,
    \sig_blk_interrupt_di_reg[3] ,
    \sig_blk_interrupt_di_reg[2] ,
    \sig_blk_interrupt_di_reg[1] ,
    \sig_blk_interrupt_di_reg[0] ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.rdreqpipelinedecr_reg ,
    \data_width_64.rdndreqpipelinedecr_reg ,
    \ctlplength_reg[2,3][9] ,
    \ctlplength_reg[2,2][9] ,
    \ctlplength_reg[2,1][9] ,
    \ctlplength_reg[2,0][9] ,
    cpldsplitcount0_out,
    \data_width_64.tagsig_reg[0] ,
    \data_width_64.badreadreq_reg ,
    \data_width_64.s_axis_cr_tusersig_reg[3][2] ,
    \data_width_64.lastdwbesig_reg[0]_0 ,
    \data_width_64.dataoffset_reg ,
    \sig_bus2ip_ce_reg_reg[3] ,
    sig_blk_interrupt_assert_reg,
    INTX_state_reg,
    sig_intx_msi_grant_reg,
    \np_ok_mode.rx_np_ok_int_reg_0 ,
    legint_msiSM_reg_0,
    \np_ok_mode.rx_np_okSM_reg[0] ,
    \np_ok_mode.rx_np_okSM_reg[1] ,
    s_axi_ctl_rdata,
    \sig_bus2ip_ce_reg_reg[3]_0 ,
    \sig_register_bar_array_reg[1][31] ,
    \sig_bus2ip_ce_reg_reg[3]_1 ,
    \data_width_64.tlpcompleterid_reg[2][2] ,
    rdy_reg1_reg,
    rdy_reg1_reg_0,
    rdy_reg1_reg_1,
    rdy_reg1_reg_2,
    trn_lnk_up,
    MSI_Vector_Width,
    \resetovrd.reset_reg[4] ,
    \end_point.psr_reg[2] ,
    \data_width_64.m_axis_cc_tlast_d_reg ,
    \end_point.psr_reg[2]_0 ,
    request_completed,
    sig_m_axis_cc_tvalid,
    s_axi_ctl_wdata,
    user_lnk_up_mux_reg,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    m_axis_cc_tdata1,
    \data_width_64.m_axis_cc_tlast_nd_reg ,
    s_axi_ctl_arvalid,
    s_axi_ctl_wvalid,
    s_axi_ctl_awvalid,
    sys_rst_n_int,
    s_axi_ctl_rready,
    s_axi_ctl_bready,
    phy_rdy_n_int_reg,
    CLK,
    pipe_rx0_valid_gt,
    pipe_rx0_chanisaligned_gt,
    gt_rx_phy_status_q,
    gt_rxelecidle_q,
    out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2] ,
    \wrreqsetcnt_reg[2] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    user_lnk_up_mux_reg_0,
    \data_width_64.rdreqsmsig_reg[0]_0 ,
    blk_lnk_up_latch,
    \data_width_64.lnkdowndataflush_reg ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.rdreqsmsig_reg[2] ,
    \data_width_64.zerolenreadreq_reg ,
    \data_width_64.badreadreq_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg ,
    \data_width_64.rresp_reg[3][1] ,
    \data_width_64.tlptag_reg[2][2] ,
    \data_width_64.tlptag_reg[2][3] ,
    \data_width_64.tlptag_reg[2][6] ,
    \data_width_64.tlptag_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][0] ,
    \data_width_64.tlprequesterid_reg[2][1] ,
    \data_width_64.tlprequesterid_reg[2][2] ,
    \data_width_64.tlprequesterid_reg[2][3] ,
    \data_width_64.tlprequesterid_reg[2][7] ,
    \data_width_64.tlprequesterid_reg[2][8] ,
    \data_width_64.tlprequesterid_reg[2][9] ,
    \data_width_64.tlprequesterid_reg[2][10] ,
    \data_width_64.tlprequesterid_reg[2][11] ,
    \data_width_64.tlprequesterid_reg[2][12] ,
    \data_width_64.tlprequesterid_reg[2][13] ,
    \data_width_64.tlprequesterid_reg[2][15] ,
    empty_fwft_i_reg,
    O,
    \data_width_64.tlplength_reg[3][6] ,
    neqOp_0,
    \data_width_64.tlplength_reg[3][7] ,
    \data_width_64.tlplength_reg[3][7]_0 ,
    \data_width_64.tlplength_reg[3][6]_0 ,
    \data_width_64.tlplength_reg[3][6]_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \data_width_64.tlplength_reg[3][7]_1 ,
    \data_width_64.tlplength_reg[3][7]_2 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ,
    \length_offset_reg[11]_0 ,
    \length_offset_reg[10] ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[10]_1 ,
    \length_offset_reg[8] ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[6] ,
    R,
    \ctargetpipeline_reg[1] ,
    \ctargetpipeline_reg[1]_0 ,
    \ctargetpipeline_reg[1]_1 ,
    \ctargetpipeline_reg[1]_2 ,
    \ctargetpipeline_reg[1]_3 ,
    \ctargetpipeline_reg[1]_4 ,
    treadydataenadjustsig,
    \data_width_64.s_axis_cw_treadysig_reg ,
    neqOp7_in,
    wrreqsetsig,
    almost_fullsig,
    \data_width_64.tlplengthsig_reg[0] ,
    \data_width_64.dataoffset_reg_0 ,
    sig_m_axis_cc_tlast,
    \data_width_64.m_axis_cc_tvalid_nd_reg ,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    sig_s_axis_cr_tready,
    s_axi_ctl_awaddr,
    s_axi_ctl_wstrb,
    s_axi_ctl_araddr,
    sig_IP2Bus_RdAck,
    cfg_interrupt_di,
    INTX_state_reg_0,
    sig_blk_interrupt,
    intx_msi_request_2d,
    intx_msi_request_3d,
    axi_aresetn,
    INTX_state,
    INTX_MSI_Request,
    \msi_vector_num_2d_reg[4] ,
    p_6_in,
    rx_np_ok_cntr,
    \np_ok_mode.rx_np_okSM_reg[1]_0 ,
    \np_ok_mode.rx_np_okSM_reg[0]_0 ,
    \data_width_64.cplndtlpsmsig_reg[1] ,
    \ctlplength[0,3] ,
    \ctlplength[0,2] ,
    \ctlplength[0,1] ,
    \ctargetpipeline_reg[1]_5 ,
    \cpldsplitsm_reg[1] ,
    \data_width_64.tlplength_reg[3][4] ,
    sig_IP2Bus_WrAck,
    sig_blk_interrupt_assert,
    INTX_MSI_Grant,
    \np_ok_mode.rx_np_okSM_reg[0]_1 ,
    trn_rnp_ok,
    rx_np_okSM,
    \np_ok_mode.pipe_latency_cntr_reg[2] ,
    \end_point.psr_reg[2]_1 ,
    \data_width_64.master_int_reg_0 ,
    p_1_in2_in,
    p_0_in1_in_1,
    p_1_in,
    p_0_in0_in,
    \IP2Bus_Data_reg[31] ,
    \gt_rxcharisk_q_reg[1] ,
    \gt_rxdata_q_reg[15] ,
    \gt_rx_status_q_reg[2] ,
    sys_rst_n);
  output [0:0]SR;
  output m_axis_cr_tlast_reg;
  output \m_axis_cw_tuser_reg[2] ;
  output \data_width_64.datain_reg[64] ;
  output \np_ok_mode.rx_np_ok_int_reg ;
  output \tstrb_prev_reg[7] ;
  output IP2Bus_WrAck_reg;
  output s_axi_ctl_arready;
  output s_axi_ctl_rvalid;
  output s_axi_ctl_bvalid;
  output s_axi_ctl_wready;
  output in0;
  output [0:0]TXCHARDISPMODE;
  output pipe_tx0_elec_idle_gt;
  output pipe_tx_rcvr_det_gt;
  output pipe_tx_deemph_gt;
  output pipe_rx0_polarity_gt;
  output IP2Bus_WrAck_reg_0;
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output [0:0]tlpfmtsig;
  output [63:0]Q;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  output s_axis_cw_treadysig45_out;
  output [0:0]D;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output \data_width_64.master_int_reg ;
  output \data_width_64.wrreqpendsig_reg[0] ;
  output \data_width_64.lastdwbesig_reg[0] ;
  output [22:0]\data_width_64.tlpaddrl_reg[22] ;
  output \data_width_64.rdreqsmsig_reg[0] ;
  output sig_s_axis_cr_tvalid;
  output \data_width_64.tlpbytecount_reg[0][0] ;
  output \data_width_64.rdreqpipelineincr_reg ;
  output \data_width_64.rdndtlpaddrlow_reg[0] ;
  output tlprequesterid;
  output s_axis_cr_tready_sig106_out;
  output \data_width_64.tlplengthcntr_reg[0] ;
  output \goreg_bm.dout_i_reg[63] ;
  output [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \end_point.fifo_rd_ptr_reg[0] ;
  output m_axis_cc_tvalid_d50_out;
  output [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  output [55:0]\data_width_64.requesteridsig_reg[15] ;
  output \ctlplength_reg[2,0][0] ;
  output [2:0]cfg_dev_control_max_payload;
  output [5:0]\length_offset_reg[11] ;
  output [3:0]p_3_in;
  output badreadreq;
  output [3:0]\ctlplength_reg[1,3][8] ;
  output [1:0]p_0_in1_in;
  output eqOp56_in;
  output [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  output [9:0]\ctlpbytecount_reg[1,0][11] ;
  output \data_width_64.s_axis_cw_tlasttemp_reg ;
  output \data_width_64.dataen_reg ;
  output s_axis_cw_treadysig34_out;
  output p_1_out;
  output \data_width_64.tempdatareg_reg[0] ;
  output delaylast40_out;
  output \data_width_64.delaylast_reg ;
  output padzeroes11_out;
  output eqOp;
  output [2:0]\s_axis_cw_tusersig_reg[2] ;
  output [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  output sig_m_axis_cc_tready;
  output sig_s_axis_cw_tvalid;
  output [5:0]pl_ltssm_state;
  output [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  output [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  output interrupt_out;
  output \sig_blk_interrupt_di_reg[7] ;
  output legint_msiSM_reg;
  output cfg_interrupt_msienable;
  output \sig_blk_interrupt_di_reg[4] ;
  output \sig_blk_interrupt_di_reg[3] ;
  output \sig_blk_interrupt_di_reg[2] ;
  output \sig_blk_interrupt_di_reg[1] ;
  output \sig_blk_interrupt_di_reg[0] ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.rdreqpipelinedecr_reg ;
  output \data_width_64.rdndreqpipelinedecr_reg ;
  output \ctlplength_reg[2,3][9] ;
  output \ctlplength_reg[2,2][9] ;
  output \ctlplength_reg[2,1][9] ;
  output \ctlplength_reg[2,0][9] ;
  output cpldsplitcount0_out;
  output \data_width_64.tagsig_reg[0] ;
  output \data_width_64.badreadreq_reg ;
  output [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  output \data_width_64.lastdwbesig_reg[0]_0 ;
  output \data_width_64.dataoffset_reg ;
  output \sig_bus2ip_ce_reg_reg[3] ;
  output sig_blk_interrupt_assert_reg;
  output INTX_state_reg;
  output sig_intx_msi_grant_reg;
  output \np_ok_mode.rx_np_ok_int_reg_0 ;
  output legint_msiSM_reg_0;
  output \np_ok_mode.rx_np_okSM_reg[0] ;
  output \np_ok_mode.rx_np_okSM_reg[1] ;
  output [31:0]s_axi_ctl_rdata;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  output [31:0]\sig_register_bar_array_reg[1][31] ;
  output [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  output [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  output [2:0]rdy_reg1_reg;
  output [1:0]rdy_reg1_reg_0;
  output [15:0]rdy_reg1_reg_1;
  output [1:0]rdy_reg1_reg_2;
  output trn_lnk_up;
  output [2:0]MSI_Vector_Width;
  input \resetovrd.reset_reg[4] ;
  input \end_point.psr_reg[2] ;
  input \data_width_64.m_axis_cc_tlast_d_reg ;
  input \end_point.psr_reg[2]_0 ;
  input request_completed;
  input sig_m_axis_cc_tvalid;
  input [31:0]s_axi_ctl_wdata;
  input user_lnk_up_mux_reg;
  input \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  input m_axis_cc_tdata1;
  input \data_width_64.m_axis_cc_tlast_nd_reg ;
  input s_axi_ctl_arvalid;
  input s_axi_ctl_wvalid;
  input s_axi_ctl_awvalid;
  input sys_rst_n_int;
  input s_axi_ctl_rready;
  input s_axi_ctl_bready;
  input [0:0]phy_rdy_n_int_reg;
  input CLK;
  input pipe_rx0_valid_gt;
  input pipe_rx0_chanisaligned_gt;
  input gt_rx_phy_status_q;
  input gt_rxelecidle_q;
  input [0:0]out;
  input [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  input \wrreqsetcnt_reg[2] ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input user_lnk_up_mux_reg_0;
  input \data_width_64.rdreqsmsig_reg[0]_0 ;
  input blk_lnk_up_latch;
  input \data_width_64.lnkdowndataflush_reg ;
  input \data_width_64.badreadreq_reg_0 ;
  input \data_width_64.rdreqsmsig_reg[2] ;
  input \data_width_64.zerolenreadreq_reg ;
  input \data_width_64.badreadreq_reg_1 ;
  input \data_width_64.m_axis_cc_tvalid_d_reg ;
  input \data_width_64.rresp_reg[3][1] ;
  input \data_width_64.tlptag_reg[2][2] ;
  input \data_width_64.tlptag_reg[2][3] ;
  input \data_width_64.tlptag_reg[2][6] ;
  input \data_width_64.tlptag_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][0] ;
  input \data_width_64.tlprequesterid_reg[2][1] ;
  input \data_width_64.tlprequesterid_reg[2][2] ;
  input \data_width_64.tlprequesterid_reg[2][3] ;
  input \data_width_64.tlprequesterid_reg[2][7] ;
  input \data_width_64.tlprequesterid_reg[2][8] ;
  input \data_width_64.tlprequesterid_reg[2][9] ;
  input \data_width_64.tlprequesterid_reg[2][10] ;
  input \data_width_64.tlprequesterid_reg[2][11] ;
  input \data_width_64.tlprequesterid_reg[2][12] ;
  input \data_width_64.tlprequesterid_reg[2][13] ;
  input \data_width_64.tlprequesterid_reg[2][15] ;
  input empty_fwft_i_reg;
  input [3:0]O;
  input [3:0]\data_width_64.tlplength_reg[3][6] ;
  input neqOp_0;
  input [1:0]\data_width_64.tlplength_reg[3][7] ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  input [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  input [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  input \length_offset_reg[11]_0 ;
  input \length_offset_reg[10] ;
  input \length_offset_reg[10]_0 ;
  input \length_offset_reg[11]_1 ;
  input \length_offset_reg[10]_1 ;
  input \length_offset_reg[8] ;
  input [2:0]\length_offset_reg[11]_2 ;
  input \length_offset_reg[6] ;
  input [6:0]R;
  input \ctargetpipeline_reg[1] ;
  input \ctargetpipeline_reg[1]_0 ;
  input \ctargetpipeline_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_2 ;
  input \ctargetpipeline_reg[1]_3 ;
  input \ctargetpipeline_reg[1]_4 ;
  input treadydataenadjustsig;
  input \data_width_64.s_axis_cw_treadysig_reg ;
  input neqOp7_in;
  input wrreqsetsig;
  input almost_fullsig;
  input [0:0]\data_width_64.tlplengthsig_reg[0] ;
  input \data_width_64.dataoffset_reg_0 ;
  input sig_m_axis_cc_tlast;
  input \data_width_64.m_axis_cc_tvalid_nd_reg ;
  input \data_width_64.s_axis_cw_treadysig_reg_0 ;
  input sig_s_axis_cr_tready;
  input [11:0]s_axi_ctl_awaddr;
  input [3:0]s_axi_ctl_wstrb;
  input [11:0]s_axi_ctl_araddr;
  input sig_IP2Bus_RdAck;
  input [5:0]cfg_interrupt_di;
  input INTX_state_reg_0;
  input sig_blk_interrupt;
  input intx_msi_request_2d;
  input intx_msi_request_3d;
  input axi_aresetn;
  input INTX_state;
  input INTX_MSI_Request;
  input [4:0]\msi_vector_num_2d_reg[4] ;
  input p_6_in;
  input rx_np_ok_cntr;
  input \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  input \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  input \data_width_64.cplndtlpsmsig_reg[1] ;
  input \ctlplength[0,3] ;
  input \ctlplength[0,2] ;
  input \ctlplength[0,1] ;
  input \ctargetpipeline_reg[1]_5 ;
  input [1:0]\cpldsplitsm_reg[1] ;
  input \data_width_64.tlplength_reg[3][4] ;
  input sig_IP2Bus_WrAck;
  input sig_blk_interrupt_assert;
  input INTX_MSI_Grant;
  input \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  input trn_rnp_ok;
  input rx_np_okSM;
  input \np_ok_mode.pipe_latency_cntr_reg[2] ;
  input [63:0]\end_point.psr_reg[2]_1 ;
  input [2:0]\data_width_64.master_int_reg_0 ;
  input p_1_in2_in;
  input p_0_in1_in_1;
  input p_1_in;
  input p_0_in0_in;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input [1:0]\gt_rxcharisk_q_reg[1] ;
  input [15:0]\gt_rxdata_q_reg[15] ;
  input [2:0]\gt_rx_status_q_reg[2] ;
  input sys_rst_n;

  wire CLK;
  wire [0:0]D;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0] ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1] ;
  wire [2:0]\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ;
  wire INTX_MSI_Grant;
  wire INTX_MSI_Request;
  wire INTX_state;
  wire INTX_state_reg;
  wire INTX_state_reg_0;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire IP2Bus_WrAck_reg;
  wire IP2Bus_WrAck_reg_0;
  wire [2:0]MSI_Vector_Width;
  wire [3:0]O;
  wire [63:0]Q;
  wire [6:0]R;
  wire [0:0]SR;
  wire [0:0]TXCHARDISPMODE;
  wire almost_fullsig;
  wire axi_aresetn;
  wire axi_enhanced_top_n_22;
  wire axi_enhanced_top_n_24;
  wire axi_enhanced_top_n_25;
  wire axi_enhanced_top_n_26;
  wire axi_enhanced_top_n_306;
  wire axi_enhanced_top_n_308;
  wire axi_enhanced_top_n_31;
  wire axi_enhanced_top_n_310;
  wire axi_enhanced_top_n_315;
  wire axi_enhanced_top_n_316;
  wire axi_enhanced_top_n_317;
  wire axi_enhanced_top_n_318;
  wire axi_enhanced_top_n_319;
  wire axi_enhanced_top_n_32;
  wire axi_enhanced_top_n_320;
  wire axi_enhanced_top_n_321;
  wire axi_enhanced_top_n_322;
  wire axi_enhanced_top_n_323;
  wire axi_enhanced_top_n_324;
  wire axi_enhanced_top_n_325;
  wire axi_enhanced_top_n_326;
  wire axi_enhanced_top_n_327;
  wire axi_enhanced_top_n_328;
  wire axi_enhanced_top_n_329;
  wire axi_enhanced_top_n_330;
  wire axi_enhanced_top_n_331;
  wire axi_enhanced_top_n_332;
  wire axi_enhanced_top_n_333;
  wire axi_enhanced_top_n_334;
  wire axi_enhanced_top_n_335;
  wire axi_enhanced_top_n_336;
  wire axi_enhanced_top_n_337;
  wire axi_enhanced_top_n_342;
  wire axi_enhanced_top_n_343;
  wire axi_enhanced_top_n_344;
  wire axi_enhanced_top_n_345;
  wire axi_enhanced_top_n_346;
  wire axi_enhanced_top_n_348;
  wire axi_enhanced_top_n_358;
  wire axi_enhanced_top_n_359;
  wire axi_enhanced_top_n_361;
  wire axi_enhanced_top_n_362;
  wire axi_enhanced_top_n_363;
  wire axi_enhanced_top_n_365;
  wire axi_enhanced_top_n_366;
  wire axi_enhanced_top_n_367;
  wire axi_enhanced_top_n_368;
  wire axi_enhanced_top_n_44;
  wire axi_enhanced_top_n_514;
  wire axi_in_packet_i_1_n_0;
  wire badreadreq;
  wire blk_lnk_up_latch;
  wire \block_is_ep.request_in_progress_i_1_n_0 ;
  wire cc_in_packet_i_1_n_0;
  wire cc_in_packet_int_i_1_n_0;
  wire [2:0]cfg_dev_control_max_payload;
  wire [8:8]\cfg_inst/axi_enhanced_cfg_slave_inst/bridge_status_control ;
  wire \cfg_inst/axi_enhanced_cfg_slave_inst/ready_is_given ;
  wire \cfg_inst/axi_enhanced_cfg_slave_inst/request_type ;
  wire \cfg_inst/axi_enhanced_cfg_slave_inst/wait_for_idle ;
  wire \cfg_inst/s_axi_ctl_arready_blk_bridge ;
  wire \cfg_inst/s_axi_ctl_arvalid_blk_bridge ;
  wire \cfg_inst/s_axi_ctl_arvalid_ev_hndlr ;
  wire \cfg_inst/s_axi_ctl_awvalid_ev_hndlr ;
  wire [5:0]cfg_interrupt_di;
  wire cfg_interrupt_msienable;
  wire [31:0]cfg_mgmt_do;
  wire [9:0]cfg_mgmt_dwaddr;
  wire cfg_mgmt_rd_en;
  wire cfg_mgmt_rd_wr_done_n;
  wire cfg_mgmt_wr_readonly;
  wire cfg_mgmt_wr_rw1c_as_rw;
  wire \comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ;
  wire cpldsplitcount0_out;
  wire [1:0]\cpldsplitsm_reg[1] ;
  wire cr_enable_i_1_n_0;
  wire \ctargetpipeline_reg[1] ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire \ctargetpipeline_reg[1]_2 ;
  wire \ctargetpipeline_reg[1]_3 ;
  wire \ctargetpipeline_reg[1]_4 ;
  wire \ctargetpipeline_reg[1]_5 ;
  wire [9:0]\ctlpbytecount_reg[1,0][11] ;
  wire \ctlplength[0,1] ;
  wire \ctlplength[0,2] ;
  wire \ctlplength[0,3] ;
  wire [3:0]\ctlplength_reg[1,3][8] ;
  wire \ctlplength_reg[2,0][0] ;
  wire \ctlplength_reg[2,0][9] ;
  wire \ctlplength_reg[2,1][9] ;
  wire \ctlplength_reg[2,2][9] ;
  wire \ctlplength_reg[2,3][9] ;
  wire cw_enable_i_1_n_0;
  wire \data_width_64.badreadreq_reg ;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.badreadreq_reg_1 ;
  wire \data_width_64.cplndtlpsmsig_reg[1] ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.datain_reg[64] ;
  wire \data_width_64.dataoffset_reg ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg ;
  wire \data_width_64.lastdwbesig_reg[0] ;
  wire \data_width_64.lastdwbesig_reg[0]_0 ;
  wire \data_width_64.lnkdowndataflush_reg ;
  wire [15:0]\data_width_64.m_axis_cc_tdata_h_reg[31] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tlast_nd_reg ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg ;
  wire \data_width_64.master_int_reg ;
  wire [2:0]\data_width_64.master_int_reg_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg ;
  wire \data_width_64.rdndtlpaddrlow_reg[0] ;
  wire [4:0]\data_width_64.rdndtlpaddrlow_reg[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg ;
  wire \data_width_64.rdreqpipelineincr_reg ;
  wire \data_width_64.rdreqsmsig_reg[0] ;
  wire \data_width_64.rdreqsmsig_reg[0]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2] ;
  wire [55:0]\data_width_64.requesteridsig_reg[15] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire [2:0]\data_width_64.s_axis_cr_tusersig_reg[3][2] ;
  wire [31:0]\data_width_64.s_axis_cw_tdatatemp_reg[31] ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tagsig_reg[0] ;
  wire \data_width_64.tempdatareg_reg[0] ;
  wire [22:0]\data_width_64.tlpaddrl_reg[22] ;
  wire [20:0]\data_width_64.tlpaddrlow_reg[22] ;
  wire \data_width_64.tlpbytecount_reg[0][0] ;
  wire [7:0]\data_width_64.tlpcompleterid_reg[2][15] ;
  wire [2:0]\data_width_64.tlpcompleterid_reg[2][2] ;
  wire [4:0]\data_width_64.tlpcompleterid_reg[2][7] ;
  wire \data_width_64.tlplength_reg[3][4] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6] ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_0 ;
  wire [3:0]\data_width_64.tlplength_reg[3][6]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7] ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_0 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_1 ;
  wire [1:0]\data_width_64.tlplength_reg[3][7]_2 ;
  wire \data_width_64.tlplengthcntr_reg[0] ;
  wire [0:0]\data_width_64.tlplengthsig_reg[0] ;
  wire \data_width_64.tlprequesterid_reg[2][0] ;
  wire \data_width_64.tlprequesterid_reg[2][10] ;
  wire \data_width_64.tlprequesterid_reg[2][11] ;
  wire \data_width_64.tlprequesterid_reg[2][12] ;
  wire \data_width_64.tlprequesterid_reg[2][13] ;
  wire \data_width_64.tlprequesterid_reg[2][15] ;
  wire \data_width_64.tlprequesterid_reg[2][1] ;
  wire \data_width_64.tlprequesterid_reg[2][2] ;
  wire \data_width_64.tlprequesterid_reg[2][3] ;
  wire \data_width_64.tlprequesterid_reg[2][7] ;
  wire \data_width_64.tlprequesterid_reg[2][8] ;
  wire \data_width_64.tlprequesterid_reg[2][9] ;
  wire \data_width_64.tlptag_reg[2][2] ;
  wire \data_width_64.tlptag_reg[2][3] ;
  wire \data_width_64.tlptag_reg[2][6] ;
  wire \data_width_64.tlptag_reg[2][7] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg ;
  wire delaylast40_out;
  wire empty_fwft_i_reg;
  wire \end_point.axi_lite_intf_busy_i_1_n_0 ;
  wire \end_point.cfg_mgmt_wr_readonly_o_i_1_n_0 ;
  wire \end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_1_n_0 ;
  wire \end_point.fifo_rd_ptr_reg[0] ;
  wire \end_point.global_intr_disable_i_1_n_0 ;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire [63:0]\end_point.psr_reg[2]_1 ;
  wire \end_point.rd_wr_bar_pending_i_1_n_0 ;
  wire \end_point.ready_is_given_i_1_n_0 ;
  wire \end_point.request_type_i_1_n_0 ;
  wire \end_point.s_axi_ctl_arready_i_1_n_0 ;
  wire \end_point.s_axi_ctl_awready_i_2_n_0 ;
  wire \end_point.s_axi_ctl_bvalid_i_1_n_0 ;
  wire \end_point.s_axi_ctl_rvalid_i_1_n_0 ;
  wire \end_point.wait_for_idle_i_1_n_0 ;
  wire eqOp;
  wire eqOp56_in;
  wire flush_axi_i_1_n_0;
  wire \goreg_bm.dout_i_reg[63] ;
  wire gt_rx_phy_status_q;
  wire [2:0]\gt_rx_status_q_reg[2] ;
  wire [1:0]\gt_rxcharisk_q_reg[1] ;
  wire [15:0]\gt_rxdata_q_reg[15] ;
  wire gt_rxelecidle_q;
  wire in0;
  wire interrupt_out;
  wire intx_msi_request_2d;
  wire intx_msi_request_3d;
  wire legint_msiSM_reg;
  wire legint_msiSM_reg_0;
  wire \length_offset_reg[10] ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[10]_1 ;
  wire [5:0]\length_offset_reg[11] ;
  wire \length_offset_reg[11]_0 ;
  wire \length_offset_reg[11]_1 ;
  wire [2:0]\length_offset_reg[11]_2 ;
  wire \length_offset_reg[6] ;
  wire \length_offset_reg[8] ;
  wire m_axis_cc_tdata1;
  wire m_axis_cc_tvalid_d50_out;
  wire m_axis_cr_tlast_reg;
  wire \m_axis_cw_tuser_reg[2] ;
  wire [4:0]\msi_vector_num_2d_reg[4] ;
  wire neqOp7_in;
  wire neqOp_0;
  wire \np_ok_mode.pipe_latency_cntr_reg[2] ;
  wire \np_ok_mode.rx_np_okSM_reg[0] ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_0 ;
  wire \np_ok_mode.rx_np_okSM_reg[0]_1 ;
  wire \np_ok_mode.rx_np_okSM_reg[1] ;
  wire \np_ok_mode.rx_np_okSM_reg[1]_0 ;
  wire \np_ok_mode.rx_np_ok_int_reg ;
  wire \np_ok_mode.rx_np_ok_int_reg_0 ;
  wire [0:0]out;
  wire p_0_in0_in;
  wire [1:0]p_0_in1_in;
  wire p_0_in1_in_1;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_out;
  wire [3:0]p_3_in;
  wire p_6_in;
  wire padzeroes11_out;
  wire pcie_7x_i_n_145;
  wire pcie_7x_i_n_146;
  wire pcie_7x_i_n_147;
  wire pcie_7x_i_n_148;
  wire pcie_7x_i_n_149;
  wire pcie_7x_i_n_150;
  wire pcie_7x_i_n_151;
  wire pcie_7x_i_n_152;
  wire pcie_7x_i_n_153;
  wire pcie_7x_i_n_154;
  wire pcie_7x_i_n_155;
  wire pcie_7x_i_n_156;
  wire pcie_7x_i_n_157;
  wire pcie_7x_i_n_158;
  wire pcie_7x_i_n_159;
  wire pcie_7x_i_n_160;
  wire pcie_7x_i_n_181;
  wire pcie_7x_i_n_182;
  wire pcie_7x_i_n_36;
  wire pcie_7x_i_n_43;
  wire pcie_7x_i_n_44;
  wire pcie_7x_i_n_45;
  wire pcie_7x_i_n_46;
  wire pcie_7x_i_n_47;
  wire pcie_7x_i_n_48;
  wire pcie_7x_i_n_49;
  wire pcie_7x_i_n_50;
  wire pcie_7x_i_n_64;
  wire pcie_7x_i_n_65;
  wire pcie_7x_i_n_77;
  wire pcie_7x_i_n_78;
  wire [0:0]phy_rdy_n_int_reg;
  wire pipe_rx0_chanisaligned;
  wire pipe_rx0_chanisaligned_gt;
  wire [1:0]pipe_rx0_char_is_k;
  wire [15:0]pipe_rx0_data;
  wire pipe_rx0_elec_idle;
  wire pipe_rx0_phy_status;
  wire pipe_rx0_polarity;
  wire pipe_rx0_polarity_gt;
  wire [2:0]pipe_rx0_status;
  wire pipe_rx0_valid;
  wire pipe_rx0_valid_gt;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ;
  wire [1:0]pipe_tx0_char_is_k;
  wire pipe_tx0_compliance;
  wire [15:0]pipe_tx0_data;
  wire pipe_tx0_elec_idle;
  wire pipe_tx0_elec_idle_gt;
  wire [1:0]pipe_tx0_powerdown;
  wire pipe_tx_deemph;
  wire pipe_tx_deemph_gt;
  wire [2:0]pipe_tx_margin;
  wire pipe_tx_rate;
  wire pipe_tx_rcvr_det;
  wire pipe_tx_rcvr_det_gt;
  wire pl_directed_link_auton;
  wire [1:0]pl_directed_link_change;
  wire pl_directed_link_speed;
  wire [1:0]pl_directed_link_width;
  wire [5:0]pl_ltssm_state;
  wire rc_empty_i_1_n_0;
  wire rc_enable_i_1_n_0;
  wire rc_full_i_1_n_0;
  wire [2:0]rdy_reg1_reg;
  wire [1:0]rdy_reg1_reg_0;
  wire [15:0]rdy_reg1_reg_1;
  wire [1:0]rdy_reg1_reg_2;
  wire reg_dsc_detect_i_1_n_0;
  wire request_completed;
  wire \resetovrd.reset_reg[4] ;
  wire [14:14]\rx_inst/m_axis_rx_tuser ;
  wire \rx_inst/m_axis_rx_tvalid ;
  wire \rx_inst/rx_demux_inst/rc_enable24_out ;
  wire \rx_inst/rx_demux_inst/rc_full ;
  wire \rx_inst/rx_demux_inst/state174_out ;
  wire \rx_inst/rx_pipeline_inst/null_mux_sel ;
  wire \rx_inst/rx_pipeline_inst/p_7_in ;
  wire \rx_inst/rx_pipeline_inst/reg_dsc_detect ;
  wire \rx_inst/rx_pipeline_inst/rsrc_rdy_filtered ;
  wire \rx_inst/rx_pipeline_inst/trn_in_packet ;
  wire \rx_inst/rx_pipeline_inst/trn_rsrc_dsc_d ;
  wire rx_np_okSM;
  wire rx_np_ok_cntr;
  wire [11:0]s_axi_ctl_araddr;
  wire s_axi_ctl_arready;
  wire s_axi_ctl_arvalid;
  wire [11:0]s_axi_ctl_awaddr;
  wire s_axi_ctl_awvalid;
  wire s_axi_ctl_bready;
  wire s_axi_ctl_bvalid;
  wire [31:0]s_axi_ctl_rdata;
  wire s_axi_ctl_rready;
  wire s_axi_ctl_rvalid;
  wire [31:0]s_axi_ctl_wdata;
  wire s_axi_ctl_wready;
  wire [3:0]s_axi_ctl_wstrb;
  wire s_axi_ctl_wvalid;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [2:0]\s_axis_cw_tusersig_reg[2] ;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire sig_blk_interrupt;
  wire sig_blk_interrupt_assert;
  wire sig_blk_interrupt_assert_reg;
  wire \sig_blk_interrupt_di_reg[0] ;
  wire \sig_blk_interrupt_di_reg[1] ;
  wire \sig_blk_interrupt_di_reg[2] ;
  wire \sig_blk_interrupt_di_reg[3] ;
  wire \sig_blk_interrupt_di_reg[4] ;
  wire \sig_blk_interrupt_di_reg[7] ;
  wire \sig_bus2ip_ce_reg_reg[3] ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_0 ;
  wire [1:0]\sig_bus2ip_ce_reg_reg[3]_1 ;
  wire sig_intx_msi_grant_reg;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire [31:0]\sig_register_bar_array_reg[1][31] ;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire sig_s_axis_cw_tvalid;
  wire sys_rst_n;
  wire sys_rst_n_int;
  wire [0:0]tlpfmtsig;
  wire tlprequesterid;
  wire treadydataenadjustsig;
  wire trn_in_packet_i_1__0_n_0;
  wire trn_in_packet_i_1_n_0;
  wire trn_lnk_up;
  wire [4:0]trn_rbar_hit;
  wire [63:0]trn_rd;
  wire trn_rdst_rdy;
  wire trn_recrc_err;
  wire trn_reof;
  wire trn_rnp_ok;
  wire trn_rsof;
  wire trn_rsrc_dsc;
  wire trn_rsrc_rdy;
  wire [63:0]trn_td;
  wire trn_tdst_rdy;
  wire trn_teof;
  wire trn_trem;
  wire trn_tsof;
  wire trn_tsrc_rdy;
  wire \tstrb_prev_reg[7] ;
  wire \tx_inst/flush_axis_tlp ;
  wire \tx_inst/s_axis_tx_tlast ;
  wire \tx_inst/s_axis_tx_tvalid ;
  wire \tx_inst/tx_axi_port_mux/cc_in_packet_int ;
  wire \tx_inst/tx_axi_port_mux/flush_axis_tlp2 ;
  wire \tx_inst/tx_pipeline_inst/axi_in_packet ;
  wire \tx_inst/tx_pipeline_inst/flush_axi ;
  wire \tx_inst/tx_pipeline_inst/reg_disable_trn ;
  wire \tx_inst/tx_pipeline_inst/reg_tvalid ;
  wire \tx_inst/tx_pipeline_inst/trn_in_packet ;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire \wrreqsetcnt_reg[2] ;
  wire wrreqsetsig;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_axi_enhanced_top axi_enhanced_top
       (.D(D),
        .E(trn_rdst_rdy),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0] (\FSM_sequential_data_width_64.wrreqsmsig_reg[0] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 (\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[1] (\FSM_sequential_data_width_64.wrreqsmsig_reg[1] ),
        .\FSM_sequential_data_width_64.wrreqsmsig_reg[2] (\FSM_sequential_data_width_64.wrreqsmsig_reg[2] ),
        .\FSM_sequential_state_reg[1] (axi_enhanced_top_n_514),
        .\IP2Bus_Data_reg[31] (\IP2Bus_Data_reg[31] ),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg_0),
        .IP2Bus_WrAck_reg(IP2Bus_WrAck_reg),
        .IP2Bus_WrAck_reg_0(IP2Bus_WrAck_reg_0),
        .Q(Q),
        .SR(SR),
        .almost_fullsig(almost_fullsig),
        .axi_in_packet(\tx_inst/tx_pipeline_inst/axi_in_packet ),
        .axi_in_packet_reg(axi_in_packet_i_1_n_0),
        .badreadreq(badreadreq),
        .blk_lnk_up_latch(blk_lnk_up_latch),
        .\block_is_ep.rd_wr_bar_pending_reg (axi_enhanced_top_n_315),
        .\block_is_ep.s_axi_ctl_bvalid_reg (axi_enhanced_top_n_44),
        .bridge_status_control(\cfg_inst/axi_enhanced_cfg_slave_inst/bridge_status_control ),
        .cc_in_packet_int(\tx_inst/tx_axi_port_mux/cc_in_packet_int ),
        .cc_in_packet_reg(axi_enhanced_top_n_31),
        .\cfg_bus_number_d_reg[1] (pcie_7x_i_n_47),
        .\cfg_bus_number_d_reg[2] (pcie_7x_i_n_48),
        .\cfg_bus_number_d_reg[7] ({\data_width_64.tlpcompleterid_reg[2][15] [7:3],\data_width_64.tlpcompleterid_reg[2][15] [0]}),
        .\cfg_device_number_d_reg[0] (pcie_7x_i_n_36),
        .\cfg_device_number_d_reg[1] (pcie_7x_i_n_43),
        .\cfg_device_number_d_reg[2] (pcie_7x_i_n_44),
        .\cfg_device_number_d_reg[3] (pcie_7x_i_n_45),
        .\cfg_device_number_d_reg[4] (pcie_7x_i_n_46),
        .cfg_mgmt_byte_en_n(axi_enhanced_top_n_365),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_rd_en(cfg_mgmt_rd_en),
        .cfg_mgmt_rd_en_n(axi_enhanced_top_n_368),
        .cfg_mgmt_rd_wr_done_n(cfg_mgmt_rd_wr_done_n),
        .cfg_mgmt_wr_readonly(cfg_mgmt_wr_readonly),
        .cfg_mgmt_wr_readonly_n(axi_enhanced_top_n_367),
        .cfg_mgmt_wr_rw1c_as_rw(cfg_mgmt_wr_rw1c_as_rw),
        .cfg_mgmt_wr_rw1c_as_rw_n(axi_enhanced_top_n_366),
        .cr_enable_reg(\rx_inst/m_axis_rx_tuser ),
        .cr_enable_reg_0(axi_enhanced_top_n_306),
        .cr_full_reg(axi_enhanced_top_n_26),
        .cw_enable_reg(axi_enhanced_top_n_308),
        .cw_enable_reg_0(axi_enhanced_top_n_358),
        .cw_enable_reg_1(axi_enhanced_top_n_359),
        .cw_enable_reg_2(cw_enable_i_1_n_0),
        .cw_full_reg(axi_enhanced_top_n_22),
        .\data_width_64.badreadreq_reg (\data_width_64.badreadreq_reg ),
        .\data_width_64.badreadreq_reg_0 (\data_width_64.badreadreq_reg_0 ),
        .\data_width_64.badreadreq_reg_1 (\data_width_64.badreadreq_reg_1 ),
        .\data_width_64.cplndtlpsmsig_reg[1] (\data_width_64.cplndtlpsmsig_reg[1] ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.dataen_reg_0 (\data_width_64.dataen_reg_0 ),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.dataoffset_reg (\data_width_64.dataoffset_reg ),
        .\data_width_64.dataoffset_reg_0 (\data_width_64.dataoffset_reg_0 ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.lastdwbesig_reg[0] (\data_width_64.lastdwbesig_reg[0] ),
        .\data_width_64.lastdwbesig_reg[0]_0 (\data_width_64.lastdwbesig_reg[0]_0 ),
        .\data_width_64.lnkdowndataflush_reg (\data_width_64.lnkdowndataflush_reg ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31] (\data_width_64.m_axis_cc_tdata_h_reg[31] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[31]_0 (\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ),
        .\data_width_64.m_axis_cc_tlast_d_reg (\data_width_64.m_axis_cc_tlast_d_reg ),
        .\data_width_64.m_axis_cc_tlast_d_reg_0 (cc_in_packet_int_i_1_n_0),
        .\data_width_64.m_axis_cc_tvalid_d_reg (\data_width_64.m_axis_cc_tvalid_d_reg ),
        .\data_width_64.m_axis_cc_tvalid_nd_reg (\data_width_64.m_axis_cc_tvalid_nd_reg ),
        .\data_width_64.master_int_reg (\data_width_64.master_int_reg ),
        .\data_width_64.master_int_reg_0 (\data_width_64.master_int_reg_0 ),
        .\data_width_64.rdndreqpipelinedecr_reg (\data_width_64.rdndreqpipelinedecr_reg ),
        .\data_width_64.rdndtlpaddrlow_reg[0] (\data_width_64.rdndtlpaddrlow_reg[0] ),
        .\data_width_64.rdndtlpaddrlow_reg[6] (\data_width_64.rdndtlpaddrlow_reg[6] ),
        .\data_width_64.rdreqpipelinedecr_reg (\data_width_64.rdreqpipelinedecr_reg ),
        .\data_width_64.rdreqpipelineincr_reg (\data_width_64.rdreqpipelineincr_reg ),
        .\data_width_64.rdreqsmsig_reg[0] (\data_width_64.rdreqsmsig_reg[0] ),
        .\data_width_64.rdreqsmsig_reg[0]_0 (\data_width_64.rdreqsmsig_reg[0]_0 ),
        .\data_width_64.rdreqsmsig_reg[2] (\data_width_64.rdreqsmsig_reg[2] ),
        .\data_width_64.requesteridsig_reg[15] (\data_width_64.requesteridsig_reg[15] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.s_axis_cr_tusersig_reg[3][2] (\data_width_64.s_axis_cr_tusersig_reg[3][2] ),
        .\data_width_64.s_axis_cw_tdatatemp_reg[31] (\data_width_64.s_axis_cw_tdatatemp_reg[31] ),
        .\data_width_64.s_axis_cw_tlasttemp_reg (\data_width_64.s_axis_cw_tlasttemp_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg (\data_width_64.s_axis_cw_treadysig_reg ),
        .\data_width_64.s_axis_cw_treadysig_reg_0 (\data_width_64.s_axis_cw_treadysig_reg_0 ),
        .\data_width_64.tagsig_reg[0] (\data_width_64.tagsig_reg[0] ),
        .\data_width_64.tempdatareg_reg[0] (\data_width_64.tempdatareg_reg[0] ),
        .\data_width_64.tlpaddrl_reg[22] (\data_width_64.tlpaddrl_reg[22] ),
        .\data_width_64.tlpaddrlow_reg[22] (\data_width_64.tlpaddrlow_reg[22] ),
        .\data_width_64.tlpbytecount_reg[0][0] (\data_width_64.tlpbytecount_reg[0][0] ),
        .\data_width_64.tlplengthcntr_reg[0] (\data_width_64.tlplengthcntr_reg[0] ),
        .\data_width_64.tlplengthsig_reg[0] (\data_width_64.tlplengthsig_reg[0] ),
        .\data_width_64.tlprequesterid_reg[2][0] (\data_width_64.tlprequesterid_reg[2][0] ),
        .\data_width_64.tlprequesterid_reg[2][10] (\data_width_64.tlprequesterid_reg[2][10] ),
        .\data_width_64.tlprequesterid_reg[2][11] (\data_width_64.tlprequesterid_reg[2][11] ),
        .\data_width_64.tlprequesterid_reg[2][12] (\data_width_64.tlprequesterid_reg[2][12] ),
        .\data_width_64.tlprequesterid_reg[2][13] (\data_width_64.tlprequesterid_reg[2][13] ),
        .\data_width_64.tlprequesterid_reg[2][15] (\data_width_64.tlprequesterid_reg[2][15] ),
        .\data_width_64.tlprequesterid_reg[2][1] (\data_width_64.tlprequesterid_reg[2][1] ),
        .\data_width_64.tlprequesterid_reg[2][2] (\data_width_64.tlprequesterid_reg[2][2] ),
        .\data_width_64.tlprequesterid_reg[2][3] (\data_width_64.tlprequesterid_reg[2][3] ),
        .\data_width_64.tlprequesterid_reg[2][7] (\data_width_64.tlprequesterid_reg[2][7] ),
        .\data_width_64.tlprequesterid_reg[2][8] (\data_width_64.tlprequesterid_reg[2][8] ),
        .\data_width_64.tlprequesterid_reg[2][9] (\data_width_64.tlprequesterid_reg[2][9] ),
        .\data_width_64.tlptag_reg[2][2] (\data_width_64.tlptag_reg[2][2] ),
        .\data_width_64.tlptag_reg[2][3] (\data_width_64.tlptag_reg[2][3] ),
        .\data_width_64.tlptag_reg[2][6] (\data_width_64.tlptag_reg[2][6] ),
        .\data_width_64.tlptag_reg[2][7] (\data_width_64.tlptag_reg[2][7] ),
        .\data_width_64.wrreqpendsig_reg[0] (\data_width_64.wrreqpendsig_reg[0] ),
        .\data_width_64.zerolenreadreq_reg (\data_width_64.zerolenreadreq_reg ),
        .delaylast40_out(delaylast40_out),
        .empty_fwft_i_reg(empty_fwft_i_reg),
        .\end_point.axi_lite_intf_busy_reg (\end_point.axi_lite_intf_busy_i_1_n_0 ),
        .\end_point.cfg_mgmt_wr_readonly_o_reg (\end_point.cfg_mgmt_wr_readonly_o_i_1_n_0 ),
        .\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg (axi_enhanced_top_n_331),
        .\end_point.cfg_mgmt_wr_rw1c_as_rw_o_reg_0 (\end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_1_n_0 ),
        .\end_point.fifo_rd_ptr_reg[0] (\end_point.fifo_rd_ptr_reg[0] ),
        .\end_point.global_intr_disable_reg (axi_enhanced_top_n_333),
        .\end_point.global_intr_disable_reg_0 (axi_enhanced_top_n_345),
        .\end_point.global_intr_disable_reg_1 (\end_point.global_intr_disable_i_1_n_0 ),
        .\end_point.interrupt_mask_reg[22] (axi_enhanced_top_n_328),
        .\end_point.pl_directed_link_auton_reg (axi_enhanced_top_n_332),
        .\end_point.psr_reg[2] (\end_point.psr_reg[2] ),
        .\end_point.psr_reg[2]_0 (\end_point.psr_reg[2]_0 ),
        .\end_point.psr_reg[2]_1 (\end_point.psr_reg[2]_1 ),
        .\end_point.ready_is_given_reg (\end_point.ready_is_given_i_1_n_0 ),
        .\end_point.ready_is_given_reg_0 (\end_point.s_axi_ctl_awready_i_2_n_0 ),
        .\end_point.request_type_reg (\end_point.request_type_i_1_n_0 ),
        .\end_point.request_type_reg_0 (\end_point.s_axi_ctl_rvalid_i_1_n_0 ),
        .\end_point.request_type_reg_1 (\end_point.s_axi_ctl_bvalid_i_1_n_0 ),
        .\end_point.s_axi_ctl_arready_reg (axi_enhanced_top_n_324),
        .\end_point.s_axi_ctl_arready_reg_0 (axi_enhanced_top_n_325),
        .\end_point.s_axi_ctl_arready_reg_1 (\end_point.s_axi_ctl_arready_i_1_n_0 ),
        .\end_point.s_axi_ctl_arvalid_blk_bridge_reg (\end_point.rd_wr_bar_pending_i_1_n_0 ),
        .\end_point.s_axi_ctl_awready_reg (axi_enhanced_top_n_323),
        .\end_point.s_axi_ctl_awready_reg_0 (axi_enhanced_top_n_348),
        .\end_point.s_axi_ctl_awready_reg_1 (axi_enhanced_top_n_362),
        .\end_point.s_axi_ctl_awvalid_ev_hndlr_reg (\block_is_ep.request_in_progress_i_1_n_0 ),
        .\end_point.s_axi_ctl_bvalid_reg (axi_enhanced_top_n_322),
        .\end_point.s_axi_ctl_bvalid_reg_0 (axi_enhanced_top_n_329),
        .\end_point.s_axi_ctl_bvalid_reg_1 (axi_enhanced_top_n_330),
        .\end_point.s_axi_ctl_rdata_reg[0] (axi_enhanced_top_n_343),
        .\end_point.s_axi_ctl_rdata_reg[11] (axi_enhanced_top_n_337),
        .\end_point.s_axi_ctl_rdata_reg[1] (axi_enhanced_top_n_335),
        .\end_point.s_axi_ctl_rdata_reg[3] (axi_enhanced_top_n_336),
        .\end_point.s_axi_ctl_rdata_reg[3]_0 (axi_enhanced_top_n_342),
        .\end_point.s_axi_ctl_rdata_reg[3]_1 (axi_enhanced_top_n_363),
        .\end_point.s_axi_ctl_rvalid_reg (axi_enhanced_top_n_321),
        .\end_point.s_axi_ctl_rvalid_reg_0 (axi_enhanced_top_n_326),
        .\end_point.s_axi_ctl_rvalid_reg_1 (axi_enhanced_top_n_327),
        .\end_point.state_reg[0] (axi_enhanced_top_n_320),
        .\end_point.state_reg[0]_0 (axi_enhanced_top_n_361),
        .\end_point.state_reg[1] (axi_enhanced_top_n_318),
        .\end_point.state_reg[1]_0 (\end_point.wait_for_idle_i_1_n_0 ),
        .\end_point.state_reg[2] (axi_enhanced_top_n_32),
        .\end_point.state_reg[2]_0 (axi_enhanced_top_n_319),
        .\end_point.state_reg[2]_1 (axi_enhanced_top_n_334),
        .\end_point.wait_for_idle_reg (axi_enhanced_top_n_316),
        .\end_point.wait_for_idle_reg_0 (axi_enhanced_top_n_317),
        .\end_point.wait_for_idle_reg_1 (axi_enhanced_top_n_344),
        .\end_point.wait_for_idle_reg_2 (axi_enhanced_top_n_346),
        .eqOp(eqOp),
        .eqOp56_in(eqOp56_in),
        .flush_axi(\tx_inst/tx_pipeline_inst/flush_axi ),
        .flush_axis_tlp(\tx_inst/flush_axis_tlp ),
        .flush_axis_tlp2(\tx_inst/tx_axi_port_mux/flush_axis_tlp2 ),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (pl_directed_link_width),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 ({trn_td[31:0],trn_td[63:32]}),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_1 (cfg_mgmt_dwaddr),
        .\goreg_bm.dout_i_reg[63] (\goreg_bm.dout_i_reg[63] ),
        .interrupt_out(interrupt_out),
        .m_axis_cc_tdata1(m_axis_cc_tdata1),
        .m_axis_cc_tvalid_d50_out(m_axis_cc_tvalid_d50_out),
        .m_axis_cr_tlast_reg(m_axis_cr_tlast_reg),
        .\m_axis_cw_tuser_reg[2] (\m_axis_cw_tuser_reg[2] ),
        .m_axis_rx_tvalid(\rx_inst/m_axis_rx_tvalid ),
        .m_axis_rx_tvalid_reg(rc_full_i_1_n_0),
        .m_axis_rx_tvalid_reg_0(rc_empty_i_1_n_0),
        .m_axis_rx_tvalid_reg_1(cr_enable_i_1_n_0),
        .neqOp7_in(neqOp7_in),
        .\np_ok_mode.pipe_latency_cntr_reg[2] (\np_ok_mode.pipe_latency_cntr_reg[2] ),
        .\np_ok_mode.rx_np_okSM_reg[0] (\np_ok_mode.rx_np_okSM_reg[0] ),
        .\np_ok_mode.rx_np_okSM_reg[0]_0 (\np_ok_mode.rx_np_okSM_reg[0]_0 ),
        .\np_ok_mode.rx_np_okSM_reg[0]_1 (\np_ok_mode.rx_np_okSM_reg[0]_1 ),
        .\np_ok_mode.rx_np_okSM_reg[1] (\np_ok_mode.rx_np_okSM_reg[1] ),
        .\np_ok_mode.rx_np_okSM_reg[1]_0 (\np_ok_mode.rx_np_okSM_reg[1]_0 ),
        .\np_ok_mode.rx_np_ok_int_reg (\np_ok_mode.rx_np_ok_int_reg ),
        .\np_ok_mode.rx_np_ok_int_reg_0 (\np_ok_mode.rx_np_ok_int_reg_0 ),
        .null_mux_sel(\rx_inst/rx_pipeline_inst/null_mux_sel ),
        .null_mux_sel_reg(reg_dsc_detect_i_1_n_0),
        .out(out),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in_1(p_0_in1_in_1),
        .p_1_in(p_1_in),
        .p_1_in2_in(p_1_in2_in),
        .p_1_out(p_1_out),
        .p_6_in(p_6_in),
        .p_7_in(\rx_inst/rx_pipeline_inst/p_7_in ),
        .padzeroes11_out(padzeroes11_out),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (pcie_7x_i_n_49),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_link_upcfg_cap(pcie_7x_i_n_77),
        .pl_ltssm_state(pl_ltssm_state[5]),
        .pl_received_hot_rst(pcie_7x_i_n_78),
        .pl_sel_lnk_rate(pcie_7x_i_n_50),
        .pl_sel_lnk_width({pcie_7x_i_n_181,pcie_7x_i_n_182}),
        .rc_enable24_out(\rx_inst/rx_demux_inst/rc_enable24_out ),
        .rc_enable_reg(rc_enable_i_1_n_0),
        .rc_full(\rx_inst/rx_demux_inst/rc_full ),
        .rc_full_reg(axi_enhanced_top_n_24),
        .rc_full_reg_0(axi_enhanced_top_n_25),
        .ready_is_given(\cfg_inst/axi_enhanced_cfg_slave_inst/ready_is_given ),
        .reg_disable_trn(\tx_inst/tx_pipeline_inst/reg_disable_trn ),
        .reg_dsc_detect(\rx_inst/rx_pipeline_inst/reg_dsc_detect ),
        .reg_tready_reg(axi_enhanced_top_n_310),
        .reg_tvalid(\tx_inst/tx_pipeline_inst/reg_tvalid ),
        .request_completed(request_completed),
        .request_type(\cfg_inst/axi_enhanced_cfg_slave_inst/request_type ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .rsrc_rdy_filtered(\rx_inst/rx_pipeline_inst/rsrc_rdy_filtered ),
        .rx_np_okSM(rx_np_okSM),
        .rx_np_ok_cntr(rx_np_ok_cntr),
        .s_axi_ctl_araddr(s_axi_ctl_araddr),
        .s_axi_ctl_arready(s_axi_ctl_arready),
        .s_axi_ctl_arready_blk_bridge(\cfg_inst/s_axi_ctl_arready_blk_bridge ),
        .s_axi_ctl_arvalid(s_axi_ctl_arvalid),
        .s_axi_ctl_arvalid_blk_bridge(\cfg_inst/s_axi_ctl_arvalid_blk_bridge ),
        .s_axi_ctl_arvalid_ev_hndlr(\cfg_inst/s_axi_ctl_arvalid_ev_hndlr ),
        .s_axi_ctl_awaddr(s_axi_ctl_awaddr),
        .s_axi_ctl_awvalid(s_axi_ctl_awvalid),
        .s_axi_ctl_awvalid_ev_hndlr(\cfg_inst/s_axi_ctl_awvalid_ev_hndlr ),
        .s_axi_ctl_bready(s_axi_ctl_bready),
        .s_axi_ctl_bvalid(s_axi_ctl_bvalid),
        .s_axi_ctl_rdata(s_axi_ctl_rdata),
        .s_axi_ctl_rready(s_axi_ctl_rready),
        .s_axi_ctl_rvalid(s_axi_ctl_rvalid),
        .s_axi_ctl_wdata(s_axi_ctl_wdata),
        .s_axi_ctl_wready(s_axi_ctl_wready),
        .s_axi_ctl_wstrb(s_axi_ctl_wstrb),
        .s_axi_ctl_wvalid(s_axi_ctl_wvalid),
        .s_axis_cr_tready_sig106_out(s_axis_cr_tready_sig106_out),
        .s_axis_cw_treadysig34_out(s_axis_cw_treadysig34_out),
        .s_axis_cw_treadysig45_out(s_axis_cw_treadysig45_out),
        .\s_axis_cw_tusersig_reg[2] (\s_axis_cw_tusersig_reg[2] ),
        .s_axis_tx_tlast(\tx_inst/s_axis_tx_tlast ),
        .s_axis_tx_tvalid(\tx_inst/s_axis_tx_tvalid ),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .\sig_bus2ip_ce_reg_reg[3] (\sig_bus2ip_ce_reg_reg[3] ),
        .\sig_bus2ip_ce_reg_reg[3]_0 (\sig_bus2ip_ce_reg_reg[3]_0 ),
        .\sig_bus2ip_ce_reg_reg[3]_1 (\sig_bus2ip_ce_reg_reg[3]_1 ),
        .sig_m_axis_cc_tlast(sig_m_axis_cc_tlast),
        .sig_m_axis_cc_tready(sig_m_axis_cc_tready),
        .sig_m_axis_cc_tvalid(sig_m_axis_cc_tvalid),
        .\sig_register_bar_array_reg[1][31] (\sig_register_bar_array_reg[1][31] ),
        .sig_s_axis_cr_tready(sig_s_axis_cr_tready),
        .sig_s_axis_cr_tvalid(sig_s_axis_cr_tvalid),
        .sig_s_axis_cw_tvalid(sig_s_axis_cw_tvalid),
        .state174_out(\rx_inst/rx_demux_inst/state174_out ),
        .sys_rst_n_int(sys_rst_n_int),
        .sys_rst_n_int_reg(pcie_7x_i_n_64),
        .tlpfmtsig(tlpfmtsig),
        .tlprequesterid(tlprequesterid),
        .treadydataenadjustsig(treadydataenadjustsig),
        .trn_in_packet(\rx_inst/rx_pipeline_inst/trn_in_packet ),
        .trn_in_packet_0(\tx_inst/tx_pipeline_inst/trn_in_packet ),
        .trn_in_packet_reg(trn_in_packet_i_1_n_0),
        .trn_in_packet_reg_0(trn_in_packet_i_1__0_n_0),
        .trn_rbar_hit({trn_rbar_hit[4],trn_rbar_hit[2:0]}),
        .trn_rd(trn_rd),
        .trn_recrc_err(trn_recrc_err),
        .trn_reof(trn_reof),
        .trn_rnp_ok(trn_rnp_ok),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(\rx_inst/rx_pipeline_inst/trn_rsrc_dsc_d ),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem(trn_trem),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy),
        .\tstrb_prev_reg[7] (\tstrb_prev_reg[7] ),
        .user_lnk_up_mux_reg(user_lnk_up_mux_reg),
        .user_lnk_up_mux_reg_0(flush_axi_i_1_n_0),
        .user_lnk_up_mux_reg_1(cc_in_packet_i_1_n_0),
        .user_lnk_up_mux_reg_2(user_lnk_up_mux_reg_0),
        .wait_for_idle(\cfg_inst/axi_enhanced_cfg_slave_inst/wait_for_idle ),
        .\wrreqsetcnt_reg[2] (\wrreqsetcnt_reg[2] ),
        .wrreqsetsig(wrreqsetsig));
  LUT5 #(
    .INIT(32'h0222FEEE)) 
    axi_in_packet_i_1
       (.I0(\tx_inst/tx_pipeline_inst/axi_in_packet ),
        .I1(\tx_inst/flush_axis_tlp ),
        .I2(\tstrb_prev_reg[7] ),
        .I3(\tx_inst/s_axis_tx_tvalid ),
        .I4(\tx_inst/s_axis_tx_tlast ),
        .O(axi_in_packet_i_1_n_0));
  LUT4 #(
    .INIT(16'h00FE)) 
    \block_is_ep.request_in_progress_i_1 
       (.I0(\cfg_inst/s_axi_ctl_awvalid_ev_hndlr ),
        .I1(axi_enhanced_top_n_44),
        .I2(\cfg_inst/s_axi_ctl_arvalid_ev_hndlr ),
        .I3(axi_enhanced_top_n_315),
        .O(\block_is_ep.request_in_progress_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0C000CCC08000888)) 
    cc_in_packet_i_1
       (.I0(sig_m_axis_cc_tvalid),
        .I1(user_lnk_up_mux_reg),
        .I2(\data_width_64.m_axis_cc_tlast_nd_reg ),
        .I3(m_axis_cc_tdata1),
        .I4(\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .I5(axi_enhanced_top_n_31),
        .O(cc_in_packet_i_1_n_0));
  LUT5 #(
    .INIT(32'hFF1DFF00)) 
    cc_in_packet_int_i_1
       (.I0(\data_width_64.m_axis_cc_tlast_d_reg_0 ),
        .I1(m_axis_cc_tdata1),
        .I2(\data_width_64.m_axis_cc_tlast_nd_reg ),
        .I3(\tx_inst/tx_axi_port_mux/flush_axis_tlp2 ),
        .I4(\tx_inst/tx_axi_port_mux/cc_in_packet_int ),
        .O(cc_in_packet_int_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \cfg_bus_number_d[7]_i_1 
       (.I0(user_lnk_up_mux_reg),
        .O(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_152),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [0]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_151),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [1]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_150),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [2]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_149),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [3]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_148),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [4]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_147),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [5]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_146),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [6]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_bus_number_d_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_145),
        .Q(\data_width_64.tlpcompleterid_reg[2][15] [7]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_device_number_d_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_157),
        .Q(\data_width_64.tlpcompleterid_reg[2][7] [0]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_device_number_d_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_156),
        .Q(\data_width_64.tlpcompleterid_reg[2][7] [1]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_device_number_d_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_155),
        .Q(\data_width_64.tlpcompleterid_reg[2][7] [2]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_device_number_d_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_154),
        .Q(\data_width_64.tlpcompleterid_reg[2][7] [3]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_device_number_d_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_153),
        .Q(\data_width_64.tlpcompleterid_reg[2][7] [4]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_function_number_d_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_160),
        .Q(\data_width_64.tlpcompleterid_reg[2][2] [0]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_function_number_d_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_159),
        .Q(\data_width_64.tlpcompleterid_reg[2][2] [1]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  FDRE \cfg_function_number_d_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(pcie_7x_i_n_65),
        .D(pcie_7x_i_n_158),
        .Q(\data_width_64.tlpcompleterid_reg[2][2] [2]),
        .R(\comp_axi_pcie_mm_s/comp_AXI_MM_S_MasterBridge/comp_axi_mm_s_masterbridge_rd/comp_axi_mm_masterbridge_rd/rdaddrsmsig38_in ));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    cr_enable_i_1
       (.I0(axi_enhanced_top_n_306),
        .I1(\rx_inst/m_axis_rx_tvalid ),
        .I2(\rx_inst/m_axis_rx_tuser ),
        .I3(axi_enhanced_top_n_514),
        .I4(axi_enhanced_top_n_358),
        .I5(axi_enhanced_top_n_26),
        .O(cr_enable_i_1_n_0));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    cw_enable_i_1
       (.I0(axi_enhanced_top_n_308),
        .I1(\rx_inst/rx_demux_inst/state174_out ),
        .I2(axi_enhanced_top_n_359),
        .I3(axi_enhanced_top_n_514),
        .I4(axi_enhanced_top_n_358),
        .I5(axi_enhanced_top_n_22),
        .O(cw_enable_i_1_n_0));
  LUT5 #(
    .INIT(32'h0000FFEA)) 
    \end_point.axi_lite_intf_busy_i_1 
       (.I0(s_axi_ctl_arvalid),
        .I1(s_axi_ctl_wvalid),
        .I2(s_axi_ctl_awvalid),
        .I3(axi_enhanced_top_n_32),
        .I4(axi_enhanced_top_n_361),
        .O(\end_point.axi_lite_intf_busy_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \end_point.cfg_mgmt_wr_readonly_o_i_1 
       (.I0(s_axi_ctl_wdata[17]),
        .I1(axi_enhanced_top_n_331),
        .I2(cfg_mgmt_wr_readonly),
        .O(\end_point.cfg_mgmt_wr_readonly_o_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_1 
       (.I0(s_axi_ctl_wdata[16]),
        .I1(axi_enhanced_top_n_331),
        .I2(cfg_mgmt_wr_rw1c_as_rw),
        .O(\end_point.cfg_mgmt_wr_rw1c_as_rw_o_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEFFF00002000)) 
    \end_point.global_intr_disable_i_1 
       (.I0(s_axi_ctl_wdata[8]),
        .I1(axi_enhanced_top_n_345),
        .I2(axi_enhanced_top_n_328),
        .I3(axi_enhanced_top_n_332),
        .I4(axi_enhanced_top_n_333),
        .I5(\cfg_inst/axi_enhanced_cfg_slave_inst/bridge_status_control ),
        .O(\end_point.global_intr_disable_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \end_point.rd_wr_bar_pending_i_1 
       (.I0(\cfg_inst/s_axi_ctl_arvalid_blk_bridge ),
        .I1(\cfg_inst/s_axi_ctl_arready_blk_bridge ),
        .I2(cfg_mgmt_rd_wr_done_n),
        .I3(cfg_mgmt_rd_en),
        .O(\end_point.rd_wr_bar_pending_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hCB28)) 
    \end_point.ready_is_given_i_1 
       (.I0(\cfg_inst/axi_enhanced_cfg_slave_inst/ready_is_given ),
        .I1(axi_enhanced_top_n_320),
        .I2(axi_enhanced_top_n_319),
        .I3(axi_enhanced_top_n_318),
        .O(\end_point.ready_is_given_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF000F00000008800)) 
    \end_point.request_type_i_1 
       (.I0(s_axi_ctl_wvalid),
        .I1(s_axi_ctl_awvalid),
        .I2(\cfg_inst/axi_enhanced_cfg_slave_inst/request_type ),
        .I3(sys_rst_n_int),
        .I4(s_axi_ctl_arvalid),
        .I5(axi_enhanced_top_n_32),
        .O(\end_point.request_type_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000545500005555)) 
    \end_point.s_axi_ctl_arready_i_1 
       (.I0(axi_enhanced_top_n_324),
        .I1(axi_enhanced_top_n_325),
        .I2(s_axi_ctl_arready),
        .I3(axi_enhanced_top_n_318),
        .I4(\cfg_inst/axi_enhanced_cfg_slave_inst/request_type ),
        .I5(\cfg_inst/axi_enhanced_cfg_slave_inst/ready_is_given ),
        .O(\end_point.s_axi_ctl_arready_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h22222022)) 
    \end_point.s_axi_ctl_awready_i_2 
       (.I0(axi_enhanced_top_n_348),
        .I1(axi_enhanced_top_n_362),
        .I2(axi_enhanced_top_n_323),
        .I3(\cfg_inst/axi_enhanced_cfg_slave_inst/ready_is_given ),
        .I4(s_axi_ctl_wready),
        .O(\end_point.s_axi_ctl_awready_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000808080000FF00)) 
    \end_point.s_axi_ctl_bvalid_i_1 
       (.I0(axi_enhanced_top_n_329),
        .I1(\cfg_inst/axi_enhanced_cfg_slave_inst/request_type ),
        .I2(axi_enhanced_top_n_330),
        .I3(s_axi_ctl_bvalid),
        .I4(s_axi_ctl_bready),
        .I5(axi_enhanced_top_n_322),
        .O(\end_point.s_axi_ctl_bvalid_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000808080000FF00)) 
    \end_point.s_axi_ctl_rvalid_i_1 
       (.I0(axi_enhanced_top_n_326),
        .I1(axi_enhanced_top_n_327),
        .I2(\cfg_inst/axi_enhanced_cfg_slave_inst/request_type ),
        .I3(s_axi_ctl_rvalid),
        .I4(s_axi_ctl_rready),
        .I5(axi_enhanced_top_n_321),
        .O(\end_point.s_axi_ctl_rvalid_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8FFFFBBB80000)) 
    \end_point.wait_for_idle_i_1 
       (.I0(axi_enhanced_top_n_346),
        .I1(axi_enhanced_top_n_318),
        .I2(axi_enhanced_top_n_317),
        .I3(axi_enhanced_top_n_344),
        .I4(axi_enhanced_top_n_316),
        .I5(\cfg_inst/axi_enhanced_cfg_slave_inst/wait_for_idle ),
        .O(\end_point.wait_for_idle_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h5510)) 
    flush_axi_i_1
       (.I0(axi_enhanced_top_n_310),
        .I1(user_lnk_up_mux_reg),
        .I2(\tx_inst/tx_pipeline_inst/axi_in_packet ),
        .I3(\tx_inst/tx_pipeline_inst/flush_axi ),
        .O(flush_axi_i_1_n_0));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_7x pcie_7x_i
       (.CLK(CLK),
        .E(pcie_7x_i_n_65),
        .INTX_MSI_Grant(INTX_MSI_Grant),
        .INTX_MSI_Request(INTX_MSI_Request),
        .INTX_state(INTX_state),
        .INTX_state_reg(INTX_state_reg),
        .INTX_state_reg_0(INTX_state_reg_0),
        .MSI_Vector_Width(MSI_Vector_Width),
        .O(O),
        .Q(pipe_rx0_data),
        .R(R),
        .axi_aresetn(axi_aresetn),
        .\cfg_bus_number_d_reg[2] (\data_width_64.tlpcompleterid_reg[2][15] [2:1]),
        .cfg_dev_control_max_payload(cfg_dev_control_max_payload),
        .\cfg_device_number_d_reg[4] (\data_width_64.tlpcompleterid_reg[2][7] ),
        .cfg_interrupt_di(cfg_interrupt_di),
        .cfg_interrupt_msienable(cfg_interrupt_msienable),
        .cfg_mgmt_byte_en_n(axi_enhanced_top_n_365),
        .cfg_mgmt_do(cfg_mgmt_do),
        .cfg_mgmt_dwaddr(cfg_mgmt_dwaddr),
        .cfg_mgmt_rd_en_n(axi_enhanced_top_n_368),
        .cfg_mgmt_rd_wr_done_n(cfg_mgmt_rd_wr_done_n),
        .cfg_mgmt_wr_readonly_n(axi_enhanced_top_n_367),
        .cfg_mgmt_wr_rw1c_as_rw_n(axi_enhanced_top_n_366),
        .cfg_msg_data({pcie_7x_i_n_145,pcie_7x_i_n_146,pcie_7x_i_n_147,pcie_7x_i_n_148,pcie_7x_i_n_149,pcie_7x_i_n_150,pcie_7x_i_n_151,pcie_7x_i_n_152,pcie_7x_i_n_153,pcie_7x_i_n_154,pcie_7x_i_n_155,pcie_7x_i_n_156,pcie_7x_i_n_157,pcie_7x_i_n_158,pcie_7x_i_n_159,pcie_7x_i_n_160}),
        .cpldsplitcount0_out(cpldsplitcount0_out),
        .\cpldsplitsm_reg[1] (\cpldsplitsm_reg[1] ),
        .\ctargetpipeline_reg[1] (\ctargetpipeline_reg[1] ),
        .\ctargetpipeline_reg[1]_0 (\ctargetpipeline_reg[1]_0 ),
        .\ctargetpipeline_reg[1]_1 (\ctargetpipeline_reg[1]_1 ),
        .\ctargetpipeline_reg[1]_2 (\ctargetpipeline_reg[1]_2 ),
        .\ctargetpipeline_reg[1]_3 (\ctargetpipeline_reg[1]_3 ),
        .\ctargetpipeline_reg[1]_4 (\ctargetpipeline_reg[1]_4 ),
        .\ctargetpipeline_reg[1]_5 (\ctargetpipeline_reg[1]_5 ),
        .\ctlpbytecount_reg[1,0][11] (\ctlpbytecount_reg[1,0][11] ),
        .\ctlplength[0,1] (\ctlplength[0,1] ),
        .\ctlplength[0,2] (\ctlplength[0,2] ),
        .\ctlplength[0,3] (\ctlplength[0,3] ),
        .\ctlplength_reg[1,3][8] (\ctlplength_reg[1,3][8] ),
        .\ctlplength_reg[2,0][0] (\ctlplength_reg[2,0][0] ),
        .\ctlplength_reg[2,0][9] (\ctlplength_reg[2,0][9] ),
        .\ctlplength_reg[2,1][9] (\ctlplength_reg[2,1][9] ),
        .\ctlplength_reg[2,2][9] (\ctlplength_reg[2,2][9] ),
        .\ctlplength_reg[2,3][9] (\ctlplength_reg[2,3][9] ),
        .\data_width_64.tlplength_reg[3][4] (\data_width_64.tlplength_reg[3][4] ),
        .\data_width_64.tlplength_reg[3][6] (\data_width_64.tlplength_reg[3][6] ),
        .\data_width_64.tlplength_reg[3][6]_0 (\data_width_64.tlplength_reg[3][6]_0 ),
        .\data_width_64.tlplength_reg[3][6]_1 (\data_width_64.tlplength_reg[3][6]_1 ),
        .\data_width_64.tlplength_reg[3][7] (\data_width_64.tlplength_reg[3][7] ),
        .\data_width_64.tlplength_reg[3][7]_0 (\data_width_64.tlplength_reg[3][7]_0 ),
        .\data_width_64.tlplength_reg[3][7]_1 (\data_width_64.tlplength_reg[3][7]_1 ),
        .\data_width_64.tlplength_reg[3][7]_2 (\data_width_64.tlplength_reg[3][7]_2 ),
        .\end_point.interrupt_decode_reg[0] (axi_enhanced_top_n_343),
        .\end_point.interrupt_decode_reg[3] (axi_enhanced_top_n_336),
        .\end_point.pl_directed_link_change_d_reg[1] (pcie_7x_i_n_64),
        .\end_point.s_axi_ctl_rdata_reg[0] (pcie_7x_i_n_49),
        .\end_point.s_axi_ctl_rdata_reg[10] (pcie_7x_i_n_48),
        .\end_point.s_axi_ctl_rdata_reg[3] (pcie_7x_i_n_36),
        .\end_point.s_axi_ctl_rdata_reg[4] (pcie_7x_i_n_43),
        .\end_point.s_axi_ctl_rdata_reg[5] (pcie_7x_i_n_44),
        .\end_point.s_axi_ctl_rdata_reg[6] (pcie_7x_i_n_45),
        .\end_point.s_axi_ctl_rdata_reg[7] (pcie_7x_i_n_46),
        .\end_point.s_axi_ctl_rdata_reg[9] (pcie_7x_i_n_47),
        .\end_point.state_reg[1] (axi_enhanced_top_n_337),
        .intx_msi_request_2d(intx_msi_request_2d),
        .intx_msi_request_3d(intx_msi_request_3d),
        .legint_msiSM_reg(legint_msiSM_reg),
        .legint_msiSM_reg_0(legint_msiSM_reg_0),
        .\length_offset_reg[10] (\length_offset_reg[10] ),
        .\length_offset_reg[10]_0 (\length_offset_reg[10]_0 ),
        .\length_offset_reg[10]_1 (\length_offset_reg[10]_1 ),
        .\length_offset_reg[11] (\length_offset_reg[11] ),
        .\length_offset_reg[11]_0 (\length_offset_reg[11]_0 ),
        .\length_offset_reg[11]_1 (\length_offset_reg[11]_1 ),
        .\length_offset_reg[11]_2 (\length_offset_reg[11]_2 ),
        .\length_offset_reg[6] (\length_offset_reg[6] ),
        .\length_offset_reg[8] (\length_offset_reg[8] ),
        .\msi_vector_num_2d_reg[4] (\msi_vector_num_2d_reg[4] ),
        .neqOp_0(neqOp_0),
        .p_0_in1_in(p_0_in1_in),
        .p_3_in(p_3_in),
        .p_7_in(\rx_inst/rx_pipeline_inst/p_7_in ),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_valid(pipe_rx0_valid),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_3 ),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 (\pipe_stages_1.pipe_rx_chanisaligned_q_reg_4 ),
        .\pipe_stages_1.pipe_rx_char_is_k_q_reg[1] (pipe_rx0_char_is_k),
        .\pipe_stages_1.pipe_rx_status_q_reg[2] (pipe_rx0_status),
        .pipe_tx0_char_is_k(pipe_tx0_char_is_k),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_data(pipe_tx0_data),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx0_powerdown(pipe_tx0_powerdown),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_margin(pipe_tx_margin),
        .pipe_tx_rate(pipe_tx_rate),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pl_directed_link_auton(pl_directed_link_auton),
        .pl_directed_link_change(pl_directed_link_change),
        .pl_directed_link_speed(pl_directed_link_speed),
        .pl_directed_link_width(pl_directed_link_width),
        .pl_link_upcfg_cap(pcie_7x_i_n_77),
        .pl_ltssm_state(pl_ltssm_state),
        .pl_received_hot_rst(pcie_7x_i_n_78),
        .pl_sel_lnk_rate(pcie_7x_i_n_50),
        .pl_sel_lnk_width({pcie_7x_i_n_181,pcie_7x_i_n_182}),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .rsrc_rdy_filtered(\rx_inst/rx_pipeline_inst/rsrc_rdy_filtered ),
        .s_axi_ctl_araddr(s_axi_ctl_araddr[6:2]),
        .\s_axi_ctl_araddr[0]_0 (axi_enhanced_top_n_334),
        .\s_axi_ctl_araddr[5] (axi_enhanced_top_n_342),
        .\s_axi_ctl_araddr_0__s_port_] (axi_enhanced_top_n_335),
        .\s_axi_ctl_araddr_3__s_port_] (axi_enhanced_top_n_363),
        .sig_blk_interrupt(sig_blk_interrupt),
        .sig_blk_interrupt_assert(sig_blk_interrupt_assert),
        .sig_blk_interrupt_assert_reg(sig_blk_interrupt_assert_reg),
        .\sig_blk_interrupt_di_reg[0] (\sig_blk_interrupt_di_reg[0] ),
        .\sig_blk_interrupt_di_reg[1] (\sig_blk_interrupt_di_reg[1] ),
        .\sig_blk_interrupt_di_reg[2] (\sig_blk_interrupt_di_reg[2] ),
        .\sig_blk_interrupt_di_reg[3] (\sig_blk_interrupt_di_reg[3] ),
        .\sig_blk_interrupt_di_reg[4] (\sig_blk_interrupt_di_reg[4] ),
        .\sig_blk_interrupt_di_reg[7] (\sig_blk_interrupt_di_reg[7] ),
        .sig_intx_msi_grant_reg(sig_intx_msi_grant_reg),
        .sys_rst_n(sys_rst_n),
        .sys_rst_n_int(sys_rst_n_int),
        .trn_in_packet(\rx_inst/rx_pipeline_inst/trn_in_packet ),
        .trn_lnk_up(trn_lnk_up),
        .\trn_rbar_hit_prev_reg[4] ({trn_rbar_hit[4],trn_rbar_hit[2:0]}),
        .trn_rd(trn_rd),
        .trn_rdst_rdy(trn_rdst_rdy),
        .trn_recrc_err(trn_recrc_err),
        .trn_reof(trn_reof),
        .trn_rnp_ok(trn_rnp_ok),
        .trn_rsof(trn_rsof),
        .trn_rsrc_dsc(trn_rsrc_dsc),
        .trn_rsrc_dsc_d(\rx_inst/rx_pipeline_inst/trn_rsrc_dsc_d ),
        .trn_rsrc_rdy(trn_rsrc_rdy),
        .trn_td(trn_td),
        .trn_tdst_rdy(trn_tdst_rdy),
        .trn_teof(trn_teof),
        .trn_trem(trn_trem),
        .trn_tsof(trn_tsof),
        .trn_tsrc_rdy(trn_tsrc_rdy));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pcie_pipe_pipeline pcie_pipe_pipeline_i
       (.CLK(CLK),
        .D(pipe_tx_margin),
        .Q(pipe_rx0_char_is_k),
        .TXCHARDISPMODE(TXCHARDISPMODE),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl (pipe_rx0_data),
        .\genblk5_0.bram36_tdp_bl.bram36_tdp_bl_0 (pipe_rx0_status),
        .gt_rx_phy_status_q(gt_rx_phy_status_q),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .\gt_rxcharisk_q_reg[1] (\gt_rxcharisk_q_reg[1] ),
        .\gt_rxdata_q_reg[15] (\gt_rxdata_q_reg[15] ),
        .gt_rxelecidle_q(gt_rxelecidle_q),
        .in0(in0),
        .phy_rdy_n_int_reg(phy_rdy_n_int_reg),
        .pipe_rx0_chanisaligned(pipe_rx0_chanisaligned),
        .pipe_rx0_chanisaligned_gt(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_elec_idle(pipe_rx0_elec_idle),
        .pipe_rx0_phy_status(pipe_rx0_phy_status),
        .pipe_rx0_polarity(pipe_rx0_polarity),
        .pipe_rx0_polarity_gt(pipe_rx0_polarity_gt),
        .pipe_rx0_valid(pipe_rx0_valid),
        .pipe_rx0_valid_gt(pipe_rx0_valid_gt),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg (pipe_tx0_char_is_k),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 (pipe_tx0_data),
        .\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 (pipe_tx0_powerdown),
        .pipe_tx0_compliance(pipe_tx0_compliance),
        .pipe_tx0_elec_idle(pipe_tx0_elec_idle),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .pipe_tx_deemph(pipe_tx_deemph),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rate(pipe_tx_rate),
        .pipe_tx_rcvr_det(pipe_tx_rcvr_det),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .rdy_reg1_reg(rdy_reg1_reg),
        .rdy_reg1_reg_0(rdy_reg1_reg_0),
        .rdy_reg1_reg_1(rdy_reg1_reg_1),
        .rdy_reg1_reg_2(rdy_reg1_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'hF0F77077)) 
    rc_empty_i_1
       (.I0(\rx_inst/m_axis_rx_tvalid ),
        .I1(axi_enhanced_top_n_24),
        .I2(axi_enhanced_top_n_25),
        .I3(user_lnk_up_mux_reg),
        .I4(\rx_inst/rx_demux_inst/rc_full ),
        .O(rc_empty_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F20)) 
    rc_enable_i_1
       (.I0(\rx_inst/rx_demux_inst/rc_enable24_out ),
        .I1(axi_enhanced_top_n_514),
        .I2(axi_enhanced_top_n_358),
        .I3(axi_enhanced_top_n_24),
        .O(rc_enable_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'hFFF88888)) 
    rc_full_i_1
       (.I0(\rx_inst/m_axis_rx_tvalid ),
        .I1(axi_enhanced_top_n_24),
        .I2(axi_enhanced_top_n_25),
        .I3(user_lnk_up_mux_reg),
        .I4(\rx_inst/rx_demux_inst/rc_full ),
        .O(rc_full_i_1_n_0));
  LUT3 #(
    .INIT(8'hDC)) 
    reg_dsc_detect_i_1
       (.I0(\rx_inst/rx_pipeline_inst/null_mux_sel ),
        .I1(\rx_inst/rx_pipeline_inst/p_7_in ),
        .I2(\rx_inst/rx_pipeline_inst/reg_dsc_detect ),
        .O(reg_dsc_detect_i_1_n_0));
  LUT6 #(
    .INIT(64'h0800AEAA00002AAA)) 
    trn_in_packet_i_1
       (.I0(\rx_inst/rx_pipeline_inst/trn_in_packet ),
        .I1(trn_rsrc_rdy),
        .I2(trn_reof),
        .I3(trn_rdst_rdy),
        .I4(trn_rsrc_dsc),
        .I5(trn_rsof),
        .O(trn_in_packet_i_1_n_0));
  LUT6 #(
    .INIT(64'hCC0ECCCC00020000)) 
    trn_in_packet_i_1__0
       (.I0(trn_tdst_rdy),
        .I1(\tx_inst/tx_pipeline_inst/trn_in_packet ),
        .I2(trn_teof),
        .I3(\tx_inst/tx_pipeline_inst/reg_disable_trn ),
        .I4(\tx_inst/tx_pipeline_inst/reg_tvalid ),
        .I5(user_lnk_up_mux_reg),
        .O(trn_in_packet_i_1__0_n_0));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_clock" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_clock
   (int_oobclk_out,
    int_pclk_out_slave,
    CLK,
    int_userclk1_out,
    mmcm_lock,
    \pl_ltssm_state_q_reg[0] ,
    clk_txoutclk,
    pclk_sel_reg_0,
    int_pclk_sel_slave,
    pipe_mmcm_rst_n);
  output int_oobclk_out;
  output int_pclk_out_slave;
  output CLK;
  output int_userclk1_out;
  output mmcm_lock;
  output \pl_ltssm_state_q_reg[0] ;
  input clk_txoutclk;
  input pclk_sel_reg_0;
  input [0:0]int_pclk_sel_slave;
  input pipe_mmcm_rst_n;

  wire CLK;
  wire RST0;
  wire S00;
  wire clk_125mhz;
  wire clk_250mhz;
  wire clk_txoutclk;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg2;
  wire int_oobclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire int_userclk1_out;
  wire mmcm_fb;
  wire mmcm_lock;
  wire pclk_sel;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire pclk_sel_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire pclk_sel_reg2;
  wire pclk_sel_reg_0;
  wire pclk_sel_slave;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire pclk_sel_slave_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire pclk_sel_slave_reg2;
  wire \pclk_slave_bufgctrl.pclk_slave_i_1_n_0 ;
  wire pipe_mmcm_rst_n;
  wire \pl_ltssm_state_q_reg[0] ;
  wire refclk;
  wire userclk1;
  wire NLW_mmcm_i_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_i_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_i_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_i_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_i_DRDY_UNCONNECTED;
  wire NLW_mmcm_i_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_i_DO_UNCONNECTED;

  (* box_type = "PRIMITIVE" *) 
  BUFG \dclk_i_bufg.dclk_i 
       (.I(clk_125mhz),
        .O(CLK));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg1_reg
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(1'b0),
        .Q(gen3_reg1),
        .R(RST0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    gen3_reg2_reg
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(RST0));
  (* box_type = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(10.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(8.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(4),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(8),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(8),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(20),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("INTERNAL"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_i
       (.CLKFBIN(mmcm_fb),
        .CLKFBOUT(mmcm_fb),
        .CLKFBOUTB(NLW_mmcm_i_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_i_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(refclk),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_i_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(clk_125mhz),
        .CLKOUT0B(NLW_mmcm_i_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(clk_250mhz),
        .CLKOUT1B(NLW_mmcm_i_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(userclk1),
        .CLKOUT2B(NLW_mmcm_i_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_i_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_i_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_i_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_i_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_i_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_i_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_i_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(mmcm_lock),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_i_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(RST0));
  LUT1 #(
    .INIT(2'h1)) 
    mmcm_i_i_1
       (.I0(pipe_mmcm_rst_n),
        .O(RST0));
  (* box_type = "PRIMITIVE" *) 
  BUFGCTRL #(
    .INIT_OUT(0),
    .IS_CE0_INVERTED(1'b0),
    .IS_CE1_INVERTED(1'b0),
    .IS_I0_INVERTED(1'b0),
    .IS_I1_INVERTED(1'b0),
    .IS_IGNORE0_INVERTED(1'b0),
    .IS_IGNORE1_INVERTED(1'b0),
    .IS_S0_INVERTED(1'b0),
    .IS_S1_INVERTED(1'b0),
    .PRESELECT_I0("FALSE"),
    .PRESELECT_I1("FALSE")) 
    \pclk_i1_bufgctrl.pclk_i1 
       (.CE0(1'b1),
        .CE1(1'b1),
        .I0(clk_125mhz),
        .I1(clk_250mhz),
        .IGNORE0(1'b0),
        .IGNORE1(1'b0),
        .O(int_oobclk_out),
        .S0(S00),
        .S1(pclk_sel));
  LUT1 #(
    .INIT(2'h1)) 
    \pclk_i1_bufgctrl.pclk_i1_i_1 
       (.I0(pclk_sel),
        .O(S00));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_reg
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(pclk_sel_reg2),
        .Q(pclk_sel),
        .R(RST0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \pclk_sel_reg1_reg[0] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(pclk_sel_reg_0),
        .Q(pclk_sel_reg1),
        .R(RST0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \pclk_sel_reg2_reg[0] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(RST0));
  FDRE #(
    .INIT(1'b0)) 
    pclk_sel_slave_reg
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(pclk_sel_slave_reg2),
        .Q(pclk_sel_slave),
        .R(RST0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \pclk_sel_slave_reg1_reg[0] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(int_pclk_sel_slave),
        .Q(pclk_sel_slave_reg1),
        .R(RST0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE #(
    .INIT(1'b0)) 
    \pclk_sel_slave_reg2_reg[0] 
       (.C(int_oobclk_out),
        .CE(1'b1),
        .D(pclk_sel_slave_reg1),
        .Q(pclk_sel_slave_reg2),
        .R(RST0));
  (* box_type = "PRIMITIVE" *) 
  BUFGCTRL #(
    .INIT_OUT(0),
    .IS_CE0_INVERTED(1'b0),
    .IS_CE1_INVERTED(1'b0),
    .IS_I0_INVERTED(1'b0),
    .IS_I1_INVERTED(1'b0),
    .IS_IGNORE0_INVERTED(1'b0),
    .IS_IGNORE1_INVERTED(1'b0),
    .IS_S0_INVERTED(1'b0),
    .IS_S1_INVERTED(1'b0),
    .PRESELECT_I0("FALSE"),
    .PRESELECT_I1("FALSE")) 
    \pclk_slave_bufgctrl.pclk_slave 
       (.CE0(1'b1),
        .CE1(1'b1),
        .I0(clk_125mhz),
        .I1(clk_250mhz),
        .IGNORE0(1'b0),
        .IGNORE1(1'b0),
        .O(int_pclk_out_slave),
        .S0(\pclk_slave_bufgctrl.pclk_slave_i_1_n_0 ),
        .S1(pclk_sel_slave));
  LUT1 #(
    .INIT(2'h1)) 
    \pclk_slave_bufgctrl.pclk_slave_i_1 
       (.I0(pclk_sel_slave),
        .O(\pclk_slave_bufgctrl.pclk_slave_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    reg_clock_locked_i_1
       (.I0(mmcm_lock),
        .O(\pl_ltssm_state_q_reg[0] ));
  (* box_type = "PRIMITIVE" *) 
  BUFG \txoutclk_i.txoutclk_i 
       (.I(clk_txoutclk),
        .O(refclk));
  (* box_type = "PRIMITIVE" *) 
  BUFG \userclk1_i1.usrclk1_i1 
       (.I(userclk1),
        .O(int_userclk1_out));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_eq" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_eq
   (out1,
    rxeq_adapt_done,
    TXPRECURSOR,
    TXMAINCURSOR,
    TXPOSTCURSOR,
    rst_cpllreset,
    pclk_sel_reg,
    E);
  output out1;
  output rxeq_adapt_done;
  output [4:0]TXPRECURSOR;
  output [6:0]TXMAINCURSOR;
  output [4:0]TXPOSTCURSOR;
  input rst_cpllreset;
  input pclk_sel_reg;
  input [0:0]E;

  wire [0:0]E;
  wire \FSM_onehot_fsm_tx[1]_i_1_n_0 ;
  wire \FSM_onehot_fsm_tx[1]_i_2_n_0 ;
  wire \FSM_onehot_fsm_tx[2]_i_1_n_0 ;
  wire \FSM_onehot_fsm_tx[3]_i_1_n_0 ;
  wire \FSM_onehot_fsm_tx[3]_i_2_n_0 ;
  wire \FSM_onehot_fsm_tx[4]_i_1_n_0 ;
  wire \FSM_onehot_fsm_tx[5]_i_1_n_0 ;
  wire \FSM_onehot_fsm_tx[6]_i_1_n_0 ;
  wire \FSM_onehot_fsm_tx[6]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_tx_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_tx_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_tx_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_tx_reg_n_0_[4] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_tx_reg_n_0_[5] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_tx_reg_n_0_[6] ;
  wire \FSM_sequential_fsm_rx[2]_i_2_n_0 ;
  wire \FSM_sequential_fsm_rx[2]_i_3_n_0 ;
  wire [6:0]TXMAINCURSOR;
  wire [4:0]TXPOSTCURSOR;
  wire [4:0]TXPRECURSOR;
  (* RTL_KEEP = "yes" *) wire [2:0]fsm_rx;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg2;
  (* RTL_KEEP = "yes" *) wire out1;
  wire pclk_sel_reg;
  wire rst_cpllreset;
  wire rxeq_adapt_done;
  wire rxeq_adapt_done_reg_reg_n_0;
  wire [2:0]rxeq_cnt;
  wire \rxeq_cnt_reg_n_0_[0] ;
  wire \rxeq_cnt_reg_n_0_[1] ;
  wire \rxeq_cnt_reg_n_0_[2] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]rxeq_control_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]rxeq_control_reg2;
  wire [5:0]rxeq_fs;
  wire \rxeq_fs[5]_i_1_n_0 ;
  wire [5:0]rxeq_fs_1;
  wire [5:0]rxeq_lf;
  wire \rxeq_lf[5]_i_1_n_0 ;
  wire [5:0]rxeq_lf_5;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]rxeq_lffs_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]rxeq_lffs_reg2;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_4;
  wire [2:0]rxeq_preset;
  wire \rxeq_preset[0]_i_1_n_0 ;
  wire \rxeq_preset[1]_i_1_n_0 ;
  wire \rxeq_preset[2]_i_1_n_0 ;
  wire \rxeq_preset[2]_i_2_n_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]rxeq_preset_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]rxeq_preset_reg2;
  wire rxeq_preset_valid;
  wire rxeq_preset_valid_3;
  wire rxeq_scan_i_n_0;
  wire rxeq_scan_i_n_1;
  wire rxeq_scan_i_n_2;
  wire rxeq_scan_i_n_3;
  wire rxeq_scan_i_n_4;
  wire [5:0]rxeq_txcoeff;
  wire [17:0]rxeq_txcoeff_0;
  wire \rxeq_txcoeff_reg_n_0_[10] ;
  wire \rxeq_txcoeff_reg_n_0_[11] ;
  wire \rxeq_txcoeff_reg_n_0_[12] ;
  wire \rxeq_txcoeff_reg_n_0_[13] ;
  wire \rxeq_txcoeff_reg_n_0_[14] ;
  wire \rxeq_txcoeff_reg_n_0_[15] ;
  wire \rxeq_txcoeff_reg_n_0_[16] ;
  wire \rxeq_txcoeff_reg_n_0_[17] ;
  wire \rxeq_txcoeff_reg_n_0_[6] ;
  wire \rxeq_txcoeff_reg_n_0_[7] ;
  wire \rxeq_txcoeff_reg_n_0_[8] ;
  wire \rxeq_txcoeff_reg_n_0_[9] ;
  wire [3:0]rxeq_txpreset;
  wire \rxeq_txpreset[3]_i_1_n_0 ;
  wire [3:0]rxeq_txpreset_2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]rxeq_txpreset_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]rxeq_txpreset_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxeq_user_en_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxeq_user_en_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxeq_user_mode_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxeq_user_mode_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [17:0]rxeq_user_txcoeff_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [17:0]rxeq_user_txcoeff_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]txeq_control_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]txeq_control_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]txeq_deemph_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]txeq_deemph_reg2;
  wire [17:0]txeq_preset;
  wire \txeq_preset[0]_i_1_n_0 ;
  wire \txeq_preset[10]_i_1_n_0 ;
  wire \txeq_preset[11]_i_1_n_0 ;
  wire \txeq_preset[12]_i_1_n_0 ;
  wire \txeq_preset[13]_i_1_n_0 ;
  wire \txeq_preset[14]_i_1_n_0 ;
  wire \txeq_preset[15]_i_1_n_0 ;
  wire \txeq_preset[16]_i_1_n_0 ;
  wire \txeq_preset[17]_i_2_n_0 ;
  wire \txeq_preset[1]_i_1_n_0 ;
  wire \txeq_preset[2]_i_1_n_0 ;
  wire \txeq_preset[3]_i_1_n_0 ;
  wire \txeq_preset[7]_i_1_n_0 ;
  wire \txeq_preset[7]_i_2_n_0 ;
  wire \txeq_preset[8]_i_1_n_0 ;
  wire \txeq_preset[9]_i_1_n_0 ;
  wire txeq_preset_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]txeq_preset_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]txeq_preset_reg2;
  wire txeq_txcoeff;
  wire \txeq_txcoeff[0]_i_1_n_0 ;
  wire \txeq_txcoeff[0]_i_2_n_0 ;
  wire \txeq_txcoeff[10]_i_1_n_0 ;
  wire \txeq_txcoeff[10]_i_2_n_0 ;
  wire \txeq_txcoeff[11]_i_1_n_0 ;
  wire \txeq_txcoeff[11]_i_2_n_0 ;
  wire \txeq_txcoeff[12]_i_1_n_0 ;
  wire \txeq_txcoeff[12]_i_2_n_0 ;
  wire \txeq_txcoeff[13]_i_1_n_0 ;
  wire \txeq_txcoeff[13]_i_2_n_0 ;
  wire \txeq_txcoeff[14]_i_1_n_0 ;
  wire \txeq_txcoeff[14]_i_2_n_0 ;
  wire \txeq_txcoeff[15]_i_1_n_0 ;
  wire \txeq_txcoeff[15]_i_2_n_0 ;
  wire \txeq_txcoeff[16]_i_1_n_0 ;
  wire \txeq_txcoeff[16]_i_2_n_0 ;
  wire \txeq_txcoeff[17]_i_1_n_0 ;
  wire \txeq_txcoeff[17]_i_2_n_0 ;
  wire \txeq_txcoeff[18]_i_2_n_0 ;
  wire \txeq_txcoeff[18]_i_3_n_0 ;
  wire \txeq_txcoeff[18]_i_4_n_0 ;
  wire \txeq_txcoeff[1]_i_1_n_0 ;
  wire \txeq_txcoeff[1]_i_2_n_0 ;
  wire \txeq_txcoeff[2]_i_1_n_0 ;
  wire \txeq_txcoeff[2]_i_2_n_0 ;
  wire \txeq_txcoeff[3]_i_1_n_0 ;
  wire \txeq_txcoeff[3]_i_2_n_0 ;
  wire \txeq_txcoeff[4]_i_1_n_0 ;
  wire \txeq_txcoeff[4]_i_2_n_0 ;
  wire \txeq_txcoeff[5]_i_1_n_0 ;
  wire \txeq_txcoeff[5]_i_2_n_0 ;
  wire \txeq_txcoeff[6]_i_1_n_0 ;
  wire \txeq_txcoeff[6]_i_2_n_0 ;
  wire \txeq_txcoeff[7]_i_1_n_0 ;
  wire \txeq_txcoeff[7]_i_2_n_0 ;
  wire \txeq_txcoeff[8]_i_1_n_0 ;
  wire \txeq_txcoeff[8]_i_2_n_0 ;
  wire \txeq_txcoeff[9]_i_1_n_0 ;
  wire \txeq_txcoeff[9]_i_2_n_0 ;
  wire [1:0]txeq_txcoeff_cnt;
  wire \txeq_txcoeff_cnt_reg_n_0_[0] ;
  wire \txeq_txcoeff_cnt_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[0] ;
  wire \txeq_txcoeff_reg_n_0_[10] ;
  wire \txeq_txcoeff_reg_n_0_[11] ;
  wire \txeq_txcoeff_reg_n_0_[12] ;
  wire \txeq_txcoeff_reg_n_0_[13] ;
  wire \txeq_txcoeff_reg_n_0_[14] ;
  wire \txeq_txcoeff_reg_n_0_[15] ;
  wire \txeq_txcoeff_reg_n_0_[16] ;
  wire \txeq_txcoeff_reg_n_0_[17] ;
  wire \txeq_txcoeff_reg_n_0_[18] ;
  wire \txeq_txcoeff_reg_n_0_[1] ;
  wire \txeq_txcoeff_reg_n_0_[2] ;
  wire \txeq_txcoeff_reg_n_0_[3] ;
  wire \txeq_txcoeff_reg_n_0_[4] ;
  wire \txeq_txcoeff_reg_n_0_[5] ;
  wire \txeq_txcoeff_reg_n_0_[6] ;
  wire \txeq_txcoeff_reg_n_0_[7] ;
  wire \txeq_txcoeff_reg_n_0_[8] ;
  wire \txeq_txcoeff_reg_n_0_[9] ;

  LUT5 #(
    .INIT(32'h10101F10)) 
    \FSM_onehot_fsm_tx[1]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I3(\FSM_onehot_fsm_tx[1]_i_2_n_0 ),
        .I4(out1),
        .O(\FSM_onehot_fsm_tx[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000110111)) 
    \FSM_onehot_fsm_tx[1]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[5] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I2(txeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_tx_reg_n_0_[6] ),
        .I4(txeq_control_reg2[1]),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_tx[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h20202F20)) 
    \FSM_onehot_fsm_tx[2]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I3(out1),
        .I4(txeq_preset_done),
        .O(\FSM_onehot_fsm_tx[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h88888888B8B888B8)) 
    \FSM_onehot_fsm_tx[3]_i_1 
       (.I0(\FSM_onehot_fsm_tx[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I4(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I5(out1),
        .O(\FSM_onehot_fsm_tx[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_fsm_tx[3]_i_2 
       (.I0(txeq_control_reg2[1]),
        .I1(txeq_control_reg2[0]),
        .O(\FSM_onehot_fsm_tx[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00001000)) 
    \FSM_onehot_fsm_tx[4]_i_1 
       (.I0(out1),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I4(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm_tx[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \FSM_onehot_fsm_tx[5]_i_1 
       (.I0(txeq_control_reg2[1]),
        .I1(txeq_control_reg2[0]),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm_tx[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \FSM_onehot_fsm_tx[6]_i_1 
       (.I0(\FSM_onehot_fsm_tx[6]_i_2_n_0 ),
        .I1(out1),
        .I2(txeq_preset_done),
        .I3(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm_tx[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFEEFEEE)) 
    \FSM_onehot_fsm_tx[6]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[5] ),
        .I2(txeq_control_reg2[0]),
        .I3(\FSM_onehot_fsm_tx_reg_n_0_[6] ),
        .I4(txeq_control_reg2[1]),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm_tx[6]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_tx_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(\FSM_onehot_fsm_tx_reg_n_0_[0] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_tx_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_tx[1]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .S(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_tx_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_tx[2]_i_1_n_0 ),
        .Q(out1),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_tx_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_tx[3]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_tx_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_tx[4]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_tx_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_tx[5]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_tx_reg_n_0_[5] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_tx_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm_tx[6]_i_1_n_0 ),
        .Q(\FSM_onehot_fsm_tx_reg_n_0_[6] ),
        .R(rst_cpllreset));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_fsm_rx[2]_i_2 
       (.I0(rxeq_control_reg2[0]),
        .I1(rxeq_control_reg2[1]),
        .O(\FSM_sequential_fsm_rx[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \FSM_sequential_fsm_rx[2]_i_3 
       (.I0(\rxeq_cnt_reg_n_0_[1] ),
        .I1(\rxeq_cnt_reg_n_0_[2] ),
        .I2(\rxeq_cnt_reg_n_0_[0] ),
        .O(\FSM_sequential_fsm_rx[2]_i_3_n_0 ));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_rx_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_scan_i_n_4),
        .Q(fsm_rx[0]),
        .S(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_rx_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_scan_i_n_3),
        .Q(fsm_rx[1]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_fsm_rx_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_scan_i_n_2),
        .Q(fsm_rx[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(gen3_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(rst_cpllreset));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_22 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[17] ),
        .O(TXPOSTCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_23 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[16] ),
        .O(TXPOSTCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_24 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[15] ),
        .O(TXPOSTCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_25 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[14] ),
        .O(TXPOSTCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_26 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .O(TXPOSTCURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_27 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[4] ),
        .O(TXPRECURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_28 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[3] ),
        .O(TXPRECURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_29 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[2] ),
        .O(TXPRECURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_30 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[1] ),
        .O(TXPRECURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_31 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[0] ),
        .O(TXPRECURSOR[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_32 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .O(TXMAINCURSOR[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_33 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .O(TXMAINCURSOR[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_34 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .O(TXMAINCURSOR[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_35 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .O(TXMAINCURSOR[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_36 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .O(TXMAINCURSOR[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_37 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[7] ),
        .O(TXMAINCURSOR[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \gtp_channel.gtpe2_channel_i_i_38 
       (.I0(gen3_reg2),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .O(TXMAINCURSOR[0]));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_scan_i_n_0),
        .Q(rxeq_adapt_done),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_adapt_done_reg_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_scan_i_n_1),
        .Q(rxeq_adapt_done_reg_reg_n_0),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'h04041C10)) 
    \rxeq_cnt[0]_i_1 
       (.I0(\rxeq_cnt_reg_n_0_[0] ),
        .I1(fsm_rx[0]),
        .I2(fsm_rx[2]),
        .I3(rxeq_control_reg2[1]),
        .I4(fsm_rx[1]),
        .O(rxeq_cnt[0]));
  LUT5 #(
    .INIT(32'h00424200)) 
    \rxeq_cnt[1]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(fsm_rx[1]),
        .I3(\rxeq_cnt_reg_n_0_[1] ),
        .I4(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[1]));
  LUT6 #(
    .INIT(64'h0042420042004200)) 
    \rxeq_cnt[2]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(fsm_rx[1]),
        .I3(\rxeq_cnt_reg_n_0_[2] ),
        .I4(\rxeq_cnt_reg_n_0_[1] ),
        .I5(\rxeq_cnt_reg_n_0_[0] ),
        .O(rxeq_cnt[2]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_cnt[0]),
        .Q(\rxeq_cnt_reg_n_0_[0] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_cnt[1]),
        .Q(\rxeq_cnt_reg_n_0_[1] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_cnt_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_cnt[2]),
        .Q(\rxeq_cnt_reg_n_0_[2] ),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_control_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_control_reg1[0]),
        .Q(rxeq_control_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_control_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_control_reg1[1]),
        .Q(rxeq_control_reg2[1]),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_fs[0]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_lffs_reg2[0]),
        .O(rxeq_fs_1[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_fs[1]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_lffs_reg2[1]),
        .O(rxeq_fs_1[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_fs[2]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_lffs_reg2[2]),
        .O(rxeq_fs_1[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_fs[3]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_lffs_reg2[3]),
        .O(rxeq_fs_1[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_fs[4]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_lffs_reg2[4]),
        .O(rxeq_fs_1[4]));
  LUT4 #(
    .INIT(16'hC203)) 
    \rxeq_fs[5]_i_1 
       (.I0(rxeq_control_reg2[1]),
        .I1(fsm_rx[2]),
        .I2(fsm_rx[1]),
        .I3(fsm_rx[0]),
        .O(\rxeq_fs[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_fs[5]_i_2 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_lffs_reg2[5]),
        .O(rxeq_fs_1[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[0] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs_1[0]),
        .Q(rxeq_fs[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[1] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs_1[1]),
        .Q(rxeq_fs[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[2] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs_1[2]),
        .Q(rxeq_fs[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[3] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs_1[3]),
        .Q(rxeq_fs[3]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[4] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs_1[4]),
        .Q(rxeq_fs[4]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_fs_reg[5] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_fs[5]_i_1_n_0 ),
        .D(rxeq_fs_1[5]),
        .Q(rxeq_fs[5]),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_lf[0]_i_1 
       (.I0(fsm_rx[1]),
        .I1(fsm_rx[2]),
        .I2(rxeq_lffs_reg2[0]),
        .O(rxeq_lf_5[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_lf[1]_i_1 
       (.I0(fsm_rx[1]),
        .I1(fsm_rx[2]),
        .I2(rxeq_lffs_reg2[1]),
        .O(rxeq_lf_5[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_lf[2]_i_1 
       (.I0(fsm_rx[1]),
        .I1(fsm_rx[2]),
        .I2(rxeq_lffs_reg2[2]),
        .O(rxeq_lf_5[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_lf[3]_i_1 
       (.I0(fsm_rx[1]),
        .I1(fsm_rx[2]),
        .I2(rxeq_lffs_reg2[3]),
        .O(rxeq_lf_5[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_lf[4]_i_1 
       (.I0(fsm_rx[1]),
        .I1(fsm_rx[2]),
        .I2(rxeq_lffs_reg2[4]),
        .O(rxeq_lf_5[4]));
  LUT6 #(
    .INIT(64'hFF000000000080FF)) 
    \rxeq_lf[5]_i_1 
       (.I0(\rxeq_cnt_reg_n_0_[1] ),
        .I1(\rxeq_cnt_reg_n_0_[0] ),
        .I2(\rxeq_cnt_reg_n_0_[2] ),
        .I3(fsm_rx[2]),
        .I4(fsm_rx[1]),
        .I5(fsm_rx[0]),
        .O(\rxeq_lf[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_lf[5]_i_2 
       (.I0(fsm_rx[1]),
        .I1(fsm_rx[2]),
        .I2(rxeq_lffs_reg2[5]),
        .O(rxeq_lf_5[5]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[0] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf_5[0]),
        .Q(rxeq_lf[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[1] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf_5[1]),
        .Q(rxeq_lf[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[2] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf_5[2]),
        .Q(rxeq_lf[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[3] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf_5[3]),
        .Q(rxeq_lf[3]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[4] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf_5[4]),
        .Q(rxeq_lf[4]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_lf_reg[5] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_lf[5]_i_1_n_0 ),
        .D(rxeq_lf_5[5]),
        .Q(rxeq_lf[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg1_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_lffs_reg1[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[0]),
        .Q(rxeq_lffs_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[1]),
        .Q(rxeq_lffs_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[2]),
        .Q(rxeq_lffs_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[3]),
        .Q(rxeq_lffs_reg2[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[4]),
        .Q(rxeq_lffs_reg2[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_lffs_reg2_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_lffs_reg1[5]),
        .Q(rxeq_lffs_reg2[5]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_new_txcoeff_req_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req_4),
        .Q(rxeq_new_txcoeff_req),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'h3200FFFF32000000)) 
    \rxeq_preset[0]_i_1 
       (.I0(fsm_rx[0]),
        .I1(fsm_rx[2]),
        .I2(fsm_rx[1]),
        .I3(rxeq_preset_reg2[0]),
        .I4(\rxeq_preset[2]_i_2_n_0 ),
        .I5(rxeq_preset[0]),
        .O(\rxeq_preset[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3200FFFF32000000)) 
    \rxeq_preset[1]_i_1 
       (.I0(fsm_rx[0]),
        .I1(fsm_rx[2]),
        .I2(fsm_rx[1]),
        .I3(rxeq_preset_reg2[1]),
        .I4(\rxeq_preset[2]_i_2_n_0 ),
        .I5(rxeq_preset[1]),
        .O(\rxeq_preset[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3200FFFF32000000)) 
    \rxeq_preset[2]_i_1 
       (.I0(fsm_rx[0]),
        .I1(fsm_rx[2]),
        .I2(fsm_rx[1]),
        .I3(rxeq_preset_reg2[2]),
        .I4(\rxeq_preset[2]_i_2_n_0 ),
        .I5(rxeq_preset[2]),
        .O(\rxeq_preset[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF00400FF)) 
    \rxeq_preset[2]_i_2 
       (.I0(rxeq_control_reg2[1]),
        .I1(rxeq_control_reg2[0]),
        .I2(fsm_rx[1]),
        .I3(fsm_rx[2]),
        .I4(fsm_rx[0]),
        .O(\rxeq_preset[2]_i_2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_preset_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_preset_reg1[0]),
        .Q(rxeq_preset_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_preset_reg1[1]),
        .Q(rxeq_preset_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_preset_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_preset_reg1[2]),
        .Q(rxeq_preset_reg2[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_preset[0]_i_1_n_0 ),
        .Q(rxeq_preset[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_preset[1]_i_1_n_0 ),
        .Q(rxeq_preset[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_preset_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_preset[2]_i_1_n_0 ),
        .Q(rxeq_preset[2]),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'h04)) 
    rxeq_preset_valid_i_1
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[1]),
        .I2(fsm_rx[0]),
        .O(rxeq_preset_valid_3));
  FDRE #(
    .INIT(1'b0)) 
    rxeq_preset_valid_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_preset_valid_3),
        .Q(rxeq_preset_valid),
        .R(rst_cpllreset));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_rxeq_scan rxeq_scan_i
       (.D({rxeq_scan_i_n_2,rxeq_scan_i_n_3,rxeq_scan_i_n_4}),
        .\FSM_sequential_fsm_rx_reg[2] (fsm_rx),
        .Q({\rxeq_cnt_reg_n_0_[2] ,\rxeq_cnt_reg_n_0_[1] ,\rxeq_cnt_reg_n_0_[0] }),
        .out(rxeq_control_reg2),
        .pclk_sel_reg(pclk_sel_reg),
        .rst_cpllreset(rst_cpllreset),
        .rxeq_adapt_done(rxeq_adapt_done),
        .rxeq_adapt_done_reg(rxeq_scan_i_n_0),
        .rxeq_adapt_done_reg_reg(rxeq_scan_i_n_1),
        .rxeq_adapt_done_reg_reg_0(rxeq_adapt_done_reg_reg_n_0),
        .\rxeq_cnt_reg[1] (\FSM_sequential_fsm_rx[2]_i_3_n_0 ),
        .\rxeq_control_reg2_reg[0] (\FSM_sequential_fsm_rx[2]_i_2_n_0 ),
        .\rxeq_fs_reg[5] (rxeq_fs),
        .\rxeq_lf_reg[5] (rxeq_lf),
        .rxeq_new_txcoeff_req(rxeq_new_txcoeff_req),
        .rxeq_new_txcoeff_req_4(rxeq_new_txcoeff_req_4),
        .\rxeq_preset_reg[2] (rxeq_preset),
        .rxeq_preset_valid(rxeq_preset_valid),
        .\rxeq_txcoeff_reg[17] ({\rxeq_txcoeff_reg_n_0_[17] ,\rxeq_txcoeff_reg_n_0_[16] ,\rxeq_txcoeff_reg_n_0_[15] ,\rxeq_txcoeff_reg_n_0_[14] ,\rxeq_txcoeff_reg_n_0_[13] ,\rxeq_txcoeff_reg_n_0_[12] ,\rxeq_txcoeff_reg_n_0_[11] ,\rxeq_txcoeff_reg_n_0_[10] ,\rxeq_txcoeff_reg_n_0_[9] ,\rxeq_txcoeff_reg_n_0_[8] ,\rxeq_txcoeff_reg_n_0_[7] ,\rxeq_txcoeff_reg_n_0_[6] ,rxeq_txcoeff}),
        .\rxeq_txpreset_reg[3] (rxeq_txpreset));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[0]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[6] ),
        .O(rxeq_txcoeff_0[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[10]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[16] ),
        .O(rxeq_txcoeff_0[10]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[11]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[17] ),
        .O(rxeq_txcoeff_0[11]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[12]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(txeq_deemph_reg2[0]),
        .O(rxeq_txcoeff_0[12]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[13]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(txeq_deemph_reg2[1]),
        .O(rxeq_txcoeff_0[13]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[14]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(txeq_deemph_reg2[2]),
        .O(rxeq_txcoeff_0[14]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[15]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(txeq_deemph_reg2[3]),
        .O(rxeq_txcoeff_0[15]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[16]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(txeq_deemph_reg2[4]),
        .O(rxeq_txcoeff_0[16]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[17]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(txeq_deemph_reg2[5]),
        .O(rxeq_txcoeff_0[17]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[1]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[7] ),
        .O(rxeq_txcoeff_0[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[2]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[8] ),
        .O(rxeq_txcoeff_0[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[3]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[9] ),
        .O(rxeq_txcoeff_0[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[4]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[10] ),
        .O(rxeq_txcoeff_0[4]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[5]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[11] ),
        .O(rxeq_txcoeff_0[5]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[6]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[12] ),
        .O(rxeq_txcoeff_0[6]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[7]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[13] ),
        .O(rxeq_txcoeff_0[7]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[8]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[14] ),
        .O(rxeq_txcoeff_0[8]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txcoeff[9]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(\rxeq_txcoeff_reg_n_0_[15] ),
        .O(rxeq_txcoeff_0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[0] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[0]),
        .Q(rxeq_txcoeff[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[10] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[10]),
        .Q(\rxeq_txcoeff_reg_n_0_[10] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[11] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[11]),
        .Q(\rxeq_txcoeff_reg_n_0_[11] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[12] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[12]),
        .Q(\rxeq_txcoeff_reg_n_0_[12] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[13] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[13]),
        .Q(\rxeq_txcoeff_reg_n_0_[13] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[14] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[14]),
        .Q(\rxeq_txcoeff_reg_n_0_[14] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[15] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[15]),
        .Q(\rxeq_txcoeff_reg_n_0_[15] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[16] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[16]),
        .Q(\rxeq_txcoeff_reg_n_0_[16] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[17] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[17]),
        .Q(\rxeq_txcoeff_reg_n_0_[17] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[1] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[1]),
        .Q(rxeq_txcoeff[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[2] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[2]),
        .Q(rxeq_txcoeff[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[3] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[3]),
        .Q(rxeq_txcoeff[3]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[4] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[4]),
        .Q(rxeq_txcoeff[4]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[5] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[5]),
        .Q(rxeq_txcoeff[5]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[6] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[6]),
        .Q(\rxeq_txcoeff_reg_n_0_[6] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[7] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[7]),
        .Q(\rxeq_txcoeff_reg_n_0_[7] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[8] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[8]),
        .Q(\rxeq_txcoeff_reg_n_0_[8] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txcoeff_reg[9] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txcoeff_0[9]),
        .Q(\rxeq_txcoeff_reg_n_0_[9] ),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txpreset[0]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_txpreset_reg2[0]),
        .O(rxeq_txpreset_2[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txpreset[1]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_txpreset_reg2[1]),
        .O(rxeq_txpreset_2[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txpreset[2]_i_1 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_txpreset_reg2[2]),
        .O(rxeq_txpreset_2[2]));
  LUT4 #(
    .INIT(16'hF405)) 
    \rxeq_txpreset[3]_i_1 
       (.I0(fsm_rx[2]),
        .I1(rxeq_control_reg2[1]),
        .I2(fsm_rx[1]),
        .I3(fsm_rx[0]),
        .O(\rxeq_txpreset[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \rxeq_txpreset[3]_i_2 
       (.I0(fsm_rx[2]),
        .I1(fsm_rx[0]),
        .I2(rxeq_txpreset_reg2[3]),
        .O(rxeq_txpreset_2[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_txpreset_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[0]),
        .Q(rxeq_txpreset_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[1]),
        .Q(rxeq_txpreset_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[2]),
        .Q(rxeq_txpreset_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_txpreset_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_txpreset_reg1[3]),
        .Q(rxeq_txpreset_reg2[3]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[0] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset_2[0]),
        .Q(rxeq_txpreset[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[1] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset_2[1]),
        .Q(rxeq_txpreset[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[2] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset_2[2]),
        .Q(rxeq_txpreset[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxeq_txpreset_reg[3] 
       (.C(pclk_sel_reg),
        .CE(\rxeq_txpreset[3]_i_1_n_0 ),
        .D(rxeq_txpreset_2[3]),
        .Q(rxeq_txpreset[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_en_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_en_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_en_reg1),
        .Q(rxeq_user_en_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_mode_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_user_mode_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_mode_reg1),
        .Q(rxeq_user_mode_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[10] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[10]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[11] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[11]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[12] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[12]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[13] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[13]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[14] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[14]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[15] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[15]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[16] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[16]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[17] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[17]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[6]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[7] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[7]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[8] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[8]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg1_reg[9] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxeq_user_txcoeff_reg1[9]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[0]),
        .Q(rxeq_user_txcoeff_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[10] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[10]),
        .Q(rxeq_user_txcoeff_reg2[10]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[11] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[11]),
        .Q(rxeq_user_txcoeff_reg2[11]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[12] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[12]),
        .Q(rxeq_user_txcoeff_reg2[12]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[13] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[13]),
        .Q(rxeq_user_txcoeff_reg2[13]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[14] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[14]),
        .Q(rxeq_user_txcoeff_reg2[14]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[15] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[15]),
        .Q(rxeq_user_txcoeff_reg2[15]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[16] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[16]),
        .Q(rxeq_user_txcoeff_reg2[16]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[17] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[17]),
        .Q(rxeq_user_txcoeff_reg2[17]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[1]),
        .Q(rxeq_user_txcoeff_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[2]),
        .Q(rxeq_user_txcoeff_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[3]),
        .Q(rxeq_user_txcoeff_reg2[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[4]),
        .Q(rxeq_user_txcoeff_reg2[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[5]),
        .Q(rxeq_user_txcoeff_reg2[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[6]),
        .Q(rxeq_user_txcoeff_reg2[6]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[7] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[7]),
        .Q(rxeq_user_txcoeff_reg2[7]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[8] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[8]),
        .Q(rxeq_user_txcoeff_reg2[8]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rxeq_user_txcoeff_reg2_reg[9] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_user_txcoeff_reg1[9]),
        .Q(rxeq_user_txcoeff_reg2[9]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_control_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_control_reg1[0]),
        .Q(txeq_control_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_control_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_control_reg1[1]),
        .Q(txeq_control_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[0]),
        .S(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg1_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_deemph_reg1[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \txeq_deemph_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_deemph_reg1[0]),
        .Q(txeq_deemph_reg2[0]),
        .S(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_deemph_reg1[1]),
        .Q(txeq_deemph_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_deemph_reg1[2]),
        .Q(txeq_deemph_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_deemph_reg1[3]),
        .Q(txeq_deemph_reg2[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_deemph_reg1[4]),
        .Q(txeq_deemph_reg2[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_deemph_reg2_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_deemph_reg1[5]),
        .Q(txeq_deemph_reg2[5]),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'h00000400)) 
    \txeq_preset[0]_i_1 
       (.I0(rst_cpllreset),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[2]),
        .O(\txeq_preset[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0853)) 
    \txeq_preset[10]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[0]),
        .I4(rst_cpllreset),
        .O(\txeq_preset[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0851)) 
    \txeq_preset[11]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[0]),
        .I4(rst_cpllreset),
        .O(\txeq_preset[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h01111130)) 
    \txeq_preset[12]_i_1 
       (.I0(txeq_preset_reg2[3]),
        .I1(rst_cpllreset),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[1]),
        .O(\txeq_preset[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00011000)) 
    \txeq_preset[13]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(rst_cpllreset),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[3]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h01000010)) 
    \txeq_preset[14]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(rst_cpllreset),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[1]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFF01)) 
    \txeq_preset[15]_i_1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[2]),
        .I3(rst_cpllreset),
        .O(\txeq_preset[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0110)) 
    \txeq_preset[16]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(rst_cpllreset),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[3]),
        .O(\txeq_preset[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF400D)) 
    \txeq_preset[17]_i_2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[2]),
        .I4(rst_cpllreset),
        .O(\txeq_preset[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000024)) 
    \txeq_preset[1]_i_1 
       (.I0(txeq_preset_reg2[2]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[0]),
        .I4(rst_cpllreset),
        .O(\txeq_preset[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E0)) 
    \txeq_preset[2]_i_1 
       (.I0(txeq_preset_reg2[0]),
        .I1(txeq_preset_reg2[2]),
        .I2(txeq_preset_reg2[3]),
        .I3(rst_cpllreset),
        .O(\txeq_preset[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h05100410)) 
    \txeq_preset[3]_i_1 
       (.I0(rst_cpllreset),
        .I1(txeq_preset_reg2[1]),
        .I2(txeq_preset_reg2[3]),
        .I3(txeq_preset_reg2[2]),
        .I4(txeq_preset_reg2[0]),
        .O(\txeq_preset[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000003300000AAAA)) 
    \txeq_preset[7]_i_1 
       (.I0(txeq_preset[7]),
        .I1(\txeq_preset[7]_i_2_n_0 ),
        .I2(txeq_preset_reg2[2]),
        .I3(txeq_preset_reg2[0]),
        .I4(rst_cpllreset),
        .I5(out1),
        .O(\txeq_preset[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \txeq_preset[7]_i_2 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[1]),
        .O(\txeq_preset[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF104F)) 
    \txeq_preset[8]_i_1 
       (.I0(txeq_preset_reg2[3]),
        .I1(txeq_preset_reg2[0]),
        .I2(txeq_preset_reg2[1]),
        .I3(txeq_preset_reg2[2]),
        .I4(rst_cpllreset),
        .O(\txeq_preset[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF300D)) 
    \txeq_preset[9]_i_1 
       (.I0(txeq_preset_reg2[1]),
        .I1(txeq_preset_reg2[3]),
        .I2(txeq_preset_reg2[0]),
        .I3(txeq_preset_reg2[2]),
        .I4(rst_cpllreset),
        .O(\txeq_preset[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    txeq_preset_done_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(out1),
        .Q(txeq_preset_done),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(txeq_preset_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_preset_reg1[0]),
        .Q(txeq_preset_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_preset_reg1[1]),
        .Q(txeq_preset_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_preset_reg1[2]),
        .Q(txeq_preset_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txeq_preset_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_preset_reg1[3]),
        .Q(txeq_preset_reg2[3]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[0] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[0]_i_1_n_0 ),
        .Q(txeq_preset[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[10] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[10]_i_1_n_0 ),
        .Q(txeq_preset[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[11] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[11]_i_1_n_0 ),
        .Q(txeq_preset[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[12] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[12]_i_1_n_0 ),
        .Q(txeq_preset[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[13] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[13]_i_1_n_0 ),
        .Q(txeq_preset[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[14] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[14]_i_1_n_0 ),
        .Q(txeq_preset[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[15] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[15]_i_1_n_0 ),
        .Q(txeq_preset[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[16] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[16]_i_1_n_0 ),
        .Q(txeq_preset[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[17] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[17]_i_2_n_0 ),
        .Q(txeq_preset[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[1] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[1]_i_1_n_0 ),
        .Q(txeq_preset[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[2] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[2]_i_1_n_0 ),
        .Q(txeq_preset[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[3] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[3]_i_1_n_0 ),
        .Q(txeq_preset[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[7] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\txeq_preset[7]_i_1_n_0 ),
        .Q(txeq_preset[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[8] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[8]_i_1_n_0 ),
        .Q(txeq_preset[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_preset_reg[9] 
       (.C(pclk_sel_reg),
        .CE(E),
        .D(\txeq_preset[9]_i_1_n_0 ),
        .Q(txeq_preset[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \txeq_txcoeff[0]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[0]),
        .I3(out1),
        .I4(\txeq_txcoeff[0]_i_2_n_0 ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .O(\txeq_txcoeff[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hCCAC)) 
    \txeq_txcoeff[0]_i_2 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(\txeq_txcoeff_reg_n_0_[6] ),
        .I2(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I3(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .O(\txeq_txcoeff[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[10]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[16] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[10]),
        .I3(out1),
        .I4(\txeq_txcoeff[10]_i_2_n_0 ),
        .O(\txeq_txcoeff[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[10]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[16] ),
        .I5(\txeq_txcoeff_reg_n_0_[17] ),
        .O(\txeq_txcoeff[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[11]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[17] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[11]),
        .I3(out1),
        .I4(\txeq_txcoeff[11]_i_2_n_0 ),
        .O(\txeq_txcoeff[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[11]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[17] ),
        .I5(\txeq_txcoeff_reg_n_0_[18] ),
        .O(\txeq_txcoeff[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[12]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[18] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[12]),
        .I3(out1),
        .I4(\txeq_txcoeff[12]_i_2_n_0 ),
        .O(\txeq_txcoeff[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[12]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[18] ),
        .I5(txeq_deemph_reg2[0]),
        .O(\txeq_txcoeff[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[13]_i_1 
       (.I0(txeq_deemph_reg2[0]),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[13]),
        .I3(out1),
        .I4(\txeq_txcoeff[13]_i_2_n_0 ),
        .O(\txeq_txcoeff[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[13]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(txeq_deemph_reg2[0]),
        .I5(txeq_deemph_reg2[1]),
        .O(\txeq_txcoeff[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[14]_i_1 
       (.I0(txeq_deemph_reg2[1]),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[14]),
        .I3(out1),
        .I4(\txeq_txcoeff[14]_i_2_n_0 ),
        .O(\txeq_txcoeff[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[14]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(txeq_deemph_reg2[2]),
        .I2(txeq_deemph_reg2[1]),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I5(\txeq_txcoeff_reg_n_0_[13] ),
        .O(\txeq_txcoeff[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[15]_i_1 
       (.I0(txeq_deemph_reg2[2]),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[15]),
        .I3(out1),
        .I4(\txeq_txcoeff[15]_i_2_n_0 ),
        .O(\txeq_txcoeff[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[15]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[14] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(txeq_deemph_reg2[2]),
        .I5(txeq_deemph_reg2[3]),
        .O(\txeq_txcoeff[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[16]_i_1 
       (.I0(txeq_deemph_reg2[3]),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[16]),
        .I3(out1),
        .I4(\txeq_txcoeff[16]_i_2_n_0 ),
        .O(\txeq_txcoeff[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[16]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[15] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(txeq_deemph_reg2[3]),
        .I5(txeq_deemph_reg2[4]),
        .O(\txeq_txcoeff[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[17]_i_1 
       (.I0(txeq_deemph_reg2[4]),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[17]),
        .I3(out1),
        .I4(\txeq_txcoeff[17]_i_2_n_0 ),
        .O(\txeq_txcoeff[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[17]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[16] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(txeq_deemph_reg2[4]),
        .I5(txeq_deemph_reg2[5]),
        .O(\txeq_txcoeff[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBF8)) 
    \txeq_txcoeff[18]_i_1 
       (.I0(\FSM_onehot_fsm_tx[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_3_n_0 ),
        .I4(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I5(out1),
        .O(txeq_txcoeff));
  LUT6 #(
    .INIT(64'hFFFFA0E0A0E0A0E0)) 
    \txeq_txcoeff[18]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I2(txeq_deemph_reg2[5]),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I5(\txeq_txcoeff_reg_n_0_[17] ),
        .O(\txeq_txcoeff[18]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \txeq_txcoeff[18]_i_3 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[6] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[5] ),
        .O(\txeq_txcoeff[18]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \txeq_txcoeff[18]_i_4 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .O(\txeq_txcoeff[18]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[1]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[7] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[1]),
        .I3(out1),
        .I4(\txeq_txcoeff[1]_i_2_n_0 ),
        .O(\txeq_txcoeff[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[1]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .I2(\txeq_txcoeff_reg_n_0_[7] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[0] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[2]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[8] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[2]),
        .I3(out1),
        .I4(\txeq_txcoeff[2]_i_2_n_0 ),
        .O(\txeq_txcoeff[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[2]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(\txeq_txcoeff_reg_n_0_[9] ),
        .I2(\txeq_txcoeff_reg_n_0_[8] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[1] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[3]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[3]),
        .I3(out1),
        .I4(\txeq_txcoeff[3]_i_2_n_0 ),
        .O(\txeq_txcoeff[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[3]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(\txeq_txcoeff_reg_n_0_[10] ),
        .I2(\txeq_txcoeff_reg_n_0_[9] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[2] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \txeq_txcoeff[4]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[10] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(\txeq_txcoeff[4]_i_2_n_0 ),
        .O(\txeq_txcoeff[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[4]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(\txeq_txcoeff_reg_n_0_[11] ),
        .I2(\txeq_txcoeff_reg_n_0_[10] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \txeq_txcoeff[5]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[11] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(\txeq_txcoeff[5]_i_2_n_0 ),
        .O(\txeq_txcoeff[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[5]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(\txeq_txcoeff_reg_n_0_[12] ),
        .I2(\txeq_txcoeff_reg_n_0_[11] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[4] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \txeq_txcoeff[6]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[12] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(\txeq_txcoeff[6]_i_2_n_0 ),
        .O(\txeq_txcoeff[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    \txeq_txcoeff[6]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .I2(\txeq_txcoeff_reg_n_0_[12] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[5] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[7]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[13] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[7]),
        .I3(out1),
        .I4(\txeq_txcoeff[7]_i_2_n_0 ),
        .O(\txeq_txcoeff[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFE400E400E400)) 
    \txeq_txcoeff[7]_i_2 
       (.I0(\txeq_txcoeff[18]_i_4_n_0 ),
        .I1(\txeq_txcoeff_reg_n_0_[13] ),
        .I2(\txeq_txcoeff_reg_n_0_[14] ),
        .I3(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I4(\txeq_txcoeff_reg_n_0_[6] ),
        .I5(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .O(\txeq_txcoeff[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[8]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[14] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[8]),
        .I3(out1),
        .I4(\txeq_txcoeff[8]_i_2_n_0 ),
        .O(\txeq_txcoeff[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[8]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[7] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[14] ),
        .I5(\txeq_txcoeff_reg_n_0_[15] ),
        .O(\txeq_txcoeff[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \txeq_txcoeff[9]_i_1 
       (.I0(\txeq_txcoeff_reg_n_0_[15] ),
        .I1(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I2(txeq_preset[9]),
        .I3(out1),
        .I4(\txeq_txcoeff[9]_i_2_n_0 ),
        .O(\txeq_txcoeff[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF8F8F88888F88888)) 
    \txeq_txcoeff[9]_i_2 
       (.I0(\FSM_onehot_fsm_tx_reg_n_0_[4] ),
        .I1(\txeq_txcoeff_reg_n_0_[8] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I3(\txeq_txcoeff[18]_i_4_n_0 ),
        .I4(\txeq_txcoeff_reg_n_0_[15] ),
        .I5(\txeq_txcoeff_reg_n_0_[16] ),
        .O(\txeq_txcoeff[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4040FF40)) 
    \txeq_txcoeff_cnt[0]_i_1 
       (.I0(txeq_control_reg2[0]),
        .I1(txeq_control_reg2[1]),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[1] ),
        .I3(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .I4(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .O(txeq_txcoeff_cnt[0]));
  LUT3 #(
    .INIT(8'h60)) 
    \txeq_txcoeff_cnt[1]_i_1 
       (.I0(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .I1(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .I2(\FSM_onehot_fsm_tx_reg_n_0_[3] ),
        .O(txeq_txcoeff_cnt[1]));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[0]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[0] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_cnt_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txeq_txcoeff_cnt[1]),
        .Q(\txeq_txcoeff_cnt_reg_n_0_[1] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[0] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[0]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[0] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[10] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[10]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[10] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[11] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[11]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[11] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[12] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[12]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[12] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[13] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[13]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[13] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[14] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[14]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[14] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[15] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[15]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[15] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[16] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[16]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[16] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[17] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[17]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[17] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[18] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[18]_i_2_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[18] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[1] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[1]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[1] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[2] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[2]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[2] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[3] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[3]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[3] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[4] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[4]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[4] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[5] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[5]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[5] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[6] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[6]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[6] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[7] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[7]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[7] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[8] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[8]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[8] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \txeq_txcoeff_reg[9] 
       (.C(pclk_sel_reg),
        .CE(txeq_txcoeff),
        .D(\txeq_txcoeff[9]_i_1_n_0 ),
        .Q(\txeq_txcoeff_reg_n_0_[9] ),
        .R(rst_cpllreset));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_sync" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_sync
   (pipe_sync_fsm_rx,
    txsync_done,
    sync_txdlyen,
    \pipe_sync_fsm_tx[5] ,
    rst_cpllreset,
    txcompliance_reg2_reg,
    pclk_sel_reg,
    SYNC_TXSYNC_START0,
    \resetovrd.reset_reg[4] ,
    pipe_txdlysresetdone,
    txcompliance_reg2_reg_0,
    out0,
    \resetovrd.reset_reg[4]_0 ,
    user_rxcdrlock,
    gt_txsyncdone,
    pipe_rxdlysresetdone,
    pipe_rxphaligndone,
    pipe_rxsyncdone,
    user_active_lane,
    out,
    txelecidle_reg2_reg);
  output [0:0]pipe_sync_fsm_rx;
  output txsync_done;
  output sync_txdlyen;
  output [5:0]\pipe_sync_fsm_tx[5] ;
  input rst_cpllreset;
  input txcompliance_reg2_reg;
  input pclk_sel_reg;
  input SYNC_TXSYNC_START0;
  input \resetovrd.reset_reg[4] ;
  input [0:0]pipe_txdlysresetdone;
  input txcompliance_reg2_reg_0;
  input [0:0]out0;
  input \resetovrd.reset_reg[4]_0 ;
  input user_rxcdrlock;
  input gt_txsyncdone;
  input [0:0]pipe_rxdlysresetdone;
  input [0:0]pipe_rxphaligndone;
  input [0:0]pipe_rxsyncdone;
  input user_active_lane;
  input out;
  input txelecidle_reg2_reg;

  wire \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[5]_i_4_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ;
  wire \FSM_onehot_txsync_fsm.fsm_tx[6]_i_2_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[0] ;
  wire SYNC_TXSYNC_START0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg2;
  wire gt_txsyncdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire mmcm_lock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire mmcm_lock_reg2;
  wire out;
  wire [0:0]out0;
  wire pclk_sel_reg;
  wire [0:0]pipe_rxdlysresetdone;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxsyncdone;
  wire [0:0]pipe_sync_fsm_rx;
  (* RTL_KEEP = "yes" *) wire [5:0]\pipe_sync_fsm_tx[5] ;
  wire [0:0]pipe_txdlysresetdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_idle_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_idle_reg2;
  wire \resetovrd.reset_reg[4] ;
  wire \resetovrd.reset_reg[4]_0 ;
  wire rst_cpllreset;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxcdrlock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxcdrlock_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxdlysresetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxdlysresetdone_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxelecidle_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxelecidle_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxphaligndone_m_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxphaligndone_m_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxphaligndone_s_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxphaligndone_s_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxsync_donem_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxsync_donem_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxsync_start_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxsync_start_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxsyncdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxsyncdone_reg2;
  wire sync_txdlyen;
  wire txcompliance_reg2_reg;
  wire txcompliance_reg2_reg_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txdlysresetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txdlysresetdone_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txdlysresetdone_reg3;
  wire txelecidle_reg2_reg;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txphaligndone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txphaligndone_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txphaligndone_reg3;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txphinitdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txphinitdone_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txphinitdone_reg3;
  wire txsync_done;
  wire \txsync_fsm.txdlyen_i_1_n_0 ;
  wire \txsync_fsm.txdlyen_i_2_n_0 ;
  wire \txsync_fsm.txsync_done_i_1_n_0 ;
  wire \txsync_fsm.txsync_done_i_2_n_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_start_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_start_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsync_start_reg3;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsyncdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsyncdone_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txsyncdone_reg3;
  wire user_active_lane;
  wire user_rxcdrlock;

  LUT6 #(
    .INIT(64'h44444444F4F444F4)) 
    \FSM_onehot_txsync_fsm.fsm_tx[1]_i_1 
       (.I0(txsync_start_reg2),
        .I1(\pipe_sync_fsm_tx[5] [0]),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_2_n_0 ),
        .I3(\pipe_sync_fsm_tx[5] [5]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_4_n_0 ),
        .I5(\pipe_sync_fsm_tx[5] [4]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \FSM_onehot_txsync_fsm.fsm_tx[2]_i_1 
       (.I0(txsync_start_reg2),
        .I1(\pipe_sync_fsm_tx[5] [0]),
        .I2(\pipe_sync_fsm_tx[5] [1]),
        .I3(mmcm_lock_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2320202023202320)) 
    \FSM_onehot_txsync_fsm.fsm_tx[3]_i_1 
       (.I0(mmcm_lock_reg2),
        .I1(\pipe_sync_fsm_tx[5] [0]),
        .I2(\pipe_sync_fsm_tx[5] [1]),
        .I3(\pipe_sync_fsm_tx[5] [2]),
        .I4(txdlysresetdone_reg3),
        .I5(txdlysresetdone_reg2),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4000400040F04000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_1 
       (.I0(txdlysresetdone_reg3),
        .I1(txdlysresetdone_reg2),
        .I2(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ),
        .I3(\pipe_sync_fsm_tx[5] [2]),
        .I4(\pipe_sync_fsm_tx[5] [3]),
        .I5(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_2_n_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_txsync_fsm.fsm_tx[4]_i_2 
       (.I0(\pipe_sync_fsm_tx[5] [0]),
        .I1(\pipe_sync_fsm_tx[5] [1]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80808C80)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_2_n_0 ),
        .I1(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3_n_0 ),
        .I2(\pipe_sync_fsm_tx[5] [3]),
        .I3(\pipe_sync_fsm_tx[5] [4]),
        .I4(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_4_n_0 ),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_2 
       (.I0(txphinitdone_reg3),
        .I1(txphinitdone_reg2),
        .I2(out),
        .I3(txelecidle_reg2_reg),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_3 
       (.I0(\pipe_sync_fsm_tx[5] [1]),
        .I1(\pipe_sync_fsm_tx[5] [0]),
        .I2(\pipe_sync_fsm_tx[5] [2]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_txsync_fsm.fsm_tx[5]_i_4 
       (.I0(txphaligndone_reg3),
        .I1(txphaligndone_reg2),
        .I2(out),
        .I3(txelecidle_reg2_reg),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0A00AAAA80880000)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_1 
       (.I0(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_2_n_0 ),
        .I1(\pipe_sync_fsm_tx[5] [5]),
        .I2(txphaligndone_reg3),
        .I3(txphaligndone_reg2),
        .I4(user_active_lane),
        .I5(\pipe_sync_fsm_tx[5] [4]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_2 
       (.I0(\pipe_sync_fsm_tx[5] [2]),
        .I1(\pipe_sync_fsm_tx[5] [0]),
        .I2(\pipe_sync_fsm_tx[5] [1]),
        .I3(\pipe_sync_fsm_tx[5] [3]),
        .O(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_2_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(\FSM_onehot_txsync_fsm.fsm_tx_reg_n_0_[0] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[1]_i_1_n_0 ),
        .Q(\pipe_sync_fsm_tx[5] [0]),
        .S(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[2]_i_1_n_0 ),
        .Q(\pipe_sync_fsm_tx[5] [1]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[3]_i_1_n_0 ),
        .Q(\pipe_sync_fsm_tx[5] [2]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[4]_i_1_n_0 ),
        .Q(\pipe_sync_fsm_tx[5] [3]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[5]_i_1_n_0 ),
        .Q(\pipe_sync_fsm_tx[5] [4]),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_txsync_fsm.fsm_tx_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_txsync_fsm.fsm_tx[6]_i_1_n_0 ),
        .Q(\pipe_sync_fsm_tx[5] [5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(gen3_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4] ),
        .Q(mmcm_lock_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(out0),
        .Q(rate_idle_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(user_rxcdrlock),
        .Q(rxcdrlock_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(pipe_rxdlysresetdone),
        .Q(rxdlysresetdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxdlysresetdone_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxdlysresetdone_reg1),
        .Q(rxdlysresetdone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4]_0 ),
        .Q(rxelecidle_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxelecidle_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxelecidle_reg1),
        .Q(rxelecidle_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(pipe_rxphaligndone),
        .Q(rxphaligndone_m_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_m_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxphaligndone_m_reg1),
        .Q(rxphaligndone_m_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxphaligndone_s_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxphaligndone_s_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxphaligndone_s_reg1),
        .Q(rxphaligndone_s_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_donem_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_donem_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxsync_donem_reg1),
        .Q(rxsync_donem_reg2),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxsync_fsm_disable.fsm_rx_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b1),
        .Q(pipe_sync_fsm_rx),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(rxsync_start_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsync_start_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxsync_start_reg1),
        .Q(rxsync_start_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(pipe_rxsyncdone),
        .Q(rxsyncdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxsyncdone_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxsyncdone_reg1),
        .Q(rxsyncdone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(pipe_txdlysresetdone),
        .Q(txdlysresetdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txdlysresetdone_reg1),
        .Q(txdlysresetdone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txdlysresetdone_reg3_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txdlysresetdone_reg2),
        .Q(txdlysresetdone_reg3),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcompliance_reg2_reg),
        .Q(txphaligndone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txphaligndone_reg1),
        .Q(txphaligndone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphaligndone_reg3_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txphaligndone_reg2),
        .Q(txphaligndone_reg3),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcompliance_reg2_reg_0),
        .Q(txphinitdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txphinitdone_reg1),
        .Q(txphinitdone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txphinitdone_reg3_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txphinitdone_reg2),
        .Q(txphinitdone_reg3),
        .R(rst_cpllreset));
  LUT4 #(
    .INIT(16'hABA8)) 
    \txsync_fsm.txdlyen_i_1 
       (.I0(\pipe_sync_fsm_tx[5] [5]),
        .I1(\txsync_fsm.txdlyen_i_2_n_0 ),
        .I2(txsync_start_reg2),
        .I3(sync_txdlyen),
        .O(\txsync_fsm.txdlyen_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \txsync_fsm.txdlyen_i_2 
       (.I0(\pipe_sync_fsm_tx[5] [4]),
        .I1(\pipe_sync_fsm_tx[5] [5]),
        .I2(\pipe_sync_fsm_tx[5] [2]),
        .I3(\pipe_sync_fsm_tx[5] [3]),
        .I4(\pipe_sync_fsm_tx[5] [0]),
        .I5(\pipe_sync_fsm_tx[5] [1]),
        .O(\txsync_fsm.txdlyen_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txdlyen_reg 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\txsync_fsm.txdlyen_i_1_n_0 ),
        .Q(sync_txdlyen),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'h22A2FFFF22A20000)) 
    \txsync_fsm.txsync_done_i_1 
       (.I0(\pipe_sync_fsm_tx[5] [5]),
        .I1(user_active_lane),
        .I2(txphaligndone_reg2),
        .I3(txphaligndone_reg3),
        .I4(\txsync_fsm.txsync_done_i_2_n_0 ),
        .I5(txsync_done),
        .O(\txsync_fsm.txsync_done_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \txsync_fsm.txsync_done_i_2 
       (.I0(\txsync_fsm.txdlyen_i_2_n_0 ),
        .I1(txsync_start_reg2),
        .O(\txsync_fsm.txsync_done_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \txsync_fsm.txsync_done_reg 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\txsync_fsm.txsync_done_i_1_n_0 ),
        .Q(txsync_done),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(SYNC_TXSYNC_START0),
        .Q(txsync_start_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txsync_start_reg1),
        .Q(txsync_start_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsync_start_reg3_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txsync_start_reg2),
        .Q(txsync_start_reg3),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(gt_txsyncdone),
        .Q(txsyncdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txsyncdone_reg1),
        .Q(txsyncdone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txsyncdone_reg3_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txsyncdone_reg2),
        .Q(txsyncdone_reg3),
        .R(rst_cpllreset));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_user" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_user
   (out,
    txphinitdone_reg1_reg,
    oobclk,
    gt_rxpmareset_i,
    user_rxcdrreset,
    user_rxcdrfreqreset,
    user_eyescanreset,
    user_rxpcsreset,
    user_rxbufreset,
    rdy_reg1_reg,
    txphinitdone_reg1_reg_0,
    txphaligndone_reg1_reg,
    user_active_lane,
    phy_rdy_n_int_reg,
    user_resetdone,
    user_rxcdrlock,
    user_resetovrd,
    gt_rxvalid_q_reg,
    gt_rx_phy_status_q_reg,
    rst_cpllreset,
    pclk_sel_reg,
    pclk_sel_reg_0,
    gt_rxresetdone,
    gt_txresetdone,
    TXCHARDISPMODE,
    pipe_tx0_elec_idle_gt,
    gt_rxcdrlock,
    SR,
    gt_rxvalid,
    pipe_rxstatus,
    pipe_rst_idle,
    out0,
    rxeq_adapt_done,
    pipe_rxphaligndone,
    pipe_txphinitdone,
    pipe_txphaligndone,
    reg_clock_locked,
    \resetovrd.reset_reg[4]_0 ,
    gt_rxvalid_q_reg_0,
    gt_phystatus);
  output out;
  output txphinitdone_reg1_reg;
  output oobclk;
  output gt_rxpmareset_i;
  output user_rxcdrreset;
  output user_rxcdrfreqreset;
  output user_eyescanreset;
  output user_rxpcsreset;
  output user_rxbufreset;
  output rdy_reg1_reg;
  output txphinitdone_reg1_reg_0;
  output txphaligndone_reg1_reg;
  output user_active_lane;
  output phy_rdy_n_int_reg;
  output user_resetdone;
  output user_rxcdrlock;
  output user_resetovrd;
  output gt_rxvalid_q_reg;
  output gt_rx_phy_status_q_reg;
  input rst_cpllreset;
  input pclk_sel_reg;
  input pclk_sel_reg_0;
  input gt_rxresetdone;
  input gt_txresetdone;
  input [0:0]TXCHARDISPMODE;
  input pipe_tx0_elec_idle_gt;
  input gt_rxcdrlock;
  input [0:0]SR;
  input gt_rxvalid;
  input [0:0]pipe_rxstatus;
  input pipe_rst_idle;
  input [1:0]out0;
  input rxeq_adapt_done;
  input [0:0]pipe_rxphaligndone;
  input [0:0]pipe_txphinitdone;
  input [0:0]pipe_txphaligndone;
  input reg_clock_locked;
  input \resetovrd.reset_reg[4]_0 ;
  input gt_rxvalid_q_reg_0;
  input gt_phystatus;

  wire [0:0]SR;
  wire [0:0]TXCHARDISPMODE;
  wire [1:0]fsm;
  wire gt_phystatus;
  wire gt_rx_phy_status_q_reg;
  wire gt_rxcdrlock;
  wire gt_rxpmareset_i;
  wire gt_rxresetdone;
  wire gt_rxvalid;
  wire gt_rxvalid_q_i_4_n_0;
  wire gt_rxvalid_q_reg;
  wire gt_rxvalid_q_reg_0;
  wire gt_txresetdone;
  wire oobclk;
  wire [1:0]oobclk_cnt;
  wire \oobclk_div.oobclk_cnt[0]_i_1_n_0 ;
  wire \oobclk_div.oobclk_cnt[1]_i_1_n_0 ;
  wire \oobclk_div.oobclk_i_1_n_0 ;
  wire [1:0]out0;
  wire [3:0]p_0_in__2;
  wire [3:0]p_0_in__3;
  wire pclk_sel_reg;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire pclk_sel_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire pclk_sel_reg2;
  wire pclk_sel_reg_0;
  wire phy_rdy_n_int_reg;
  wire pipe_rst_idle;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxstatus;
  wire pipe_tx0_elec_idle_gt;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_done_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_gen3_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_gen3_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_idle_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_idle_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_rxsync_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rate_rxsync_reg2;
  wire rdy_reg1_reg;
  wire reg_clock_locked;
  wire [7:7]reset;
  wire [7:0]reset_cnt0;
  wire \resetovrd.fsm[0]_i_1_n_0 ;
  wire \resetovrd.fsm[0]_i_2_n_0 ;
  wire \resetovrd.fsm[1]_i_1_n_0 ;
  wire \resetovrd.fsm[1]_i_2_n_0 ;
  wire \resetovrd.fsm[1]_i_3_n_0 ;
  wire \resetovrd.fsm[1]_i_4_n_0 ;
  wire \resetovrd.reset[0]_i_1_n_0 ;
  wire \resetovrd.reset[1]_i_1_n_0 ;
  wire \resetovrd.reset[2]_i_1_n_0 ;
  wire \resetovrd.reset[3]_i_1_n_0 ;
  wire \resetovrd.reset[4]_i_1_n_0 ;
  wire \resetovrd.reset[5]_i_1_n_0 ;
  wire \resetovrd.reset[6]_i_1_n_0 ;
  wire \resetovrd.reset[7]_i_1_n_0 ;
  wire \resetovrd.reset[7]_i_2_n_0 ;
  wire \resetovrd.reset_cnt[1]_i_1_n_0 ;
  wire \resetovrd.reset_cnt[7]_i_1_n_0 ;
  wire \resetovrd.reset_cnt[7]_i_3_n_0 ;
  wire [7:0]\resetovrd.reset_cnt_reg__0 ;
  wire \resetovrd.reset_reg[4]_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire resetovrd_start_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire resetovrd_start_reg2;
  wire rst_cpllreset;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rst_idle_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rst_idle_reg2;
  wire [3:0]rxcdrlock_cnt_reg__0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxcdrlock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxcdrlock_reg2;
  wire rxeq_adapt_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxeq_adapt_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxeq_adapt_done_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxresetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxresetdone_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxstatus_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxstatus_reg2;
  wire [3:0]rxvalid_cnt_reg__0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxvalid_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rxvalid_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txcompliance_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txcompliance_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txelecidle_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txelecidle_reg2;
  wire txphaligndone_reg1_reg;
  wire txphinitdone_reg1_reg_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txresetdone_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire txresetdone_reg2;
  wire user_active_lane;
  wire user_eyescanreset;
  wire user_resetdone;
  wire user_resetovrd;
  wire user_rxbufreset;
  wire user_rxcdrfreqreset;
  wire user_rxcdrlock;
  wire user_rxcdrreset;
  wire user_rxdfelpmreset;
  wire user_rxpcsreset;

  assign out = txcompliance_reg2;
  assign txphinitdone_reg1_reg = txelecidle_reg2;
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_txsync_fsm.fsm_tx[6]_i_3 
       (.I0(txelecidle_reg2),
        .I1(txcompliance_reg2),
        .O(user_active_lane));
  LUT5 #(
    .INIT(32'hFFFFE0FF)) 
    gt_rx_phy_status_q_i_1
       (.I0(rate_idle_reg2),
        .I1(rate_rxsync_reg2),
        .I2(gt_phystatus),
        .I3(rst_idle_reg2),
        .I4(rate_done_reg2),
        .O(gt_rx_phy_status_q_reg));
  LUT6 #(
    .INIT(64'hBFFFBFFFFFFFBFFF)) 
    gt_rxvalid_q_i_2
       (.I0(gt_rxvalid_q_i_4_n_0),
        .I1(rate_idle_reg2),
        .I2(gt_rxvalid),
        .I3(rst_idle_reg2),
        .I4(\resetovrd.reset_reg[4]_0 ),
        .I5(gt_rxvalid_q_reg_0),
        .O(gt_rxvalid_q_reg));
  LUT4 #(
    .INIT(16'h7FFF)) 
    gt_rxvalid_q_i_4
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[1]),
        .I2(rxvalid_cnt_reg__0[0]),
        .I3(rxvalid_cnt_reg__0[2]),
        .O(gt_rxvalid_q_i_4_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    \gtp_channel.gtpe2_channel_i_i_3 
       (.I0(fsm[1]),
        .I1(fsm[0]),
        .O(user_resetovrd));
  LUT3 #(
    .INIT(8'hEA)) 
    \gtp_channel.gtpe2_channel_i_i_4 
       (.I0(pipe_rxphaligndone),
        .I1(txcompliance_reg2),
        .I2(txelecidle_reg2),
        .O(rdy_reg1_reg));
  LUT3 #(
    .INIT(8'hEA)) 
    \gtp_channel.gtpe2_channel_i_i_5 
       (.I0(pipe_txphaligndone),
        .I1(txcompliance_reg2),
        .I2(txelecidle_reg2),
        .O(txphaligndone_reg1_reg));
  LUT1 #(
    .INIT(2'h1)) 
    \oobclk_div.oobclk_cnt[0]_i_1 
       (.I0(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_cnt[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \oobclk_div.oobclk_cnt[1]_i_1 
       (.I0(oobclk_cnt[0]),
        .I1(oobclk_cnt[1]),
        .O(\oobclk_div.oobclk_cnt[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_cnt[0]_i_1_n_0 ),
        .Q(oobclk_cnt[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_cnt_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_cnt[1]_i_1_n_0 ),
        .Q(oobclk_cnt[1]),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'hB8)) 
    \oobclk_div.oobclk_i_1 
       (.I0(oobclk_cnt[1]),
        .I1(pclk_sel_reg2),
        .I2(oobclk_cnt[0]),
        .O(\oobclk_div.oobclk_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \oobclk_div.oobclk_reg 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\oobclk_div.oobclk_i_1_n_0 ),
        .Q(oobclk),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pclk_sel_reg),
        .Q(pclk_sel_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE pclk_sel_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pclk_sel_reg1),
        .Q(pclk_sel_reg2),
        .R(rst_cpllreset));
  LUT2 #(
    .INIT(4'h2)) 
    phy_rdy_n_int_i_1
       (.I0(reg_clock_locked),
        .I1(rst_idle_reg2),
        .O(phy_rdy_n_int_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(out0[0]),
        .Q(rate_done_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_done_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rate_done_reg1),
        .Q(rate_done_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_gen3_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_gen3_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rate_gen3_reg1),
        .Q(rate_gen3_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(out0[1]),
        .Q(rate_idle_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_idle_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rate_idle_reg1),
        .Q(rate_idle_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .Q(rate_rxsync_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rate_rxsync_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rate_rxsync_reg1),
        .Q(rate_rxsync_reg2),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \resetdone_reg1[0]_i_1 
       (.I0(txresetdone_reg2),
        .I1(rxresetdone_reg2),
        .O(user_resetdone));
  LUT5 #(
    .INIT(32'h00A8AAA8)) 
    \resetovrd.fsm[0]_i_1 
       (.I0(\resetovrd.fsm[0]_i_2_n_0 ),
        .I1(resetovrd_start_reg2),
        .I2(fsm[0]),
        .I3(fsm[1]),
        .I4(\resetovrd.fsm[1]_i_3_n_0 ),
        .O(\resetovrd.fsm[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFDFFFF)) 
    \resetovrd.fsm[0]_i_2 
       (.I0(fsm[0]),
        .I1(fsm[1]),
        .I2(\resetovrd.reset_cnt_reg__0 [7]),
        .I3(\resetovrd.reset_cnt_reg__0 [5]),
        .I4(\resetovrd.reset_cnt[7]_i_3_n_0 ),
        .I5(\resetovrd.reset_cnt_reg__0 [6]),
        .O(\resetovrd.fsm[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000400FFFF0400)) 
    \resetovrd.fsm[1]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [6]),
        .I1(\resetovrd.fsm[1]_i_2_n_0 ),
        .I2(\resetovrd.reset_cnt_reg__0 [7]),
        .I3(fsm[0]),
        .I4(fsm[1]),
        .I5(\resetovrd.fsm[1]_i_3_n_0 ),
        .O(\resetovrd.fsm[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \resetovrd.fsm[1]_i_2 
       (.I0(\resetovrd.reset_cnt_reg__0 [3]),
        .I1(\resetovrd.reset_cnt_reg__0 [1]),
        .I2(\resetovrd.reset_cnt_reg__0 [0]),
        .I3(\resetovrd.reset_cnt_reg__0 [2]),
        .I4(\resetovrd.reset_cnt_reg__0 [4]),
        .I5(\resetovrd.reset_cnt_reg__0 [5]),
        .O(\resetovrd.fsm[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \resetovrd.fsm[1]_i_3 
       (.I0(\resetovrd.fsm[1]_i_4_n_0 ),
        .I1(user_rxpcsreset),
        .I2(fsm[0]),
        .I3(reset),
        .I4(user_rxcdrfreqreset),
        .O(\resetovrd.fsm[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \resetovrd.fsm[1]_i_4 
       (.I0(gt_rxpmareset_i),
        .I1(user_rxcdrreset),
        .I2(user_rxbufreset),
        .I3(user_eyescanreset),
        .I4(rxresetdone_reg2),
        .I5(user_rxdfelpmreset),
        .O(\resetovrd.fsm[1]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.fsm_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\resetovrd.fsm[0]_i_1_n_0 ),
        .Q(fsm[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.fsm_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\resetovrd.fsm[1]_i_1_n_0 ),
        .Q(fsm[1]),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'h575F0008)) 
    \resetovrd.reset[0]_i_1 
       (.I0(\resetovrd.reset_cnt[7]_i_1_n_0 ),
        .I1(fsm[1]),
        .I2(rst_cpllreset),
        .I3(fsm[0]),
        .I4(gt_rxpmareset_i),
        .O(\resetovrd.reset[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[1]_i_1 
       (.I0(gt_rxpmareset_i),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[2]_i_1 
       (.I0(user_rxcdrreset),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[3]_i_1 
       (.I0(user_rxcdrfreqreset),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[4]_i_1 
       (.I0(user_rxdfelpmreset),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[5]_i_1 
       (.I0(user_eyescanreset),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[6]_i_1 
       (.I0(user_rxpcsreset),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \resetovrd.reset[7]_i_1 
       (.I0(\resetovrd.reset_cnt[7]_i_1_n_0 ),
        .I1(fsm[1]),
        .I2(rst_cpllreset),
        .O(\resetovrd.reset[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \resetovrd.reset[7]_i_2 
       (.I0(user_rxbufreset),
        .I1(fsm[0]),
        .I2(fsm[1]),
        .O(\resetovrd.reset[7]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \resetovrd.reset_cnt[0]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [0]),
        .O(reset_cnt0[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \resetovrd.reset_cnt[1]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [1]),
        .I1(\resetovrd.reset_cnt_reg__0 [0]),
        .O(\resetovrd.reset_cnt[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \resetovrd.reset_cnt[2]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [1]),
        .I1(\resetovrd.reset_cnt_reg__0 [0]),
        .I2(\resetovrd.reset_cnt_reg__0 [2]),
        .O(reset_cnt0[2]));
  LUT4 #(
    .INIT(16'hFE01)) 
    \resetovrd.reset_cnt[3]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [2]),
        .I1(\resetovrd.reset_cnt_reg__0 [0]),
        .I2(\resetovrd.reset_cnt_reg__0 [1]),
        .I3(\resetovrd.reset_cnt_reg__0 [3]),
        .O(reset_cnt0[3]));
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \resetovrd.reset_cnt[4]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [3]),
        .I1(\resetovrd.reset_cnt_reg__0 [1]),
        .I2(\resetovrd.reset_cnt_reg__0 [0]),
        .I3(\resetovrd.reset_cnt_reg__0 [2]),
        .I4(\resetovrd.reset_cnt_reg__0 [4]),
        .O(reset_cnt0[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \resetovrd.reset_cnt[5]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [5]),
        .I1(\resetovrd.reset_cnt_reg__0 [3]),
        .I2(\resetovrd.reset_cnt_reg__0 [1]),
        .I3(\resetovrd.reset_cnt_reg__0 [0]),
        .I4(\resetovrd.reset_cnt_reg__0 [2]),
        .I5(\resetovrd.reset_cnt_reg__0 [4]),
        .O(reset_cnt0[5]));
  LUT3 #(
    .INIT(8'h9A)) 
    \resetovrd.reset_cnt[6]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [6]),
        .I1(\resetovrd.reset_cnt_reg__0 [5]),
        .I2(\resetovrd.reset_cnt[7]_i_3_n_0 ),
        .O(reset_cnt0[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFF0010FFFF)) 
    \resetovrd.reset_cnt[7]_i_1 
       (.I0(\resetovrd.reset_cnt_reg__0 [7]),
        .I1(\resetovrd.reset_cnt_reg__0 [5]),
        .I2(\resetovrd.reset_cnt[7]_i_3_n_0 ),
        .I3(\resetovrd.reset_cnt_reg__0 [6]),
        .I4(fsm[0]),
        .I5(rst_cpllreset),
        .O(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAA9A)) 
    \resetovrd.reset_cnt[7]_i_2 
       (.I0(\resetovrd.reset_cnt_reg__0 [7]),
        .I1(\resetovrd.reset_cnt_reg__0 [6]),
        .I2(\resetovrd.reset_cnt[7]_i_3_n_0 ),
        .I3(\resetovrd.reset_cnt_reg__0 [5]),
        .O(reset_cnt0[7]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \resetovrd.reset_cnt[7]_i_3 
       (.I0(\resetovrd.reset_cnt_reg__0 [4]),
        .I1(\resetovrd.reset_cnt_reg__0 [2]),
        .I2(\resetovrd.reset_cnt_reg__0 [0]),
        .I3(\resetovrd.reset_cnt_reg__0 [1]),
        .I4(\resetovrd.reset_cnt_reg__0 [3]),
        .O(\resetovrd.reset_cnt[7]_i_3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[0]),
        .Q(\resetovrd.reset_cnt_reg__0 [0]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\resetovrd.reset_cnt[1]_i_1_n_0 ),
        .Q(\resetovrd.reset_cnt_reg__0 [1]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[2]),
        .Q(\resetovrd.reset_cnt_reg__0 [2]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[3]),
        .Q(\resetovrd.reset_cnt_reg__0 [3]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[4] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[4]),
        .Q(\resetovrd.reset_cnt_reg__0 [4]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[5] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[5]),
        .Q(\resetovrd.reset_cnt_reg__0 [5]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \resetovrd.reset_cnt_reg[6] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[6]),
        .Q(\resetovrd.reset_cnt_reg__0 [6]),
        .S(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_cnt_reg[7] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(reset_cnt0[7]),
        .Q(\resetovrd.reset_cnt_reg__0 [7]),
        .R(\resetovrd.reset_cnt[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(\resetovrd.reset[0]_i_1_n_0 ),
        .Q(gt_rxpmareset_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[1]_i_1_n_0 ),
        .Q(user_rxcdrreset),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[2]_i_1_n_0 ),
        .Q(user_rxcdrfreqreset),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[3]_i_1_n_0 ),
        .Q(user_rxdfelpmreset),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[4] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[4]_i_1_n_0 ),
        .Q(user_eyescanreset),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[5] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[5]_i_1_n_0 ),
        .Q(user_rxpcsreset),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[6] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[6]_i_1_n_0 ),
        .Q(user_rxbufreset),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \resetovrd.reset_reg[7] 
       (.C(pclk_sel_reg_0),
        .CE(\resetovrd.reset[7]_i_1_n_0 ),
        .D(\resetovrd.reset[7]_i_2_n_0 ),
        .Q(reset),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(1'b0),
        .Q(resetovrd_start_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE resetovrd_start_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(resetovrd_start_reg1),
        .Q(resetovrd_start_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pipe_rst_idle),
        .Q(rst_idle_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rst_idle_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rst_idle_reg1),
        .Q(rst_idle_reg2),
        .R(SR));
  LUT5 #(
    .INIT(32'h80AA00AA)) 
    \rxcdrlock_cnt[0]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_cnt_reg__0[1]),
        .I3(rxcdrlock_cnt_reg__0[0]),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__2[0]));
  LUT5 #(
    .INIT(32'hA8282828)) 
    \rxcdrlock_cnt[1]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg__0[1]),
        .I2(rxcdrlock_cnt_reg__0[0]),
        .I3(rxcdrlock_cnt_reg__0[2]),
        .I4(rxcdrlock_cnt_reg__0[3]),
        .O(p_0_in__2[1]));
  LUT5 #(
    .INIT(32'hBCCC0000)) 
    \rxcdrlock_cnt[2]_i_1 
       (.I0(rxcdrlock_cnt_reg__0[3]),
        .I1(rxcdrlock_cnt_reg__0[2]),
        .I2(rxcdrlock_cnt_reg__0[0]),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_reg2),
        .O(p_0_in__2[2]));
  LUT5 #(
    .INIT(32'hA8888888)) 
    \rxcdrlock_cnt[3]_i_1 
       (.I0(rxcdrlock_reg2),
        .I1(rxcdrlock_cnt_reg__0[3]),
        .I2(rxcdrlock_cnt_reg__0[0]),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[2]),
        .O(p_0_in__2[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__2[0]),
        .Q(rxcdrlock_cnt_reg__0[0]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__2[1]),
        .Q(rxcdrlock_cnt_reg__0[1]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__2[2]),
        .Q(rxcdrlock_cnt_reg__0[2]),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \rxcdrlock_cnt_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__2[3]),
        .Q(rxcdrlock_cnt_reg__0[3]),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'h80000000)) 
    \rxcdrlock_reg1[0]_i_1 
       (.I0(gt_rxcdrlock),
        .I1(rxcdrlock_cnt_reg__0[3]),
        .I2(rxcdrlock_cnt_reg__0[0]),
        .I3(rxcdrlock_cnt_reg__0[1]),
        .I4(rxcdrlock_cnt_reg__0[2]),
        .O(user_rxcdrlock));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_rxcdrlock),
        .Q(rxcdrlock_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxcdrlock_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxcdrlock_reg1),
        .Q(rxcdrlock_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxeq_adapt_done),
        .Q(rxeq_adapt_done_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxeq_adapt_done_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxeq_adapt_done_reg1),
        .Q(rxeq_adapt_done_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_rxresetdone),
        .Q(rxresetdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxresetdone_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxresetdone_reg1),
        .Q(rxresetdone_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pipe_rxstatus),
        .Q(rxstatus_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxstatus_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxstatus_reg1),
        .Q(rxstatus_reg2),
        .R(SR));
  LUT6 #(
    .INIT(64'h8080000000FF0000)) 
    \rxvalid_cnt[0]_i_1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[1]),
        .I2(rxvalid_cnt_reg__0[2]),
        .I3(rxstatus_reg2),
        .I4(rxvalid_reg2),
        .I5(rxvalid_cnt_reg__0[0]),
        .O(p_0_in__3[0]));
  LUT6 #(
    .INIT(64'h808000F000F00000)) 
    \rxvalid_cnt[1]_i_1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[2]),
        .I2(rxvalid_reg2),
        .I3(rxstatus_reg2),
        .I4(rxvalid_cnt_reg__0[0]),
        .I5(rxvalid_cnt_reg__0[1]),
        .O(p_0_in__3[1]));
  LUT6 #(
    .INIT(64'h80000000BFC00000)) 
    \rxvalid_cnt[2]_i_1 
       (.I0(rxvalid_cnt_reg__0[3]),
        .I1(rxvalid_cnt_reg__0[1]),
        .I2(rxvalid_cnt_reg__0[0]),
        .I3(rxvalid_cnt_reg__0[2]),
        .I4(rxvalid_reg2),
        .I5(rxstatus_reg2),
        .O(p_0_in__3[2]));
  LUT6 #(
    .INIT(64'hC440404040404040)) 
    \rxvalid_cnt[3]_i_1 
       (.I0(rxstatus_reg2),
        .I1(rxvalid_reg2),
        .I2(rxvalid_cnt_reg__0[3]),
        .I3(rxvalid_cnt_reg__0[1]),
        .I4(rxvalid_cnt_reg__0[0]),
        .I5(rxvalid_cnt_reg__0[2]),
        .O(p_0_in__3[3]));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[0] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__3[0]),
        .Q(rxvalid_cnt_reg__0[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[1] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__3[1]),
        .Q(rxvalid_cnt_reg__0[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[2] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__3[2]),
        .Q(rxvalid_cnt_reg__0[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \rxvalid_cnt_reg[3] 
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(p_0_in__3[3]),
        .Q(rxvalid_cnt_reg__0[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_rxvalid),
        .Q(rxvalid_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rxvalid_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(rxvalid_reg1),
        .Q(rxvalid_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(TXCHARDISPMODE),
        .Q(txcompliance_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txcompliance_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txcompliance_reg1),
        .Q(txcompliance_reg2),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(pipe_tx0_elec_idle_gt),
        .Q(txelecidle_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txelecidle_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txelecidle_reg1),
        .Q(txelecidle_reg2),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'hEA)) 
    txphinitdone_reg1_i_1
       (.I0(pipe_txphinitdone),
        .I1(txcompliance_reg2),
        .I2(txelecidle_reg2),
        .O(txphinitdone_reg1_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg1_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(gt_txresetdone),
        .Q(txresetdone_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE txresetdone_reg2_reg
       (.C(pclk_sel_reg_0),
        .CE(1'b1),
        .D(txresetdone_reg1),
        .Q(txresetdone_reg2),
        .R(rst_cpllreset));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_wrapper" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_wrapper
   (clk_txoutclk,
    CLK,
    int_pclk_out_slave,
    int_dclk_out,
    int_userclk1_out,
    mmcm_lock,
    \int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    ext_ch_gt_drprdy,
    pipe_eyescandataerror,
    pci_exp_txn,
    pci_exp_txp,
    pipe_rx0_chanisaligned_gt,
    pipe_rxcommadet,
    pipe_rxdlysresetdone,
    rxelecidle_reg1_reg,
    clk_rxoutclk,
    pipe_rxphaligndone,
    pipe_rxpmaresetdone,
    pipe_rxprbserr,
    pipe_rxsyncdone,
    pipe_txdlysresetdone,
    pipe_txphaligndone,
    pipe_txphinitdone,
    pipe_dmonitorout,
    ext_ch_gt_drpdo,
    pipe_rxbufstatus,
    pipe_rxstatus,
    \gt_rxdata_q_reg[15] ,
    \gt_rxcharisk_q_reg[1] ,
    pipe_rxdisperr,
    pipe_rxnotintable,
    out0,
    pclk_sel_reg1_reg,
    pipe_rate_idle,
    pipe_rst_idle,
    pipe_sync_fsm_rx,
    pipe_rst_fsm,
    \pl_ltssm_state_q_reg[0] ,
    \pipe_rate_fsm[3] ,
    \pipe_drp_fsm[2] ,
    phy_rdy_n_int_reg,
    gt_rxvalid_q_reg,
    \gt_rx_status_q_reg[2] ,
    gt_rx_phy_status_q_reg,
    gt_ch_drp_rdy,
    \pipe_qrst_fsm[0] ,
    pipe_qrst_fsm,
    pipe_qrst_idle,
    REFCLK,
    pci_exp_rxn,
    pci_exp_rxp,
    pipe_rx0_polarity_gt,
    pipe_rxprbscntreset,
    pipe_tx_deemph_gt,
    pipe_tx_rcvr_det_gt,
    pipe_tx0_elec_idle_gt,
    pipe_txinhibit,
    pipe_txprbsforceerr,
    Q,
    pipe_loopback,
    pipe_rxprbssel,
    \pipe_stages_1.pipe_tx_margin_q_reg[2] ,
    pipe_txprbssel,
    \pipe_stages_1.pipe_tx_data_q_reg[15] ,
    TXCHARDISPMODE,
    \pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ,
    int_pclk_sel_slave,
    SR,
    pipe_mmcm_rst_n,
    reg_clock_locked,
    gt_rxvalid_q_reg_0,
    \pl_ltssm_state_q_reg[5] ,
    UNCONN_IN,
    UNCONN_IN_0,
    ext_ch_gt_drpen,
    ext_ch_gt_drpaddr,
    ext_ch_gt_drpdi,
    ext_ch_gt_drpwe);
  output clk_txoutclk;
  output CLK;
  output int_pclk_out_slave;
  output int_dclk_out;
  output int_userclk1_out;
  output mmcm_lock;
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [0:0]ext_ch_gt_drprdy;
  output [0:0]pipe_eyescandataerror;
  output [0:0]pci_exp_txn;
  output [0:0]pci_exp_txp;
  output pipe_rx0_chanisaligned_gt;
  output [0:0]pipe_rxcommadet;
  output [0:0]pipe_rxdlysresetdone;
  output rxelecidle_reg1_reg;
  output [0:0]clk_rxoutclk;
  output [0:0]pipe_rxphaligndone;
  output [0:0]pipe_rxpmaresetdone;
  output [0:0]pipe_rxprbserr;
  output [0:0]pipe_rxsyncdone;
  output [0:0]pipe_txdlysresetdone;
  output [0:0]pipe_txphaligndone;
  output [0:0]pipe_txphinitdone;
  output [14:0]pipe_dmonitorout;
  output [15:0]ext_ch_gt_drpdo;
  output [2:0]pipe_rxbufstatus;
  output [2:0]pipe_rxstatus;
  output [15:0]\gt_rxdata_q_reg[15] ;
  output [1:0]\gt_rxcharisk_q_reg[1] ;
  output [3:0]pipe_rxdisperr;
  output [3:0]pipe_rxnotintable;
  output [5:0]out0;
  output pclk_sel_reg1_reg;
  output [0:0]pipe_rate_idle;
  output pipe_rst_idle;
  output [0:0]pipe_sync_fsm_rx;
  output [3:0]pipe_rst_fsm;
  output \pl_ltssm_state_q_reg[0] ;
  output [3:0]\pipe_rate_fsm[3] ;
  output [2:0]\pipe_drp_fsm[2] ;
  output phy_rdy_n_int_reg;
  output gt_rxvalid_q_reg;
  output [2:0]\gt_rx_status_q_reg[2] ;
  output gt_rx_phy_status_q_reg;
  output [0:0]gt_ch_drp_rdy;
  output [0:0]\pipe_qrst_fsm[0] ;
  output [2:0]pipe_qrst_fsm;
  output pipe_qrst_idle;
  input REFCLK;
  input [0:0]pci_exp_rxn;
  input [0:0]pci_exp_rxp;
  input pipe_rx0_polarity_gt;
  input pipe_rxprbscntreset;
  input pipe_tx_deemph_gt;
  input pipe_tx_rcvr_det_gt;
  input pipe_tx0_elec_idle_gt;
  input [0:0]pipe_txinhibit;
  input pipe_txprbsforceerr;
  input [1:0]Q;
  input [2:0]pipe_loopback;
  input [2:0]pipe_rxprbssel;
  input [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  input [2:0]pipe_txprbssel;
  input [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  input [0:0]TXCHARDISPMODE;
  input [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  input [0:0]int_pclk_sel_slave;
  input [0:0]SR;
  input pipe_mmcm_rst_n;
  input reg_clock_locked;
  input gt_rxvalid_q_reg_0;
  input \pl_ltssm_state_q_reg[5] ;
  input [1:0]UNCONN_IN;
  input [1:0]UNCONN_IN_0;
  input [0:0]ext_ch_gt_drpen;
  input [8:0]ext_ch_gt_drpaddr;
  input [15:0]ext_ch_gt_drpdi;
  input [0:0]ext_ch_gt_drpwe;

  wire CLK;
  wire DRP_START0;
  wire DRP_X160;
  wire [1:0]Q;
  wire REFCLK;
  wire [0:0]SR;
  wire SYNC_TXSYNC_START0;
  wire [0:0]TXCHARDISPMODE;
  wire [1:0]UNCONN_IN;
  wire [1:0]UNCONN_IN_0;
  wire clear;
  wire [0:0]clk_rxoutclk;
  wire clk_txoutclk;
  wire dclk_rst_reg2;
  wire done;
  wire [8:0]drp_mux_addr;
  wire [15:0]drp_mux_di;
  wire drp_mux_en;
  wire drp_mux_we;
  wire [6:0]eq_txeq_maincursor;
  wire [4:0]eq_txeq_postcursor;
  wire [4:0]eq_txeq_precursor;
  wire [8:0]ext_ch_gt_drpaddr;
  wire [15:0]ext_ch_gt_drpdi;
  wire [15:0]ext_ch_gt_drpdo;
  wire [0:0]ext_ch_gt_drpen;
  wire [0:0]ext_ch_gt_drprdy;
  wire [0:0]ext_ch_gt_drpwe;
  wire [0:0]gt_ch_drp_rdy;
  wire gt_cpllpdrefclk;
  wire gt_phystatus;
  wire gt_rx_phy_status_q_reg;
  wire [2:0]\gt_rx_status_q_reg[2] ;
  wire gt_rxcdrlock;
  wire [1:0]\gt_rxcharisk_q_reg[1] ;
  wire [15:0]\gt_rxdata_q_reg[15] ;
  wire gt_rxpmareset_i;
  wire gt_rxratedone;
  wire gt_rxresetdone;
  wire gt_rxvalid;
  wire gt_rxvalid_q_reg;
  wire gt_rxvalid_q_reg_0;
  wire gt_txratedone;
  wire gt_txresetdone;
  wire gt_txsyncdone;
  wire \gtp_pipe_reset.gtp_pipe_reset_i_n_0 ;
  wire \gtp_pipe_reset.gtp_pipe_reset_i_n_13 ;
  wire int_dclk_out;
  wire int_pclk_out_slave;
  wire [0:0]int_pclk_sel_slave;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire int_userclk1_out;
  wire mmcm_lock;
  wire oobclk;
  wire [5:0]out0;
  wire p_0_in0_in;
  wire p_0_in10_in;
  wire p_1_in;
  wire p_1_in11_in;
  wire p_3_in;
  wire [0:0]pci_exp_rxn;
  wire [0:0]pci_exp_rxp;
  wire [0:0]pci_exp_txn;
  wire [0:0]pci_exp_txp;
  wire pclk_sel_reg1_reg;
  wire phy_rdy_n_int_reg;
  wire [14:0]pipe_dmonitorout;
  wire [2:0]\pipe_drp_fsm[2] ;
  wire [0:0]pipe_eyescandataerror;
  wire \pipe_lane[0].pipe_eq.pipe_eq_i_n_0 ;
  wire \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_3 ;
  wire \pipe_lane[0].pipe_user_i_n_10 ;
  wire \pipe_lane[0].pipe_user_i_n_11 ;
  wire \pipe_lane[0].pipe_user_i_n_9 ;
  wire [2:0]pipe_loopback;
  wire pipe_mmcm_rst_n;
  wire [2:0]pipe_qrst_fsm;
  wire [0:0]\pipe_qrst_fsm[0] ;
  wire pipe_qrst_idle;
  wire [3:0]\pipe_rate_fsm[3] ;
  wire [0:0]pipe_rate_idle;
  wire [3:0]pipe_rst_fsm;
  wire pipe_rst_idle;
  wire pipe_rx0_chanisaligned_gt;
  wire pipe_rx0_polarity_gt;
  wire [2:0]pipe_rxbufstatus;
  wire [0:0]pipe_rxcommadet;
  wire [3:0]pipe_rxdisperr;
  wire [0:0]pipe_rxdlysresetdone;
  wire [3:0]pipe_rxnotintable;
  wire [0:0]pipe_rxphaligndone;
  wire [0:0]pipe_rxpmaresetdone;
  wire pipe_rxprbscntreset;
  wire [0:0]pipe_rxprbserr;
  wire [2:0]pipe_rxprbssel;
  wire [2:0]pipe_rxstatus;
  wire [0:0]pipe_rxsyncdone;
  wire [1:0]\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ;
  wire [15:0]\pipe_stages_1.pipe_tx_data_q_reg[15] ;
  wire [2:0]\pipe_stages_1.pipe_tx_margin_q_reg[2] ;
  wire [0:0]pipe_sync_fsm_rx;
  wire pipe_tx0_elec_idle_gt;
  wire pipe_tx_deemph_gt;
  wire pipe_tx_rcvr_det_gt;
  wire [0:0]pipe_txdlysresetdone;
  wire [0:0]pipe_txinhibit;
  wire [0:0]pipe_txphaligndone;
  wire [0:0]pipe_txphinitdone;
  wire pipe_txprbsforceerr;
  wire [2:0]pipe_txprbssel;
  wire \pl_ltssm_state_q_reg[0] ;
  wire \pl_ltssm_state_q_reg[5] ;
  wire qrst_drp_start;
  wire rate_done;
  wire [0:0]rate_rate_0;
  wire reg_clock_locked;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire reset_n_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire reset_n_reg2;
  wire rst_cpllreset;
  wire rst_gtreset;
  wire rst_userrdy;
  wire rxelecidle_reg1_reg;
  wire rxeq_adapt_done;
  wire sync_txdlyen;
  wire txsync_done;
  wire user_active_lane;
  wire user_eyescanreset;
  wire user_resetdone;
  wire user_resetovrd;
  wire user_rxbufreset;
  wire user_rxcdrfreqreset;
  wire user_rxcdrlock;
  wire user_rxcdrreset;
  wire user_rxpcsreset;

  (* box_type = "PRIMITIVE" *) 
  BUFG cpllpd_refclk_inst
       (.I(REFCLK),
        .O(gt_cpllpdrefclk));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_reset \gtp_pipe_reset.gtp_pipe_reset_i 
       (.CLK(int_dclk_out),
        .E(\gtp_pipe_reset.gtp_pipe_reset_i_n_13 ),
        .SR(\gtp_pipe_reset.gtp_pipe_reset_i_n_0 ),
        .SYNC_TXSYNC_START0(SYNC_TXSYNC_START0),
        .\cpllpd_wait_reg[95] (\int_qplllock_out[0] ),
        .\di_reg[0] (dclk_rst_reg2),
        .done(done),
        .gt_phystatus(gt_phystatus),
        .out(reset_n_reg2),
        .out0({pipe_rate_idle,p_0_in0_in}),
        .out1(\pipe_lane[0].pipe_eq.pipe_eq_i_n_0 ),
        .p_1_in(p_1_in),
        .p_3_in(p_3_in),
        .pclk_sel_reg(CLK),
        .pipe_rst_fsm(pipe_rst_fsm),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .\resetovrd.reset_reg[4] (mmcm_lock),
        .rst_cpllreset(rst_cpllreset),
        .rst_gtreset(rst_gtreset),
        .rst_userrdy(rst_userrdy),
        .rxvalid_reg1_reg(clear),
        .txsync_done(txsync_done),
        .user_resetdone(user_resetdone),
        .user_rxcdrlock(user_rxcdrlock));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_clock \pipe_clock_int.pipe_clock_i 
       (.CLK(int_dclk_out),
        .clk_txoutclk(clk_txoutclk),
        .int_oobclk_out(CLK),
        .int_pclk_out_slave(int_pclk_out_slave),
        .int_pclk_sel_slave(int_pclk_sel_slave),
        .int_userclk1_out(int_userclk1_out),
        .mmcm_lock(mmcm_lock),
        .pclk_sel_reg_0(pclk_sel_reg1_reg),
        .pipe_mmcm_rst_n(pipe_mmcm_rst_n),
        .\pl_ltssm_state_q_reg[0] (\pl_ltssm_state_q_reg[0] ));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_wrapper \pipe_lane[0].gt_wrapper_i 
       (.CLK(int_dclk_out),
        .DRPADDR(drp_mux_addr),
        .DRPDI(drp_mux_di),
        .Q(Q),
        .REFCLK(REFCLK),
        .RXRATE(rate_rate_0),
        .TXCHARDISPMODE(TXCHARDISPMODE),
        .TXMAINCURSOR(eq_txeq_maincursor),
        .TXPOSTCURSOR(eq_txeq_postcursor),
        .TXPRECURSOR(eq_txeq_precursor),
        .clk_rxoutclk(clk_rxoutclk),
        .clk_txoutclk(clk_txoutclk),
        .drp_mux_en(drp_mux_en),
        .drp_mux_we(drp_mux_we),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .gt_phystatus(gt_phystatus),
        .\gt_rx_status_q_reg[2] (\gt_rx_status_q_reg[2] ),
        .gt_rxcdrlock(gt_rxcdrlock),
        .\gt_rxcharisk_q_reg[1] (\gt_rxcharisk_q_reg[1] ),
        .\gt_rxdata_q_reg[15] (\gt_rxdata_q_reg[15] ),
        .gt_rxpmareset_i(gt_rxpmareset_i),
        .gt_rxratedone(gt_rxratedone),
        .gt_rxresetdone(gt_rxresetdone),
        .gt_rxvalid(gt_rxvalid),
        .gt_rxvalid_q_reg(gt_rxvalid_q_reg_0),
        .gt_txratedone(gt_txratedone),
        .gt_txresetdone(gt_txresetdone),
        .gt_txsyncdone(gt_txsyncdone),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .oobclk(oobclk),
        .out0(out0[4:2]),
        .pci_exp_rxn(pci_exp_rxn),
        .pci_exp_rxp(pci_exp_rxp),
        .pci_exp_txn(pci_exp_txn),
        .pci_exp_txp(pci_exp_txp),
        .pclk_sel_reg(CLK),
        .pipe_dmonitorout(pipe_dmonitorout),
        .pipe_eyescandataerror(pipe_eyescandataerror),
        .pipe_loopback(pipe_loopback),
        .pipe_rx0_chanisaligned_gt(pipe_rx0_chanisaligned_gt),
        .pipe_rx0_polarity_gt(pipe_rx0_polarity_gt),
        .pipe_rxbufstatus(pipe_rxbufstatus),
        .pipe_rxcommadet(pipe_rxcommadet),
        .pipe_rxdisperr(pipe_rxdisperr),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxnotintable(pipe_rxnotintable),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .pipe_rxprbscntreset(pipe_rxprbscntreset),
        .pipe_rxprbserr(pipe_rxprbserr),
        .pipe_rxprbssel(pipe_rxprbssel),
        .pipe_rxstatus(pipe_rxstatus),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] (\pipe_stages_1.pipe_tx_char_is_k_q_reg[1] ),
        .\pipe_stages_1.pipe_tx_data_q_reg[15] (\pipe_stages_1.pipe_tx_data_q_reg[15] ),
        .\pipe_stages_1.pipe_tx_margin_q_reg[2] (\pipe_stages_1.pipe_tx_margin_q_reg[2] ),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .pipe_tx_deemph_gt(pipe_tx_deemph_gt),
        .pipe_tx_rcvr_det_gt(pipe_tx_rcvr_det_gt),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .pipe_txinhibit(pipe_txinhibit),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .pipe_txprbsforceerr(pipe_txprbsforceerr),
        .pipe_txprbssel(pipe_txprbssel),
        .\pl_ltssm_state_q_reg[5] (\pl_ltssm_state_q_reg[5] ),
        .rst_gtreset(rst_gtreset),
        .rst_userrdy(rst_userrdy),
        .rxelecidle_reg1_reg(rxelecidle_reg1_reg),
        .sync_txdlyen(sync_txdlyen),
        .txcompliance_reg2_reg(\pipe_lane[0].pipe_user_i_n_9 ),
        .txcompliance_reg2_reg_0(\pipe_lane[0].pipe_user_i_n_11 ),
        .user_eyescanreset(user_eyescanreset),
        .user_resetovrd(user_resetovrd),
        .user_rxbufreset(user_rxbufreset),
        .user_rxcdrfreqreset(user_rxcdrfreqreset),
        .user_rxcdrreset(user_rxcdrreset),
        .user_rxpcsreset(user_rxpcsreset));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_drp \pipe_lane[0].gtp_pipe_drp.gtp_pipe_drp_i 
       (.CLK(int_dclk_out),
        .DRPADDR(drp_mux_addr),
        .DRPDI(drp_mux_di),
        .DRP_START0(DRP_START0),
        .DRP_X160(DRP_X160),
        .Q(\pipe_drp_fsm[2] ),
        .SR(dclk_rst_reg2),
        .done(done),
        .drp_mux_en(drp_mux_en),
        .drp_mux_we(drp_mux_we),
        .ext_ch_gt_drpaddr(ext_ch_gt_drpaddr),
        .ext_ch_gt_drpdi(ext_ch_gt_drpdi),
        .ext_ch_gt_drpdo(ext_ch_gt_drpdo),
        .ext_ch_gt_drpen(ext_ch_gt_drpen),
        .ext_ch_gt_drprdy(ext_ch_gt_drprdy),
        .ext_ch_gt_drpwe(ext_ch_gt_drpwe),
        .gt_ch_drp_rdy(gt_ch_drp_rdy));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_pipe_rate \pipe_lane[0].gtp_pipe_rate.gtp_pipe_rate_i 
       (.DRP_START0(DRP_START0),
        .DRP_X160(DRP_X160),
        .Q(\pipe_rate_fsm[3] ),
        .RXRATE(rate_rate_0),
        .UNCONN_IN(UNCONN_IN_0),
        .done(done),
        .gt_phystatus(gt_phystatus),
        .gt_rxratedone(gt_rxratedone),
        .gt_txratedone(gt_txratedone),
        .out0({pipe_rate_idle,rate_done,p_0_in0_in}),
        .p_1_in(p_1_in),
        .p_3_in(p_3_in),
        .pclk_sel_reg1_reg(pclk_sel_reg1_reg),
        .pclk_sel_reg_0(CLK),
        .pipe_rxpmaresetdone(pipe_rxpmaresetdone),
        .rst_cpllreset(rst_cpllreset),
        .txsync_done(txsync_done));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_eq \pipe_lane[0].pipe_eq.pipe_eq_i 
       (.E(\gtp_pipe_reset.gtp_pipe_reset_i_n_13 ),
        .TXMAINCURSOR(eq_txeq_maincursor),
        .TXPOSTCURSOR(eq_txeq_postcursor),
        .TXPRECURSOR(eq_txeq_precursor),
        .out1(\pipe_lane[0].pipe_eq.pipe_eq_i_n_0 ),
        .pclk_sel_reg(CLK),
        .rst_cpllreset(rst_cpllreset),
        .rxeq_adapt_done(rxeq_adapt_done));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gt_common \pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i 
       (.CLK(int_dclk_out),
        .REFCLK(REFCLK),
        .SR(dclk_rst_reg2),
        .\drp_done_reg1_reg[0] (\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_3 ),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .\int_qplllock_out[0] (\int_qplllock_out[0] ),
        .int_qplloutclk_out(int_qplloutclk_out),
        .int_qplloutrefclk_out(int_qplloutrefclk_out),
        .qrst_drp_start(qrst_drp_start),
        .rst_cpllreset(rst_cpllreset));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_sync \pipe_lane[0].pipe_sync_i 
       (.SYNC_TXSYNC_START0(SYNC_TXSYNC_START0),
        .gt_txsyncdone(gt_txsyncdone),
        .out(p_0_in10_in),
        .out0(pipe_rate_idle),
        .pclk_sel_reg(CLK),
        .pipe_rxdlysresetdone(pipe_rxdlysresetdone),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxsyncdone(pipe_rxsyncdone),
        .pipe_sync_fsm_rx(pipe_sync_fsm_rx),
        .\pipe_sync_fsm_tx[5] (out0),
        .pipe_txdlysresetdone(pipe_txdlysresetdone),
        .\resetovrd.reset_reg[4] (mmcm_lock),
        .\resetovrd.reset_reg[4]_0 (rxelecidle_reg1_reg),
        .rst_cpllreset(rst_cpllreset),
        .sync_txdlyen(sync_txdlyen),
        .txcompliance_reg2_reg(\pipe_lane[0].pipe_user_i_n_11 ),
        .txcompliance_reg2_reg_0(\pipe_lane[0].pipe_user_i_n_10 ),
        .txelecidle_reg2_reg(p_1_in11_in),
        .txsync_done(txsync_done),
        .user_active_lane(user_active_lane),
        .user_rxcdrlock(user_rxcdrlock));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_pipe_user \pipe_lane[0].pipe_user_i 
       (.SR(clear),
        .TXCHARDISPMODE(TXCHARDISPMODE),
        .gt_phystatus(gt_phystatus),
        .gt_rx_phy_status_q_reg(gt_rx_phy_status_q_reg),
        .gt_rxcdrlock(gt_rxcdrlock),
        .gt_rxpmareset_i(gt_rxpmareset_i),
        .gt_rxresetdone(gt_rxresetdone),
        .gt_rxvalid(gt_rxvalid),
        .gt_rxvalid_q_reg(gt_rxvalid_q_reg),
        .gt_rxvalid_q_reg_0(gt_rxvalid_q_reg_0),
        .gt_txresetdone(gt_txresetdone),
        .oobclk(oobclk),
        .out(p_0_in10_in),
        .out0({pipe_rate_idle,rate_done}),
        .pclk_sel_reg(pclk_sel_reg1_reg),
        .pclk_sel_reg_0(CLK),
        .phy_rdy_n_int_reg(phy_rdy_n_int_reg),
        .pipe_rst_idle(pipe_rst_idle),
        .pipe_rxphaligndone(pipe_rxphaligndone),
        .pipe_rxstatus(pipe_rxstatus[2]),
        .pipe_tx0_elec_idle_gt(pipe_tx0_elec_idle_gt),
        .pipe_txphaligndone(pipe_txphaligndone),
        .pipe_txphinitdone(pipe_txphinitdone),
        .rdy_reg1_reg(\pipe_lane[0].pipe_user_i_n_9 ),
        .reg_clock_locked(reg_clock_locked),
        .\resetovrd.reset_reg[4]_0 (rxelecidle_reg1_reg),
        .rst_cpllreset(rst_cpllreset),
        .rxeq_adapt_done(rxeq_adapt_done),
        .txphaligndone_reg1_reg(\pipe_lane[0].pipe_user_i_n_11 ),
        .txphinitdone_reg1_reg(p_1_in11_in),
        .txphinitdone_reg1_reg_0(\pipe_lane[0].pipe_user_i_n_10 ),
        .user_active_lane(user_active_lane),
        .user_eyescanreset(user_eyescanreset),
        .user_resetdone(user_resetdone),
        .user_resetovrd(user_resetovrd),
        .user_rxbufreset(user_rxbufreset),
        .user_rxcdrfreqreset(user_rxcdrfreqreset),
        .user_rxcdrlock(user_rxcdrlock),
        .user_rxcdrreset(user_rxcdrreset),
        .user_rxpcsreset(user_rxpcsreset));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_reset \qpll_reset.qpll_reset_i 
       (.SR(\gtp_pipe_reset.gtp_pipe_reset_i_n_0 ),
        .UNCONN_IN(UNCONN_IN),
        .\cpllpd_wait_reg[95] (\int_qplllock_out[0] ),
        .done_reg(\pipe_lane[0].pipe_quad.gt_common_enabled.gt_common_int.gt_common_i_n_3 ),
        .out0(\pipe_qrst_fsm[0] ),
        .pclk_sel_reg(CLK),
        .pipe_qrst_fsm(pipe_qrst_fsm),
        .pipe_qrst_idle(pipe_qrst_idle),
        .qrst_drp_start(qrst_drp_start),
        .\resetovrd.reset_reg[4] (mmcm_lock));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE reset_n_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(SR),
        .D(1'b1),
        .Q(reset_n_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDCE reset_n_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(SR),
        .D(reset_n_reg1),
        .Q(reset_n_reg2));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_drp" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_drp
   (\drp_done_reg1_reg[0] ,
    Q,
    rdy_reg1_reg_0,
    qpll_drp_en,
    qpll_drp_we,
    SR,
    CLK,
    qrst_drp_start,
    qpll_drp_rdy,
    \cpllpd_wait_reg[95] ,
    D);
  output \drp_done_reg1_reg[0] ;
  output [4:0]Q;
  output [15:0]rdy_reg1_reg_0;
  output qpll_drp_en;
  output qpll_drp_we;
  input [0:0]SR;
  input CLK;
  input qrst_drp_start;
  input qpll_drp_rdy;
  input \cpllpd_wait_reg[95] ;
  input [15:0]D;

  wire CLK;
  wire [15:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \addr[0]_i_1_n_0 ;
  wire \addr[1]_i_1_n_0 ;
  wire \addr[2]_i_1_n_0 ;
  wire \addr[5]_i_1_n_0 ;
  wire \addr[7]_i_1_n_0 ;
  wire \cpllpd_wait_reg[95] ;
  wire \crscode[0]_i_1_n_0 ;
  wire \crscode[1]_i_1_n_0 ;
  wire \crscode[2]_i_1_n_0 ;
  wire \crscode[3]_i_1_n_0 ;
  wire \crscode[4]_i_1_n_0 ;
  wire \crscode[5]_i_1_n_0 ;
  wire \crscode[5]_i_2_n_0 ;
  wire \crscode_reg_n_0_[0] ;
  wire \crscode_reg_n_0_[1] ;
  wire \crscode_reg_n_0_[2] ;
  wire \crscode_reg_n_0_[3] ;
  wire \crscode_reg_n_0_[4] ;
  wire \crscode_reg_n_0_[5] ;
  wire [15:0]di;
  wire \di[11]_i_2_n_0 ;
  wire \di[12]_i_2_n_0 ;
  wire \di[13]_i_2_n_0 ;
  wire \di[14]_i_2_n_0 ;
  wire \di[15]_i_2_n_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [15:0]do_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [15:0]do_reg2;
  wire done;
  wire \drp_done_reg1_reg[0] ;
  wire [6:0]fsm;
  wire \fsm[1]_i_2__0_n_0 ;
  wire \fsm[1]_i_3_n_0 ;
  wire fsm_inferred__1__0_n_0;
  wire fsm_inferred__1__1_n_0;
  wire fsm_inferred__1_n_0;
  wire \fsm_reg_n_0_[0] ;
  wire \fsm_reg_n_0_[1] ;
  wire \fsm_reg_n_0_[2] ;
  wire \fsm_reg_n_0_[3] ;
  wire \fsm_reg_n_0_[4] ;
  wire \fsm_reg_n_0_[5] ;
  wire \fsm_reg_n_0_[6] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire gen3_reg2;
  wire \gtp_common.gtpe2_common_i_i_4_n_0 ;
  wire \gtp_common.gtpe2_common_i_i_5_n_0 ;
  wire index;
  wire \index[0]_i_1_n_0 ;
  wire \index[0]_i_2_n_0 ;
  wire \index[1]_i_1_n_0 ;
  wire \index[2]_i_1_n_0 ;
  wire \index[2]_i_2_n_0 ;
  wire \index[2]_i_4_n_0 ;
  wire \index_reg_n_0_[0] ;
  wire \index_reg_n_0_[1] ;
  wire \index_reg_n_0_[2] ;
  wire [1:0]load_cnt;
  wire \load_cnt[0]_i_1_n_0 ;
  wire \load_cnt[1]_i_1_n_0 ;
  wire \load_cnt[1]_i_2_n_0 ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire ovrd_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire ovrd_reg2;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qplllock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qplllock_reg2;
  wire qrst_drp_start;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rdy_reg1;
  wire [15:0]rdy_reg1_reg_0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire rdy_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire start_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire start_reg2;

  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \addr[0]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\addr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h0D)) 
    \addr[1]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .O(\addr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h4D)) 
    \addr[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\addr[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \addr[5]_i_1 
       (.I0(\index_reg_n_0_[0] ),
        .I1(\index_reg_n_0_[1] ),
        .O(\addr[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \addr[7]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .O(\addr[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\addr[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\addr[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\addr[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\addr[5]_i_1_n_0 ),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \addr_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\addr[7]_i_1_n_0 ),
        .Q(Q[4]),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[0]_i_1 
       (.I0(do_reg2[1]),
        .I1(\index_reg_n_0_[2] ),
        .O(\crscode[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[1]_i_1 
       (.I0(do_reg2[2]),
        .I1(\index_reg_n_0_[2] ),
        .O(\crscode[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[2]_i_1 
       (.I0(do_reg2[3]),
        .I1(\index_reg_n_0_[2] ),
        .O(\crscode[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[3]_i_1 
       (.I0(do_reg2[4]),
        .I1(\index_reg_n_0_[2] ),
        .O(\crscode[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[4]_i_1 
       (.I0(do_reg2[5]),
        .I1(\index_reg_n_0_[2] ),
        .O(\crscode[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hC080)) 
    \crscode[5]_i_1 
       (.I0(ovrd_reg2),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[2] ),
        .O(\crscode[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \crscode[5]_i_2 
       (.I0(do_reg2[6]),
        .I1(\index_reg_n_0_[2] ),
        .O(\crscode[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[0] 
       (.C(CLK),
        .CE(\crscode[5]_i_1_n_0 ),
        .D(\crscode[0]_i_1_n_0 ),
        .Q(\crscode_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[1] 
       (.C(CLK),
        .CE(\crscode[5]_i_1_n_0 ),
        .D(\crscode[1]_i_1_n_0 ),
        .Q(\crscode_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[2] 
       (.C(CLK),
        .CE(\crscode[5]_i_1_n_0 ),
        .D(\crscode[2]_i_1_n_0 ),
        .Q(\crscode_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[3] 
       (.C(CLK),
        .CE(\crscode[5]_i_1_n_0 ),
        .D(\crscode[3]_i_1_n_0 ),
        .Q(\crscode_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[4] 
       (.C(CLK),
        .CE(\crscode[5]_i_1_n_0 ),
        .D(\crscode[4]_i_1_n_0 ),
        .Q(\crscode_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \crscode_reg[5] 
       (.C(CLK),
        .CE(\crscode[5]_i_1_n_0 ),
        .D(\crscode[5]_i_2_n_0 ),
        .Q(\crscode_reg_n_0_[5] ),
        .R(SR));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[0]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[0]),
        .O(di[0]));
  LUT5 #(
    .INIT(32'h0CC5CCCC)) 
    \di[10]_i_1 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(do_reg2[10]),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .O(di[10]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000090)) 
    \di[11]_i_1 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(\crscode_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .I5(\di[11]_i_2_n_0 ),
        .O(di[11]));
  LUT5 #(
    .INIT(32'h40FF4022)) 
    \di[11]_i_2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(ovrd_reg2),
        .I3(\index_reg_n_0_[2] ),
        .I4(do_reg2[11]),
        .O(\di[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00AA00AAAAAAC3AA)) 
    \di[12]_i_1 
       (.I0(do_reg2[12]),
        .I1(\di[12]_i_2_n_0 ),
        .I2(\crscode_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(di[12]));
  LUT2 #(
    .INIT(4'hE)) 
    \di[12]_i_2 
       (.I0(\crscode_reg_n_0_[0] ),
        .I1(\crscode_reg_n_0_[1] ),
        .O(\di[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00AAAAFFAAAAC3AA)) 
    \di[13]_i_1 
       (.I0(do_reg2[13]),
        .I1(\di[13]_i_2_n_0 ),
        .I2(\crscode_reg_n_0_[3] ),
        .I3(\index_reg_n_0_[2] ),
        .I4(\index_reg_n_0_[0] ),
        .I5(\index_reg_n_0_[1] ),
        .O(di[13]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \di[13]_i_2 
       (.I0(\crscode_reg_n_0_[1] ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[2] ),
        .O(\di[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0AAFAA3A)) 
    \di[14]_i_1 
       (.I0(do_reg2[14]),
        .I1(\di[14]_i_2_n_0 ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[1] ),
        .O(di[14]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \di[14]_i_2 
       (.I0(\crscode_reg_n_0_[3] ),
        .I1(\crscode_reg_n_0_[1] ),
        .I2(\crscode_reg_n_0_[0] ),
        .I3(\crscode_reg_n_0_[2] ),
        .I4(\crscode_reg_n_0_[4] ),
        .O(\di[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0CC5CCCC)) 
    \di[15]_i_1 
       (.I0(\di[15]_i_2_n_0 ),
        .I1(do_reg2[15]),
        .I2(\index_reg_n_0_[1] ),
        .I3(\index_reg_n_0_[0] ),
        .I4(\index_reg_n_0_[2] ),
        .O(di[15]));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \di[15]_i_2 
       (.I0(\crscode_reg_n_0_[1] ),
        .I1(\crscode_reg_n_0_[0] ),
        .I2(\crscode_reg_n_0_[2] ),
        .I3(\crscode_reg_n_0_[3] ),
        .I4(\crscode_reg_n_0_[4] ),
        .I5(\crscode_reg_n_0_[5] ),
        .O(\di[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[1]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[1]),
        .O(di[1]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[2]),
        .O(di[2]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[3]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[3]),
        .O(di[3]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[4]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[4]),
        .O(di[4]));
  LUT4 #(
    .INIT(16'h2AAB)) 
    \di[5]_i_1 
       (.I0(do_reg2[5]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[2] ),
        .O(di[5]));
  LUT4 #(
    .INIT(16'h2BA8)) 
    \di[6]_i_1 
       (.I0(do_reg2[6]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(\index_reg_n_0_[0] ),
        .O(di[6]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[7]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[7]),
        .O(di[7]));
  LUT4 #(
    .INIT(16'h2AAB)) 
    \di[8]_i_1 
       (.I0(do_reg2[8]),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .I3(\index_reg_n_0_[2] ),
        .O(di[8]));
  LUT4 #(
    .INIT(16'h7E00)) 
    \di[9]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index_reg_n_0_[2] ),
        .I3(do_reg2[9]),
        .O(di[9]));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[0]),
        .Q(rdy_reg1_reg_0[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[10]),
        .Q(rdy_reg1_reg_0[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[11]),
        .Q(rdy_reg1_reg_0[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[12]),
        .Q(rdy_reg1_reg_0[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[13]),
        .Q(rdy_reg1_reg_0[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[14]),
        .Q(rdy_reg1_reg_0[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[15]),
        .Q(rdy_reg1_reg_0[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[1]),
        .Q(rdy_reg1_reg_0[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[2]),
        .Q(rdy_reg1_reg_0[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[3]),
        .Q(rdy_reg1_reg_0[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[4]),
        .Q(rdy_reg1_reg_0[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[5]),
        .Q(rdy_reg1_reg_0[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[6]),
        .Q(rdy_reg1_reg_0[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[7]),
        .Q(rdy_reg1_reg_0[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[8]),
        .Q(rdy_reg1_reg_0[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \di_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(di[9]),
        .Q(rdy_reg1_reg_0[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[0]),
        .Q(do_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[10]),
        .Q(do_reg1[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[11]),
        .Q(do_reg1[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[12]),
        .Q(do_reg1[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[13]),
        .Q(do_reg1[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[14]),
        .Q(do_reg1[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[15]),
        .Q(do_reg1[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[1]),
        .Q(do_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[2]),
        .Q(do_reg1[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[3]),
        .Q(do_reg1[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[4]),
        .Q(do_reg1[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[5]),
        .Q(do_reg1[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[6]),
        .Q(do_reg1[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[7]),
        .Q(do_reg1[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[8]),
        .Q(do_reg1[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg1_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[9]),
        .Q(do_reg1[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[0]),
        .Q(do_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[10] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[10]),
        .Q(do_reg2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[11] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[11]),
        .Q(do_reg2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[12] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[12]),
        .Q(do_reg2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[13] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[13]),
        .Q(do_reg2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[14] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[14]),
        .Q(do_reg2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[15] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[15]),
        .Q(do_reg2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[1]),
        .Q(do_reg2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[2]),
        .Q(do_reg2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[3]),
        .Q(do_reg2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[4]),
        .Q(do_reg2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[5]),
        .Q(do_reg2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[6]),
        .Q(do_reg2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[7]),
        .Q(do_reg2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[8] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[8]),
        .Q(do_reg2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \do_reg2_reg[9] 
       (.C(CLK),
        .CE(1'b1),
        .D(do_reg1[9]),
        .Q(do_reg2[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    done_i_1__0
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\fsm_reg_n_0_[6] ),
        .I2(start_reg2),
        .I3(\fsm_reg_n_0_[4] ),
        .I4(\fsm_reg_n_0_[0] ),
        .I5(\gtp_common.gtpe2_common_i_i_5_n_0 ),
        .O(done));
  FDRE #(
    .INIT(1'b0)) 
    done_reg
       (.C(CLK),
        .CE(1'b1),
        .D(done),
        .Q(\drp_done_reg1_reg[0] ),
        .R(SR));
  LUT5 #(
    .INIT(32'h5DFF5D5D)) 
    \fsm[0]_i_1__0 
       (.I0(fsm_inferred__1__1_n_0),
        .I1(\fsm_reg_n_0_[0] ),
        .I2(start_reg2),
        .I3(\fsm[1]_i_3_n_0 ),
        .I4(\fsm_reg_n_0_[6] ),
        .O(fsm[0]));
  LUT6 #(
    .INIT(64'hFFAAEAAAEAAAEAAA)) 
    \fsm[1]_i_1__0 
       (.I0(\fsm[1]_i_2__0_n_0 ),
        .I1(start_reg2),
        .I2(\fsm_reg_n_0_[0] ),
        .I3(fsm_inferred__1__1_n_0),
        .I4(\fsm_reg_n_0_[6] ),
        .I5(\fsm[1]_i_3_n_0 ),
        .O(fsm[1]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \fsm[1]_i_2__0 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(fsm_inferred__1__1_n_0),
        .I2(load_cnt[1]),
        .I3(load_cnt[0]),
        .O(\fsm[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \fsm[1]_i_3 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[1] ),
        .I2(\index_reg_n_0_[0] ),
        .O(\fsm[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \fsm[2]_i_1__1 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(fsm_inferred__1__1_n_0),
        .I2(load_cnt[1]),
        .I3(load_cnt[0]),
        .O(fsm[2]));
  LUT4 #(
    .INIT(16'h88C8)) 
    \fsm[3]_i_1__0 
       (.I0(\fsm_reg_n_0_[2] ),
        .I1(fsm_inferred__1__1_n_0),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(rdy_reg2),
        .O(fsm[3]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[4]_i_1 
       (.I0(rdy_reg2),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(fsm_inferred__1__1_n_0),
        .O(fsm[4]));
  LUT4 #(
    .INIT(16'h88C8)) 
    \fsm[5]_i_1 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(fsm_inferred__1__1_n_0),
        .I2(\fsm_reg_n_0_[5] ),
        .I3(rdy_reg2),
        .O(fsm[5]));
  LUT3 #(
    .INIT(8'h80)) 
    \fsm[6]_i_1 
       (.I0(rdy_reg2),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(fsm_inferred__1__1_n_0),
        .O(fsm[6]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'h0116)) 
    fsm_inferred__1
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(fsm_inferred__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    fsm_inferred__1__0
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .O(fsm_inferred__1__0_n_0));
  LUT5 #(
    .INIT(32'h00000116)) 
    fsm_inferred__1__1
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(fsm_inferred__1_n_0),
        .I4(fsm_inferred__1__0_n_0),
        .O(fsm_inferred__1__1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \fsm_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[0]),
        .Q(\fsm_reg_n_0_[0] ),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[1]),
        .Q(\fsm_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[2]),
        .Q(\fsm_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[3]),
        .Q(\fsm_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[4]),
        .Q(\fsm_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[5]),
        .Q(\fsm_reg_n_0_[5] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \fsm_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(fsm[6]),
        .Q(\fsm_reg_n_0_[6] ),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .Q(gen3_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE gen3_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(gen3_reg1),
        .Q(gen3_reg2),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000014)) 
    \gtp_common.gtpe2_common_i_i_1 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[2] ),
        .I2(\fsm_reg_n_0_[4] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\fsm_reg_n_0_[1] ),
        .I5(\gtp_common.gtpe2_common_i_i_4_n_0 ),
        .O(qpll_drp_en));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \gtp_common.gtpe2_common_i_i_2 
       (.I0(\fsm_reg_n_0_[4] ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\fsm_reg_n_0_[0] ),
        .I4(\gtp_common.gtpe2_common_i_i_5_n_0 ),
        .O(qpll_drp_we));
  LUT2 #(
    .INIT(4'hE)) 
    \gtp_common.gtpe2_common_i_i_4 
       (.I0(\fsm_reg_n_0_[3] ),
        .I1(\fsm_reg_n_0_[5] ),
        .O(\gtp_common.gtpe2_common_i_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \gtp_common.gtpe2_common_i_i_5 
       (.I0(\fsm_reg_n_0_[5] ),
        .I1(\fsm_reg_n_0_[3] ),
        .I2(\fsm_reg_n_0_[2] ),
        .O(\gtp_common.gtpe2_common_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFF20000000)) 
    \index[0]_i_1 
       (.I0(\index[0]_i_2_n_0 ),
        .I1(\fsm_reg_n_0_[1] ),
        .I2(\fsm_reg_n_0_[6] ),
        .I3(\load_cnt[1]_i_2_n_0 ),
        .I4(index),
        .I5(\index_reg_n_0_[0] ),
        .O(\index[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \index[0]_i_2 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[2] ),
        .O(\index[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1000FFFFC0000000)) 
    \index[1]_i_1 
       (.I0(\index_reg_n_0_[2] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index[2]_i_2_n_0 ),
        .I3(\load_cnt[1]_i_2_n_0 ),
        .I4(index),
        .I5(\index_reg_n_0_[1] ),
        .O(\index[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5000FFFF80000000)) 
    \index[2]_i_1 
       (.I0(\index_reg_n_0_[1] ),
        .I1(\index_reg_n_0_[0] ),
        .I2(\index[2]_i_2_n_0 ),
        .I3(\load_cnt[1]_i_2_n_0 ),
        .I4(index),
        .I5(\index_reg_n_0_[2] ),
        .O(\index[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \index[2]_i_2 
       (.I0(\fsm_reg_n_0_[6] ),
        .I1(\fsm_reg_n_0_[1] ),
        .O(\index[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFEFEED)) 
    \index[2]_i_3 
       (.I0(\fsm_reg_n_0_[1] ),
        .I1(\index[2]_i_4_n_0 ),
        .I2(\fsm_reg_n_0_[2] ),
        .I3(\fsm_reg_n_0_[3] ),
        .I4(\fsm_reg_n_0_[5] ),
        .I5(\fsm_reg_n_0_[4] ),
        .O(index));
  LUT2 #(
    .INIT(4'hE)) 
    \index[2]_i_4 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[6] ),
        .O(\index[2]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\index[0]_i_1_n_0 ),
        .Q(\index_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\index[1]_i_1_n_0 ),
        .Q(\index_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \index_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\index[2]_i_1_n_0 ),
        .Q(\index_reg_n_0_[2] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h00B00000)) 
    \load_cnt[0]_i_1 
       (.I0(load_cnt[1]),
        .I1(load_cnt[0]),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\load_cnt[1]_i_2_n_0 ),
        .O(\load_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h00E00000)) 
    \load_cnt[1]_i_1 
       (.I0(load_cnt[1]),
        .I1(load_cnt[0]),
        .I2(\fsm_reg_n_0_[1] ),
        .I3(\fsm_reg_n_0_[6] ),
        .I4(\load_cnt[1]_i_2_n_0 ),
        .O(\load_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \load_cnt[1]_i_2 
       (.I0(\fsm_reg_n_0_[0] ),
        .I1(\fsm_reg_n_0_[5] ),
        .I2(\fsm_reg_n_0_[3] ),
        .I3(\fsm_reg_n_0_[2] ),
        .I4(\fsm_reg_n_0_[4] ),
        .O(\load_cnt[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\load_cnt[0]_i_1_n_0 ),
        .Q(load_cnt[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \load_cnt_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\load_cnt[1]_i_1_n_0 ),
        .Q(load_cnt[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE ovrd_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(1'b0),
        .Q(ovrd_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE ovrd_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(ovrd_reg1),
        .Q(ovrd_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[95] ),
        .Q(qplllock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE qplllock_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(qpll_drp_rdy),
        .Q(rdy_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE rdy_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rdy_reg1),
        .Q(rdy_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg1_reg
       (.C(CLK),
        .CE(1'b1),
        .D(qrst_drp_start),
        .Q(start_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE start_reg2_reg
       (.C(CLK),
        .CE(1'b1),
        .D(start_reg1),
        .Q(start_reg2),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_reset" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_reset
   (out0,
    pipe_qrst_fsm,
    qrst_drp_start,
    pipe_qrst_idle,
    SR,
    pclk_sel_reg,
    done_reg,
    \cpllpd_wait_reg[95] ,
    \resetovrd.reset_reg[4] ,
    UNCONN_IN);
  output [0:0]out0;
  output [2:0]pipe_qrst_fsm;
  output qrst_drp_start;
  output pipe_qrst_idle;
  input [0:0]SR;
  input pclk_sel_reg;
  input done_reg;
  input \cpllpd_wait_reg[95] ;
  input \resetovrd.reset_reg[4] ;
  input [1:0]UNCONN_IN;

  wire \FSM_sequential_fsm[0]_i_1__0_n_0 ;
  wire \FSM_sequential_fsm[0]_i_2__0_n_0 ;
  wire \FSM_sequential_fsm[1]_i_1__0_n_0 ;
  wire \FSM_sequential_fsm[2]_i_1_n_0 ;
  wire [0:0]SR;
  wire [1:0]UNCONN_IN;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire cplllock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire cplllock_reg2;
  wire \cpllpd_wait_reg[95] ;
  wire done_reg;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire drp_done_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire drp_done_reg2;
  (* RTL_KEEP = "yes" *) wire [2:1]fsm;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire mmcm_lock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire mmcm_lock_reg2;
  (* RTL_KEEP = "yes" *) wire [0:0]out0;
  wire pclk_sel_reg;
  wire [2:0]pipe_qrst_fsm;
  wire pipe_qrst_idle;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qplllock_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qplllock_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qpllpd_in_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qpllpd_in_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qpllreset_in_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire qpllreset_in_reg2;
  wire qrst_drp_start;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]rate_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [1:0]rate_reg2;
  wire \resetovrd.reset_reg[4] ;

  LUT6 #(
    .INIT(64'hFFF2FFF200F0FFF0)) 
    \FSM_sequential_fsm[0]_i_1__0 
       (.I0(qplllock_reg2),
        .I1(out0),
        .I2(\FSM_sequential_fsm[0]_i_2__0_n_0 ),
        .I3(fsm[1]),
        .I4(drp_done_reg2),
        .I5(fsm[2]),
        .O(\FSM_sequential_fsm[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h05015501)) 
    \FSM_sequential_fsm[0]_i_2__0 
       (.I0(fsm[2]),
        .I1(qplllock_reg2),
        .I2(cplllock_reg2),
        .I3(out0),
        .I4(mmcm_lock_reg2),
        .O(\FSM_sequential_fsm[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF7777CCCCC000)) 
    \FSM_sequential_fsm[1]_i_1__0 
       (.I0(drp_done_reg2),
        .I1(out0),
        .I2(mmcm_lock_reg2),
        .I3(cplllock_reg2),
        .I4(fsm[2]),
        .I5(fsm[1]),
        .O(\FSM_sequential_fsm[1]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \FSM_sequential_fsm[2]_i_1 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(drp_done_reg2),
        .I3(out0),
        .O(\FSM_sequential_fsm[2]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm[0]_i_1__0_n_0 ),
        .Q(out0),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm[1]_i_1__0_n_0 ),
        .Q(fsm[1]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_fsm_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_sequential_fsm[2]_i_1_n_0 ),
        .Q(fsm[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(cplllock_reg1),
        .S(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \cplllock_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(cplllock_reg1),
        .Q(cplllock_reg2),
        .S(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(done_reg),
        .Q(drp_done_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \drp_done_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(drp_done_reg1),
        .Q(drp_done_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\resetovrd.reset_reg[4] ),
        .Q(mmcm_lock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE mmcm_lock_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(mmcm_lock_reg1),
        .Q(mmcm_lock_reg2),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \pipe_qrst_fsm[1]_INST_0 
       (.I0(fsm[1]),
        .O(pipe_qrst_fsm[0]));
  LUT3 #(
    .INIT(8'h74)) 
    \pipe_qrst_fsm[2]_INST_0 
       (.I0(out0),
        .I1(fsm[2]),
        .I2(fsm[1]),
        .O(pipe_qrst_fsm[1]));
  LUT3 #(
    .INIT(8'h28)) 
    \pipe_qrst_fsm[3]_INST_0 
       (.I0(fsm[2]),
        .I1(fsm[1]),
        .I2(out0),
        .O(pipe_qrst_fsm[2]));
  LUT3 #(
    .INIT(8'h80)) 
    pipe_qrst_idle_INST_0
       (.I0(fsm[1]),
        .I1(out0),
        .I2(fsm[2]),
        .O(pipe_qrst_idle));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qplllock_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\cpllpd_wait_reg[95] ),
        .Q(qplllock_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qplllock_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(qplllock_reg1),
        .Q(qplllock_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(qpllpd_in_reg1),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \qpllpd_in_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(qpllpd_in_reg1),
        .Q(qpllpd_in_reg2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(qpllreset_in_reg1),
        .S(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDSE \qpllreset_in_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(qpllreset_in_reg1),
        .Q(qpllreset_in_reg2),
        .S(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(UNCONN_IN[0]),
        .Q(rate_reg1[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(UNCONN_IN[1]),
        .Q(rate_reg1[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rate_reg1[0]),
        .Q(rate_reg2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \rate_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rate_reg1[1]),
        .Q(rate_reg2[1]),
        .R(SR));
  LUT3 #(
    .INIT(8'h02)) 
    start_reg1_i_1
       (.I0(fsm[1]),
        .I1(fsm[2]),
        .I2(out0),
        .O(qrst_drp_start));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_wrapper" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_qpll_wrapper
   (qpll_drp_rdy,
    \int_qplllock_out[0] ,
    int_qplloutclk_out,
    int_qplloutrefclk_out,
    D,
    CLK,
    qpll_drp_en,
    qpll_drp_we,
    REFCLK,
    \di_reg[15] ,
    Q,
    gt_cpllpdrefclk,
    rst_cpllreset);
  output qpll_drp_rdy;
  output \int_qplllock_out[0] ;
  output [0:0]int_qplloutclk_out;
  output [0:0]int_qplloutrefclk_out;
  output [15:0]D;
  input CLK;
  input qpll_drp_en;
  input qpll_drp_we;
  input REFCLK;
  input [15:0]\di_reg[15] ;
  input [4:0]Q;
  input gt_cpllpdrefclk;
  input rst_cpllreset;

  wire CLK;
  wire [15:0]D;
  wire PLL0RESET0;
  wire [4:0]Q;
  wire REFCLK;
  wire cpllpd;
  wire [15:0]\di_reg[15] ;
  wire gt_cpllpdrefclk;
  wire \int_qplllock_out[0] ;
  wire [0:0]int_qplloutclk_out;
  wire [0:0]int_qplloutrefclk_out;
  wire qpll_drp_en;
  wire qpll_drp_rdy;
  wire qpll_drp_we;
  wire rst_cpllreset;
  wire \NLW_gtp_common.gtpe2_common_i_PLL0FBCLKLOST_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_PLL0REFCLKLOST_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_PLL1FBCLKLOST_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_PLL1LOCK_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_PLL1OUTCLK_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_PLL1OUTREFCLK_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_PLL1REFCLKLOST_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_REFCLKOUTMONITOR0_UNCONNECTED ;
  wire \NLW_gtp_common.gtpe2_common_i_REFCLKOUTMONITOR1_UNCONNECTED ;
  wire [7:0]\NLW_gtp_common.gtpe2_common_i_DMONITOROUT_UNCONNECTED ;
  wire [15:0]\NLW_gtp_common.gtpe2_common_i_PMARSVDOUT_UNCONNECTED ;

  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_gtp_cpllpd_ovrd cpllPDInst
       (.PLL0RESET0(PLL0RESET0),
        .cpllpd(cpllpd),
        .gt_cpllpdrefclk(gt_cpllpdrefclk),
        .rst_cpllreset(rst_cpllreset));
  (* box_type = "PRIMITIVE" *) 
  GTPE2_COMMON #(
    .BIAS_CFG(64'h0000000000050001),
    .COMMON_CFG(32'h00000000),
    .IS_DRPCLK_INVERTED(1'b0),
    .IS_GTGREFCLK0_INVERTED(1'b0),
    .IS_GTGREFCLK1_INVERTED(1'b0),
    .IS_PLL0LOCKDETCLK_INVERTED(1'b0),
    .IS_PLL1LOCKDETCLK_INVERTED(1'b0),
    .PLL0_CFG(27'h01F024C),
    .PLL0_DMON_CFG(1'b0),
    .PLL0_FBDIV(5),
    .PLL0_FBDIV_45(5),
    .PLL0_INIT_CFG(24'h00001E),
    .PLL0_LOCK_CFG(9'h1E8),
    .PLL0_REFCLK_DIV(1),
    .PLL1_CFG(27'h01F024C),
    .PLL1_DMON_CFG(1'b0),
    .PLL1_FBDIV(5),
    .PLL1_FBDIV_45(5),
    .PLL1_INIT_CFG(24'h00001E),
    .PLL1_LOCK_CFG(9'h1E8),
    .PLL1_REFCLK_DIV(1),
    .PLL_CLKOUT_CFG(8'b00000000),
    .RSVD_ATTR0(16'h0000),
    .RSVD_ATTR1(16'h0000),
    .SIM_PLL0REFCLK_SEL(3'b001),
    .SIM_PLL1REFCLK_SEL(3'b001),
    .SIM_RESET_SPEEDUP("FALSE"),
    .SIM_VERSION("1.0")) 
    \gtp_common.gtpe2_common_i 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b1,1'b1,1'b1,1'b1}),
        .BGRCALOVRDENB(1'b1),
        .DMONITOROUT(\NLW_gtp_common.gtpe2_common_i_DMONITOROUT_UNCONNECTED [7:0]),
        .DRPADDR({Q[4],1'b0,Q[3],Q[3],Q[4],Q[2:0]}),
        .DRPCLK(CLK),
        .DRPDI(\di_reg[15] ),
        .DRPDO(D),
        .DRPEN(qpll_drp_en),
        .DRPRDY(qpll_drp_rdy),
        .DRPWE(qpll_drp_we),
        .GTEASTREFCLK0(1'b0),
        .GTEASTREFCLK1(1'b0),
        .GTGREFCLK0(1'b0),
        .GTGREFCLK1(1'b0),
        .GTREFCLK0(REFCLK),
        .GTREFCLK1(1'b0),
        .GTWESTREFCLK0(1'b0),
        .GTWESTREFCLK1(1'b0),
        .PLL0FBCLKLOST(\NLW_gtp_common.gtpe2_common_i_PLL0FBCLKLOST_UNCONNECTED ),
        .PLL0LOCK(\int_qplllock_out[0] ),
        .PLL0LOCKDETCLK(1'b0),
        .PLL0LOCKEN(1'b1),
        .PLL0OUTCLK(int_qplloutclk_out),
        .PLL0OUTREFCLK(int_qplloutrefclk_out),
        .PLL0PD(cpllpd),
        .PLL0REFCLKLOST(\NLW_gtp_common.gtpe2_common_i_PLL0REFCLKLOST_UNCONNECTED ),
        .PLL0REFCLKSEL({1'b0,1'b0,1'b1}),
        .PLL0RESET(PLL0RESET0),
        .PLL1FBCLKLOST(\NLW_gtp_common.gtpe2_common_i_PLL1FBCLKLOST_UNCONNECTED ),
        .PLL1LOCK(\NLW_gtp_common.gtpe2_common_i_PLL1LOCK_UNCONNECTED ),
        .PLL1LOCKDETCLK(1'b0),
        .PLL1LOCKEN(1'b1),
        .PLL1OUTCLK(\NLW_gtp_common.gtpe2_common_i_PLL1OUTCLK_UNCONNECTED ),
        .PLL1OUTREFCLK(\NLW_gtp_common.gtpe2_common_i_PLL1OUTREFCLK_UNCONNECTED ),
        .PLL1PD(1'b1),
        .PLL1REFCLKLOST(\NLW_gtp_common.gtpe2_common_i_PLL1REFCLKLOST_UNCONNECTED ),
        .PLL1REFCLKSEL({1'b0,1'b0,1'b1}),
        .PLL1RESET(1'b1),
        .PLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PLLRSVD2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT(\NLW_gtp_common.gtpe2_common_i_PMARSVDOUT_UNCONNECTED [15:0]),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(\NLW_gtp_common.gtpe2_common_i_REFCLKOUTMONITOR0_UNCONNECTED ),
        .REFCLKOUTMONITOR1(\NLW_gtp_common.gtpe2_common_i_REFCLKOUTMONITOR1_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_pcie_7x_v2_0_2_rxeq_scan" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_pcie_7x_v2_0_2_rxeq_scan
   (rxeq_adapt_done_reg,
    rxeq_adapt_done_reg_reg,
    D,
    rxeq_new_txcoeff_req_4,
    rst_cpllreset,
    rxeq_new_txcoeff_req,
    pclk_sel_reg,
    rxeq_preset_valid,
    rxeq_adapt_done_reg_reg_0,
    out,
    \FSM_sequential_fsm_rx_reg[2] ,
    rxeq_adapt_done,
    \rxeq_control_reg2_reg[0] ,
    \rxeq_cnt_reg[1] ,
    Q,
    \rxeq_preset_reg[2] ,
    \rxeq_txpreset_reg[3] ,
    \rxeq_txcoeff_reg[17] ,
    \rxeq_fs_reg[5] ,
    \rxeq_lf_reg[5] );
  output rxeq_adapt_done_reg;
  output rxeq_adapt_done_reg_reg;
  output [2:0]D;
  output rxeq_new_txcoeff_req_4;
  input rst_cpllreset;
  input rxeq_new_txcoeff_req;
  input pclk_sel_reg;
  input rxeq_preset_valid;
  input rxeq_adapt_done_reg_reg_0;
  input [1:0]out;
  input [2:0]\FSM_sequential_fsm_rx_reg[2] ;
  input rxeq_adapt_done;
  input \rxeq_control_reg2_reg[0] ;
  input \rxeq_cnt_reg[1] ;
  input [2:0]Q;
  input [2:0]\rxeq_preset_reg[2] ;
  input [3:0]\rxeq_txpreset_reg[3] ;
  input [17:0]\rxeq_txcoeff_reg[17] ;
  input [5:0]\rxeq_fs_reg[5] ;
  input [5:0]\rxeq_lf_reg[5] ;

  wire [2:0]D;
  wire \FSM_onehot_fsm[1]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[2]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[3]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[3]_i_2_n_0 ;
  wire \FSM_onehot_fsm[3]_i_3_n_0 ;
  wire \FSM_onehot_fsm[3]_i_4_n_0 ;
  wire \FSM_onehot_fsm[3]_i_5_n_0 ;
  wire \FSM_onehot_fsm[3]_i_6_n_0 ;
  wire \FSM_onehot_fsm[3]_i_7_n_0 ;
  wire \FSM_onehot_fsm[3]_i_8_n_0 ;
  wire \FSM_onehot_fsm[3]_i_9_n_0 ;
  wire \FSM_onehot_fsm[4]_i_1__0_n_0 ;
  wire \FSM_onehot_fsm[4]_i_2_n_0 ;
  wire \FSM_onehot_fsm[4]_i_3_n_0 ;
  wire \FSM_onehot_fsm[4]_i_4_n_0 ;
  wire \FSM_onehot_fsm[4]_i_5_n_0 ;
  wire \FSM_onehot_fsm[4]_i_6_n_0 ;
  wire \FSM_onehot_fsm[4]_i_7_n_0 ;
  wire \FSM_onehot_fsm[4]_i_8_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_fsm_reg_n_0_[4] ;
  wire \FSM_sequential_fsm_rx[0]_i_2_n_0 ;
  wire \FSM_sequential_fsm_rx[0]_i_3_n_0 ;
  wire [2:0]\FSM_sequential_fsm_rx_reg[2] ;
  wire [2:0]Q;
  wire adapt_done;
  wire adapt_done_cnt;
  wire adapt_done_cnt_i_1_n_0;
  wire adapt_done_cnt_reg_n_0;
  wire [21:0]converge_cnt;
  wire [21:0]converge_cnt0;
  wire \converge_cnt[3]_i_6_n_0 ;
  wire \converge_cnt_reg[11]_i_2_n_0 ;
  wire \converge_cnt_reg[11]_i_2_n_1 ;
  wire \converge_cnt_reg[11]_i_2_n_2 ;
  wire \converge_cnt_reg[11]_i_2_n_3 ;
  wire \converge_cnt_reg[15]_i_2_n_0 ;
  wire \converge_cnt_reg[15]_i_2_n_1 ;
  wire \converge_cnt_reg[15]_i_2_n_2 ;
  wire \converge_cnt_reg[15]_i_2_n_3 ;
  wire \converge_cnt_reg[19]_i_2_n_0 ;
  wire \converge_cnt_reg[19]_i_2_n_1 ;
  wire \converge_cnt_reg[19]_i_2_n_2 ;
  wire \converge_cnt_reg[19]_i_2_n_3 ;
  wire \converge_cnt_reg[21]_i_2_n_3 ;
  wire \converge_cnt_reg[3]_i_2_n_0 ;
  wire \converge_cnt_reg[3]_i_2_n_1 ;
  wire \converge_cnt_reg[3]_i_2_n_2 ;
  wire \converge_cnt_reg[3]_i_2_n_3 ;
  wire \converge_cnt_reg[7]_i_2_n_0 ;
  wire \converge_cnt_reg[7]_i_2_n_1 ;
  wire \converge_cnt_reg[7]_i_2_n_2 ;
  wire \converge_cnt_reg[7]_i_2_n_3 ;
  wire \converge_cnt_reg_n_0_[0] ;
  wire \converge_cnt_reg_n_0_[10] ;
  wire \converge_cnt_reg_n_0_[11] ;
  wire \converge_cnt_reg_n_0_[12] ;
  wire \converge_cnt_reg_n_0_[13] ;
  wire \converge_cnt_reg_n_0_[14] ;
  wire \converge_cnt_reg_n_0_[15] ;
  wire \converge_cnt_reg_n_0_[16] ;
  wire \converge_cnt_reg_n_0_[17] ;
  wire \converge_cnt_reg_n_0_[18] ;
  wire \converge_cnt_reg_n_0_[19] ;
  wire \converge_cnt_reg_n_0_[1] ;
  wire \converge_cnt_reg_n_0_[20] ;
  wire \converge_cnt_reg_n_0_[21] ;
  wire \converge_cnt_reg_n_0_[2] ;
  wire \converge_cnt_reg_n_0_[3] ;
  wire \converge_cnt_reg_n_0_[4] ;
  wire \converge_cnt_reg_n_0_[5] ;
  wire \converge_cnt_reg_n_0_[6] ;
  wire \converge_cnt_reg_n_0_[7] ;
  wire \converge_cnt_reg_n_0_[8] ;
  wire \converge_cnt_reg_n_0_[9] ;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]fs_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]fs_reg2;
  wire fsm1__0;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]lf_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [5:0]lf_reg2;
  wire new_txcoeff_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire new_txcoeff_req_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire new_txcoeff_req_reg2;
  wire [1:0]out;
  wire pclk_sel_reg;
  wire preset_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]preset_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [2:0]preset_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire preset_valid_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire preset_valid_reg2;
  wire rst_cpllreset;
  wire rxeq_adapt_done;
  wire rxeq_adapt_done_reg;
  wire rxeq_adapt_done_reg0;
  wire rxeq_adapt_done_reg_i_2_n_0;
  wire rxeq_adapt_done_reg_reg;
  wire rxeq_adapt_done_reg_reg_0;
  wire \rxeq_cnt_reg[1] ;
  wire \rxeq_control_reg2_reg[0] ;
  wire [5:0]\rxeq_fs_reg[5] ;
  wire [5:0]\rxeq_lf_reg[5] ;
  wire rxeq_new_txcoeff_req;
  wire rxeq_new_txcoeff_req_4;
  wire [2:0]\rxeq_preset_reg[2] ;
  wire rxeq_preset_valid;
  wire [17:0]\rxeq_txcoeff_reg[17] ;
  wire [3:0]\rxeq_txpreset_reg[3] ;
  wire rxeqscan_adapt_done;
  wire rxeqscan_new_txcoeff_done;
  wire rxeqscan_preset_done;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [17:0]txcoeff_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [17:0]txcoeff_reg2;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]txpreset_reg1;
  (* ASYNC_REG = "true" *) (* SHIFT_EXTRACT = "NO" *) wire [3:0]txpreset_reg2;
  wire [3:1]\NLW_converge_cnt_reg[21]_i_2_CO_UNCONNECTED ;
  wire [3:2]\NLW_converge_cnt_reg[21]_i_2_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00000F0F0111CDDD)) 
    \FSM_onehot_fsm[1]_i_1__0 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(new_txcoeff_req_reg2),
        .I3(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I4(preset_valid_reg2),
        .I5(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \FSM_onehot_fsm[2]_i_1__0 
       (.I0(preset_valid_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(\FSM_onehot_fsm[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \FSM_onehot_fsm[3]_i_1__0 
       (.I0(\FSM_onehot_fsm[3]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[3]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm[3]_i_4_n_0 ),
        .I3(\FSM_onehot_fsm[3]_i_5_n_0 ),
        .I4(\FSM_onehot_fsm[3]_i_6_n_0 ),
        .I5(\FSM_onehot_fsm[3]_i_7_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000202FF000202)) 
    \FSM_onehot_fsm[3]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(fsm1__0),
        .I3(new_txcoeff_req_reg2),
        .I4(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I5(preset_valid_reg2),
        .O(\FSM_onehot_fsm[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFD2)) 
    \FSM_onehot_fsm[3]_i_3 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(\converge_cnt_reg_n_0_[21] ),
        .I3(\FSM_onehot_fsm[3]_i_8_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFEB)) 
    \FSM_onehot_fsm[3]_i_4 
       (.I0(\FSM_onehot_fsm[4]_i_8_n_0 ),
        .I1(\converge_cnt_reg_n_0_[14] ),
        .I2(\converge_cnt_reg_n_0_[13] ),
        .I3(\FSM_onehot_fsm[4]_i_7_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h005D)) 
    \FSM_onehot_fsm[3]_i_5 
       (.I0(\converge_cnt_reg_n_0_[0] ),
        .I1(\converge_cnt_reg_n_0_[2] ),
        .I2(\converge_cnt_reg_n_0_[3] ),
        .I3(\FSM_onehot_fsm[3]_i_9_n_0 ),
        .O(\FSM_onehot_fsm[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF9FFFFFFFFFFFFFF)) 
    \FSM_onehot_fsm[3]_i_6 
       (.I0(\converge_cnt_reg_n_0_[20] ),
        .I1(\converge_cnt_reg_n_0_[21] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I3(\converge_cnt_reg_n_0_[9] ),
        .I4(\converge_cnt_reg_n_0_[11] ),
        .I5(\converge_cnt_reg_n_0_[19] ),
        .O(\FSM_onehot_fsm[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h2FFFFFFF2F2FFF22)) 
    \FSM_onehot_fsm[3]_i_7 
       (.I0(\converge_cnt_reg_n_0_[14] ),
        .I1(\converge_cnt_reg_n_0_[20] ),
        .I2(\converge_cnt_reg_n_0_[10] ),
        .I3(\converge_cnt_reg_n_0_[8] ),
        .I4(\converge_cnt_reg_n_0_[13] ),
        .I5(\converge_cnt_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF4FF)) 
    \FSM_onehot_fsm[3]_i_8 
       (.I0(\converge_cnt_reg_n_0_[8] ),
        .I1(\converge_cnt_reg_n_0_[10] ),
        .I2(\converge_cnt_reg_n_0_[5] ),
        .I3(\converge_cnt_reg_n_0_[15] ),
        .I4(\converge_cnt_reg_n_0_[4] ),
        .I5(\converge_cnt_reg_n_0_[6] ),
        .O(\FSM_onehot_fsm[3]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \FSM_onehot_fsm[3]_i_9 
       (.I0(\converge_cnt_reg_n_0_[7] ),
        .I1(\converge_cnt_reg_n_0_[1] ),
        .I2(\converge_cnt_reg_n_0_[16] ),
        .I3(\converge_cnt_reg_n_0_[12] ),
        .O(\FSM_onehot_fsm[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAA080808AA08AAAA)) 
    \FSM_onehot_fsm[4]_i_1__0 
       (.I0(\FSM_onehot_fsm[4]_i_2_n_0 ),
        .I1(\FSM_onehot_fsm[4]_i_3_n_0 ),
        .I2(\FSM_onehot_fsm[4]_i_4_n_0 ),
        .I3(fsm1__0),
        .I4(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I5(\FSM_onehot_fsm[4]_i_5_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_fsm[4]_i_2 
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .O(\FSM_onehot_fsm[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000820)) 
    \FSM_onehot_fsm[4]_i_3 
       (.I0(\FSM_onehot_fsm[3]_i_5_n_0 ),
        .I1(\converge_cnt_reg_n_0_[13] ),
        .I2(\converge_cnt_reg_n_0_[14] ),
        .I3(\converge_cnt_reg_n_0_[10] ),
        .I4(\FSM_onehot_fsm[4]_i_6_n_0 ),
        .I5(\converge_cnt_reg_n_0_[3] ),
        .O(\FSM_onehot_fsm[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBAA)) 
    \FSM_onehot_fsm[4]_i_4 
       (.I0(\FSM_onehot_fsm[3]_i_3_n_0 ),
        .I1(\converge_cnt_reg_n_0_[20] ),
        .I2(\converge_cnt_reg_n_0_[21] ),
        .I3(\converge_cnt_reg_n_0_[14] ),
        .I4(\FSM_onehot_fsm[4]_i_7_n_0 ),
        .I5(\FSM_onehot_fsm[4]_i_8_n_0 ),
        .O(\FSM_onehot_fsm[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_fsm[4]_i_5 
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(new_txcoeff_req_reg2),
        .O(\FSM_onehot_fsm[4]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_onehot_fsm[4]_i_6 
       (.I0(\converge_cnt_reg_n_0_[9] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I2(\converge_cnt_reg_n_0_[19] ),
        .I3(\converge_cnt_reg_n_0_[11] ),
        .O(\FSM_onehot_fsm[4]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h4FFF)) 
    \FSM_onehot_fsm[4]_i_7 
       (.I0(\converge_cnt_reg_n_0_[3] ),
        .I1(\converge_cnt_reg_n_0_[8] ),
        .I2(\converge_cnt_reg_n_0_[17] ),
        .I3(\converge_cnt_reg_n_0_[18] ),
        .O(\FSM_onehot_fsm[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0D0D0D0DFFFF0DFF)) 
    \FSM_onehot_fsm[4]_i_8 
       (.I0(\converge_cnt_reg_n_0_[21] ),
        .I1(\converge_cnt_reg_n_0_[20] ),
        .I2(\converge_cnt_reg_n_0_[14] ),
        .I3(\converge_cnt_reg_n_0_[3] ),
        .I4(\converge_cnt_reg_n_0_[2] ),
        .I5(\converge_cnt_reg_n_0_[0] ),
        .O(\FSM_onehot_fsm[4]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_fsm_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(1'b0),
        .Q(\FSM_onehot_fsm_reg_n_0_[0] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDSE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[1]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[1] ),
        .S(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[2]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[2] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[3]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[3] ),
        .R(rst_cpllreset));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_fsm_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\FSM_onehot_fsm[4]_i_1__0_n_0 ),
        .Q(\FSM_onehot_fsm_reg_n_0_[4] ),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'hEAABEAABEAABFAAB)) 
    \FSM_sequential_fsm_rx[0]_i_1 
       (.I0(\FSM_sequential_fsm_rx[0]_i_2_n_0 ),
        .I1(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I2(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I3(\FSM_sequential_fsm_rx_reg[2] [2]),
        .I4(out[1]),
        .I5(out[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hEEBAEAAAEEAAEEAA)) 
    \FSM_sequential_fsm_rx[0]_i_2 
       (.I0(\FSM_sequential_fsm_rx[0]_i_3_n_0 ),
        .I1(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I2(Q[0]),
        .I3(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(\FSM_sequential_fsm_rx[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h222222220000F0FF)) 
    \FSM_sequential_fsm_rx[0]_i_3 
       (.I0(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I1(rxeqscan_new_txcoeff_done),
        .I2(out[1]),
        .I3(out[0]),
        .I4(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I5(\FSM_sequential_fsm_rx_reg[2] [2]),
        .O(\FSM_sequential_fsm_rx[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0CA0FFC00CA00FC0)) 
    \FSM_sequential_fsm_rx[1]_i_1 
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(\rxeq_control_reg2_reg[0] ),
        .I2(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I3(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I4(\FSM_sequential_fsm_rx_reg[2] [2]),
        .I5(\rxeq_cnt_reg[1] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h2230FF0022FCFF00)) 
    \FSM_sequential_fsm_rx[2]_i_1 
       (.I0(\rxeq_control_reg2_reg[0] ),
        .I1(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I2(rxeqscan_preset_done),
        .I3(\FSM_sequential_fsm_rx_reg[2] [2]),
        .I4(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I5(\rxeq_cnt_reg[1] ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h00FF7000)) 
    adapt_done_cnt_i_1
       (.I0(out[0]),
        .I1(out[1]),
        .I2(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I3(adapt_done_cnt),
        .I4(adapt_done_cnt_reg_n_0),
        .O(adapt_done_cnt_i_1_n_0));
  LUT6 #(
    .INIT(64'hF000F101FFFFF101)) 
    adapt_done_cnt_i_2
       (.I0(\FSM_onehot_fsm_reg_n_0_[1] ),
        .I1(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I2(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I3(fsm1__0),
        .I4(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I5(new_txcoeff_req_reg2),
        .O(adapt_done_cnt));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_cnt_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(adapt_done_cnt_i_1_n_0),
        .Q(adapt_done_cnt_reg_n_0),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'hA8880000)) 
    adapt_done_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[4] ),
        .I1(adapt_done_cnt_reg_n_0),
        .I2(out[1]),
        .I3(out[0]),
        .I4(new_txcoeff_req_reg2),
        .O(adapt_done));
  FDRE #(
    .INIT(1'b0)) 
    adapt_done_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(adapt_done),
        .Q(rxeqscan_adapt_done),
        .R(rst_cpllreset));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[0]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[0]),
        .O(converge_cnt[0]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[10]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[10]),
        .O(converge_cnt[10]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[11]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[11]),
        .O(converge_cnt[11]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[12]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[12]),
        .O(converge_cnt[12]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[13]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[13]),
        .O(converge_cnt[13]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[14]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[14]),
        .O(converge_cnt[14]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[15]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[15]),
        .O(converge_cnt[15]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[16]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[16]),
        .O(converge_cnt[16]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[17]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[17]),
        .O(converge_cnt[17]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[18]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[18]),
        .O(converge_cnt[18]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[19]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[19]),
        .O(converge_cnt[19]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[1]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[1]),
        .O(converge_cnt[1]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[20]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[20]),
        .O(converge_cnt[20]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[21]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[21]),
        .O(converge_cnt[21]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[2]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[2]),
        .O(converge_cnt[2]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[3]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[3]),
        .O(converge_cnt[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \converge_cnt[3]_i_6 
       (.I0(\converge_cnt_reg_n_0_[0] ),
        .O(\converge_cnt[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[4]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[4]),
        .O(converge_cnt[4]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[5]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[5]),
        .O(converge_cnt[5]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[6]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[6]),
        .O(converge_cnt[6]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[7]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[7]),
        .O(converge_cnt[7]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[8]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[8]),
        .O(converge_cnt[8]));
  LUT5 #(
    .INIT(32'hAAA20000)) 
    \converge_cnt[9]_i_1 
       (.I0(\FSM_onehot_fsm_reg_n_0_[3] ),
        .I1(out[1]),
        .I2(adapt_done_cnt_reg_n_0),
        .I3(out[0]),
        .I4(converge_cnt0[9]),
        .O(converge_cnt[9]));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[0]),
        .Q(\converge_cnt_reg_n_0_[0] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[10] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[10]),
        .Q(\converge_cnt_reg_n_0_[10] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[11] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[11]),
        .Q(\converge_cnt_reg_n_0_[11] ),
        .R(rst_cpllreset));
  CARRY4 \converge_cnt_reg[11]_i_2 
       (.CI(\converge_cnt_reg[7]_i_2_n_0 ),
        .CO({\converge_cnt_reg[11]_i_2_n_0 ,\converge_cnt_reg[11]_i_2_n_1 ,\converge_cnt_reg[11]_i_2_n_2 ,\converge_cnt_reg[11]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[11:8]),
        .S({\converge_cnt_reg_n_0_[11] ,\converge_cnt_reg_n_0_[10] ,\converge_cnt_reg_n_0_[9] ,\converge_cnt_reg_n_0_[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[12] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[12]),
        .Q(\converge_cnt_reg_n_0_[12] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[13] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[13]),
        .Q(\converge_cnt_reg_n_0_[13] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[14] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[14]),
        .Q(\converge_cnt_reg_n_0_[14] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[15] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[15]),
        .Q(\converge_cnt_reg_n_0_[15] ),
        .R(rst_cpllreset));
  CARRY4 \converge_cnt_reg[15]_i_2 
       (.CI(\converge_cnt_reg[11]_i_2_n_0 ),
        .CO({\converge_cnt_reg[15]_i_2_n_0 ,\converge_cnt_reg[15]_i_2_n_1 ,\converge_cnt_reg[15]_i_2_n_2 ,\converge_cnt_reg[15]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[15:12]),
        .S({\converge_cnt_reg_n_0_[15] ,\converge_cnt_reg_n_0_[14] ,\converge_cnt_reg_n_0_[13] ,\converge_cnt_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[16] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[16]),
        .Q(\converge_cnt_reg_n_0_[16] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[17] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[17]),
        .Q(\converge_cnt_reg_n_0_[17] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[18] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[18]),
        .Q(\converge_cnt_reg_n_0_[18] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[19] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[19]),
        .Q(\converge_cnt_reg_n_0_[19] ),
        .R(rst_cpllreset));
  CARRY4 \converge_cnt_reg[19]_i_2 
       (.CI(\converge_cnt_reg[15]_i_2_n_0 ),
        .CO({\converge_cnt_reg[19]_i_2_n_0 ,\converge_cnt_reg[19]_i_2_n_1 ,\converge_cnt_reg[19]_i_2_n_2 ,\converge_cnt_reg[19]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[19:16]),
        .S({\converge_cnt_reg_n_0_[19] ,\converge_cnt_reg_n_0_[18] ,\converge_cnt_reg_n_0_[17] ,\converge_cnt_reg_n_0_[16] }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[1]),
        .Q(\converge_cnt_reg_n_0_[1] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[20] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[20]),
        .Q(\converge_cnt_reg_n_0_[20] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[21] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[21]),
        .Q(\converge_cnt_reg_n_0_[21] ),
        .R(rst_cpllreset));
  CARRY4 \converge_cnt_reg[21]_i_2 
       (.CI(\converge_cnt_reg[19]_i_2_n_0 ),
        .CO({\NLW_converge_cnt_reg[21]_i_2_CO_UNCONNECTED [3:1],\converge_cnt_reg[21]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_converge_cnt_reg[21]_i_2_O_UNCONNECTED [3:2],converge_cnt0[21:20]}),
        .S({1'b0,1'b0,\converge_cnt_reg_n_0_[21] ,\converge_cnt_reg_n_0_[20] }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[2]),
        .Q(\converge_cnt_reg_n_0_[2] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[3]),
        .Q(\converge_cnt_reg_n_0_[3] ),
        .R(rst_cpllreset));
  CARRY4 \converge_cnt_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\converge_cnt_reg[3]_i_2_n_0 ,\converge_cnt_reg[3]_i_2_n_1 ,\converge_cnt_reg[3]_i_2_n_2 ,\converge_cnt_reg[3]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\converge_cnt_reg_n_0_[0] }),
        .O(converge_cnt0[3:0]),
        .S({\converge_cnt_reg_n_0_[3] ,\converge_cnt_reg_n_0_[2] ,\converge_cnt_reg_n_0_[1] ,\converge_cnt[3]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[4]),
        .Q(\converge_cnt_reg_n_0_[4] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[5]),
        .Q(\converge_cnt_reg_n_0_[5] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[6]),
        .Q(\converge_cnt_reg_n_0_[6] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[7] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[7]),
        .Q(\converge_cnt_reg_n_0_[7] ),
        .R(rst_cpllreset));
  CARRY4 \converge_cnt_reg[7]_i_2 
       (.CI(\converge_cnt_reg[3]_i_2_n_0 ),
        .CO({\converge_cnt_reg[7]_i_2_n_0 ,\converge_cnt_reg[7]_i_2_n_1 ,\converge_cnt_reg[7]_i_2_n_2 ,\converge_cnt_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(converge_cnt0[7:4]),
        .S({\converge_cnt_reg_n_0_[7] ,\converge_cnt_reg_n_0_[6] ,\converge_cnt_reg_n_0_[5] ,\converge_cnt_reg_n_0_[4] }));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[8] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[8]),
        .Q(\converge_cnt_reg_n_0_[8] ),
        .R(rst_cpllreset));
  FDRE #(
    .INIT(1'b0)) 
    \converge_cnt_reg[9] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(converge_cnt[9]),
        .Q(\converge_cnt_reg_n_0_[9] ),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_fs_reg[5] [0]),
        .Q(fs_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_fs_reg[5] [1]),
        .Q(fs_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_fs_reg[5] [2]),
        .Q(fs_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_fs_reg[5] [3]),
        .Q(fs_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_fs_reg[5] [4]),
        .Q(fs_reg1[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg1_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_fs_reg[5] [5]),
        .Q(fs_reg1[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(fs_reg1[0]),
        .Q(fs_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(fs_reg1[1]),
        .Q(fs_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(fs_reg1[2]),
        .Q(fs_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(fs_reg1[3]),
        .Q(fs_reg2[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(fs_reg1[4]),
        .Q(fs_reg2[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \fs_reg2_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(fs_reg1[5]),
        .Q(fs_reg2[5]),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'h02)) 
    fsm1
       (.I0(out[1]),
        .I1(adapt_done_cnt_reg_n_0),
        .I2(out[0]),
        .O(fsm1__0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_lf_reg[5] [0]),
        .Q(lf_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_lf_reg[5] [1]),
        .Q(lf_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_lf_reg[5] [2]),
        .Q(lf_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_lf_reg[5] [3]),
        .Q(lf_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_lf_reg[5] [4]),
        .Q(lf_reg1[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg1_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_lf_reg[5] [5]),
        .Q(lf_reg1[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(lf_reg1[0]),
        .Q(lf_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(lf_reg1[1]),
        .Q(lf_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(lf_reg1[2]),
        .Q(lf_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(lf_reg1[3]),
        .Q(lf_reg2[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(lf_reg1[4]),
        .Q(lf_reg2[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \lf_reg2_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(lf_reg1[5]),
        .Q(lf_reg2[5]),
        .R(rst_cpllreset));
  LUT2 #(
    .INIT(4'h8)) 
    new_txcoeff_done_i_1
       (.I0(new_txcoeff_req_reg2),
        .I1(\FSM_onehot_fsm_reg_n_0_[4] ),
        .O(new_txcoeff_done));
  FDRE #(
    .INIT(1'b0)) 
    new_txcoeff_done_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(new_txcoeff_done),
        .Q(rxeqscan_new_txcoeff_done),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_new_txcoeff_req),
        .Q(new_txcoeff_req_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE new_txcoeff_req_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(new_txcoeff_req_reg1),
        .Q(new_txcoeff_req_reg2),
        .R(rst_cpllreset));
  LUT3 #(
    .INIT(8'hEA)) 
    preset_done_i_1
       (.I0(\FSM_onehot_fsm_reg_n_0_[2] ),
        .I1(preset_valid_reg2),
        .I2(\FSM_onehot_fsm_reg_n_0_[1] ),
        .O(preset_done));
  FDRE #(
    .INIT(1'b0)) 
    preset_done_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(preset_done),
        .Q(rxeqscan_preset_done),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_preset_reg[2] [0]),
        .Q(preset_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_preset_reg[2] [1]),
        .Q(preset_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_preset_reg[2] [2]),
        .Q(preset_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(preset_reg1[0]),
        .Q(preset_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(preset_reg1[1]),
        .Q(preset_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \preset_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(preset_reg1[2]),
        .Q(preset_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg1_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(rxeq_preset_valid),
        .Q(preset_valid_reg1),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE preset_valid_reg2_reg
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(preset_valid_reg1),
        .Q(preset_valid_reg2),
        .R(rst_cpllreset));
  LUT6 #(
    .INIT(64'h0080F00000800000)) 
    rxeq_adapt_done_i_1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(rxeq_adapt_done_reg0),
        .I2(\FSM_sequential_fsm_rx_reg[2] [2]),
        .I3(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I4(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I5(rxeq_adapt_done),
        .O(rxeq_adapt_done_reg));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'hE)) 
    rxeq_adapt_done_i_2
       (.I0(rxeqscan_adapt_done),
        .I1(rxeq_adapt_done_reg_reg_0),
        .O(rxeq_adapt_done_reg0));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h44FF4000)) 
    rxeq_adapt_done_reg_i_1
       (.I0(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I1(\FSM_sequential_fsm_rx_reg[2] [2]),
        .I2(rxeqscan_adapt_done),
        .I3(rxeq_adapt_done_reg_i_2_n_0),
        .I4(rxeq_adapt_done_reg_reg_0),
        .O(rxeq_adapt_done_reg_reg));
  LUT6 #(
    .INIT(64'hFFAA000010105555)) 
    rxeq_adapt_done_reg_i_2
       (.I0(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I1(out[1]),
        .I2(out[0]),
        .I3(rxeqscan_new_txcoeff_done),
        .I4(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I5(\FSM_sequential_fsm_rx_reg[2] [2]),
        .O(rxeq_adapt_done_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    rxeq_new_txcoeff_req_i_1
       (.I0(rxeqscan_new_txcoeff_done),
        .I1(\FSM_sequential_fsm_rx_reg[2] [0]),
        .I2(\FSM_sequential_fsm_rx_reg[2] [1]),
        .I3(\FSM_sequential_fsm_rx_reg[2] [2]),
        .O(rxeq_new_txcoeff_req_4));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [0]),
        .Q(txcoeff_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[10] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [10]),
        .Q(txcoeff_reg1[10]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[11] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [11]),
        .Q(txcoeff_reg1[11]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[12] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [12]),
        .Q(txcoeff_reg1[12]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[13] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [13]),
        .Q(txcoeff_reg1[13]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[14] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [14]),
        .Q(txcoeff_reg1[14]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[15] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [15]),
        .Q(txcoeff_reg1[15]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[16] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [16]),
        .Q(txcoeff_reg1[16]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[17] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [17]),
        .Q(txcoeff_reg1[17]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [1]),
        .Q(txcoeff_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [2]),
        .Q(txcoeff_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [3]),
        .Q(txcoeff_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [4]),
        .Q(txcoeff_reg1[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [5]),
        .Q(txcoeff_reg1[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [6]),
        .Q(txcoeff_reg1[6]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[7] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [7]),
        .Q(txcoeff_reg1[7]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[8] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [8]),
        .Q(txcoeff_reg1[8]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg1_reg[9] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txcoeff_reg[17] [9]),
        .Q(txcoeff_reg1[9]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[0]),
        .Q(txcoeff_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[10] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[10]),
        .Q(txcoeff_reg2[10]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[11] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[11]),
        .Q(txcoeff_reg2[11]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[12] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[12]),
        .Q(txcoeff_reg2[12]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[13] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[13]),
        .Q(txcoeff_reg2[13]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[14] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[14]),
        .Q(txcoeff_reg2[14]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[15] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[15]),
        .Q(txcoeff_reg2[15]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[16] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[16]),
        .Q(txcoeff_reg2[16]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[17] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[17]),
        .Q(txcoeff_reg2[17]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[1]),
        .Q(txcoeff_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[2]),
        .Q(txcoeff_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[3]),
        .Q(txcoeff_reg2[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[4] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[4]),
        .Q(txcoeff_reg2[4]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[5] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[5]),
        .Q(txcoeff_reg2[5]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[6] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[6]),
        .Q(txcoeff_reg2[6]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[7] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[7]),
        .Q(txcoeff_reg2[7]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[8] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[8]),
        .Q(txcoeff_reg2[8]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txcoeff_reg2_reg[9] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txcoeff_reg1[9]),
        .Q(txcoeff_reg2[9]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txpreset_reg[3] [0]),
        .Q(txpreset_reg1[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txpreset_reg[3] [1]),
        .Q(txpreset_reg1[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txpreset_reg[3] [2]),
        .Q(txpreset_reg1[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg1_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(\rxeq_txpreset_reg[3] [3]),
        .Q(txpreset_reg1[3]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[0] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txpreset_reg1[0]),
        .Q(txpreset_reg2[0]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[1] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txpreset_reg1[1]),
        .Q(txpreset_reg2[1]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[2] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txpreset_reg1[2]),
        .Q(txpreset_reg2[2]),
        .R(rst_cpllreset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHIFT_EXTRACT = "NO" *) 
  FDRE \txpreset_reg2_reg[3] 
       (.C(pclk_sel_reg),
        .CE(1'b1),
        .D(txpreset_reg1[3]),
        .Q(txpreset_reg2[3]),
        .R(rst_cpllreset));
endmodule

(* ORIG_REF_NAME = "axi_pcie_v2_8_0_slave_attachment" *) 
module overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_slave_attachment
   (IP2Bus_RdAck_reg,
    IP2Bus_RdAck_reg_0,
    s_axi_ctl_rvalid_ipic_bridge,
    s_axi_ctl_bvalid_ipic_bridge,
    S_AXI_RDATA,
    out,
    \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ,
    sig_IP2Bus_RdAck,
    sys_rst_n_int,
    s_axi_ctl_rready_ipic_bridge,
    \resetovrd.reset_reg[4] ,
    sig_IP2Bus_WrAck,
    s_axi_ctl_bready_ipic_bridge,
    SR,
    \IP2Bus_Data_reg[31] ,
    s_axi_ctl_wvalid_ipic_bridge,
    s_axi_ctl_awvalid_ipic_bridge);
  output IP2Bus_RdAck_reg;
  output IP2Bus_RdAck_reg_0;
  output s_axi_ctl_rvalid_ipic_bridge;
  output s_axi_ctl_bvalid_ipic_bridge;
  output [31:0]S_AXI_RDATA;
  input [0:0]out;
  input \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ;
  input sig_IP2Bus_RdAck;
  input sys_rst_n_int;
  input s_axi_ctl_rready_ipic_bridge;
  input \resetovrd.reset_reg[4] ;
  input sig_IP2Bus_WrAck;
  input s_axi_ctl_bready_ipic_bridge;
  input [0:0]SR;
  input [31:0]\IP2Bus_Data_reg[31] ;
  input s_axi_ctl_wvalid_ipic_bridge;
  input s_axi_ctl_awvalid_ipic_bridge;

  wire \FSM_sequential_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_state[0]_i_2_n_0 ;
  wire \FSM_sequential_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_state[1]_i_2_n_0 ;
  wire \FSM_sequential_state[1]_i_4_n_0 ;
  wire \FSM_sequential_state[1]_i_5_n_0 ;
  wire \FSM_sequential_state_reg[1]_i_3_n_0 ;
  wire [31:0]\IP2Bus_Data_reg[31] ;
  wire IP2Bus_RdAck_reg;
  wire IP2Bus_RdAck_reg_0;
  wire [0:0]SR;
  wire [31:0]S_AXI_RDATA;
  wire \end_point.s_axi_ctl_arvalid_ipic_bridge_reg ;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire s_axi_bvalid_i_i_1_n_0;
  wire s_axi_ctl_awvalid_ipic_bridge;
  wire s_axi_ctl_bready_ipic_bridge;
  wire s_axi_ctl_bvalid_ipic_bridge;
  wire s_axi_ctl_rready_ipic_bridge;
  wire s_axi_ctl_rvalid_ipic_bridge;
  wire s_axi_ctl_wvalid_ipic_bridge;
  wire \s_axi_rdata_i[31]_i_1_n_0 ;
  wire s_axi_rvalid_i_i_1_n_0;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  (* RTL_KEEP = "yes" *) wire [1:0]state;
  wire sys_rst_n_int;

  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_state[0]_i_1__0 
       (.I0(\FSM_sequential_state[0]_i_2_n_0 ),
        .I1(\FSM_sequential_state_reg[1]_i_3_n_0 ),
        .I2(state[0]),
        .O(\FSM_sequential_state[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(sig_IP2Bus_RdAck),
        .I1(state[0]),
        .I2(sig_IP2Bus_WrAck),
        .I3(state[1]),
        .I4(\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .O(\FSM_sequential_state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \FSM_sequential_state[1]_i_1__0 
       (.I0(\FSM_sequential_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_state_reg[1]_i_3_n_0 ),
        .I2(state[1]),
        .O(\FSM_sequential_state[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h308830BB)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(sig_IP2Bus_RdAck),
        .I1(state[0]),
        .I2(sig_IP2Bus_WrAck),
        .I3(state[1]),
        .I4(\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .O(\FSM_sequential_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBB8B8B8)) 
    \FSM_sequential_state[1]_i_4 
       (.I0(sig_IP2Bus_WrAck),
        .I1(state[1]),
        .I2(\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .I3(s_axi_ctl_wvalid_ipic_bridge),
        .I4(s_axi_ctl_awvalid_ipic_bridge),
        .O(\FSM_sequential_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF888FFFFF8880000)) 
    \FSM_sequential_state[1]_i_5 
       (.I0(s_axi_ctl_rready_ipic_bridge),
        .I1(s_axi_ctl_rvalid_ipic_bridge),
        .I2(s_axi_ctl_bready_ipic_bridge),
        .I3(s_axi_ctl_bvalid_ipic_bridge),
        .I4(state[1]),
        .I5(sig_IP2Bus_RdAck),
        .O(\FSM_sequential_state[1]_i_5_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_state[0]_i_1__0_n_0 ),
        .Q(state[0]),
        .R(SR));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_state_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_state[1]_i_1__0_n_0 ),
        .Q(state[1]),
        .R(SR));
  MUXF7 \FSM_sequential_state_reg[1]_i_3 
       (.I0(\FSM_sequential_state[1]_i_4_n_0 ),
        .I1(\FSM_sequential_state[1]_i_5_n_0 ),
        .O(\FSM_sequential_state_reg[1]_i_3_n_0 ),
        .S(state[0]));
  overlay1_axi_pcie_0_0_axi_pcie_v2_8_0_address_decoder I_DECODER
       (.\FSM_sequential_state_reg[1] (state),
        .IP2Bus_RdAck_reg(IP2Bus_RdAck_reg_0),
        .IP2Bus_RdAck_reg_0(IP2Bus_RdAck_reg),
        .\end_point.s_axi_ctl_arvalid_ipic_bridge_reg (\end_point.s_axi_ctl_arvalid_ipic_bridge_reg ),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .s_axi_ctl_awvalid_ipic_bridge(s_axi_ctl_awvalid_ipic_bridge),
        .s_axi_ctl_wvalid_ipic_bridge(s_axi_ctl_wvalid_ipic_bridge),
        .sig_IP2Bus_RdAck(sig_IP2Bus_RdAck),
        .sig_IP2Bus_WrAck(sig_IP2Bus_WrAck),
        .sys_rst_n_int(sys_rst_n_int));
  LUT6 #(
    .INIT(64'h00002000FF002000)) 
    s_axi_bvalid_i_i_1
       (.I0(sig_IP2Bus_WrAck),
        .I1(state[0]),
        .I2(state[1]),
        .I3(sys_rst_n_int),
        .I4(s_axi_ctl_bvalid_ipic_bridge),
        .I5(s_axi_ctl_bready_ipic_bridge),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE s_axi_bvalid_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_ctl_bvalid_ipic_bridge),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata_i[31]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\s_axi_rdata_i[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_i_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [0]),
        .Q(S_AXI_RDATA[0]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [10]),
        .Q(S_AXI_RDATA[10]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [11]),
        .Q(S_AXI_RDATA[11]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [12]),
        .Q(S_AXI_RDATA[12]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [13]),
        .Q(S_AXI_RDATA[13]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [14]),
        .Q(S_AXI_RDATA[14]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [15]),
        .Q(S_AXI_RDATA[15]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [16]),
        .Q(S_AXI_RDATA[16]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [17]),
        .Q(S_AXI_RDATA[17]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [18]),
        .Q(S_AXI_RDATA[18]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [19]),
        .Q(S_AXI_RDATA[19]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [1]),
        .Q(S_AXI_RDATA[1]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [20]),
        .Q(S_AXI_RDATA[20]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [21]),
        .Q(S_AXI_RDATA[21]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [22]),
        .Q(S_AXI_RDATA[22]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [23]),
        .Q(S_AXI_RDATA[23]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [24]),
        .Q(S_AXI_RDATA[24]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [25]),
        .Q(S_AXI_RDATA[25]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [26]),
        .Q(S_AXI_RDATA[26]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [27]),
        .Q(S_AXI_RDATA[27]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [28]),
        .Q(S_AXI_RDATA[28]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [29]),
        .Q(S_AXI_RDATA[29]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [2]),
        .Q(S_AXI_RDATA[2]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [30]),
        .Q(S_AXI_RDATA[30]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [31]),
        .Q(S_AXI_RDATA[31]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [3]),
        .Q(S_AXI_RDATA[3]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [4]),
        .Q(S_AXI_RDATA[4]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [5]),
        .Q(S_AXI_RDATA[5]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [6]),
        .Q(S_AXI_RDATA[6]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [7]),
        .Q(S_AXI_RDATA[7]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [8]),
        .Q(S_AXI_RDATA[8]),
        .R(SR));
  FDRE \s_axi_rdata_i_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\s_axi_rdata_i[31]_i_1_n_0 ),
        .D(\IP2Bus_Data_reg[31] [9]),
        .Q(S_AXI_RDATA[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h00002000FF002000)) 
    s_axi_rvalid_i_i_1
       (.I0(sig_IP2Bus_RdAck),
        .I1(state[1]),
        .I2(state[0]),
        .I3(sys_rst_n_int),
        .I4(s_axi_ctl_rvalid_ipic_bridge),
        .I5(s_axi_ctl_rready_ipic_bridge),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE s_axi_rvalid_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_ctl_rvalid_ipic_bridge),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_s_masterbridge_rd" *) 
module overlay1_axi_pcie_0_0_axi_s_masterbridge_rd
   (s_axis_cc_tvalid_q_reg,
    SR,
    s_axis_tx_tlast_d_reg,
    rdreq_reg,
    rrespdelayed,
    rdndreqpipelineincr,
    \data_width_64.wrpendflush_reg[0][3]_0 ,
    \data_width_64.tlpaddrlow_reg[0]_0 ,
    rdreq_ordernotreq,
    \data_width_64.lnkdowndataflush_reg_0 ,
    \rd_req_32_64.rdreqpipeline_reg[2]_0 ,
    s_axis_cc_tvalid_q_reg_0,
    sig_s_axis_cr_tready,
    \data_width_64.m_axis_cc_tdata_h_reg[0]_0 ,
    data_phase,
    s_axis_tx_tlast_d_reg_0,
    \data_width_64.rd_en_sig_reg_0 ,
    \data_width_64.dis_rden_reg_0 ,
    \data_width_64.corruptdataflush_reg_0 ,
    \data_width_64.cpltlpsmsig_reg[0]_0 ,
    \data_width_64.cpltlpsmsig_reg[2]_0 ,
    \data_width_64.tlplengthcntr_reg[0]_0 ,
    \data_width_64.cpltlpsmsig_reg[2]_1 ,
    \data_width_64.rdreqsmsig_reg[2]_0 ,
    \data_width_64.tagsig_reg[0]_0 ,
    \data_width_64.tagsig_reg[0]_1 ,
    \data_width_64.rdndtlpaddrlow_reg[0]_0 ,
    s_axis_cr_tready_sig,
    \data_width_64.rdreqpipelineincr_reg_0 ,
    \data_width_64.rdndreqpipelineincr_reg_0 ,
    s_axis_cr_tready_sig61_out,
    \data_width_64.zerolenreadreq_reg_0 ,
    \data_width_64.m_axis_cc_tvalid_nd_reg_0 ,
    \data_width_64.m_axis_cc_tvalid_nd_reg_1 ,
    \data_width_64.rdreqpipelinedecr_reg_0 ,
    \data_width_64.dis_rden_reg_1 ,
    \data_width_64.m_axis_cc_tvalid_d_reg_0 ,
    \data_width_64.rd_en_sig_reg_1 ,
    \data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ,
    \data_width_64.m_axis_cc_tlast_d_reg_0 ,
    rd_ensig,
    Q,
    \data_width_64.rd_en_sig_reg_2 ,
    m_axis_cc_tlast_d19_out,
    \data_width_64.linkdownflushdepth_reg[0]_0 ,
    \data_width_64.corruptdataflush_reg_1 ,
    \data_width_64.dis_rden_reg_2 ,
    m_axis_cc_tdata_d1,
    \data_width_64.m_axis_cc_tvalid_d_reg_1 ,
    sig_m_axis_cc_tvalid,
    sig_m_axis_cc_tlast,
    \data_width_64.cplndtargetpipeline_reg[2]_0 ,
    \data_width_64.badreadreq_reg_0 ,
    \data_width_64.zerolenreadreq_reg_1 ,
    \np_ok_mode.rdndreqpipeline_d_reg[2] ,
    \np_ok_mode.rdndreqpipeline_d_reg[0] ,
    \np_ok_mode.rdndreqpipeline_d_reg[1] ,
    \data_width_64.s_axis_cr_tready_sig_reg_0 ,
    \length_offset_reg[6]_0 ,
    \np_ok_mode.rdreqpipeline_d_reg[2] ,
    \np_ok_mode.rdreqpipeline_d_reg[0] ,
    \np_ok_mode.rdreqpipeline_d_reg[1] ,
    E,
    \data_width_64.cpldsplitcounttemp_reg[4]_0 ,
    \ctlplength_reg[2,2][0]_0 ,
    \ctlplength_reg[2,1][0]_0 ,
    \ctlplength_reg[2,0][0]_0 ,
    \data_width_64.rdtargetpipeline_reg[1]_0 ,
    neqOp2_out,
    \data_width_64.rdtlpaddrltemp_reg[0]_0 ,
    \data_width_64.lnkdowndataflush_reg_1 ,
    \data_width_64.cpldsplitcounttemp_reg[4]_1 ,
    \data_width_64.cplndstatuscode_reg[0][2]_0 ,
    \length_offset_reg[2]_0 ,
    \length_offset_reg[6]_1 ,
    \length_offset_reg[7]_0 ,
    \length_offset_reg[8]_0 ,
    \length_offset_reg[9]_0 ,
    \length_offset_reg[10]_0 ,
    \length_offset_reg[11]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[4]_2 ,
    \data_width_64.cpldsplitcounttemp_reg[3]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[4]_3 ,
    \data_width_64.cpldsplitcounttemp_reg[1]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[1]_1 ,
    \data_width_64.cpldsplitcounttemp_reg[2]_0 ,
    \data_width_64.cpldsplitcounttemp_reg[2]_1 ,
    R,
    \data_width_64.lnkdowndataflush_reg_2 ,
    \data_width_64.lnkdowndataflush_reg_3 ,
    \data_width_64.cplndstatuscode_reg[3][2]_0 ,
    \data_width_64.cplndstatuscode_reg[2][2]_0 ,
    \data_width_64.cplndstatuscode_reg[1][2]_0 ,
    blk_lnk_up_latch_reg_0,
    \ctlplength_reg[2,0][9]_0 ,
    \ctlplength_reg[2,0][6]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[10]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[11]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[14]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[15]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[16]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[17]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[18]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[19]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[23]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[24]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[25]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[26]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[27]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[28]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[29]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[48]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[49]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[50]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[51]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[52]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[53]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[54]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[55]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[56]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[57]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[58]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[59]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[60]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[61]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[62]_0 ,
    \data_width_64.m_axis_cc_tdata_h_reg[63]_0 ,
    \data_width_64.cplpacket1_reg_0 ,
    \length_offset_reg[9]_1 ,
    \length_offset_reg[11]_1 ,
    \length_offset_reg[9]_2 ,
    \length_offset_reg[11]_2 ,
    \length_offset_reg[9]_3 ,
    \length_offset_reg[11]_3 ,
    O,
    \length_offset_reg[11]_4 ,
    \length_offset_reg[2]_1 ,
    \m_axi_arlen4_reg[7] ,
    p_3_in,
    p_1_in,
    \AddrVar_reg[30] ,
    p_1_in__28,
    \AddrVar_reg[16] ,
    p_2_in,
    neqOp0_out_1,
    \s_axis_tx_tstrb_d_reg[7] ,
    \s_axis_tx_tdata_d_reg[63] ,
    request_completed,
    s_axis_tx_tvalid_d_reg,
    s_axis_tx_tlast_d_reg_1,
    \data_width_64.m_axis_cc_tvalid_d_reg_2 ,
    \data_width_64.m_axis_cc_tlast_d_reg_1 ,
    ARProtVar,
    \ctlpbytecount_reg[1,0][11]_0 ,
    \ctlpbytecount_reg[1,0][7]_0 ,
    \ctlpbytecount_reg[1,0][9]_0 ,
    \ctlpbytecount_reg[1,0][8]_0 ,
    \cplpendcpl_reg[3] ,
    \data_width_64.corruptdataflush_reg_2 ,
    \ctlpbytecount_reg[1,0][5]_0 ,
    \ctlpbytecount_reg[1,0][4]_0 ,
    \data_width_64.rdreqpipelinedecr_reg_1 ,
    rdreq_reg_0,
    \orrdreqpipeline_reg[2] ,
    \orrdreqpipeline_reg[1] ,
    \orrdreqpipeline_reg[0] ,
    \data_width_64.cplndtlpsmsig_reg[1]_0 ,
    \resetovrd.reset_reg[4] ,
    blk_lnk_up_latch_reg_1,
    \data_width_64.cpltlpsmsig_reg[1]_0 ,
    \data_width_64.rdreqsmsig_reg[2]_1 ,
    \data_width_64.rdreqsmsig_reg[1]_0 ,
    \data_width_64.rdreqsmsig_reg[2]_2 ,
    \data_width_64.rdreqsmsig_reg[1]_1 ,
    \data_width_64.cpltlpsmsig_reg[0]_1 ,
    \data_width_64.cpltlpsmsig_reg[1]_1 ,
    \data_width_64.cpltlpsmsig_reg[0]_2 ,
    \data_width_64.rdreqsmsig_reg[1]_2 ,
    \data_width_64.cpltlpsmsig_reg[2]_2 ,
    \data_width_64.cpltlpsmsig_reg[2]_3 ,
    \data_width_64.cpltlpsmsig_reg[1]_2 ,
    \data_width_64.cpltlpsmsig_reg[1]_3 ,
    \data_width_64.cpltlpsmsig_reg[2]_4 ,
    empty_fwft_i_reg,
    reg_tready_reg,
    emptysig,
    s_axis_cr_tready_sig106_out,
    \m_axis_cr_tdata_reg[30] ,
    cr_full,
    sig_blk_lnk_up,
    sig_s_axis_cr_tlast,
    axi_aresetn,
    user_lnk_up_mux_reg,
    user_lnk_up_mux_reg_0,
    user_lnk_up_mux_reg_1,
    tlprequesterid,
    sig_m_axis_cc_tready,
    \end_point.psr_reg[2] ,
    p_76_out,
    s_axis_tx_tready,
    \end_point.psr_reg[2]_0 ,
    \data_width_64.rresp_reg[3][1] ,
    \goreg_bm.dout_i_reg[24] ,
    \goreg_bm.dout_i_reg[25] ,
    \goreg_bm.dout_i_reg[26] ,
    \goreg_bm.dout_i_reg[27] ,
    \goreg_bm.dout_i_reg[28] ,
    \goreg_bm.dout_i_reg[29] ,
    \goreg_bm.dout_i_reg[30] ,
    \goreg_bm.dout_i_reg[31] ,
    \goreg_bm.dout_i_reg[16] ,
    \goreg_bm.dout_i_reg[17] ,
    \goreg_bm.dout_i_reg[18] ,
    \goreg_bm.dout_i_reg[19] ,
    m_axis_cc_tvalid_d50_out,
    badreadreq,
    eqOp56_in,
    cfg_dev_control_max_payload,
    user_lnk_up_mux_reg_2,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg ,
    \goreg_bm.dout_i_reg[63] ,
    \cfg_bus_number_d_reg[7] ,
    \cfg_device_number_d_reg[4] ,
    \cfg_function_number_d_reg[2] ,
    D,
    \m_axis_cr_tdata_reg[63] ,
    sig_s_axis_cr_tvalid,
    cplpendcpl,
    \data_width_64.wrreqpendsig_reg[0] ,
    \respmmpipeline_reg[0] ,
    \respmmpipeline_reg[2] ,
    \respmmpipeline_reg[1] ,
    \data_width_64.cplndstatuscode_reg[3][2]_1 ,
    \data_width_64.cplndstatuscode_reg[3][0]_0 ,
    \data_width_64.cplndstatuscode_reg[3][1]_0 ,
    \orrdreqpipeline_reg[0]_0 ,
    \orrdreqpipeline_reg[2]_0 ,
    \orrdreqpipeline_reg[1]_0 ,
    sig_addrstreampipeline,
    \AddrVar_reg[30]_0 ,
    p_0_in,
    p_1_in79_in,
    rdorder_reg,
    \ARProtVar_reg[0] ,
    \ARProtVar_reg[2] ,
    \ARProtVar_reg[1] ,
    \m_axis_cr_tuser_reg[6] ,
    \data_width_64.tlplength_reg[3][0]_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ,
    \cpldsplitsm_reg[1]_0 ,
    \length_offset_reg[9]_4 ,
    \ctargetpipeline_reg[1]_0 ,
    \cpldsplitsm_reg[1]_1 ,
    \ctargetpipeline_reg[1]_1 ,
    \m_axis_cr_tdata_reg[22] ,
    \m_axis_cr_tdata_reg[6] ,
    \pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ,
    \goreg_bm.dout_i_reg[39] ,
    user_lnk_up_mux_reg_3,
    cpldsplitcount0_out,
    \length_offset_reg[11]_5 );
  output s_axis_cc_tvalid_q_reg;
  output [0:0]SR;
  output s_axis_tx_tlast_d_reg;
  output rdreq_reg;
  output rrespdelayed;
  output rdndreqpipelineincr;
  output \data_width_64.wrpendflush_reg[0][3]_0 ;
  output \data_width_64.tlpaddrlow_reg[0]_0 ;
  output rdreq_ordernotreq;
  output \data_width_64.lnkdowndataflush_reg_0 ;
  output \rd_req_32_64.rdreqpipeline_reg[2]_0 ;
  output s_axis_cc_tvalid_q_reg_0;
  output sig_s_axis_cr_tready;
  output \data_width_64.m_axis_cc_tdata_h_reg[0]_0 ;
  output data_phase;
  output s_axis_tx_tlast_d_reg_0;
  output \data_width_64.rd_en_sig_reg_0 ;
  output \data_width_64.dis_rden_reg_0 ;
  output \data_width_64.corruptdataflush_reg_0 ;
  output \data_width_64.cpltlpsmsig_reg[0]_0 ;
  output \data_width_64.cpltlpsmsig_reg[2]_0 ;
  output \data_width_64.tlplengthcntr_reg[0]_0 ;
  output \data_width_64.cpltlpsmsig_reg[2]_1 ;
  output \data_width_64.rdreqsmsig_reg[2]_0 ;
  output \data_width_64.tagsig_reg[0]_0 ;
  output \data_width_64.tagsig_reg[0]_1 ;
  output \data_width_64.rdndtlpaddrlow_reg[0]_0 ;
  output s_axis_cr_tready_sig;
  output \data_width_64.rdreqpipelineincr_reg_0 ;
  output \data_width_64.rdndreqpipelineincr_reg_0 ;
  output s_axis_cr_tready_sig61_out;
  output \data_width_64.zerolenreadreq_reg_0 ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg_0 ;
  output \data_width_64.m_axis_cc_tvalid_nd_reg_1 ;
  output \data_width_64.rdreqpipelinedecr_reg_0 ;
  output \data_width_64.dis_rden_reg_1 ;
  output \data_width_64.m_axis_cc_tvalid_d_reg_0 ;
  output \data_width_64.rd_en_sig_reg_1 ;
  output \data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ;
  output \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  output rd_ensig;
  output [0:0]Q;
  output \data_width_64.rd_en_sig_reg_2 ;
  output m_axis_cc_tlast_d19_out;
  output \data_width_64.linkdownflushdepth_reg[0]_0 ;
  output \data_width_64.corruptdataflush_reg_1 ;
  output \data_width_64.dis_rden_reg_2 ;
  output m_axis_cc_tdata_d1;
  output \data_width_64.m_axis_cc_tvalid_d_reg_1 ;
  output sig_m_axis_cc_tvalid;
  output sig_m_axis_cc_tlast;
  output [1:0]\data_width_64.cplndtargetpipeline_reg[2]_0 ;
  output \data_width_64.badreadreq_reg_0 ;
  output \data_width_64.zerolenreadreq_reg_1 ;
  output \np_ok_mode.rdndreqpipeline_d_reg[2] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[0] ;
  output \np_ok_mode.rdndreqpipeline_d_reg[1] ;
  output \data_width_64.s_axis_cr_tready_sig_reg_0 ;
  output [1:0]\length_offset_reg[6]_0 ;
  output \np_ok_mode.rdreqpipeline_d_reg[2] ;
  output \np_ok_mode.rdreqpipeline_d_reg[0] ;
  output \np_ok_mode.rdreqpipeline_d_reg[1] ;
  output [0:0]E;
  output [0:0]\data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  output [0:0]\ctlplength_reg[2,2][0]_0 ;
  output [0:0]\ctlplength_reg[2,1][0]_0 ;
  output [0:0]\ctlplength_reg[2,0][0]_0 ;
  output [1:0]\data_width_64.rdtargetpipeline_reg[1]_0 ;
  output neqOp2_out;
  output \data_width_64.rdtlpaddrltemp_reg[0]_0 ;
  output \data_width_64.lnkdowndataflush_reg_1 ;
  output [1:0]\data_width_64.cpldsplitcounttemp_reg[4]_1 ;
  output [2:0]\data_width_64.cplndstatuscode_reg[0][2]_0 ;
  output \length_offset_reg[2]_0 ;
  output \length_offset_reg[6]_1 ;
  output \length_offset_reg[7]_0 ;
  output \length_offset_reg[8]_0 ;
  output \length_offset_reg[9]_0 ;
  output \length_offset_reg[10]_0 ;
  output \length_offset_reg[11]_0 ;
  output [2:0]\data_width_64.cpldsplitcounttemp_reg[4]_2 ;
  output \data_width_64.cpldsplitcounttemp_reg[3]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[4]_3 ;
  output \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[1]_1 ;
  output \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  output \data_width_64.cpldsplitcounttemp_reg[2]_1 ;
  output [6:0]R;
  output \data_width_64.lnkdowndataflush_reg_2 ;
  output \data_width_64.lnkdowndataflush_reg_3 ;
  output [2:0]\data_width_64.cplndstatuscode_reg[3][2]_0 ;
  output [2:0]\data_width_64.cplndstatuscode_reg[2][2]_0 ;
  output [2:0]\data_width_64.cplndstatuscode_reg[1][2]_0 ;
  output blk_lnk_up_latch_reg_0;
  output \ctlplength_reg[2,0][9]_0 ;
  output \ctlplength_reg[2,0][6]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[10]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[11]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[14]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[15]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[16]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[17]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[18]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[19]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[23]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[24]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[25]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[26]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[27]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[28]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[29]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[48]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[49]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[50]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[51]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[52]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[53]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[54]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[55]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[56]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[57]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[58]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[59]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[60]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[61]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[62]_0 ;
  output \data_width_64.m_axis_cc_tdata_h_reg[63]_0 ;
  output \data_width_64.cplpacket1_reg_0 ;
  output [3:0]\length_offset_reg[9]_1 ;
  output [1:0]\length_offset_reg[11]_1 ;
  output [3:0]\length_offset_reg[9]_2 ;
  output [1:0]\length_offset_reg[11]_2 ;
  output [3:0]\length_offset_reg[9]_3 ;
  output [1:0]\length_offset_reg[11]_3 ;
  output [3:0]O;
  output [1:0]\length_offset_reg[11]_4 ;
  output \length_offset_reg[2]_1 ;
  output [8:0]\m_axi_arlen4_reg[7] ;
  output [1:0]p_3_in;
  output [0:0]p_1_in;
  output [25:0]\AddrVar_reg[30] ;
  output p_1_in__28;
  output \AddrVar_reg[16] ;
  output p_2_in;
  output neqOp0_out_1;
  output \s_axis_tx_tstrb_d_reg[7] ;
  output [63:0]\s_axis_tx_tdata_d_reg[63] ;
  output request_completed;
  output s_axis_tx_tvalid_d_reg;
  output s_axis_tx_tlast_d_reg_1;
  output \data_width_64.m_axis_cc_tvalid_d_reg_2 ;
  output \data_width_64.m_axis_cc_tlast_d_reg_1 ;
  output [2:0]ARProtVar;
  output \ctlpbytecount_reg[1,0][11]_0 ;
  output \ctlpbytecount_reg[1,0][7]_0 ;
  output \ctlpbytecount_reg[1,0][9]_0 ;
  output \ctlpbytecount_reg[1,0][8]_0 ;
  output \cplpendcpl_reg[3] ;
  output \data_width_64.corruptdataflush_reg_2 ;
  output \ctlpbytecount_reg[1,0][5]_0 ;
  output \ctlpbytecount_reg[1,0][4]_0 ;
  output \data_width_64.rdreqpipelinedecr_reg_1 ;
  output rdreq_reg_0;
  output \orrdreqpipeline_reg[2] ;
  output \orrdreqpipeline_reg[1] ;
  output \orrdreqpipeline_reg[0] ;
  input \data_width_64.cplndtlpsmsig_reg[1]_0 ;
  input \resetovrd.reset_reg[4] ;
  input blk_lnk_up_latch_reg_1;
  input \data_width_64.cpltlpsmsig_reg[1]_0 ;
  input \data_width_64.rdreqsmsig_reg[2]_1 ;
  input \data_width_64.rdreqsmsig_reg[1]_0 ;
  input \data_width_64.rdreqsmsig_reg[2]_2 ;
  input \data_width_64.rdreqsmsig_reg[1]_1 ;
  input \data_width_64.cpltlpsmsig_reg[0]_1 ;
  input \data_width_64.cpltlpsmsig_reg[1]_1 ;
  input \data_width_64.cpltlpsmsig_reg[0]_2 ;
  input \data_width_64.rdreqsmsig_reg[1]_2 ;
  input \data_width_64.cpltlpsmsig_reg[2]_2 ;
  input \data_width_64.cpltlpsmsig_reg[2]_3 ;
  input \data_width_64.cpltlpsmsig_reg[1]_2 ;
  input \data_width_64.cpltlpsmsig_reg[1]_3 ;
  input \data_width_64.cpltlpsmsig_reg[2]_4 ;
  input empty_fwft_i_reg;
  input reg_tready_reg;
  input emptysig;
  input s_axis_cr_tready_sig106_out;
  input \m_axis_cr_tdata_reg[30] ;
  input cr_full;
  input sig_blk_lnk_up;
  input sig_s_axis_cr_tlast;
  input axi_aresetn;
  input user_lnk_up_mux_reg;
  input user_lnk_up_mux_reg_0;
  input user_lnk_up_mux_reg_1;
  input tlprequesterid;
  input sig_m_axis_cc_tready;
  input \end_point.psr_reg[2] ;
  input p_76_out;
  input s_axis_tx_tready;
  input \end_point.psr_reg[2]_0 ;
  input \data_width_64.rresp_reg[3][1] ;
  input \goreg_bm.dout_i_reg[24] ;
  input \goreg_bm.dout_i_reg[25] ;
  input \goreg_bm.dout_i_reg[26] ;
  input \goreg_bm.dout_i_reg[27] ;
  input \goreg_bm.dout_i_reg[28] ;
  input \goreg_bm.dout_i_reg[29] ;
  input \goreg_bm.dout_i_reg[30] ;
  input \goreg_bm.dout_i_reg[31] ;
  input \goreg_bm.dout_i_reg[16] ;
  input \goreg_bm.dout_i_reg[17] ;
  input \goreg_bm.dout_i_reg[18] ;
  input \goreg_bm.dout_i_reg[19] ;
  input m_axis_cc_tvalid_d50_out;
  input badreadreq;
  input eqOp56_in;
  input [2:0]cfg_dev_control_max_payload;
  input user_lnk_up_mux_reg_2;
  input \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  input [63:0]\goreg_bm.dout_i_reg[63] ;
  input [7:0]\cfg_bus_number_d_reg[7] ;
  input [4:0]\cfg_device_number_d_reg[4] ;
  input [2:0]\cfg_function_number_d_reg[2] ;
  input [2:0]D;
  input [55:0]\m_axis_cr_tdata_reg[63] ;
  input sig_s_axis_cr_tvalid;
  input [0:3]cplpendcpl;
  input \data_width_64.wrreqpendsig_reg[0] ;
  input \respmmpipeline_reg[0] ;
  input \respmmpipeline_reg[2] ;
  input \respmmpipeline_reg[1] ;
  input \data_width_64.cplndstatuscode_reg[3][2]_1 ;
  input \data_width_64.cplndstatuscode_reg[3][0]_0 ;
  input \data_width_64.cplndstatuscode_reg[3][1]_0 ;
  input \orrdreqpipeline_reg[0]_0 ;
  input \orrdreqpipeline_reg[2]_0 ;
  input \orrdreqpipeline_reg[1]_0 ;
  input [2:0]sig_addrstreampipeline;
  input [25:0]\AddrVar_reg[30]_0 ;
  input p_0_in;
  input p_1_in79_in;
  input rdorder_reg;
  input \ARProtVar_reg[0] ;
  input \ARProtVar_reg[2] ;
  input \ARProtVar_reg[1] ;
  input [2:0]\m_axis_cr_tuser_reg[6] ;
  input \data_width_64.tlplength_reg[3][0]_0 ;
  input [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  input [5:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  input \cpldsplitsm_reg[1]_0 ;
  input [1:0]\length_offset_reg[9]_4 ;
  input \ctargetpipeline_reg[1]_0 ;
  input \cpldsplitsm_reg[1]_1 ;
  input \ctargetpipeline_reg[1]_1 ;
  input [20:0]\m_axis_cr_tdata_reg[22] ;
  input [4:0]\m_axis_cr_tdata_reg[6] ;
  input [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  input [35:0]\goreg_bm.dout_i_reg[39] ;
  input user_lnk_up_mux_reg_3;
  input cpldsplitcount0_out;
  input [3:0]\length_offset_reg[11]_5 ;

  wire [9:0]ARG;
  wire [2:0]ARProtVar;
  wire \ARProtVar_reg[0] ;
  wire \ARProtVar_reg[1] ;
  wire \ARProtVar_reg[2] ;
  wire \AddrVar_reg[16] ;
  wire [25:0]\AddrVar_reg[30] ;
  wire [25:0]\AddrVar_reg[30]_0 ;
  wire [1:1]C;
  wire [4:0]CONV_INTEGER4_out;
  wire [0:0]C__0;
  wire [2:0]D;
  wire [0:0]E;
  wire [2:0]L;
  wire [2:0]L1_in;
  wire [2:0]L3_in;
  wire [4:0]L_1;
  wire [3:0]O;
  wire [0:0]Q;
  wire [6:0]R;
  wire [5:2]R_0;
  wire [0:0]SR;
  wire axi_aresetn;
  wire badreadreq;
  wire blk_lnk_up_latch_reg_0;
  wire blk_lnk_up_latch_reg_1;
  wire [7:0]\cfg_bus_number_d_reg[7] ;
  wire [2:0]cfg_dev_control_max_payload;
  wire [4:0]\cfg_device_number_d_reg[4] ;
  wire [2:0]\cfg_function_number_d_reg[2] ;
  wire cpldsplitcount0_out;
  wire cpldsplitcount_reg_0_3_0_0_i_10_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_11_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_12_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_13_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_14_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_1_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_4_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_5_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_6_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_7_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_8_n_0;
  wire cpldsplitcount_reg_0_3_0_0_i_9_n_0;
  wire cpldsplitcount_reg_0_3_4_4_i_3_n_0;
  wire cpldsplitcount_reg_0_3_4_4_i_4_n_0;
  wire [4:0]cpldsplitcounttemp;
  wire [1:0]cpldsplitsm;
  wire \cpldsplitsm_reg[1]_0 ;
  wire \cpldsplitsm_reg[1]_1 ;
  wire [0:3]cplndpendcpl;
  wire [9:0]cplndstatuscode0_in;
  wire [2:2]cplndtargetpipeline;
  wire [0:3]cplpendcpl;
  wire \cplpendcpl_reg[3] ;
  wire [2:2]cpltargetpipeline;
  wire cr_full;
  wire [2:1]ctargetpipeline;
  wire \ctargetpipeline[0]_i_1_n_0 ;
  wire \ctargetpipeline[1]_i_1_n_0 ;
  wire \ctargetpipeline[2]_i_1_n_0 ;
  wire \ctargetpipeline[2]_i_2_n_0 ;
  wire \ctargetpipeline[2]_i_3_n_0 ;
  wire \ctargetpipeline_reg[1]_0 ;
  wire \ctargetpipeline_reg[1]_1 ;
  wire [3:2]\ctlpbytecount[1,0] ;
  wire [11:0]\ctlpbytecount_reg[0,0]__0 ;
  wire [11:0]\ctlpbytecount_reg[0,1]__0 ;
  wire [11:0]\ctlpbytecount_reg[0,2]__0 ;
  wire [11:0]\ctlpbytecount_reg[0,3]__0 ;
  wire \ctlpbytecount_reg[1,0][11]_0 ;
  wire \ctlpbytecount_reg[1,0][4]_0 ;
  wire \ctlpbytecount_reg[1,0][5]_0 ;
  wire \ctlpbytecount_reg[1,0][7]_0 ;
  wire \ctlpbytecount_reg[1,0][8]_0 ;
  wire \ctlpbytecount_reg[1,0][9]_0 ;
  wire [11:0]\ctlpbytecount_reg[1,0]__0 ;
  wire [11:0]\ctlpbytecount_reg[1,1]__0 ;
  wire [11:0]\ctlpbytecount_reg[1,2]__0 ;
  wire [11:0]\ctlpbytecount_reg[1,3]__0 ;
  wire [11:0]ctlpbytecounttemp;
  wire [5:0]\ctlplength[0,0] ;
  wire \ctlplength[0,3][0]_i_1_n_0 ;
  wire \ctlplength[0,3][1]_i_1_n_0 ;
  wire \ctlplength[0,3][1]_i_4_n_0 ;
  wire \ctlplength[0,3][2]_i_1_n_0 ;
  wire \ctlplength[0,3][2]_i_4_n_0 ;
  wire \ctlplength[0,3][3]_i_1_n_0 ;
  wire \ctlplength[0,3][3]_i_4_n_0 ;
  wire \ctlplength[0,3][4]_i_1_n_0 ;
  wire \ctlplength[0,3][4]_i_4_n_0 ;
  wire \ctlplength[0,3][5]_i_1_n_0 ;
  wire \ctlplength[0,3][5]_i_3_n_0 ;
  wire \ctlplength[0,3][5]_i_5_n_0 ;
  wire \ctlplength[0,3][5]_i_6_n_0 ;
  wire \ctlplength[0,3][6]_i_1_n_0 ;
  wire \ctlplength[0,3][6]_i_3_n_0 ;
  wire \ctlplength[0,3][6]_i_5_n_0 ;
  wire \ctlplength[0,3][6]_i_6_n_0 ;
  wire \ctlplength[0,3][6]_i_7_n_0 ;
  wire \ctlplength[0,3][7]_i_1_n_0 ;
  wire \ctlplength[0,3][7]_i_3_n_0 ;
  wire \ctlplength[0,3][7]_i_4_n_0 ;
  wire \ctlplength[0,3][7]_i_5_n_0 ;
  wire \ctlplength[0,3][7]_i_6_n_0 ;
  wire \ctlplength[0,3][7]_i_7_n_0 ;
  wire \ctlplength[0,3][7]_i_8_n_0 ;
  wire \ctlplength[0,3][8]_i_1_n_0 ;
  wire \ctlplength[0,3][8]_i_3_n_0 ;
  wire \ctlplength[0,3][8]_i_4_n_0 ;
  wire \ctlplength[0,3][8]_i_5_n_0 ;
  wire \ctlplength[0,3][8]_i_6_n_0 ;
  wire \ctlplength[0,3][8]_i_7_n_0 ;
  wire \ctlplength[0,3][8]_i_8_n_0 ;
  wire \ctlplength[0,3][9]_i_1_n_0 ;
  wire \ctlplength[0,3][9]_i_3_n_0 ;
  wire \ctlplength[0,3][9]_i_4_n_0 ;
  wire \ctlplength[0,3][9]_i_5_n_0 ;
  wire \ctlplength[0,3][9]_i_6_n_0 ;
  wire \ctlplength[0,3][9]_i_7_n_0 ;
  wire \ctlplength[0,3][9]_i_8_n_0 ;
  wire \ctlplength[2,3][0]_i_1_n_0 ;
  wire [9:0]\ctlplength_reg[0,0]__0 ;
  wire [9:0]\ctlplength_reg[0,1]__0 ;
  wire [9:0]\ctlplength_reg[0,2]__0 ;
  wire \ctlplength_reg[0,3][6]_i_4_n_0 ;
  wire [9:0]\ctlplength_reg[0,3]__0 ;
  wire [8:5]\ctlplength_reg[1,0]__0 ;
  wire [8:5]\ctlplength_reg[1,1]__0 ;
  wire [8:5]\ctlplength_reg[1,2]__0 ;
  wire [8:5]\ctlplength_reg[1,3]__0 ;
  wire [0:0]\ctlplength_reg[2,0][0]_0 ;
  wire \ctlplength_reg[2,0][6]_0 ;
  wire \ctlplength_reg[2,0][9]_0 ;
  wire [9:0]\ctlplength_reg[2,0]__0 ;
  wire [0:0]\ctlplength_reg[2,1][0]_0 ;
  wire [9:0]\ctlplength_reg[2,1]__0 ;
  wire [0:0]\ctlplength_reg[2,2][0]_0 ;
  wire [9:0]\ctlplength_reg[2,2]__0 ;
  wire [9:0]\ctlplength_reg[2,3]__0 ;
  wire ctlplengthtemp;
  wire [7:0]data5;
  wire [9:1]data5__0;
  wire data_phase;
  wire \data_width_64.badreadreq_reg_0 ;
  wire \data_width_64.corruptdataflush_i_4_n_0 ;
  wire \data_width_64.corruptdataflush_reg_0 ;
  wire \data_width_64.corruptdataflush_reg_1 ;
  wire \data_width_64.corruptdataflush_reg_2 ;
  wire \data_width_64.cplcounter[0]_i_1_n_0 ;
  wire \data_width_64.cplcounter[1]_i_1_n_0 ;
  wire \data_width_64.cplcounter[2]_i_1_n_0 ;
  wire \data_width_64.cplcounter[3]_i_1_n_0 ;
  wire \data_width_64.cplcounter[4]_i_2_n_0 ;
  wire \data_width_64.cplcounter[4]_i_4_n_0 ;
  wire \data_width_64.cplcounter_reg_n_0_[0] ;
  wire \data_width_64.cplcounter_reg_n_0_[1] ;
  wire \data_width_64.cplcounter_reg_n_0_[2] ;
  wire \data_width_64.cplcounter_reg_n_0_[3] ;
  wire \data_width_64.cplcounter_reg_n_0_[4] ;
  wire \data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ;
  wire \data_width_64.cpldsplitcounttemp[4]_i_3_n_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[1]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[1]_1 ;
  wire \data_width_64.cpldsplitcounttemp_reg[2]_0 ;
  wire \data_width_64.cpldsplitcounttemp_reg[2]_1 ;
  wire \data_width_64.cpldsplitcounttemp_reg[3]_0 ;
  wire [0:0]\data_width_64.cpldsplitcounttemp_reg[4]_0 ;
  wire [1:0]\data_width_64.cpldsplitcounttemp_reg[4]_1 ;
  wire [2:0]\data_width_64.cpldsplitcounttemp_reg[4]_2 ;
  wire \data_width_64.cpldsplitcounttemp_reg[4]_3 ;
  wire \data_width_64.cplndpendcpl[0]_i_1_n_0 ;
  wire \data_width_64.cplndpendcpl[0]_i_2_n_0 ;
  wire \data_width_64.cplndpendcpl[1]_i_1_n_0 ;
  wire \data_width_64.cplndpendcpl[2]_i_1_n_0 ;
  wire \data_width_64.cplndpendcpl[3]_i_1_n_0 ;
  wire \data_width_64.cplndstatuscode[0][1]_i_1_n_0 ;
  wire \data_width_64.cplndstatuscode[0][2]_i_1_n_0 ;
  wire \data_width_64.cplndstatuscode[3][1]_i_1_n_0 ;
  wire \data_width_64.cplndstatuscode[3][2]_i_1_n_0 ;
  wire \data_width_64.cplndstatuscode[3][2]_i_2_n_0 ;
  wire [2:0]\data_width_64.cplndstatuscode_reg[0][2]_0 ;
  wire [2:0]\data_width_64.cplndstatuscode_reg[1][2]_0 ;
  wire [2:0]\data_width_64.cplndstatuscode_reg[2][2]_0 ;
  wire \data_width_64.cplndstatuscode_reg[3][0]_0 ;
  wire \data_width_64.cplndstatuscode_reg[3][1]_0 ;
  wire [2:0]\data_width_64.cplndstatuscode_reg[3][2]_0 ;
  wire \data_width_64.cplndstatuscode_reg[3][2]_1 ;
  wire \data_width_64.cplndtargetpipeline[0]_i_1_n_0 ;
  wire \data_width_64.cplndtargetpipeline[1]_i_1_n_0 ;
  wire \data_width_64.cplndtargetpipeline[2]_i_1_n_0 ;
  wire [1:0]\data_width_64.cplndtargetpipeline_reg[2]_0 ;
  wire \data_width_64.cplndtlpsmsig[1]_i_1_n_0 ;
  wire \data_width_64.cplndtlpsmsig_reg[1]_0 ;
  wire \data_width_64.cplpacket1_reg_0 ;
  wire \data_width_64.cpltargetpipeline[0]_i_1_n_0 ;
  wire \data_width_64.cpltargetpipeline[1]_i_1_n_0 ;
  wire \data_width_64.cpltargetpipeline[2]_i_1_n_0 ;
  wire \data_width_64.cpltargetpipeline[2]_i_2_n_0 ;
  wire \data_width_64.cpltargetpipeline[2]_i_3_n_0 ;
  wire \data_width_64.cpltargetpipeline[2]_i_4_n_0 ;
  wire \data_width_64.cpltargetpipeline[2]_i_5_n_0 ;
  wire \data_width_64.cpltlpsmsig[0]_i_1_n_0 ;
  wire \data_width_64.cpltlpsmsig[0]_i_2_n_0 ;
  wire \data_width_64.cpltlpsmsig[0]_i_3_n_0 ;
  wire \data_width_64.cpltlpsmsig[0]_i_4_n_0 ;
  wire \data_width_64.cpltlpsmsig[0]_i_5_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_1_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_2_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_3_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_4_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_5_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_6_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_7_n_0 ;
  wire \data_width_64.cpltlpsmsig[1]_i_8_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_1_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_2_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_3_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_4_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_5_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_6_n_0 ;
  wire \data_width_64.cpltlpsmsig[2]_i_7_n_0 ;
  wire \data_width_64.cpltlpsmsig_reg[0]_0 ;
  wire \data_width_64.cpltlpsmsig_reg[0]_1 ;
  wire \data_width_64.cpltlpsmsig_reg[0]_2 ;
  wire \data_width_64.cpltlpsmsig_reg[1]_0 ;
  wire \data_width_64.cpltlpsmsig_reg[1]_1 ;
  wire \data_width_64.cpltlpsmsig_reg[1]_2 ;
  wire \data_width_64.cpltlpsmsig_reg[1]_3 ;
  wire \data_width_64.cpltlpsmsig_reg[2]_0 ;
  wire \data_width_64.cpltlpsmsig_reg[2]_1 ;
  wire \data_width_64.cpltlpsmsig_reg[2]_2 ;
  wire \data_width_64.cpltlpsmsig_reg[2]_3 ;
  wire \data_width_64.cpltlpsmsig_reg[2]_4 ;
  wire \data_width_64.ctlpbytecounttemp[0]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[0]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[10]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[10]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_10_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_11_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_12_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_13_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_14_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_15_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_4_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_5_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_6_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_7_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[11]_i_9_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[1]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[1]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[2]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[2]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_10_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_11_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_4_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_5_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_6_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_7_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_8_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[3]_i_9_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[4]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[4]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[5]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[5]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[6]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[6]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_10_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_11_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_12_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_4_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_5_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_6_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_7_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_8_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[7]_i_9_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[8]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[8]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[9]_i_1_n_0 ;
  wire \data_width_64.ctlpbytecounttemp[9]_i_2_n_0 ;
  wire \data_width_64.ctlpbytecounttemp_reg[11]_i_3_n_1 ;
  wire \data_width_64.ctlpbytecounttemp_reg[11]_i_3_n_2 ;
  wire \data_width_64.ctlpbytecounttemp_reg[11]_i_3_n_3 ;
  wire \data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_0 ;
  wire \data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_1 ;
  wire \data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_2 ;
  wire \data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_3 ;
  wire \data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_0 ;
  wire \data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_1 ;
  wire \data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_2 ;
  wire \data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_3 ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[0] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[10] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[11] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[1] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[2] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[3] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[4] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[5] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[6] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[7] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[8] ;
  wire \data_width_64.ctlpbytecounttemp_reg_n_0_[9] ;
  wire \data_width_64.ctlplengthtemp[0]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[0]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[0]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[0]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[1]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[1]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[1]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[1]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[2]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[2]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[2]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[2]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[3]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[3]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[3]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[3]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[4]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[4]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[4]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[4]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[5]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[5]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[5]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[5]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[6]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[6]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[6]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[6]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[7]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[7]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[7]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[7]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[8]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[8]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[8]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[8]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_1_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_2_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_3_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_4_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_5_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_6_n_0 ;
  wire \data_width_64.ctlplengthtemp[9]_i_7_n_0 ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[0] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[1] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[2] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[3] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[4] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[5] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[6] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[7] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[8] ;
  wire \data_width_64.ctlplengthtemp_reg_n_0_[9] ;
  wire \data_width_64.data_phase_i_4_n_0 ;
  wire \data_width_64.dis_rden_i_3_n_0 ;
  wire \data_width_64.dis_rden_reg_0 ;
  wire \data_width_64.dis_rden_reg_1 ;
  wire \data_width_64.dis_rden_reg_2 ;
  wire \data_width_64.firstdwbesig_reg_n_0_[0] ;
  wire \data_width_64.firstdwbesig_reg_n_0_[2] ;
  wire \data_width_64.firstdwbesig_reg_n_0_[3] ;
  wire \data_width_64.lastdwbesig_reg_n_0_[0] ;
  wire \data_width_64.lastdwbesig_reg_n_0_[2] ;
  wire \data_width_64.linkdownflushdepth[0]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[1]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[1]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[2]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[2]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[3]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[3]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[3]_i_4_n_0 ;
  wire \data_width_64.linkdownflushdepth[3]_i_5_n_0 ;
  wire \data_width_64.linkdownflushdepth[3]_i_6_n_0 ;
  wire \data_width_64.linkdownflushdepth[3]_i_7_n_0 ;
  wire \data_width_64.linkdownflushdepth[4]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[4]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[5]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[5]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[6]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[6]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_10_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_4_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_5_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_6_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_7_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_8_n_0 ;
  wire \data_width_64.linkdownflushdepth[7]_i_9_n_0 ;
  wire \data_width_64.linkdownflushdepth[8]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[8]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_10_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_11_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_12_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_13_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_14_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_15_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_16_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_17_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_18_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_1_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_2_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_3_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_4_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_5_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_7_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_8_n_0 ;
  wire \data_width_64.linkdownflushdepth[9]_i_9_n_0 ;
  wire \data_width_64.linkdownflushdepth_reg[0]_0 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_0 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_1 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_2 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_3 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_4 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_5 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_6 ;
  wire \data_width_64.linkdownflushdepth_reg[3]_i_3_n_7 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_0 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_1 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_2 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_3 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_4 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_5 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_6 ;
  wire \data_width_64.linkdownflushdepth_reg[7]_i_3_n_7 ;
  wire \data_width_64.linkdownflushdepth_reg[9]_i_6_n_3 ;
  wire \data_width_64.linkdownflushdepth_reg[9]_i_6_n_6 ;
  wire \data_width_64.linkdownflushdepth_reg[9]_i_6_n_7 ;
  wire \data_width_64.lnkdowndataflush_i_5_n_0 ;
  wire \data_width_64.lnkdowndataflush_reg_0 ;
  wire \data_width_64.lnkdowndataflush_reg_1 ;
  wire \data_width_64.lnkdowndataflush_reg_2 ;
  wire \data_width_64.lnkdowndataflush_reg_3 ;
  wire \data_width_64.m_axis_cc_tdata_h[0]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[12]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[12]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[12]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[13]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[13]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[13]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[1]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[20]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[20]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[20]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[21]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[21]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[21]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[22]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[22]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[22]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[2]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[30]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[30]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[32]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[33]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[34]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[35]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[36]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[37]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[38]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[39]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[3]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[40]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[41]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[42]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[43]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[4]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[5]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[6]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[7]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[8]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[8]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[9]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h[9]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[0]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[10]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[11]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[14]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[15]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[16]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[17]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[18]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[19]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[23]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[24]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[25]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[26]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[27]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[28]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[29]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[31]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[48]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[49]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[50]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[51]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[52]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[53]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[54]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[55]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[56]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[57]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[58]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[59]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[60]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[61]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[62]_0 ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[63]_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[0]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[10]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[10]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[11]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[11]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[12]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[12]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[12]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[13]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[13]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[13]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[14]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[14]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[15]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[15]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[16]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[16]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[17]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[17]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[18]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[18]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[19]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[19]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[1]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[20]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[20]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[20]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[21]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[21]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[21]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[22]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[22]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[22]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[23]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[23]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[24]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[24]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[25]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[25]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[26]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[26]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[27]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[27]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[28]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[28]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[29]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[29]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[2]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[30]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[30]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[31]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[31]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[32]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[32]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[33]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[33]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[34]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[34]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[35]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[35]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[36]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[36]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[37]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[37]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[38]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[38]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[39]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[39]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[3]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[40]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[40]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[41]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[41]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[42]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[42]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[43]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[43]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[45]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[46]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[47]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[48]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[48]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[49]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[49]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[4]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[50]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[50]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[51]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[51]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[52]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[52]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[53]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[53]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[54]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[54]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[55]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[55]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[56]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[56]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[57]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[57]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[58]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[58]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[59]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[59]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[5]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[60]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[60]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[61]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[61]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[62]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[62]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[63]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[63]_i_5_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[63]_i_7_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[6]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[8]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[8]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[9]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdata_nd[9]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_i_6_n_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tlast_d_reg_1 ;
  wire \data_width_64.m_axis_cc_tlast_nd_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tstrb_d[7]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tstrb_d[7]_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tstrb_d[7]_i_3_n_0 ;
  wire \data_width_64.m_axis_cc_tstrb_d[7]_i_4_n_0 ;
  wire \data_width_64.m_axis_cc_tstrb_nd[7]_i_1_n_0 ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg_0 ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg_1 ;
  wire \data_width_64.m_axis_cc_tvalid_d_reg_2 ;
  wire \data_width_64.m_axis_cc_tvalid_nd_i_2_n_0 ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg_0 ;
  wire \data_width_64.m_axis_cc_tvalid_nd_reg_1 ;
  wire \data_width_64.orcplndpipeline[0]_i_1_n_0 ;
  wire \data_width_64.orcplndpipeline[1]_i_1_n_0 ;
  wire \data_width_64.orcplndpipeline[2]_i_1_n_0 ;
  wire \data_width_64.orcplndpipeline[2]_i_4_n_0 ;
  wire \data_width_64.orcplndpipeline[2]_i_6_n_0 ;
  wire \data_width_64.orcplndpipeline[2]_i_7_n_0 ;
  wire \data_width_64.orcplndpipeline[2]_i_8_n_0 ;
  wire \data_width_64.orcplndpipeline_reg_n_0_[0] ;
  wire \data_width_64.orcplndpipeline_reg_n_0_[1] ;
  wire \data_width_64.orcplndpipeline_reg_n_0_[2] ;
  wire \data_width_64.rd_en_sig_i_4_n_0 ;
  wire \data_width_64.rd_en_sig_reg_0 ;
  wire \data_width_64.rd_en_sig_reg_1 ;
  wire \data_width_64.rd_en_sig_reg_2 ;
  wire \data_width_64.rdndreqpipelinedecr_i_1_n_0 ;
  wire \data_width_64.rdndreqpipelinedecr_reg_n_0 ;
  wire \data_width_64.rdndreqpipelineincr_reg_0 ;
  wire \data_width_64.rdndtargetpipeline[0]_i_1_n_0 ;
  wire \data_width_64.rdndtargetpipeline[0]_rep_i_1_n_0 ;
  wire \data_width_64.rdndtargetpipeline[1]_i_1_n_0 ;
  wire \data_width_64.rdndtargetpipeline[1]_rep_i_1_n_0 ;
  wire \data_width_64.rdndtargetpipeline[2]_i_1_n_0 ;
  wire \data_width_64.rdndtargetpipeline[2]_i_2_n_0 ;
  wire \data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ;
  wire \data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_10_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_1_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_2_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_3_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_4_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_5_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_6_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_7_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_9_n_0 ;
  wire \data_width_64.rdndtlpaddrl_reg_0_3_6_6_i_1_n_0 ;
  wire \data_width_64.rdndtlpaddrlow_reg[0]_0 ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[0] ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[1] ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[2] ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[3] ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[4] ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[5] ;
  wire \data_width_64.rdndtlpaddrlow_reg_n_0_[6] ;
  wire \data_width_64.rdreqpipelinedecr_reg_0 ;
  wire \data_width_64.rdreqpipelinedecr_reg_1 ;
  wire \data_width_64.rdreqpipelineincr_reg_0 ;
  wire \data_width_64.rdreqsmsig[0]_i_1_n_0 ;
  wire \data_width_64.rdreqsmsig[0]_i_2_n_0 ;
  wire \data_width_64.rdreqsmsig[1]_i_1_n_0 ;
  wire \data_width_64.rdreqsmsig[1]_i_2_n_0 ;
  wire \data_width_64.rdreqsmsig[2]_i_1_n_0 ;
  wire \data_width_64.rdreqsmsig[2]_i_2_n_0 ;
  wire \data_width_64.rdreqsmsig[2]_i_5_n_0 ;
  wire \data_width_64.rdreqsmsig[2]_i_7_n_0 ;
  wire \data_width_64.rdreqsmsig_reg[1]_0 ;
  wire \data_width_64.rdreqsmsig_reg[1]_1 ;
  wire \data_width_64.rdreqsmsig_reg[1]_2 ;
  wire \data_width_64.rdreqsmsig_reg[2]_0 ;
  wire \data_width_64.rdreqsmsig_reg[2]_1 ;
  wire \data_width_64.rdreqsmsig_reg[2]_2 ;
  wire \data_width_64.rdreqsmsig_reg[2]_i_4_n_0 ;
  wire \data_width_64.rdtargetpipeline[0]_i_1_n_0 ;
  wire \data_width_64.rdtargetpipeline[0]_rep_i_1_n_0 ;
  wire \data_width_64.rdtargetpipeline[1]_i_1_n_0 ;
  wire \data_width_64.rdtargetpipeline[1]_rep_i_1_n_0 ;
  wire \data_width_64.rdtargetpipeline[2]_i_1_n_0 ;
  wire \data_width_64.rdtargetpipeline[2]_i_2_n_0 ;
  wire \data_width_64.rdtargetpipeline[2]_i_3_n_0 ;
  wire \data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ;
  wire [1:0]\data_width_64.rdtargetpipeline_reg[1]_0 ;
  wire \data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_1_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_2_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_3_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_4_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_5_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_6_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_7_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_9_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_1 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_2 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_4 ;
  wire \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_5 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_1 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_2 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_4 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_5 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_i_1_n_0 ;
  wire \data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_n_1 ;
  wire \data_width_64.rdtlpaddrltemp_reg[0]_0 ;
  wire \data_width_64.rdtlpaddrltemp_reg_n_0_[0] ;
  wire \data_width_64.rdtlpaddrltemp_reg_n_0_[1] ;
  wire \data_width_64.rdtlpaddrltemp_reg_n_0_[3] ;
  wire \data_width_64.rdtlpaddrltemp_reg_n_0_[4] ;
  wire \data_width_64.rdtlpaddrltemp_reg_n_0_[5] ;
  wire \data_width_64.rdtlpaddrltemp_reg_n_0_[6] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.s_axis_cr_tready_sig_i_6_n_0 ;
  wire \data_width_64.s_axis_cr_tready_sig_i_7_n_0 ;
  wire \data_width_64.s_axis_cr_tready_sig_reg_0 ;
  wire \data_width_64.s_axis_cr_tready_sig_reg_i_5_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[0][0]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[0][1]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[0][2]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[0][2]_i_2_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[0][2]_i_3_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[0][2]_i_4_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[1][0]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[1][1]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[1][2]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[1][2]_i_2_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[1][2]_i_3_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[1][2]_i_4_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[2][0]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[2][1]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[2][2]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[2][2]_i_2_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[2][2]_i_3_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[2][2]_i_4_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[3][0]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[3][1]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[3][2]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersig[3][2]_i_2_n_0 ;
  wire \data_width_64.s_axis_cr_tusersigtemp[0]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersigtemp[1]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersigtemp[2]_i_1_n_0 ;
  wire \data_width_64.s_axis_cr_tusersigtemp[2]_i_2_n_0 ;
  wire \data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ;
  wire \data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ;
  wire \data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ;
  wire \data_width_64.tagsig_reg[0]_0 ;
  wire \data_width_64.tagsig_reg[0]_1 ;
  wire \data_width_64.tagsig_reg_n_0_[0] ;
  wire \data_width_64.tagsig_reg_n_0_[1] ;
  wire \data_width_64.tagsig_reg_n_0_[2] ;
  wire \data_width_64.tagsig_reg_n_0_[3] ;
  wire \data_width_64.tagsig_reg_n_0_[4] ;
  wire \data_width_64.tagsig_reg_n_0_[5] ;
  wire \data_width_64.tagsig_reg_n_0_[6] ;
  wire \data_width_64.tagsig_reg_n_0_[7] ;
  wire \data_width_64.tlpaddrl_out[0][12]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][13]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][14]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][15]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][16]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][17]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][18]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][19]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][20]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][21]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_out[0][22]_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_8_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_0_5_i_9_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 ;
  wire \data_width_64.tlpaddrl_reg_0_3_6_11_n_4 ;
  wire \data_width_64.tlpaddrlow[0]_i_1_n_0 ;
  wire \data_width_64.tlpaddrlow[22]_i_1_n_0 ;
  wire \data_width_64.tlpaddrlow_reg[0]_0 ;
  wire \data_width_64.tlpattr_reg_n_0_[0][0] ;
  wire \data_width_64.tlpattr_reg_n_0_[0][1] ;
  wire \data_width_64.tlpattr_reg_n_0_[1][0] ;
  wire \data_width_64.tlpattr_reg_n_0_[1][1] ;
  wire \data_width_64.tlpattr_reg_n_0_[2][0] ;
  wire \data_width_64.tlpattr_reg_n_0_[2][1] ;
  wire \data_width_64.tlpattr_reg_n_0_[3][0] ;
  wire \data_width_64.tlpattr_reg_n_0_[3][1] ;
  wire \data_width_64.tlpattrsig_reg_n_0_[0] ;
  wire \data_width_64.tlpattrsig_reg_n_0_[1] ;
  wire \data_width_64.tlpbytecount[1][11]_i_2_n_0 ;
  wire \data_width_64.tlpbytecount[2][11]_i_2_n_0 ;
  wire [11:0]\data_width_64.tlpbytecount_reg[0]_32 ;
  wire [11:0]\data_width_64.tlpbytecount_reg[1]_31 ;
  wire [11:0]\data_width_64.tlpbytecount_reg[2]_30 ;
  wire [11:0]\data_width_64.tlpbytecount_reg[3]_29 ;
  wire \data_width_64.tlpcompleterid[0][0]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][10]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][11]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][12]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][13]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][14]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][15]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][1]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][2]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][3]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][4]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][5]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][6]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][7]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][8]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[0][9]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][0]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][10]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][11]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][12]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][13]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][14]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][15]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][1]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][2]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][3]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][4]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][5]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][6]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][7]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][8]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[1][9]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][0]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][10]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][11]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][12]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][13]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][14]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][15]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][1]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][2]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][3]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][4]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][5]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][6]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][7]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][8]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[2][9]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][0]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][10]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][11]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][12]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][13]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][14]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][15]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][1]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][2]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][3]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][4]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][5]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][6]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][7]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][8]_i_1_n_0 ;
  wire \data_width_64.tlpcompleterid[3][9]_i_1_n_0 ;
  wire [15:0]\data_width_64.tlpcompleterid_reg[0]_25 ;
  wire [15:0]\data_width_64.tlpcompleterid_reg[1]_26 ;
  wire [15:0]\data_width_64.tlpcompleterid_reg[2]_27 ;
  wire [15:0]\data_width_64.tlpcompleterid_reg[3]_28 ;
  wire \data_width_64.tlplength[0][0]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][1]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][2]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][3]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][4]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][5]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][6]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][7]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][8]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][9]_i_1_n_0 ;
  wire \data_width_64.tlplength[0][9]_i_2_n_0 ;
  wire \data_width_64.tlplength[0][9]_i_3_n_0 ;
  wire \data_width_64.tlplength[1][0]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][1]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][2]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][3]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][4]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][5]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][6]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][7]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][8]_i_1_n_0 ;
  wire \data_width_64.tlplength[1][9]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][0]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][1]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][2]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][3]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][4]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][5]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][6]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][7]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][8]_i_1_n_0 ;
  wire \data_width_64.tlplength[2][9]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][0]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][1]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][2]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][3]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][4]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][5]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][6]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][7]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][8]_i_1_n_0 ;
  wire \data_width_64.tlplength[3][9]_i_1_n_0 ;
  wire [9:0]\data_width_64.tlplength_reg[0]_13 ;
  wire [9:0]\data_width_64.tlplength_reg[1]_14 ;
  wire [9:0]\data_width_64.tlplength_reg[2]_15 ;
  wire \data_width_64.tlplength_reg[3][0]_0 ;
  wire [9:0]\data_width_64.tlplength_reg[3]_16 ;
  wire \data_width_64.tlplengthcntr[0]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[0]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[0]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[0]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[0]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[1]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[2]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[3]_i_9_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_10_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_11_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_12_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_13_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_14_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[4]_i_9_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[5]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[6]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[7]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[8]_i_1_n_0 ;
  wire \data_width_64.tlplengthcntr[8]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[8]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr[8]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[8]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[8]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_10_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_11_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_13_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_14_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_15_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_16_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_17_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_18_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_19_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_20_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_21_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_22_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_2_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_4_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_5_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_6_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_7_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_8_n_0 ;
  wire \data_width_64.tlplengthcntr[9]_i_9_n_0 ;
  wire \data_width_64.tlplengthcntr_reg[0]_0 ;
  wire \data_width_64.tlplengthcntr_reg[0]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr_reg[2]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr_reg[3]_i_3_n_0 ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[0] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[1] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[2] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[3] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[4] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[5] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[6] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[7] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[8] ;
  wire \data_width_64.tlplengthcntr_reg_n_0_[9] ;
  wire \data_width_64.tlpndattr_reg_n_0_[0][0] ;
  wire \data_width_64.tlpndattr_reg_n_0_[0][1] ;
  wire \data_width_64.tlpndattr_reg_n_0_[1][0] ;
  wire \data_width_64.tlpndattr_reg_n_0_[1][1] ;
  wire \data_width_64.tlpndattr_reg_n_0_[2][0] ;
  wire \data_width_64.tlpndattr_reg_n_0_[2][1] ;
  wire \data_width_64.tlpndattr_reg_n_0_[3][0] ;
  wire \data_width_64.tlpndattr_reg_n_0_[3][1] ;
  wire \data_width_64.tlpndbytecount[0][0]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount[0][0]_i_4_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_10_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_11_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_12_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_13_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_14_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_15_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_16_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_19_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_3_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_4_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_5_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_7_n_0 ;
  wire \data_width_64.tlpndbytecount[0][11]_i_8_n_0 ;
  wire \data_width_64.tlpndbytecount[0][1]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount[0][2]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount[0][4]_i_3_n_0 ;
  wire \data_width_64.tlpndbytecount[0][4]_i_4_n_0 ;
  wire \data_width_64.tlpndbytecount[0][4]_i_5_n_0 ;
  wire \data_width_64.tlpndbytecount[0][4]_i_6_n_0 ;
  wire \data_width_64.tlpndbytecount[0][4]_i_7_n_0 ;
  wire \data_width_64.tlpndbytecount[0][8]_i_3_n_0 ;
  wire \data_width_64.tlpndbytecount[0][8]_i_4_n_0 ;
  wire \data_width_64.tlpndbytecount[0][8]_i_5_n_0 ;
  wire \data_width_64.tlpndbytecount[0][8]_i_6_n_0 ;
  wire \data_width_64.tlpndbytecount[1][11]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount[2][11]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount[3][11]_i_1_n_0 ;
  wire \data_width_64.tlpndbytecount[3][11]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount_reg[0][11]_i_6_n_2 ;
  wire \data_width_64.tlpndbytecount_reg[0][11]_i_6_n_3 ;
  wire \data_width_64.tlpndbytecount_reg[0][4]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount_reg[0][4]_i_2_n_1 ;
  wire \data_width_64.tlpndbytecount_reg[0][4]_i_2_n_2 ;
  wire \data_width_64.tlpndbytecount_reg[0][4]_i_2_n_3 ;
  wire \data_width_64.tlpndbytecount_reg[0][8]_i_2_n_0 ;
  wire \data_width_64.tlpndbytecount_reg[0][8]_i_2_n_1 ;
  wire \data_width_64.tlpndbytecount_reg[0][8]_i_2_n_2 ;
  wire \data_width_64.tlpndbytecount_reg[0][8]_i_2_n_3 ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][0] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][10] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][11] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][1] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][2] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][3] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][4] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][5] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][6] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][7] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][8] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[0][9] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][0] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][10] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][11] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][1] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][2] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][3] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][4] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][5] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][6] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][7] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][8] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[1][9] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][0] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][10] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][11] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][1] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][2] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][3] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][4] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][5] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][6] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][7] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][8] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[2][9] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][0] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][10] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][11] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][1] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][2] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][3] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][4] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][5] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][6] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][7] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][8] ;
  wire \data_width_64.tlpndbytecount_reg_n_0_[3][9] ;
  wire \data_width_64.tlpndcompleterid[0][0]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][10]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][11]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][12]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][13]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][14]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][15]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][1]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][2]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][3]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][4]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][5]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][6]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][7]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][8]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[0][9]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][0]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][10]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][11]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][12]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][13]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][14]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][15]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][1]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][2]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][3]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][4]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][5]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][6]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][7]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][8]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[1][9]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][0]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][10]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][11]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][12]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][13]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][14]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][15]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][1]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][2]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][3]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][4]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][5]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][6]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][7]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][8]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid[2][9]_i_1_n_0 ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][0] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][10] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][11] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][12] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][13] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][14] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][15] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][1] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][2] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][3] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][4] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][5] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][6] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][7] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][8] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[0][9] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][0] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][10] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][11] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][12] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][13] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][14] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][15] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][1] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][2] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][3] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][4] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][5] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][6] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][7] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][8] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[1][9] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][0] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][10] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][11] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][12] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][13] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][14] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][15] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][1] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][2] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][3] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][4] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][5] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][6] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][7] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][8] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[2][9] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][0] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][10] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][11] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][12] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][13] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][14] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][15] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][1] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][2] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][3] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][4] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][5] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][6] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][7] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][8] ;
  wire \data_width_64.tlpndcompleterid_reg_n_0_[3][9] ;
  wire \data_width_64.tlpndrequesterid[0][0]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][10]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][11]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][12]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][13]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][14]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][15]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][1]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][2]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][3]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][4]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][5]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][6]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][7]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][8]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[0][9]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][0]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][10]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][11]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][12]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][13]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][14]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][15]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][1]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][2]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][3]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][4]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][5]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][6]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][7]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][8]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[1][9]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][0]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][10]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][11]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][12]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][13]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][14]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][15]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][1]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][2]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][3]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][4]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][5]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][6]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][7]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][8]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid[2][9]_i_1_n_0 ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][0] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][10] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][11] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][12] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][13] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][14] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][15] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][1] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][2] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][3] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][4] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][5] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][6] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][7] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][8] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[0][9] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][0] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][10] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][11] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][12] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][13] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][14] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][15] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][1] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][2] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][3] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][4] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][5] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][6] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][7] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][8] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[1][9] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][0] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][10] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][11] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][12] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][13] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][14] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][15] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][1] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][2] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][3] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][4] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][5] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][6] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][7] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][8] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[2][9] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][0] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][10] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][11] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][12] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][13] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][14] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][15] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][1] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][2] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][3] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][4] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][5] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][6] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][7] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][8] ;
  wire \data_width_64.tlpndrequesterid_reg_n_0_[3][9] ;
  wire \data_width_64.tlpndtag[0][0]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][1]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][2]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][3]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][4]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][5]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][6]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[0][7]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][0]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][1]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][2]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][3]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][4]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][5]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][6]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[1][7]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][0]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][1]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][2]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][3]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][4]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][5]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][6]_i_1_n_0 ;
  wire \data_width_64.tlpndtag[2][7]_i_1_n_0 ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][0] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][1] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][2] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][3] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][4] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][5] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][6] ;
  wire \data_width_64.tlpndtag_reg_n_0_[0][7] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][0] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][1] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][2] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][3] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][4] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][5] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][6] ;
  wire \data_width_64.tlpndtag_reg_n_0_[1][7] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][0] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][1] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][2] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][3] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][4] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][5] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][6] ;
  wire \data_width_64.tlpndtag_reg_n_0_[2][7] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][0] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][1] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][2] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][3] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][4] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][5] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][6] ;
  wire \data_width_64.tlpndtag_reg_n_0_[3][7] ;
  wire \data_width_64.tlpndtc_reg_n_0_[0][0] ;
  wire \data_width_64.tlpndtc_reg_n_0_[0][1] ;
  wire \data_width_64.tlpndtc_reg_n_0_[0][2] ;
  wire \data_width_64.tlpndtc_reg_n_0_[1][0] ;
  wire \data_width_64.tlpndtc_reg_n_0_[1][1] ;
  wire \data_width_64.tlpndtc_reg_n_0_[1][2] ;
  wire \data_width_64.tlpndtc_reg_n_0_[2][0] ;
  wire \data_width_64.tlpndtc_reg_n_0_[2][1] ;
  wire \data_width_64.tlpndtc_reg_n_0_[2][2] ;
  wire \data_width_64.tlpndtc_reg_n_0_[3][0] ;
  wire \data_width_64.tlpndtc_reg_n_0_[3][1] ;
  wire \data_width_64.tlpndtc_reg_n_0_[3][2] ;
  wire \data_width_64.tlprequesterid[0][0]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][10]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][11]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][12]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][13]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][14]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][15]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][1]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][2]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][3]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][4]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][5]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][6]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][7]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][8]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[0][9]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][0]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][10]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][11]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][12]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][13]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][14]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][15]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][1]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][2]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][3]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][4]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][5]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][6]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][7]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][8]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[1][9]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][0]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][10]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][11]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][12]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][13]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][14]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][15]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][1]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][2]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][3]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][4]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][5]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][6]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][7]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][8]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[2][9]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][0]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][10]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][11]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][12]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][13]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][14]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][15]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][1]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][2]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][3]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][4]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][5]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][6]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][7]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][8]_i_1_n_0 ;
  wire \data_width_64.tlprequesterid[3][9]_i_1_n_0 ;
  wire [15:0]\data_width_64.tlprequesterid_reg[0]_17 ;
  wire [15:0]\data_width_64.tlprequesterid_reg[1]_18 ;
  wire [15:0]\data_width_64.tlprequesterid_reg[2]_19 ;
  wire [15:0]\data_width_64.tlprequesterid_reg[3]_20 ;
  wire \data_width_64.tlptag[0][0]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][1]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][2]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][3]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][4]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][5]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][6]_i_1_n_0 ;
  wire \data_width_64.tlptag[0][7]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][0]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][1]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][2]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][3]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][4]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][5]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][6]_i_1_n_0 ;
  wire \data_width_64.tlptag[1][7]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][0]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][1]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][2]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][3]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][4]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][5]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][6]_i_1_n_0 ;
  wire \data_width_64.tlptag[2][7]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][0]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][1]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][2]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][3]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][4]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][5]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][6]_i_1_n_0 ;
  wire \data_width_64.tlptag[3][7]_i_1_n_0 ;
  wire [7:0]\data_width_64.tlptag_reg[0]_21 ;
  wire [7:0]\data_width_64.tlptag_reg[1]_22 ;
  wire [7:0]\data_width_64.tlptag_reg[2]_23 ;
  wire [7:0]\data_width_64.tlptag_reg[3]_24 ;
  wire \data_width_64.tlptc_reg_n_0_[0][0] ;
  wire \data_width_64.tlptc_reg_n_0_[0][1] ;
  wire \data_width_64.tlptc_reg_n_0_[0][2] ;
  wire \data_width_64.tlptc_reg_n_0_[1][0] ;
  wire \data_width_64.tlptc_reg_n_0_[1][1] ;
  wire \data_width_64.tlptc_reg_n_0_[1][2] ;
  wire \data_width_64.tlptc_reg_n_0_[2][0] ;
  wire \data_width_64.tlptc_reg_n_0_[2][1] ;
  wire \data_width_64.tlptc_reg_n_0_[2][2] ;
  wire \data_width_64.tlptc_reg_n_0_[3][0] ;
  wire \data_width_64.tlptc_reg_n_0_[3][1] ;
  wire \data_width_64.tlptc_reg_n_0_[3][2] ;
  wire \data_width_64.totalbytecount[0]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[10]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[11]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[1]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[2]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[3]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[4]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[5]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[6]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[7]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[8]_i_1_n_0 ;
  wire \data_width_64.totalbytecount[9]_i_1_n_0 ;
  wire \data_width_64.wrpendflush[3][3]_i_1_n_0 ;
  wire \data_width_64.wrpendflush[3][3]_i_3_n_0 ;
  wire \data_width_64.wrpendflush_reg[0][3]_0 ;
  wire \data_width_64.wrpendflush_reg_n_0_[0][0] ;
  wire \data_width_64.wrpendflush_reg_n_0_[0][1] ;
  wire \data_width_64.wrpendflush_reg_n_0_[0][2] ;
  wire \data_width_64.wrpendflush_reg_n_0_[0][3] ;
  wire \data_width_64.wrpendflush_reg_n_0_[1][0] ;
  wire \data_width_64.wrpendflush_reg_n_0_[1][1] ;
  wire \data_width_64.wrpendflush_reg_n_0_[1][2] ;
  wire \data_width_64.wrpendflush_reg_n_0_[1][3] ;
  wire \data_width_64.wrpendflush_reg_n_0_[2][0] ;
  wire \data_width_64.wrpendflush_reg_n_0_[2][1] ;
  wire \data_width_64.wrpendflush_reg_n_0_[2][2] ;
  wire \data_width_64.wrpendflush_reg_n_0_[2][3] ;
  wire \data_width_64.wrpendflush_reg_n_0_[3][0] ;
  wire \data_width_64.wrpendflush_reg_n_0_[3][1] ;
  wire \data_width_64.wrpendflush_reg_n_0_[3][2] ;
  wire \data_width_64.wrpendflush_reg_n_0_[3][3] ;
  wire \data_width_64.wrreqpendsig_reg[0] ;
  wire \data_width_64.zerolenreadreq_reg_0 ;
  wire \data_width_64.zerolenreadreq_reg_1 ;
  wire empty_fwft_i_reg;
  wire emptysig;
  wire \end_point.psr_reg[2] ;
  wire \end_point.psr_reg[2]_0 ;
  wire eqOp0_out;
  wire eqOp20_in;
  wire eqOp2_out;
  wire eqOp4_out;
  wire eqOp56_in;
  wire eqOp_1;
  wire \goreg_bm.dout_i[63]_i_3_n_0 ;
  wire \goreg_bm.dout_i[63]_i_5_n_0 ;
  wire \goreg_bm.dout_i_reg[16] ;
  wire \goreg_bm.dout_i_reg[17] ;
  wire \goreg_bm.dout_i_reg[18] ;
  wire \goreg_bm.dout_i_reg[19] ;
  wire \goreg_bm.dout_i_reg[24] ;
  wire \goreg_bm.dout_i_reg[25] ;
  wire \goreg_bm.dout_i_reg[26] ;
  wire \goreg_bm.dout_i_reg[27] ;
  wire \goreg_bm.dout_i_reg[28] ;
  wire \goreg_bm.dout_i_reg[29] ;
  wire \goreg_bm.dout_i_reg[30] ;
  wire \goreg_bm.dout_i_reg[31] ;
  wire [35:0]\goreg_bm.dout_i_reg[39] ;
  wire [63:0]\goreg_bm.dout_i_reg[63] ;
  wire [5:2]length_offset;
  wire \length_offset[11]_i_10_n_0 ;
  wire \length_offset[11]_i_11_n_0 ;
  wire \length_offset[11]_i_15_n_0 ;
  wire \length_offset[11]_i_16_n_0 ;
  wire \length_offset[11]_i_17_n_0 ;
  wire \length_offset[11]_i_18_n_0 ;
  wire \length_offset[11]_i_19_n_0 ;
  wire \length_offset[11]_i_1_n_0 ;
  wire \length_offset[11]_i_22_n_0 ;
  wire \length_offset[11]_i_23_n_0 ;
  wire \length_offset[11]_i_24_n_0 ;
  wire \length_offset[11]_i_25_n_0 ;
  wire \length_offset[11]_i_6_n_0 ;
  wire \length_offset[11]_i_7_n_0 ;
  wire \length_offset[11]_i_8_n_0 ;
  wire \length_offset[11]_i_9_n_0 ;
  wire \length_offset[2]_i_10_n_0 ;
  wire \length_offset[2]_i_11_n_0 ;
  wire \length_offset[2]_i_12_n_0 ;
  wire \length_offset[2]_i_5_n_0 ;
  wire \length_offset[2]_i_6_n_0 ;
  wire \length_offset[2]_i_7_n_0 ;
  wire \length_offset[2]_i_8_n_0 ;
  wire \length_offset[2]_i_9_n_0 ;
  wire \length_offset[3]_i_2_n_0 ;
  wire \length_offset[3]_i_3_n_0 ;
  wire \length_offset[4]_i_2_n_0 ;
  wire \length_offset[4]_i_3_n_0 ;
  wire \length_offset[5]_i_10_n_0 ;
  wire \length_offset[5]_i_11_n_0 ;
  wire \length_offset[5]_i_12_n_0 ;
  wire \length_offset[5]_i_13_n_0 ;
  wire \length_offset[5]_i_14_n_0 ;
  wire \length_offset[5]_i_15_n_0 ;
  wire \length_offset[5]_i_16_n_0 ;
  wire \length_offset[5]_i_17_n_0 ;
  wire \length_offset[5]_i_18_n_0 ;
  wire \length_offset[5]_i_19_n_0 ;
  wire \length_offset[5]_i_20_n_0 ;
  wire \length_offset[5]_i_23_n_0 ;
  wire \length_offset[5]_i_24_n_0 ;
  wire \length_offset[5]_i_25_n_0 ;
  wire \length_offset[5]_i_26_n_0 ;
  wire \length_offset[5]_i_27_n_0 ;
  wire \length_offset[5]_i_28_n_0 ;
  wire \length_offset[5]_i_29_n_0 ;
  wire \length_offset[5]_i_30_n_0 ;
  wire \length_offset[5]_i_31_n_0 ;
  wire \length_offset[5]_i_32_n_0 ;
  wire \length_offset[5]_i_33_n_0 ;
  wire \length_offset[5]_i_34_n_0 ;
  wire \length_offset[5]_i_35_n_0 ;
  wire \length_offset[5]_i_36_n_0 ;
  wire \length_offset[5]_i_37_n_0 ;
  wire \length_offset[5]_i_38_n_0 ;
  wire \length_offset[5]_i_39_n_0 ;
  wire \length_offset[5]_i_41_n_0 ;
  wire \length_offset[5]_i_42_n_0 ;
  wire \length_offset[5]_i_43_n_0 ;
  wire \length_offset[5]_i_44_n_0 ;
  wire \length_offset[5]_i_45_n_0 ;
  wire \length_offset[5]_i_46_n_0 ;
  wire \length_offset[5]_i_47_n_0 ;
  wire \length_offset[5]_i_48_n_0 ;
  wire \length_offset[5]_i_4_n_0 ;
  wire \length_offset[5]_i_5_n_0 ;
  wire \length_offset[5]_i_6_n_0 ;
  wire \length_offset[5]_i_7_n_0 ;
  wire \length_offset[5]_i_8_n_0 ;
  wire \length_offset[5]_i_9_n_0 ;
  wire \length_offset[9]_i_10_n_0 ;
  wire \length_offset[9]_i_11_n_0 ;
  wire \length_offset[9]_i_12_n_0 ;
  wire \length_offset[9]_i_13_n_0 ;
  wire \length_offset[9]_i_14_n_0 ;
  wire \length_offset[9]_i_15_n_0 ;
  wire \length_offset[9]_i_16_n_0 ;
  wire \length_offset[9]_i_17_n_0 ;
  wire \length_offset[9]_i_18_n_0 ;
  wire \length_offset[9]_i_19_n_0 ;
  wire \length_offset[9]_i_20_n_0 ;
  wire \length_offset[9]_i_24_n_0 ;
  wire \length_offset[9]_i_25_n_0 ;
  wire \length_offset[9]_i_26_n_0 ;
  wire \length_offset[9]_i_27_n_0 ;
  wire \length_offset[9]_i_28_n_0 ;
  wire \length_offset[9]_i_29_n_0 ;
  wire \length_offset[9]_i_30_n_0 ;
  wire \length_offset[9]_i_31_n_0 ;
  wire \length_offset[9]_i_32_n_0 ;
  wire \length_offset[9]_i_33_n_0 ;
  wire \length_offset[9]_i_34_n_0 ;
  wire \length_offset[9]_i_35_n_0 ;
  wire \length_offset[9]_i_36_n_0 ;
  wire \length_offset[9]_i_37_n_0 ;
  wire \length_offset[9]_i_38_n_0 ;
  wire \length_offset[9]_i_39_n_0 ;
  wire \length_offset[9]_i_42_n_0 ;
  wire \length_offset[9]_i_43_n_0 ;
  wire \length_offset[9]_i_44_n_0 ;
  wire \length_offset[9]_i_45_n_0 ;
  wire \length_offset[9]_i_46_n_0 ;
  wire \length_offset[9]_i_47_n_0 ;
  wire \length_offset[9]_i_48_n_0 ;
  wire \length_offset[9]_i_49_n_0 ;
  wire \length_offset[9]_i_50_n_0 ;
  wire \length_offset[9]_i_51_n_0 ;
  wire \length_offset[9]_i_52_n_0 ;
  wire \length_offset[9]_i_53_n_0 ;
  wire \length_offset[9]_i_54_n_0 ;
  wire \length_offset[9]_i_5_n_0 ;
  wire \length_offset[9]_i_6_n_0 ;
  wire \length_offset[9]_i_7_n_0 ;
  wire \length_offset[9]_i_8_n_0 ;
  wire \length_offset[9]_i_9_n_0 ;
  wire \length_offset_reg[10]_0 ;
  wire \length_offset_reg[11]_0 ;
  wire [1:0]\length_offset_reg[11]_1 ;
  wire [1:0]\length_offset_reg[11]_2 ;
  wire [1:0]\length_offset_reg[11]_3 ;
  wire [1:0]\length_offset_reg[11]_4 ;
  wire [3:0]\length_offset_reg[11]_5 ;
  wire \length_offset_reg[11]_i_12_n_3 ;
  wire \length_offset_reg[11]_i_13_n_3 ;
  wire \length_offset_reg[11]_i_20_n_3 ;
  wire \length_offset_reg[11]_i_20_n_6 ;
  wire \length_offset_reg[11]_i_20_n_7 ;
  wire \length_offset_reg[11]_i_21_n_3 ;
  wire \length_offset_reg[11]_i_21_n_6 ;
  wire \length_offset_reg[11]_i_21_n_7 ;
  wire \length_offset_reg[11]_i_3_n_3 ;
  wire \length_offset_reg[11]_i_4_n_3 ;
  wire \length_offset_reg[2]_0 ;
  wire \length_offset_reg[2]_1 ;
  wire \length_offset_reg[2]_i_3_n_0 ;
  wire \length_offset_reg[2]_i_3_n_1 ;
  wire \length_offset_reg[2]_i_3_n_2 ;
  wire \length_offset_reg[2]_i_3_n_3 ;
  wire \length_offset_reg[2]_i_3_n_4 ;
  wire \length_offset_reg[2]_i_3_n_5 ;
  wire \length_offset_reg[2]_i_3_n_6 ;
  wire \length_offset_reg[2]_i_3_n_7 ;
  wire \length_offset_reg[5]_i_21_n_0 ;
  wire \length_offset_reg[5]_i_21_n_1 ;
  wire \length_offset_reg[5]_i_21_n_2 ;
  wire \length_offset_reg[5]_i_21_n_3 ;
  wire \length_offset_reg[5]_i_21_n_4 ;
  wire \length_offset_reg[5]_i_21_n_5 ;
  wire \length_offset_reg[5]_i_21_n_6 ;
  wire \length_offset_reg[5]_i_22_n_0 ;
  wire \length_offset_reg[5]_i_22_n_1 ;
  wire \length_offset_reg[5]_i_22_n_2 ;
  wire \length_offset_reg[5]_i_22_n_3 ;
  wire \length_offset_reg[5]_i_22_n_4 ;
  wire \length_offset_reg[5]_i_22_n_5 ;
  wire \length_offset_reg[5]_i_22_n_6 ;
  wire \length_offset_reg[5]_i_2_n_0 ;
  wire \length_offset_reg[5]_i_2_n_1 ;
  wire \length_offset_reg[5]_i_2_n_2 ;
  wire \length_offset_reg[5]_i_2_n_3 ;
  wire \length_offset_reg[5]_i_2_n_4 ;
  wire \length_offset_reg[5]_i_2_n_5 ;
  wire \length_offset_reg[5]_i_2_n_6 ;
  wire \length_offset_reg[5]_i_3_n_0 ;
  wire \length_offset_reg[5]_i_3_n_1 ;
  wire \length_offset_reg[5]_i_3_n_2 ;
  wire \length_offset_reg[5]_i_3_n_3 ;
  wire \length_offset_reg[5]_i_3_n_4 ;
  wire \length_offset_reg[5]_i_3_n_5 ;
  wire \length_offset_reg[5]_i_3_n_6 ;
  wire \length_offset_reg[5]_i_40_n_0 ;
  wire \length_offset_reg[5]_i_40_n_1 ;
  wire \length_offset_reg[5]_i_40_n_2 ;
  wire \length_offset_reg[5]_i_40_n_3 ;
  wire \length_offset_reg[5]_i_40_n_4 ;
  wire \length_offset_reg[5]_i_40_n_5 ;
  wire \length_offset_reg[5]_i_40_n_6 ;
  wire [1:0]\length_offset_reg[6]_0 ;
  wire \length_offset_reg[6]_1 ;
  wire \length_offset_reg[7]_0 ;
  wire \length_offset_reg[8]_0 ;
  wire \length_offset_reg[9]_0 ;
  wire [3:0]\length_offset_reg[9]_1 ;
  wire [3:0]\length_offset_reg[9]_2 ;
  wire [3:0]\length_offset_reg[9]_3 ;
  wire [1:0]\length_offset_reg[9]_4 ;
  wire \length_offset_reg[9]_i_21_n_0 ;
  wire \length_offset_reg[9]_i_21_n_1 ;
  wire \length_offset_reg[9]_i_21_n_2 ;
  wire \length_offset_reg[9]_i_21_n_3 ;
  wire \length_offset_reg[9]_i_22_n_0 ;
  wire \length_offset_reg[9]_i_22_n_1 ;
  wire \length_offset_reg[9]_i_22_n_2 ;
  wire \length_offset_reg[9]_i_22_n_3 ;
  wire \length_offset_reg[9]_i_2_n_0 ;
  wire \length_offset_reg[9]_i_2_n_1 ;
  wire \length_offset_reg[9]_i_2_n_2 ;
  wire \length_offset_reg[9]_i_2_n_3 ;
  wire \length_offset_reg[9]_i_3_n_0 ;
  wire \length_offset_reg[9]_i_3_n_1 ;
  wire \length_offset_reg[9]_i_3_n_2 ;
  wire \length_offset_reg[9]_i_3_n_3 ;
  wire \length_offset_reg[9]_i_40_n_0 ;
  wire \length_offset_reg[9]_i_40_n_1 ;
  wire \length_offset_reg[9]_i_40_n_2 ;
  wire \length_offset_reg[9]_i_40_n_3 ;
  wire \length_offset_reg[9]_i_40_n_4 ;
  wire \length_offset_reg[9]_i_40_n_5 ;
  wire \length_offset_reg[9]_i_40_n_6 ;
  wire \length_offset_reg[9]_i_40_n_7 ;
  wire \length_offset_reg[9]_i_41_n_0 ;
  wire \length_offset_reg[9]_i_41_n_1 ;
  wire \length_offset_reg[9]_i_41_n_2 ;
  wire \length_offset_reg[9]_i_41_n_3 ;
  wire \length_offset_reg[9]_i_41_n_4 ;
  wire \length_offset_reg[9]_i_41_n_5 ;
  wire \length_offset_reg[9]_i_41_n_6 ;
  wire \length_offset_reg[9]_i_41_n_7 ;
  wire \length_offset_reg_n_0_[10] ;
  wire \length_offset_reg_n_0_[8] ;
  wire [9:0]linkdownflushdepth;
  wire m_axi_araddrtemp_reg_0_3_0_5_i_10_n_0;
  wire m_axi_araddrtemp_reg_0_3_0_5_i_11_n_0;
  wire m_axi_araddrtemp_reg_0_3_0_5_i_12_n_0;
  wire m_axi_araddrtemp_reg_0_3_0_5_i_13_n_0;
  wire m_axi_araddrtemp_reg_0_3_0_5_i_14_n_0;
  wire m_axi_araddrtemp_reg_0_3_0_5_i_15_n_0;
  wire m_axi_araddrtemp_reg_0_3_12_17_i_10_n_0;
  wire m_axi_araddrtemp_reg_0_3_12_17_i_11_n_0;
  wire m_axi_araddrtemp_reg_0_3_12_17_i_12_n_0;
  wire m_axi_araddrtemp_reg_0_3_12_17_i_7_n_0;
  wire m_axi_araddrtemp_reg_0_3_12_17_i_8_n_0;
  wire m_axi_araddrtemp_reg_0_3_12_17_i_9_n_0;
  wire m_axi_araddrtemp_reg_0_3_18_23_i_10_n_0;
  wire m_axi_araddrtemp_reg_0_3_18_23_i_11_n_0;
  wire m_axi_araddrtemp_reg_0_3_18_23_i_7_n_0;
  wire m_axi_araddrtemp_reg_0_3_18_23_i_8_n_0;
  wire m_axi_araddrtemp_reg_0_3_18_23_i_9_n_0;
  wire m_axi_araddrtemp_reg_0_3_6_11_i_10_n_0;
  wire m_axi_araddrtemp_reg_0_3_6_11_i_11_n_0;
  wire m_axi_araddrtemp_reg_0_3_6_11_i_12_n_0;
  wire m_axi_araddrtemp_reg_0_3_6_11_i_7_n_0;
  wire m_axi_araddrtemp_reg_0_3_6_11_i_8_n_0;
  wire m_axi_araddrtemp_reg_0_3_6_11_i_9_n_0;
  wire [8:0]\m_axi_arlen4_reg[7] ;
  wire m_axi_arlentemp_reg_0_3_0_5_i_11_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_i_14_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_i_16_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_i_17_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_i_19_n_0;
  wire m_axi_arlentemp_reg_0_3_0_5_i_20_n_0;
  wire m_axi_arlentemp_reg_0_3_6_9_i_7_n_0;
  wire m_axi_arlentemp_reg_0_3_6_9_i_8_n_0;
  wire m_axi_awsizetemp_reg_0_3_0_2_i_2__0_n_0;
  wire m_axis_cc_tdata_d1;
  wire [63:0]m_axis_cc_tdata_h;
  wire [63:0]m_axis_cc_tdata_nd__0;
  wire [31:0]m_axis_cc_tdatatemp64;
  wire m_axis_cc_tlast_d19_out;
  wire m_axis_cc_tlast_d26_in;
  wire [7:7]m_axis_cc_tstrb_d;
  wire [7:7]m_axis_cc_tstrb_nd;
  wire m_axis_cc_tvalid_d50_out;
  wire [20:0]\m_axis_cr_tdata_reg[22] ;
  wire \m_axis_cr_tdata_reg[30] ;
  wire [55:0]\m_axis_cr_tdata_reg[63] ;
  wire [4:0]\m_axis_cr_tdata_reg[6] ;
  wire [2:0]\m_axis_cr_tuser_reg[6] ;
  wire neqOp0_out;
  wire neqOp0_out_1;
  wire neqOp1_out;
  wire neqOp2_out;
  wire neqOp37_in;
  wire neqOp3_out;
  wire neqOp57_in;
  wire \np_ok_mode.rdndreqpipeline_d_reg[0] ;
  wire \np_ok_mode.rdndreqpipeline_d_reg[1] ;
  wire \np_ok_mode.rdndreqpipeline_d_reg[2] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[0] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[1] ;
  wire \np_ok_mode.rdreqpipeline_d_reg[2] ;
  wire \orrdreqpipeline[2]_i_2_n_0 ;
  wire \orrdreqpipeline_reg[0] ;
  wire \orrdreqpipeline_reg[0]_0 ;
  wire \orrdreqpipeline_reg[1] ;
  wire \orrdreqpipeline_reg[1]_0 ;
  wire \orrdreqpipeline_reg[2] ;
  wire \orrdreqpipeline_reg[2]_0 ;
  wire p_0_in;
  wire p_0_in0_in;
  wire [9:1]p_0_in1_in;
  wire p_0_in27_in;
  wire p_0_in2_in;
  wire p_0_in_0;
  wire [4:0]p_0_out;
  wire p_14_out;
  wire p_17_in;
  wire [0:0]p_1_in;
  wire p_1_in79_in;
  wire p_1_in__28;
  wire [11:1]p_1_out;
  wire p_23_out;
  wire p_2_in;
  wire p_2_out0;
  wire p_32_out;
  wire p_36_out;
  wire [1:0]p_3_in;
  wire [2:2]p_3_out;
  wire [6:0]p_3_out__0;
  wire [2:2]p_5_out;
  wire p_76_out;
  wire p_77_in;
  wire p_85_out;
  wire [1:1]p_8_out;
  wire p_90_out;
  wire \pipe_stages_1.pipe_rx_chanisaligned_q_reg ;
  wire [3:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 ;
  wire [5:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 ;
  wire [9:0]\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 ;
  wire [1:1]plusOp42;
  wire rd_ensig;
  wire \rd_req_32_64.rdndreqpipeline[0]_i_1_n_0 ;
  wire \rd_req_32_64.rdndreqpipeline[1]_i_1_n_0 ;
  wire \rd_req_32_64.rdndreqpipeline[2]_i_1_n_0 ;
  wire \rd_req_32_64.rdreqpipeline[0]_i_1_n_0 ;
  wire \rd_req_32_64.rdreqpipeline[1]_i_1_n_0 ;
  wire \rd_req_32_64.rdreqpipeline[2]_i_2_n_0 ;
  wire \rd_req_32_64.rdreqpipeline_reg[2]_0 ;
  wire rdndreqpipelineincr;
  wire [2:0]rdndtargetpipeline;
  wire rdndtlpaddrlow;
  wire rdorder_reg;
  wire rdreq1_out;
  wire rdreq_ordernotreq;
  wire rdreq_reg;
  wire rdreq_reg_0;
  wire rdreqsmsig;
  wire [2:2]rdtargetpipeline;
  wire reg_tready_reg;
  wire request_completed;
  wire [15:0]requesteridsig;
  wire \resetovrd.reset_reg[4] ;
  wire \respmmpipeline_reg[0] ;
  wire \respmmpipeline_reg[1] ;
  wire \respmmpipeline_reg[2] ;
  wire rrespdelayed;
  wire s_axis_cc_tvalid_q_reg;
  wire s_axis_cc_tvalid_q_reg_0;
  wire s_axis_cr_tready_sig;
  wire s_axis_cr_tready_sig106_out;
  wire s_axis_cr_tready_sig61_out;
  wire [2:0]\s_axis_cr_tusersig[0]_45 ;
  wire [2:0]\s_axis_cr_tusersig[1]_46 ;
  wire [2:0]\s_axis_cr_tusersig[2]_47 ;
  wire [2:0]\s_axis_cr_tusersig[3]_48 ;
  wire \s_axis_cr_tusersig_reg[0]_8 ;
  wire \s_axis_cr_tusersig_reg[3]_7 ;
  wire \s_axis_tx_tdata_d[0]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[10]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[11]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[12]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[13]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[14]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[15]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[16]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[17]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[18]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[19]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[1]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[20]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[21]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[22]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[23]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[24]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[25]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[26]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[27]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[28]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[29]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[2]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[30]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[31]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[32]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[33]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[34]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[35]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[36]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[37]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[38]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[39]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[3]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[40]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[41]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[42]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[43]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[44]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[45]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[46]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[47]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[48]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[49]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[4]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[50]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[51]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[52]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[53]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[54]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[55]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[56]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[57]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[58]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[59]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[5]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[60]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[61]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[62]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[63]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[6]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[7]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[8]_i_2_n_0 ;
  wire \s_axis_tx_tdata_d[9]_i_2_n_0 ;
  wire [63:0]\s_axis_tx_tdata_d_reg[63] ;
  wire s_axis_tx_tlast_d_reg;
  wire s_axis_tx_tlast_d_reg_0;
  wire s_axis_tx_tlast_d_reg_1;
  wire s_axis_tx_tready;
  wire \s_axis_tx_tstrb_d_reg[7] ;
  wire s_axis_tx_tvalid_d_reg;
  wire [2:0]sig_addrstreampipeline;
  wire sig_blk_lnk_up;
  wire sig_m_axis_cc_tlast;
  wire sig_m_axis_cc_tready;
  wire sig_m_axis_cc_tvalid;
  wire sig_s_axis_cr_tlast;
  wire sig_s_axis_cr_tready;
  wire sig_s_axis_cr_tvalid;
  wire tagsig;
  wire tlpaddrl;
  wire [6:0]tlpaddrlow;
  wire [22:7]tlpaddrlow__0;
  wire [22:0]\tlpaddrlsig[0]_33 ;
  wire [22:0]\tlpaddrlsig[1]_34 ;
  wire [22:0]\tlpaddrlsig[2]_35 ;
  wire [22:0]\tlpaddrlsig[3]_36 ;
  wire [7:0]tlpattr0_in;
  wire tlpattrsig;
  wire [11:0]\tlpbytecount[0]_9 ;
  wire [9:0]\tlplength[0]_12 ;
  wire tlplengthcntr;
  wire [9:0]tlplengthsig;
  wire [9:0]\tlplengthsig[0]_37 ;
  wire [9:0]\tlplengthsig[1]_38 ;
  wire [9:0]\tlplengthsig[2]_39 ;
  wire [9:0]\tlplengthsig[3]_40 ;
  wire [7:0]tlpndattr0_in;
  wire \tlpndbytecount[0]_1 ;
  wire \tlpndbytecount[1]_0 ;
  wire \tlpndbytecount[2]_2 ;
  wire [11:0]\tlpndbytecount[3]0_in ;
  wire [15:0]tlpndcompleterid0_in;
  wire [15:0]tlpndrequesterid0_in;
  wire [7:0]tlpndtag0_in;
  wire [11:0]tlpndtc0_in;
  wire tlprequesterid;
  wire [11:0]tlptc0_in;
  wire [2:0]tlptcsig;
  wire [11:0]totalbytecount;
  wire [9:0]totallength;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;
  wire user_lnk_up_mux_reg_2;
  wire user_lnk_up_mux_reg_3;
  wire [15:0]wrpendflush0_in;
  wire [3:0]\wrpending[0]_44 ;
  wire [3:0]\wrpending[1]_43 ;
  wire [3:0]\wrpending[2]_42 ;
  wire [3:0]\wrpending[3]_41 ;
  wire \wrpendingsig[0]_6 ;
  wire \wrpendingsig[1]_4 ;
  wire \wrpendingsig[2]_5 ;
  wire \wrpendingsig[3]_3 ;
  wire [3:3]\NLW_data_width_64.ctlpbytecounttemp_reg[11]_i_3_CO_UNCONNECTED ;
  wire [3:1]\NLW_data_width_64.linkdownflushdepth_reg[9]_i_6_CO_UNCONNECTED ;
  wire [3:2]\NLW_data_width_64.linkdownflushdepth_reg[9]_i_6_O_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdndtlpaddrl_reg_0_3_0_5_DOD_UNCONNECTED ;
  wire [1:1]\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOA_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOB_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOC_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOD_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_DOD_UNCONNECTED ;
  wire [1:1]\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOA_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOB_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOC_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOD_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.tlpaddrl_reg_0_3_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_data_width_64.tlpaddrl_reg_0_3_6_11_DOD_UNCONNECTED ;
  wire [3:2]\NLW_data_width_64.tlpndbytecount_reg[0][11]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_data_width_64.tlpndbytecount_reg[0][11]_i_6_O_UNCONNECTED ;
  wire [3:1]\NLW_length_offset_reg[11]_i_12_CO_UNCONNECTED ;
  wire [3:2]\NLW_length_offset_reg[11]_i_12_O_UNCONNECTED ;
  wire [3:1]\NLW_length_offset_reg[11]_i_13_CO_UNCONNECTED ;
  wire [3:2]\NLW_length_offset_reg[11]_i_13_O_UNCONNECTED ;
  wire [3:1]\NLW_length_offset_reg[11]_i_20_CO_UNCONNECTED ;
  wire [3:2]\NLW_length_offset_reg[11]_i_20_O_UNCONNECTED ;
  wire [3:1]\NLW_length_offset_reg[11]_i_21_CO_UNCONNECTED ;
  wire [3:2]\NLW_length_offset_reg[11]_i_21_O_UNCONNECTED ;
  wire [3:1]\NLW_length_offset_reg[11]_i_3_CO_UNCONNECTED ;
  wire [3:2]\NLW_length_offset_reg[11]_i_3_O_UNCONNECTED ;
  wire [3:1]\NLW_length_offset_reg[11]_i_4_CO_UNCONNECTED ;
  wire [3:2]\NLW_length_offset_reg[11]_i_4_O_UNCONNECTED ;
  wire [0:0]\NLW_length_offset_reg[5]_i_2_O_UNCONNECTED ;
  wire [0:0]\NLW_length_offset_reg[5]_i_21_O_UNCONNECTED ;
  wire [0:0]\NLW_length_offset_reg[5]_i_22_O_UNCONNECTED ;
  wire [0:0]\NLW_length_offset_reg[5]_i_3_O_UNCONNECTED ;
  wire [0:0]\NLW_length_offset_reg[5]_i_40_O_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h6FF6)) 
    blk_lnk_up_latch_i_2
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I1(ctargetpipeline[1]),
        .I2(cpltargetpipeline),
        .I3(ctargetpipeline[2]),
        .O(blk_lnk_up_latch_reg_0));
  FDSE blk_lnk_up_latch_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(blk_lnk_up_latch_reg_1),
        .Q(rdreq_reg),
        .S(SR));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    cpldsplitcount_reg_0_3_0_0
       (.A0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .A1(ctargetpipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(cpldsplitcount_reg_0_3_0_0_i_1_n_0),
        .DPO(p_0_out[0]),
        .DPRA0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .DPRA1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(CONV_INTEGER4_out[0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(cpldsplitcount0_out));
  LUT6 #(
    .INIT(64'hFFFFFD0D0505FD0D)) 
    cpldsplitcount_reg_0_3_0_0_i_1
       (.I0(\length_offset_reg[2]_0 ),
        .I1(cpldsplitcount_reg_0_3_0_0_i_4_n_0),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(cpldsplitcount_reg_0_3_0_0_i_5_n_0),
        .I4(cfg_dev_control_max_payload[0]),
        .I5(cpldsplitcount_reg_0_3_0_0_i_6_n_0),
        .O(cpldsplitcount_reg_0_3_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFB0)) 
    cpldsplitcount_reg_0_3_0_0_i_10
       (.I0(cpldsplitcount_reg_0_3_0_0_i_14_n_0),
        .I1(cpldsplitcount_reg_0_3_0_0_i_12_n_0),
        .I2(data5[6]),
        .I3(data5__0[9]),
        .I4(data5[7]),
        .I5(data5__0[8]),
        .O(cpldsplitcount_reg_0_3_0_0_i_10_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFF0000)) 
    cpldsplitcount_reg_0_3_0_0_i_11
       (.I0(data5[7]),
        .I1(data5[6]),
        .I2(data5[5]),
        .I3(cpldsplitcount_reg_0_3_0_0_i_7_n_0),
        .I4(data5__0[8]),
        .I5(data5__0[9]),
        .O(cpldsplitcount_reg_0_3_0_0_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    cpldsplitcount_reg_0_3_0_0_i_12
       (.I0(data5__0[3]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(data5[0]),
        .O(cpldsplitcount_reg_0_3_0_0_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT2 #(
    .INIT(4'h1)) 
    cpldsplitcount_reg_0_3_0_0_i_13
       (.I0(data5__0[9]),
        .I1(data5__0[8]),
        .O(cpldsplitcount_reg_0_3_0_0_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT2 #(
    .INIT(4'hE)) 
    cpldsplitcount_reg_0_3_0_0_i_14
       (.I0(data5__0[4]),
        .I1(data5[5]),
        .O(cpldsplitcount_reg_0_3_0_0_i_14_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    cpldsplitcount_reg_0_3_0_0_i_3
       (.I0(cpldsplitcount_reg_0_3_0_0_i_7_n_0),
        .I1(data5[7]),
        .I2(data5[6]),
        .I3(data5[5]),
        .I4(data5__0[9]),
        .I5(data5__0[8]),
        .O(\length_offset_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h8F808080)) 
    cpldsplitcount_reg_0_3_0_0_i_4
       (.I0(cpldsplitcount_reg_0_3_0_0_i_8_n_0),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_2 [1]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_3 ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_2 [0]),
        .O(cpldsplitcount_reg_0_3_0_0_i_4_n_0));
  LUT6 #(
    .INIT(64'h8888883888888888)) 
    cpldsplitcount_reg_0_3_0_0_i_5
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_2 [2]),
        .I1(data5__0[9]),
        .I2(cpldsplitcount_reg_0_3_0_0_i_7_n_0),
        .I3(data5[7]),
        .I4(data5__0[8]),
        .I5(cpldsplitcount_reg_0_3_0_0_i_9_n_0),
        .O(cpldsplitcount_reg_0_3_0_0_i_5_n_0));
  LUT6 #(
    .INIT(64'h5540004000400040)) 
    cpldsplitcount_reg_0_3_0_0_i_6
       (.I0(cfg_dev_control_max_payload[2]),
        .I1(\length_offset_reg_n_0_[8] ),
        .I2(cpldsplitcount_reg_0_3_0_0_i_10_n_0),
        .I3(cfg_dev_control_max_payload[1]),
        .I4(\length_offset_reg_n_0_[10] ),
        .I5(cpldsplitcount_reg_0_3_0_0_i_11_n_0),
        .O(cpldsplitcount_reg_0_3_0_0_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    cpldsplitcount_reg_0_3_0_0_i_7
       (.I0(data5__0[2]),
        .I1(data5[0]),
        .I2(data5__0[1]),
        .I3(data5__0[4]),
        .I4(data5__0[3]),
        .O(cpldsplitcount_reg_0_3_0_0_i_7_n_0));
  LUT6 #(
    .INIT(64'hFEFF0000FFFFFFFF)) 
    cpldsplitcount_reg_0_3_0_0_i_8
       (.I0(data5[6]),
        .I1(data5[5]),
        .I2(data5__0[4]),
        .I3(cpldsplitcount_reg_0_3_0_0_i_12_n_0),
        .I4(data5[7]),
        .I5(cpldsplitcount_reg_0_3_0_0_i_13_n_0),
        .O(cpldsplitcount_reg_0_3_0_0_i_8_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    cpldsplitcount_reg_0_3_0_0_i_9
       (.I0(data5[5]),
        .I1(data5[6]),
        .O(cpldsplitcount_reg_0_3_0_0_i_9_n_0));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    cpldsplitcount_reg_0_3_1_1
       (.A0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .A1(ctargetpipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(\length_offset_reg[11]_5 [0]),
        .DPO(p_0_out[1]),
        .DPRA0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .DPRA1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(CONV_INTEGER4_out[1]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(cpldsplitcount0_out));
  LUT5 #(
    .INIT(32'h707F7F7F)) 
    cpldsplitcount_reg_0_3_1_1_i_2
       (.I0(cpldsplitcount_reg_0_3_0_0_i_11_n_0),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_2 [2]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(cpldsplitcount_reg_0_3_0_0_i_10_n_0),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_2 [1]),
        .O(\data_width_64.cpldsplitcounttemp_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h707F7F7F)) 
    cpldsplitcount_reg_0_3_1_1_i_3
       (.I0(cpldsplitcount_reg_0_3_0_0_i_8_n_0),
        .I1(\length_offset_reg_n_0_[10] ),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_3 ),
        .I4(\length_offset_reg_n_0_[8] ),
        .O(\data_width_64.cpldsplitcounttemp_reg[1]_1 ));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    cpldsplitcount_reg_0_3_2_2
       (.A0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .A1(ctargetpipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(\length_offset_reg[11]_5 [1]),
        .DPO(p_0_out[2]),
        .DPRA0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .DPRA1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(CONV_INTEGER4_out[2]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(cpldsplitcount0_out));
  LUT3 #(
    .INIT(8'h40)) 
    cpldsplitcount_reg_0_3_2_2_i_2
       (.I0(cfg_dev_control_max_payload[1]),
        .I1(\length_offset_reg_n_0_[10] ),
        .I2(cpldsplitcount_reg_0_3_0_0_i_10_n_0),
        .O(\data_width_64.cpldsplitcounttemp_reg[2]_1 ));
  LUT5 #(
    .INIT(32'h707F7F7F)) 
    cpldsplitcount_reg_0_3_2_2_i_3
       (.I0(cpldsplitcount_reg_0_3_0_0_i_8_n_0),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_2 [2]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_3 ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_2 [1]),
        .O(\data_width_64.cpldsplitcounttemp_reg[2]_0 ));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    cpldsplitcount_reg_0_3_3_3
       (.A0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .A1(ctargetpipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(\length_offset_reg[11]_5 [2]),
        .DPO(p_0_out[3]),
        .DPRA0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .DPRA1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(CONV_INTEGER4_out[3]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(cpldsplitcount0_out));
  LUT6 #(
    .INIT(64'hFFD555D555D555D5)) 
    cpldsplitcount_reg_0_3_3_3_i_2
       (.I0(\length_offset_reg[2]_0 ),
        .I1(\length_offset_reg_n_0_[10] ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_3 ),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_2 [2]),
        .I5(cpldsplitcount_reg_0_3_0_0_i_10_n_0),
        .O(\data_width_64.cpldsplitcounttemp_reg[3]_0 ));
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D #(
    .INIT(32'h00000000)) 
    cpldsplitcount_reg_0_3_4_4
       (.A0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .A1(ctargetpipeline[1]),
        .A2(1'b0),
        .A3(1'b0),
        .A4(1'b0),
        .D(\length_offset_reg[11]_5 [3]),
        .DPO(p_0_out[4]),
        .DPRA0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .DPRA1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .DPRA2(1'b0),
        .DPRA3(1'b0),
        .DPRA4(1'b0),
        .SPO(CONV_INTEGER4_out[4]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(cpldsplitcount0_out));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'hEF00FFFF)) 
    cpldsplitcount_reg_0_3_4_4_i_2
       (.I0(data5__0[4]),
        .I1(data5__0[3]),
        .I2(cpldsplitcount_reg_0_3_4_4_i_3_n_0),
        .I3(data5[5]),
        .I4(cpldsplitcount_reg_0_3_4_4_i_4_n_0),
        .O(\data_width_64.cpldsplitcounttemp_reg[4]_3 ));
  LUT3 #(
    .INIT(8'h01)) 
    cpldsplitcount_reg_0_3_4_4_i_3
       (.I0(data5__0[1]),
        .I1(data5[0]),
        .I2(data5__0[2]),
        .O(cpldsplitcount_reg_0_3_4_4_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    cpldsplitcount_reg_0_3_4_4_i_4
       (.I0(data5__0[8]),
        .I1(data5__0[9]),
        .I2(data5[7]),
        .I3(data5[6]),
        .O(cpldsplitcount_reg_0_3_4_4_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT5 #(
    .INIT(32'h00000070)) 
    \cpldsplitsm[0]_i_1 
       (.I0(cfg_dev_control_max_payload[1]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(neqOp3_out),
        .I3(\length_offset_reg[6]_0 [0]),
        .I4(\length_offset_reg[6]_0 [1]),
        .O(cpldsplitsm[0]));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \cpldsplitsm[0]_i_2 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I1(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdtargetpipeline),
        .I3(ctargetpipeline[2]),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I5(ctargetpipeline[1]),
        .O(neqOp3_out));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT4 #(
    .INIT(16'h1500)) 
    \cpldsplitsm[1]_i_1 
       (.I0(\length_offset_reg[6]_0 [1]),
        .I1(cfg_dev_control_max_payload[1]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\length_offset_reg[6]_0 [0]),
        .O(cpldsplitsm[1]));
  FDRE \cpldsplitsm_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(cpldsplitsm[0]),
        .Q(\length_offset_reg[6]_0 [0]),
        .R(SR));
  FDRE \cpldsplitsm_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(cpldsplitsm[1]),
        .Q(\length_offset_reg[6]_0 [1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \cplpendcpl[0]_i_1 
       (.I0(rdreq_reg),
        .I1(axi_aresetn),
        .O(\cplpendcpl_reg[3] ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'hB8BB8B88)) 
    \ctargetpipeline[0]_i_1 
       (.I0(sig_addrstreampipeline[0]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\length_offset_reg[6]_0 [0]),
        .I3(\length_offset_reg[6]_0 [1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\ctargetpipeline[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA3AFAFA0ACA0A0)) 
    \ctargetpipeline[1]_i_1 
       (.I0(sig_addrstreampipeline[1]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I2(\ctargetpipeline[2]_i_2_n_0 ),
        .I3(\length_offset_reg[6]_0 [0]),
        .I4(\length_offset_reg[6]_0 [1]),
        .I5(ctargetpipeline[1]),
        .O(\ctargetpipeline[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8BBBFFFFB8880000)) 
    \ctargetpipeline[2]_i_1 
       (.I0(sig_addrstreampipeline[2]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I3(ctargetpipeline[1]),
        .I4(\ctargetpipeline[2]_i_3_n_0 ),
        .I5(ctargetpipeline[2]),
        .O(\ctargetpipeline[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ctargetpipeline[2]_i_2 
       (.I0(neqOp2_out),
        .I1(rdreq_reg),
        .O(\ctargetpipeline[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \ctargetpipeline[2]_i_3 
       (.I0(\ctargetpipeline[2]_i_2_n_0 ),
        .I1(\length_offset_reg[6]_0 [0]),
        .I2(\length_offset_reg[6]_0 [1]),
        .O(\ctargetpipeline[2]_i_3_n_0 ));
  FDRE \ctargetpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\ctargetpipeline[0]_i_1_n_0 ),
        .Q(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .R(SR));
  FDRE \ctargetpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\ctargetpipeline[1]_i_1_n_0 ),
        .Q(ctargetpipeline[1]),
        .R(SR));
  FDRE \ctargetpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\ctargetpipeline[2]_i_1_n_0 ),
        .Q(ctargetpipeline[2]),
        .R(SR));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][0]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [0]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [0]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [0]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [0]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][10]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [10]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [10]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [10]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [10]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [10]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][11]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [11]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [11]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [11]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [11]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [11]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][1]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [1]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [1]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [1]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [1]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][2]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [2]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [2]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [2]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [2]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [2]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][3]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [3]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [3]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [3]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [3]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [3]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][4]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [4]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [4]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [4]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [4]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [4]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][5]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [5]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [5]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [5]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [5]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [5]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][6]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [6]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [6]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [6]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [6]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [6]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][7]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [7]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [7]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [7]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [7]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [7]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][8]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [8]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [8]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [8]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [8]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [8]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlpbytecount[0,3][9]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [9]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [9]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [9]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [9]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\tlpbytecount[0]_9 [9]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \ctlpbytecount[1,3][11]_i_2 
       (.I0(R[4]),
        .I1(R[2]),
        .I2(\ctlpbytecount_reg[1,0][7]_0 ),
        .I3(R[3]),
        .I4(R[5]),
        .O(\ctlpbytecount_reg[1,0][11]_0 ));
  LUT5 #(
    .INIT(32'h00077770)) 
    \ctlpbytecount[1,3][2]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(R[0]),
        .I3(R[1]),
        .I4(R_0[2]),
        .O(\ctlpbytecount[1,0] [2]));
  LUT6 #(
    .INIT(64'h0000000777777770)) 
    \ctlpbytecount[1,3][3]_i_1 
       (.I0(cfg_dev_control_max_payload[0]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(R_0[2]),
        .I3(R[1]),
        .I4(R[0]),
        .I5(R_0[3]),
        .O(\ctlpbytecount[1,0] [3]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \ctlpbytecount[1,3][4]_i_2 
       (.I0(R_0[3]),
        .I1(R[0]),
        .I2(R[1]),
        .I3(R_0[2]),
        .I4(R_0[4]),
        .O(\ctlpbytecount_reg[1,0][4]_0 ));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \ctlpbytecount[1,3][5]_i_2 
       (.I0(R_0[4]),
        .I1(R_0[2]),
        .I2(R[1]),
        .I3(R[0]),
        .I4(R_0[3]),
        .I5(R_0[5]),
        .O(\ctlpbytecount_reg[1,0][5]_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \ctlpbytecount[1,3][7]_i_2 
       (.I0(R_0[4]),
        .I1(R_0[2]),
        .I2(R[1]),
        .I3(R[0]),
        .I4(R_0[3]),
        .I5(R_0[5]),
        .O(\ctlpbytecount_reg[1,0][7]_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \ctlpbytecount[1,3][8]_i_2 
       (.I0(R[2]),
        .I1(\ctlpbytecount_reg[1,0][7]_0 ),
        .I2(R[3]),
        .O(\ctlpbytecount_reg[1,0][8]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \ctlpbytecount[1,3][9]_i_2 
       (.I0(R[3]),
        .I1(\ctlpbytecount_reg[1,0][7]_0 ),
        .I2(R[2]),
        .I3(R[4]),
        .O(\ctlpbytecount_reg[1,0][9]_0 ));
  FDRE \ctlpbytecount_reg[0,0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [0]),
        .Q(\ctlpbytecount_reg[0,0]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [10]),
        .Q(\ctlpbytecount_reg[0,0]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [11]),
        .Q(\ctlpbytecount_reg[0,0]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [1]),
        .Q(\ctlpbytecount_reg[0,0]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [2]),
        .Q(\ctlpbytecount_reg[0,0]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [3]),
        .Q(\ctlpbytecount_reg[0,0]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [4]),
        .Q(\ctlpbytecount_reg[0,0]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [5]),
        .Q(\ctlpbytecount_reg[0,0]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [6]),
        .Q(\ctlpbytecount_reg[0,0]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [7]),
        .Q(\ctlpbytecount_reg[0,0]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [8]),
        .Q(\ctlpbytecount_reg[0,0]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\tlpbytecount[0]_9 [9]),
        .Q(\ctlpbytecount_reg[0,0]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [0]),
        .Q(\ctlpbytecount_reg[0,1]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [10]),
        .Q(\ctlpbytecount_reg[0,1]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [11]),
        .Q(\ctlpbytecount_reg[0,1]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [1]),
        .Q(\ctlpbytecount_reg[0,1]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [2]),
        .Q(\ctlpbytecount_reg[0,1]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [3]),
        .Q(\ctlpbytecount_reg[0,1]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [4]),
        .Q(\ctlpbytecount_reg[0,1]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [5]),
        .Q(\ctlpbytecount_reg[0,1]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [6]),
        .Q(\ctlpbytecount_reg[0,1]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [7]),
        .Q(\ctlpbytecount_reg[0,1]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [8]),
        .Q(\ctlpbytecount_reg[0,1]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\tlpbytecount[0]_9 [9]),
        .Q(\ctlpbytecount_reg[0,1]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [0]),
        .Q(\ctlpbytecount_reg[0,2]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [10]),
        .Q(\ctlpbytecount_reg[0,2]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [11]),
        .Q(\ctlpbytecount_reg[0,2]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [1]),
        .Q(\ctlpbytecount_reg[0,2]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [2]),
        .Q(\ctlpbytecount_reg[0,2]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [3]),
        .Q(\ctlpbytecount_reg[0,2]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [4]),
        .Q(\ctlpbytecount_reg[0,2]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [5]),
        .Q(\ctlpbytecount_reg[0,2]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [6]),
        .Q(\ctlpbytecount_reg[0,2]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [7]),
        .Q(\ctlpbytecount_reg[0,2]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [8]),
        .Q(\ctlpbytecount_reg[0,2]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\tlpbytecount[0]_9 [9]),
        .Q(\ctlpbytecount_reg[0,2]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [0]),
        .Q(\ctlpbytecount_reg[0,3]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [10]),
        .Q(\ctlpbytecount_reg[0,3]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [11]),
        .Q(\ctlpbytecount_reg[0,3]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [1]),
        .Q(\ctlpbytecount_reg[0,3]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [2]),
        .Q(\ctlpbytecount_reg[0,3]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [3]),
        .Q(\ctlpbytecount_reg[0,3]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [4]),
        .Q(\ctlpbytecount_reg[0,3]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [5]),
        .Q(\ctlpbytecount_reg[0,3]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [6]),
        .Q(\ctlpbytecount_reg[0,3]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [7]),
        .Q(\ctlpbytecount_reg[0,3]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [8]),
        .Q(\ctlpbytecount_reg[0,3]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[0,3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\tlpbytecount[0]_9 [9]),
        .Q(\ctlpbytecount_reg[0,3]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [0]),
        .Q(\ctlpbytecount_reg[1,0]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [8]),
        .Q(\ctlpbytecount_reg[1,0]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [9]),
        .Q(\ctlpbytecount_reg[1,0]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [1]),
        .Q(\ctlpbytecount_reg[1,0]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlpbytecount[1,0] [2]),
        .Q(\ctlpbytecount_reg[1,0]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlpbytecount[1,0] [3]),
        .Q(\ctlpbytecount_reg[1,0]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [2]),
        .Q(\ctlpbytecount_reg[1,0]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [3]),
        .Q(\ctlpbytecount_reg[1,0]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [4]),
        .Q(\ctlpbytecount_reg[1,0]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [5]),
        .Q(\ctlpbytecount_reg[1,0]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [6]),
        .Q(\ctlpbytecount_reg[1,0]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [7]),
        .Q(\ctlpbytecount_reg[1,0]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [0]),
        .Q(\ctlpbytecount_reg[1,1]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [8]),
        .Q(\ctlpbytecount_reg[1,1]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [9]),
        .Q(\ctlpbytecount_reg[1,1]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [1]),
        .Q(\ctlpbytecount_reg[1,1]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlpbytecount[1,0] [2]),
        .Q(\ctlpbytecount_reg[1,1]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlpbytecount[1,0] [3]),
        .Q(\ctlpbytecount_reg[1,1]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [2]),
        .Q(\ctlpbytecount_reg[1,1]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [3]),
        .Q(\ctlpbytecount_reg[1,1]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [4]),
        .Q(\ctlpbytecount_reg[1,1]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [5]),
        .Q(\ctlpbytecount_reg[1,1]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [6]),
        .Q(\ctlpbytecount_reg[1,1]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [7]),
        .Q(\ctlpbytecount_reg[1,1]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [0]),
        .Q(\ctlpbytecount_reg[1,2]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [8]),
        .Q(\ctlpbytecount_reg[1,2]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [9]),
        .Q(\ctlpbytecount_reg[1,2]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [1]),
        .Q(\ctlpbytecount_reg[1,2]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlpbytecount[1,0] [2]),
        .Q(\ctlpbytecount_reg[1,2]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlpbytecount[1,0] [3]),
        .Q(\ctlpbytecount_reg[1,2]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [2]),
        .Q(\ctlpbytecount_reg[1,2]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [3]),
        .Q(\ctlpbytecount_reg[1,2]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [4]),
        .Q(\ctlpbytecount_reg[1,2]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [5]),
        .Q(\ctlpbytecount_reg[1,2]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [6]),
        .Q(\ctlpbytecount_reg[1,2]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [7]),
        .Q(\ctlpbytecount_reg[1,2]__0 [9]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [0]),
        .Q(\ctlpbytecount_reg[1,3]__0 [0]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [8]),
        .Q(\ctlpbytecount_reg[1,3]__0 [10]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [9]),
        .Q(\ctlpbytecount_reg[1,3]__0 [11]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [1]),
        .Q(\ctlpbytecount_reg[1,3]__0 [1]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlpbytecount[1,0] [2]),
        .Q(\ctlpbytecount_reg[1,3]__0 [2]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlpbytecount[1,0] [3]),
        .Q(\ctlpbytecount_reg[1,3]__0 [3]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [2]),
        .Q(\ctlpbytecount_reg[1,3]__0 [4]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [3]),
        .Q(\ctlpbytecount_reg[1,3]__0 [5]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [4]),
        .Q(\ctlpbytecount_reg[1,3]__0 [6]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [5]),
        .Q(\ctlpbytecount_reg[1,3]__0 [7]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [6]),
        .Q(\ctlpbytecount_reg[1,3]__0 [8]),
        .R(1'b0));
  FDRE \ctlpbytecount_reg[1,3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_2 [7]),
        .Q(\ctlpbytecount_reg[1,3]__0 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \ctlplength[0,3][0]_i_1 
       (.I0(data5[0]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\ctlplength[0,0] [0]),
        .O(\ctlplength[0,3][0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][0]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [0]),
        .I1(\data_width_64.tlplength_reg[1]_14 [0]),
        .I2(\data_width_64.tlplength_reg[2]_15 [0]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5[0]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][0]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(R_0[2]),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[0]),
        .O(\ctlplength[0,0] [0]));
  LUT4 #(
    .INIT(16'hBF80)) 
    \ctlplength[0,3][1]_i_1 
       (.I0(data5__0[1]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\ctlplength[0,0] [1]),
        .O(\ctlplength[0,3][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][1]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [1]),
        .I1(\data_width_64.tlplength_reg[1]_14 [1]),
        .I2(\data_width_64.tlplength_reg[2]_15 [1]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5__0[1]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][1]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][1]_i_4_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[1]),
        .O(\ctlplength[0,0] [1]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ctlplength[0,3][1]_i_4 
       (.I0(R_0[2]),
        .I1(R_0[3]),
        .O(\ctlplength[0,3][1]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hBF80)) 
    \ctlplength[0,3][2]_i_1 
       (.I0(data5__0[2]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\ctlplength[0,0] [2]),
        .O(\ctlplength[0,3][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][2]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [2]),
        .I1(\data_width_64.tlplength_reg[1]_14 [2]),
        .I2(\data_width_64.tlplength_reg[2]_15 [2]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [2]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5__0[2]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][2]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][2]_i_4_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[2]),
        .O(\ctlplength[0,0] [2]));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \ctlplength[0,3][2]_i_4 
       (.I0(R_0[2]),
        .I1(R_0[3]),
        .I2(R_0[4]),
        .O(\ctlplength[0,3][2]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hBF80)) 
    \ctlplength[0,3][3]_i_1 
       (.I0(data5__0[3]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\ctlplength[0,0] [3]),
        .O(\ctlplength[0,3][3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][3]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [3]),
        .I1(\data_width_64.tlplength_reg[1]_14 [3]),
        .I2(\data_width_64.tlplength_reg[2]_15 [3]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [3]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5__0[3]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][3]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][3]_i_4_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[3]),
        .O(\ctlplength[0,0] [3]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT4 #(
    .INIT(16'h01FE)) 
    \ctlplength[0,3][3]_i_4 
       (.I0(R_0[4]),
        .I1(R_0[3]),
        .I2(R_0[2]),
        .I3(R_0[5]),
        .O(\ctlplength[0,3][3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hBF80)) 
    \ctlplength[0,3][4]_i_1 
       (.I0(data5__0[4]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\ctlplength[0,0] [4]),
        .O(\ctlplength[0,3][4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][4]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [4]),
        .I1(\data_width_64.tlplength_reg[1]_14 [4]),
        .I2(\data_width_64.tlplength_reg[2]_15 [4]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [4]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5__0[4]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][4]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][4]_i_4_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[4]),
        .O(\ctlplength[0,0] [4]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \ctlplength[0,3][4]_i_4 
       (.I0(R_0[5]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(R_0[4]),
        .I4(R[2]),
        .O(\ctlplength[0,3][4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBB88FF03BB88FC00)) 
    \ctlplength[0,3][5]_i_1 
       (.I0(data5[5]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\ctlplength[0,3][5]_i_3_n_0 ),
        .I4(cfg_dev_control_max_payload[0]),
        .I5(\ctlplength[0,0] [5]),
        .O(\ctlplength[0,3][5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][5]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [5]),
        .I1(\data_width_64.tlplength_reg[1]_14 [5]),
        .I2(\data_width_64.tlplength_reg[2]_15 [5]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [5]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5[5]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][5]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][5]_i_5_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[5]),
        .O(\ctlplength[0,3][5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][5]_i_4 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][5]_i_6_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[5]),
        .O(\ctlplength[0,0] [5]));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \ctlplength[0,3][5]_i_5 
       (.I0(R[2]),
        .I1(R_0[4]),
        .I2(R_0[3]),
        .I3(R_0[2]),
        .I4(R_0[5]),
        .I5(R[3]),
        .O(\ctlplength[0,3][5]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \ctlplength[0,3][5]_i_6 
       (.I0(R_0[5]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(R_0[4]),
        .I4(R[2]),
        .O(\ctlplength[0,3][5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBF80BF8FBF80B080)) 
    \ctlplength[0,3][6]_i_1 
       (.I0(data5[6]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\ctlplength[0,3][6]_i_3_n_0 ),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\ctlplength_reg[0,3][6]_i_4_n_0 ),
        .O(\ctlplength[0,3][6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][6]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [6]),
        .I1(\data_width_64.tlplength_reg[1]_14 [6]),
        .I2(\data_width_64.tlplength_reg[2]_15 [6]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [6]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5[6]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][6]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][6]_i_5_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[6]),
        .O(\ctlplength[0,3][6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair592" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \ctlplength[0,3][6]_i_5 
       (.I0(\ctlplength[0,3][9]_i_8_n_0 ),
        .I1(R[4]),
        .O(\ctlplength[0,3][6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \ctlplength[0,3][6]_i_6 
       (.I0(CONV_INTEGER4_out[3]),
        .I1(CONV_INTEGER4_out[0]),
        .I2(data5[6]),
        .I3(CONV_INTEGER4_out[2]),
        .I4(CONV_INTEGER4_out[1]),
        .I5(CONV_INTEGER4_out[4]),
        .O(\ctlplength[0,3][6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][6]_i_7 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][9]_i_8_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[6]),
        .O(\ctlplength[0,3][6]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \ctlplength[0,3][7]_i_1 
       (.I0(data5[7]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\ctlplength[0,3][7]_i_3_n_0 ),
        .I3(cfg_dev_control_max_payload[2]),
        .I4(\ctlplength[0,3][7]_i_4_n_0 ),
        .O(\ctlplength[0,3][7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][7]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [7]),
        .I1(\data_width_64.tlplength_reg[1]_14 [7]),
        .I2(\data_width_64.tlplength_reg[2]_15 [7]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [7]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5[7]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][7]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][7]_i_5_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[7]),
        .O(\ctlplength[0,3][7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \ctlplength[0,3][7]_i_4 
       (.I0(\ctlplength[0,3][7]_i_3_n_0 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\ctlplength[0,3][7]_i_6_n_0 ),
        .I3(cfg_dev_control_max_payload[1]),
        .I4(\ctlplength[0,3][7]_i_7_n_0 ),
        .O(\ctlplength[0,3][7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair581" *) 
  LUT3 #(
    .INIT(8'h4B)) 
    \ctlplength[0,3][7]_i_5 
       (.I0(R[4]),
        .I1(\ctlplength[0,3][9]_i_8_n_0 ),
        .I2(R[5]),
        .O(\ctlplength[0,3][7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][7]_i_6 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][7]_i_8_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5[7]),
        .O(\ctlplength[0,3][7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \ctlplength[0,3][7]_i_7 
       (.I0(CONV_INTEGER4_out[3]),
        .I1(CONV_INTEGER4_out[0]),
        .I2(data5[7]),
        .I3(CONV_INTEGER4_out[2]),
        .I4(CONV_INTEGER4_out[1]),
        .I5(CONV_INTEGER4_out[4]),
        .O(\ctlplength[0,3][7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair592" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \ctlplength[0,3][7]_i_8 
       (.I0(\ctlplength[0,3][9]_i_8_n_0 ),
        .I1(R[4]),
        .O(\ctlplength[0,3][7]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \ctlplength[0,3][8]_i_1 
       (.I0(data5__0[8]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\ctlplength[0,3][8]_i_3_n_0 ),
        .I3(cfg_dev_control_max_payload[2]),
        .I4(\ctlplength[0,3][8]_i_4_n_0 ),
        .O(\ctlplength[0,3][8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][8]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [8]),
        .I1(\data_width_64.tlplength_reg[1]_14 [8]),
        .I2(\data_width_64.tlplength_reg[2]_15 [8]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [8]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5__0[8]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][8]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][8]_i_5_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[8]),
        .O(\ctlplength[0,3][8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hBF80)) 
    \ctlplength[0,3][8]_i_4 
       (.I0(\ctlplength[0,3][8]_i_6_n_0 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(\ctlplength[0,3][8]_i_7_n_0 ),
        .O(\ctlplength[0,3][8]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT4 #(
    .INIT(16'h04FB)) 
    \ctlplength[0,3][8]_i_5 
       (.I0(R[5]),
        .I1(\ctlplength[0,3][9]_i_8_n_0 ),
        .I2(R[4]),
        .I3(R[6]),
        .O(\ctlplength[0,3][8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][8]_i_6 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][8]_i_8_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[8]),
        .O(\ctlplength[0,3][8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \ctlplength[0,3][8]_i_7 
       (.I0(CONV_INTEGER4_out[3]),
        .I1(CONV_INTEGER4_out[0]),
        .I2(data5__0[8]),
        .I3(CONV_INTEGER4_out[2]),
        .I4(CONV_INTEGER4_out[1]),
        .I5(CONV_INTEGER4_out[4]),
        .O(\ctlplength[0,3][8]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair581" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \ctlplength[0,3][8]_i_8 
       (.I0(R[4]),
        .I1(\ctlplength[0,3][9]_i_8_n_0 ),
        .I2(R[5]),
        .O(\ctlplength[0,3][8]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \ctlplength[0,3][9]_i_1 
       (.I0(data5__0[9]),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\ctlplength[0,3][9]_i_3_n_0 ),
        .I3(cfg_dev_control_max_payload[2]),
        .I4(\ctlplength[0,3][9]_i_4_n_0 ),
        .O(\ctlplength[0,3][9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \ctlplength[0,3][9]_i_2 
       (.I0(\data_width_64.tlplength_reg[3]_16 [9]),
        .I1(\data_width_64.tlplength_reg[1]_14 [9]),
        .I2(\data_width_64.tlplength_reg[2]_15 [9]),
        .I3(ctargetpipeline[1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [9]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(data5__0[9]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \ctlplength[0,3][9]_i_3 
       (.I0(CONV_INTEGER4_out[4]),
        .I1(CONV_INTEGER4_out[3]),
        .I2(\ctlplength[0,3][9]_i_5_n_0 ),
        .I3(\ctlplength[0,3][9]_i_6_n_0 ),
        .I4(\ctlplength[0,3][9]_i_7_n_0 ),
        .I5(data5__0[9]),
        .O(\ctlplength[0,3][9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \ctlplength[0,3][9]_i_4 
       (.I0(CONV_INTEGER4_out[3]),
        .I1(CONV_INTEGER4_out[0]),
        .I2(data5__0[9]),
        .I3(CONV_INTEGER4_out[2]),
        .I4(CONV_INTEGER4_out[1]),
        .I5(CONV_INTEGER4_out[4]),
        .O(\ctlplength[0,3][9]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair576" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \ctlplength[0,3][9]_i_5 
       (.I0(CONV_INTEGER4_out[1]),
        .I1(CONV_INTEGER4_out[2]),
        .O(\ctlplength[0,3][9]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \ctlplength[0,3][9]_i_6 
       (.I0(R[5]),
        .I1(\ctlplength[0,3][9]_i_8_n_0 ),
        .I2(R[4]),
        .I3(R[6]),
        .O(\ctlplength[0,3][9]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair576" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \ctlplength[0,3][9]_i_7 
       (.I0(CONV_INTEGER4_out[2]),
        .I1(CONV_INTEGER4_out[1]),
        .I2(CONV_INTEGER4_out[0]),
        .O(\ctlplength[0,3][9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \ctlplength[0,3][9]_i_8 
       (.I0(R[2]),
        .I1(R_0[4]),
        .I2(R_0[3]),
        .I3(R_0[2]),
        .I4(R_0[5]),
        .I5(R[3]),
        .O(\ctlplength[0,3][9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \ctlplength[1,0][8]_i_1 
       (.I0(axi_aresetn),
        .I1(ctargetpipeline[1]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I3(\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .I4(\length_offset_reg[6]_0 [0]),
        .I5(\length_offset_reg[6]_0 [1]),
        .O(\ctlplength_reg[2,0][0]_0 ));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \ctlplength[1,1][8]_i_1 
       (.I0(axi_aresetn),
        .I1(\length_offset_reg[6]_0 [1]),
        .I2(ctargetpipeline[1]),
        .I3(\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I5(\length_offset_reg[6]_0 [0]),
        .O(\ctlplength_reg[2,1][0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    \ctlplength[1,2][8]_i_1 
       (.I0(axi_aresetn),
        .I1(\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .I2(ctargetpipeline[1]),
        .I3(\length_offset_reg[6]_0 [0]),
        .I4(\length_offset_reg[6]_0 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .O(\ctlplength_reg[2,2][0]_0 ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \ctlplength[1,3][8]_i_1 
       (.I0(axi_aresetn),
        .I1(\pipe_stages_1.pipe_rx_chanisaligned_q_reg ),
        .I2(\length_offset_reg[6]_0 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I4(ctargetpipeline[1]),
        .I5(\length_offset_reg[6]_0 [0]),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair612" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ctlplength[2,3][0]_i_1 
       (.I0(L_1[0]),
        .O(\ctlplength[2,3][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair612" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ctlplength[2,3][1]_i_1 
       (.I0(L_1[0]),
        .I1(L_1[1]),
        .O(p_0_in1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair529" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \ctlplength[2,3][2]_i_1 
       (.I0(L_1[0]),
        .I1(L_1[1]),
        .I2(L_1[2]),
        .O(p_0_in1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair529" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \ctlplength[2,3][3]_i_1 
       (.I0(L_1[1]),
        .I1(L_1[0]),
        .I2(L_1[2]),
        .I3(L_1[3]),
        .O(p_0_in1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \ctlplength[2,3][4]_i_1 
       (.I0(L_1[2]),
        .I1(L_1[0]),
        .I2(L_1[1]),
        .I3(L_1[3]),
        .I4(L_1[4]),
        .O(p_0_in1_in[4]));
  LUT6 #(
    .INIT(64'h5FA05FA05FA08080)) 
    \ctlplength[2,3][6]_i_1 
       (.I0(\ctlplength_reg[2,0][6]_0 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_2 [0]),
        .I3(\length_offset_reg_n_0_[8] ),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(cfg_dev_control_max_payload[2]),
        .O(p_0_in1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \ctlplength[2,3][6]_i_2 
       (.I0(L_1[4]),
        .I1(L_1[2]),
        .I2(L_1[0]),
        .I3(L_1[1]),
        .I4(L_1[3]),
        .O(\ctlplength_reg[2,0][6]_0 ));
  LUT6 #(
    .INIT(64'h5F5FA0A080008000)) 
    \ctlplength[2,3][8]_i_1 
       (.I0(\ctlplength_reg[2,0][9]_0 ),
        .I1(cfg_dev_control_max_payload[1]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_2 [1]),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(\length_offset_reg_n_0_[10] ),
        .I5(cfg_dev_control_max_payload[2]),
        .O(p_0_in1_in[8]));
  LUT4 #(
    .INIT(16'h8000)) 
    \ctlplength[2,3][9]_i_2 
       (.I0(\length_offset_reg_n_0_[10] ),
        .I1(\ctlplength_reg[2,0][9]_0 ),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_2 [1]),
        .O(p_0_in1_in[9]));
  LUT5 #(
    .INIT(32'h88800000)) 
    \ctlplength[2,3][9]_i_3 
       (.I0(\length_offset_reg_n_0_[8] ),
        .I1(\ctlplength_reg[2,0][6]_0 ),
        .I2(cfg_dev_control_max_payload[2]),
        .I3(cfg_dev_control_max_payload[1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_2 [0]),
        .O(\ctlplength_reg[2,0][9]_0 ));
  FDRE \ctlplength_reg[0,0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [0]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][1]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [1]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][2]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [2]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][3]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [3]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][4]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [4]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][5]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][6]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][7]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][8]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[0,3][9]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,0]__0 [9]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [0]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][1]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [1]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][2]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [2]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][3]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [3]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][4]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [4]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][5]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][6]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][7]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][8]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[0,3][9]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,1]__0 [9]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [0]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][1]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [1]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][2]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [2]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][3]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [3]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][4]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [4]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][5]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][6]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][7]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][8]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[0,3][9]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,2]__0 [9]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [0]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][1]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [1]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][2]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [2]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][3]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [3]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][4]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [4]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][5]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][6]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [6]),
        .R(1'b0));
  MUXF7 \ctlplength_reg[0,3][6]_i_4 
       (.I0(\ctlplength[0,3][6]_i_6_n_0 ),
        .I1(\ctlplength[0,3][6]_i_7_n_0 ),
        .O(\ctlplength_reg[0,3][6]_i_4_n_0 ),
        .S(cfg_dev_control_max_payload[0]));
  FDRE \ctlplength_reg[0,3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][7]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][8]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[0,3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[0,3][9]_i_1_n_0 ),
        .Q(\ctlplength_reg[0,3]__0 [9]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [0]),
        .Q(\ctlplength_reg[1,0]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [1]),
        .Q(\ctlplength_reg[1,0]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [2]),
        .Q(\ctlplength_reg[1,0]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [3]),
        .Q(\ctlplength_reg[1,0]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [0]),
        .Q(\ctlplength_reg[1,1]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [1]),
        .Q(\ctlplength_reg[1,1]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [2]),
        .Q(\ctlplength_reg[1,1]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [3]),
        .Q(\ctlplength_reg[1,1]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [0]),
        .Q(\ctlplength_reg[1,2]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [1]),
        .Q(\ctlplength_reg[1,2]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [2]),
        .Q(\ctlplength_reg[1,2]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [3]),
        .Q(\ctlplength_reg[1,2]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [0]),
        .Q(\ctlplength_reg[1,3]__0 [5]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [1]),
        .Q(\ctlplength_reg[1,3]__0 [6]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [2]),
        .Q(\ctlplength_reg[1,3]__0 [7]),
        .R(1'b0));
  FDRE \ctlplength_reg[1,3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_0 [3]),
        .Q(\ctlplength_reg[1,3]__0 [8]),
        .R(1'b0));
  FDRE \ctlplength_reg[2,0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\ctlplength[2,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[2,0]__0 [0]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[1]),
        .Q(\ctlplength_reg[2,0]__0 [1]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[2]),
        .Q(\ctlplength_reg[2,0]__0 [2]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[3]),
        .Q(\ctlplength_reg[2,0]__0 [3]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[4]),
        .Q(\ctlplength_reg[2,0]__0 [4]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\length_offset_reg[9]_4 [0]),
        .Q(\ctlplength_reg[2,0]__0 [5]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[6]),
        .Q(\ctlplength_reg[2,0]__0 [6]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(\length_offset_reg[9]_4 [1]),
        .Q(\ctlplength_reg[2,0]__0 [7]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[8]),
        .Q(\ctlplength_reg[2,0]__0 [8]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,0][0]_0 ),
        .D(p_0_in1_in[9]),
        .Q(\ctlplength_reg[2,0]__0 [9]),
        .R(\ctargetpipeline_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\ctlplength[2,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[2,1]__0 [0]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[1]),
        .Q(\ctlplength_reg[2,1]__0 [1]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[2]),
        .Q(\ctlplength_reg[2,1]__0 [2]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[3]),
        .Q(\ctlplength_reg[2,1]__0 [3]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[4]),
        .Q(\ctlplength_reg[2,1]__0 [4]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\length_offset_reg[9]_4 [0]),
        .Q(\ctlplength_reg[2,1]__0 [5]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[6]),
        .Q(\ctlplength_reg[2,1]__0 [6]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(\length_offset_reg[9]_4 [1]),
        .Q(\ctlplength_reg[2,1]__0 [7]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[8]),
        .Q(\ctlplength_reg[2,1]__0 [8]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,1][0]_0 ),
        .D(p_0_in1_in[9]),
        .Q(\ctlplength_reg[2,1]__0 [9]),
        .R(\cpldsplitsm_reg[1]_1 ));
  FDRE \ctlplength_reg[2,2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\ctlplength[2,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[2,2]__0 [0]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[1]),
        .Q(\ctlplength_reg[2,2]__0 [1]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[2]),
        .Q(\ctlplength_reg[2,2]__0 [2]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[3]),
        .Q(\ctlplength_reg[2,2]__0 [3]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[4]),
        .Q(\ctlplength_reg[2,2]__0 [4]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\length_offset_reg[9]_4 [0]),
        .Q(\ctlplength_reg[2,2]__0 [5]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[6]),
        .Q(\ctlplength_reg[2,2]__0 [6]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(\length_offset_reg[9]_4 [1]),
        .Q(\ctlplength_reg[2,2]__0 [7]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[8]),
        .Q(\ctlplength_reg[2,2]__0 [8]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\ctlplength_reg[2,2][0]_0 ),
        .D(p_0_in1_in[9]),
        .Q(\ctlplength_reg[2,2]__0 [9]),
        .R(\ctargetpipeline_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\ctlplength[2,3][0]_i_1_n_0 ),
        .Q(\ctlplength_reg[2,3]__0 [0]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[1]),
        .Q(\ctlplength_reg[2,3]__0 [1]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[2]),
        .Q(\ctlplength_reg[2,3]__0 [2]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[3]),
        .Q(\ctlplength_reg[2,3]__0 [3]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[4]),
        .Q(\ctlplength_reg[2,3]__0 [4]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\length_offset_reg[9]_4 [0]),
        .Q(\ctlplength_reg[2,3]__0 [5]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[6]),
        .Q(\ctlplength_reg[2,3]__0 [6]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\length_offset_reg[9]_4 [1]),
        .Q(\ctlplength_reg[2,3]__0 [7]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[8]),
        .Q(\ctlplength_reg[2,3]__0 [8]),
        .R(\cpldsplitsm_reg[1]_0 ));
  FDRE \ctlplength_reg[2,3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_0_in1_in[9]),
        .Q(\ctlplength_reg[2,3]__0 [9]),
        .R(\cpldsplitsm_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h8080800000000000)) 
    \data_width_64.badreadreq_i_3 
       (.I0(\data_width_64.tagsig_reg[0]_1 ),
        .I1(rdreq_reg),
        .I2(neqOp57_in),
        .I3(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .I4(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I5(s_axis_cr_tready_sig106_out),
        .O(\data_width_64.zerolenreadreq_reg_0 ));
  LUT5 #(
    .INIT(32'h38080808)) 
    \data_width_64.badreadreq_i_4 
       (.I0(badreadreq),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(rdreq_reg),
        .I4(neqOp57_in),
        .O(\data_width_64.badreadreq_reg_0 ));
  FDRE \data_width_64.badreadreq_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig_reg[1]_0 ),
        .Q(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.corruptdataflush_i_2 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .O(\data_width_64.corruptdataflush_reg_2 ));
  LUT6 #(
    .INIT(64'h8B88888888888888)) 
    \data_width_64.corruptdataflush_i_3 
       (.I0(\data_width_64.corruptdataflush_i_4_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(p_76_out),
        .I4(rdreq_reg),
        .I5(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .O(\data_width_64.corruptdataflush_reg_1 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \data_width_64.corruptdataflush_i_4 
       (.I0(\data_width_64.lnkdowndataflush_reg_0 ),
        .I1(emptysig),
        .I2(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.corruptdataflush_i_4_n_0 ));
  FDRE \data_width_64.corruptdataflush_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(empty_fwft_i_reg),
        .Q(\data_width_64.corruptdataflush_reg_0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair562" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.cplcounter[0]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cplcounter_reg_n_0_[0] ),
        .O(\data_width_64.cplcounter[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair562" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \data_width_64.cplcounter[1]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cplcounter_reg_n_0_[1] ),
        .I2(\data_width_64.cplcounter_reg_n_0_[0] ),
        .O(\data_width_64.cplcounter[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \data_width_64.cplcounter[2]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cplcounter_reg_n_0_[2] ),
        .I2(\data_width_64.cplcounter_reg_n_0_[1] ),
        .I3(\data_width_64.cplcounter_reg_n_0_[0] ),
        .O(\data_width_64.cplcounter[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \data_width_64.cplcounter[3]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cplcounter_reg_n_0_[3] ),
        .I2(\data_width_64.cplcounter_reg_n_0_[2] ),
        .I3(\data_width_64.cplcounter_reg_n_0_[0] ),
        .I4(\data_width_64.cplcounter_reg_n_0_[1] ),
        .O(\data_width_64.cplcounter[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.cplcounter[4]_i_1 
       (.I0(\data_width_64.linkdownflushdepth_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.cplcounter[4]_i_4_n_0 ),
        .O(ctlplengthtemp));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \data_width_64.cplcounter[4]_i_2 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cplcounter_reg_n_0_[4] ),
        .I2(\data_width_64.cplcounter_reg_n_0_[3] ),
        .I3(\data_width_64.cplcounter_reg_n_0_[1] ),
        .I4(\data_width_64.cplcounter_reg_n_0_[0] ),
        .I5(\data_width_64.cplcounter_reg_n_0_[2] ),
        .O(\data_width_64.cplcounter[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \data_width_64.cplcounter[4]_i_3 
       (.I0(\data_width_64.rdtlpaddrltemp_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .O(\data_width_64.linkdownflushdepth_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.cplcounter[4]_i_4 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(sig_m_axis_cc_tready),
        .I3(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ),
        .I4(\data_width_64.dis_rden_reg_1 ),
        .O(\data_width_64.cplcounter[4]_i_4_n_0 ));
  FDRE \data_width_64.cplcounter_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.cplcounter[0]_i_1_n_0 ),
        .Q(\data_width_64.cplcounter_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.cplcounter_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.cplcounter[1]_i_1_n_0 ),
        .Q(\data_width_64.cplcounter_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.cplcounter_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.cplcounter[2]_i_1_n_0 ),
        .Q(\data_width_64.cplcounter_reg_n_0_[2] ),
        .R(SR));
  FDRE \data_width_64.cplcounter_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.cplcounter[3]_i_1_n_0 ),
        .Q(\data_width_64.cplcounter_reg_n_0_[3] ),
        .R(SR));
  FDRE \data_width_64.cplcounter_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.cplcounter[4]_i_2_n_0 ),
        .Q(\data_width_64.cplcounter_reg_n_0_[4] ),
        .R(SR));
  LUT4 #(
    .INIT(16'h1000)) 
    \data_width_64.cpldsplitcounttemp[4]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.rdtlpaddrltemp_reg[0]_0 ),
        .O(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \data_width_64.cpldsplitcounttemp[4]_i_2 
       (.I0(\data_width_64.cpldsplitcounttemp[4]_i_3_n_0 ),
        .I1(rdreq_reg),
        .I2(neqOp2_out),
        .O(\data_width_64.rdtlpaddrltemp_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \data_width_64.cpldsplitcounttemp[4]_i_3 
       (.I0(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(cplndtargetpipeline),
        .I3(rdndtargetpipeline[2]),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I5(rdndtargetpipeline[0]),
        .O(\data_width_64.cpldsplitcounttemp[4]_i_3_n_0 ));
  FDRE \data_width_64.cpldsplitcounttemp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(p_0_out[0]),
        .Q(cpldsplitcounttemp[0]),
        .R(SR));
  FDRE \data_width_64.cpldsplitcounttemp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(p_0_out[1]),
        .Q(cpldsplitcounttemp[1]),
        .R(SR));
  FDRE \data_width_64.cpldsplitcounttemp_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(p_0_out[2]),
        .Q(cpldsplitcounttemp[2]),
        .R(SR));
  FDRE \data_width_64.cpldsplitcounttemp_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(p_0_out[3]),
        .Q(cpldsplitcounttemp[3]),
        .R(SR));
  FDRE \data_width_64.cpldsplitcounttemp_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(p_0_out[4]),
        .Q(cpldsplitcounttemp[4]),
        .R(SR));
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.cplndpendcpl[0]_i_1 
       (.I0(axi_aresetn),
        .I1(rdreq_reg),
        .O(\data_width_64.cplndpendcpl[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    \data_width_64.cplndpendcpl[0]_i_2 
       (.I0(p_14_out),
        .I1(neqOp0_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I4(cplndpendcpl[0]),
        .O(\data_width_64.cplndpendcpl[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFBFF0800)) 
    \data_width_64.cplndpendcpl[1]_i_1 
       (.I0(p_14_out),
        .I1(neqOp0_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I4(cplndpendcpl[1]),
        .O(\data_width_64.cplndpendcpl[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFBFF0800)) 
    \data_width_64.cplndpendcpl[2]_i_1 
       (.I0(p_14_out),
        .I1(neqOp0_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I4(cplndpendcpl[2]),
        .O(\data_width_64.cplndpendcpl[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \data_width_64.cplndpendcpl[3]_i_1 
       (.I0(p_14_out),
        .I1(neqOp0_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I4(cplndpendcpl[3]),
        .O(\data_width_64.cplndpendcpl[3]_i_1_n_0 ));
  FDRE \data_width_64.cplndpendcpl_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndpendcpl[0]_i_2_n_0 ),
        .Q(cplndpendcpl[0]),
        .R(\data_width_64.cplndpendcpl[0]_i_1_n_0 ));
  FDRE \data_width_64.cplndpendcpl_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndpendcpl[1]_i_1_n_0 ),
        .Q(cplndpendcpl[1]),
        .R(\data_width_64.cplndpendcpl[0]_i_1_n_0 ));
  FDRE \data_width_64.cplndpendcpl_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndpendcpl[2]_i_1_n_0 ),
        .Q(cplndpendcpl[2]),
        .R(\data_width_64.cplndpendcpl[0]_i_1_n_0 ));
  FDRE \data_width_64.cplndpendcpl_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndpendcpl[3]_i_1_n_0 ),
        .Q(cplndpendcpl[3]),
        .R(\data_width_64.cplndpendcpl[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.cplndstatuscode[0][0]_i_1 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.cplndstatuscode_reg[0][2]_0 [0]),
        .O(cplndstatuscode0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair568" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \data_width_64.cplndstatuscode[0][1]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[0][2]_0 [1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(\data_width_64.cplndstatuscode[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair588" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \data_width_64.cplndstatuscode[0][2]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[0][2]_0 [2]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(\data_width_64.cplndstatuscode[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair512" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.cplndstatuscode[1][0]_i_1 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.cplndstatuscode_reg[1][2]_0 [0]),
        .O(cplndstatuscode0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair557" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    \data_width_64.cplndstatuscode[1][1]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[1][2]_0 [1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(cplndstatuscode0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair568" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    \data_width_64.cplndstatuscode[1][2]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[1][2]_0 [2]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(cplndstatuscode0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair512" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.cplndstatuscode[2][0]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[2][2]_0 [0]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .O(cplndstatuscode0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair560" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    \data_width_64.cplndstatuscode[2][1]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[2][2]_0 [1]),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(cplndstatuscode0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair559" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    \data_width_64.cplndstatuscode[2][2]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[2][2]_0 [2]),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(cplndstatuscode0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.cplndstatuscode[3][0]_i_1 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.cplndstatuscode_reg[3][2]_0 [0]),
        .O(cplndstatuscode0_in[0]));
  LUT3 #(
    .INIT(8'h2A)) 
    \data_width_64.cplndstatuscode[3][1]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[3][2]_0 [1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(\data_width_64.cplndstatuscode[3][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \data_width_64.cplndstatuscode[3][2]_i_1 
       (.I0(rdreq_reg),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.wrpendflush[3][3]_i_3_n_0 ),
        .I3(axi_aresetn),
        .I4(neqOp57_in),
        .I5(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .O(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair588" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \data_width_64.cplndstatuscode[3][2]_i_2 
       (.I0(\data_width_64.cplndstatuscode_reg[3][2]_0 [2]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(\data_width_64.cplndstatuscode[3][2]_i_2_n_0 ));
  FDRE \data_width_64.cplndstatuscode_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[9]),
        .Q(\data_width_64.cplndstatuscode_reg[0][2]_0 [0]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(\data_width_64.cplndstatuscode[0][1]_i_1_n_0 ),
        .Q(\data_width_64.cplndstatuscode_reg[0][2]_0 [1]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(\data_width_64.cplndstatuscode[0][2]_i_1_n_0 ),
        .Q(\data_width_64.cplndstatuscode_reg[0][2]_0 [2]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[6]),
        .Q(\data_width_64.cplndstatuscode_reg[1][2]_0 [0]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[7]),
        .Q(\data_width_64.cplndstatuscode_reg[1][2]_0 [1]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[8]),
        .Q(\data_width_64.cplndstatuscode_reg[1][2]_0 [2]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[3]),
        .Q(\data_width_64.cplndstatuscode_reg[2][2]_0 [0]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[4]),
        .Q(\data_width_64.cplndstatuscode_reg[2][2]_0 [1]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[5]),
        .Q(\data_width_64.cplndstatuscode_reg[2][2]_0 [2]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(cplndstatuscode0_in[0]),
        .Q(\data_width_64.cplndstatuscode_reg[3][2]_0 [0]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(\data_width_64.cplndstatuscode[3][1]_i_1_n_0 ),
        .Q(\data_width_64.cplndstatuscode_reg[3][2]_0 [1]),
        .R(1'b0));
  FDRE \data_width_64.cplndstatuscode_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndstatuscode[3][2]_i_1_n_0 ),
        .D(\data_width_64.cplndstatuscode[3][2]_i_2_n_0 ),
        .Q(\data_width_64.cplndstatuscode_reg[3][2]_0 [2]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'h0BFBF404)) 
    \data_width_64.cplndtargetpipeline[0]_i_1 
       (.I0(rdreq_reg),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .I3(sig_m_axis_cc_tready),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .O(\data_width_64.cplndtargetpipeline[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F757F80808A80)) 
    \data_width_64.cplndtargetpipeline[1]_i_1 
       (.I0(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I1(sig_m_axis_cc_tready),
        .I2(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .I3(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I4(rdreq_reg),
        .I5(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .O(\data_width_64.cplndtargetpipeline[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.cplndtargetpipeline[2]_i_1 
       (.I0(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I1(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I2(\data_width_64.rdndreqpipelinedecr_i_1_n_0 ),
        .I3(cplndtargetpipeline),
        .O(\data_width_64.cplndtargetpipeline[2]_i_1_n_0 ));
  FDRE \data_width_64.cplndtargetpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndtargetpipeline[0]_i_1_n_0 ),
        .Q(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .R(SR));
  FDRE \data_width_64.cplndtargetpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndtargetpipeline[1]_i_1_n_0 ),
        .Q(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .R(SR));
  FDRE \data_width_64.cplndtargetpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndtargetpipeline[2]_i_1_n_0 ),
        .Q(cplndtargetpipeline),
        .R(SR));
  LUT6 #(
    .INIT(64'h4000AAAA0000AAAA)) 
    \data_width_64.cplndtlpsmsig[1]_i_1 
       (.I0(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(rdreq_reg),
        .I3(p_17_in),
        .I4(sig_m_axis_cc_tready),
        .I5(s_axis_cc_tvalid_q_reg),
        .O(\data_width_64.cplndtlpsmsig[1]_i_1_n_0 ));
  FDRE \data_width_64.cplndtlpsmsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cplndtlpsmsig[1]_i_1_n_0 ),
        .Q(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .R(SR));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \data_width_64.cplpacket1_i_2 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I2(ctargetpipeline[2]),
        .I3(cpltargetpipeline),
        .I4(ctargetpipeline[1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .O(neqOp2_out));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.cplpacket1_i_3 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ),
        .I3(\data_width_64.dis_rden_reg_1 ),
        .I4(sig_m_axis_cc_tready),
        .O(\data_width_64.cplpacket1_reg_0 ));
  FDRE \data_width_64.cplpacket1_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[2]_2 ),
        .Q(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.cpltargetpipeline[0]_i_1 
       (.I0(\data_width_64.cpltargetpipeline[2]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.cpltargetpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.cpltargetpipeline[1]_i_1 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I1(\data_width_64.cpltargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .O(\data_width_64.cpltargetpipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.cpltargetpipeline[2]_i_1 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\data_width_64.cpltargetpipeline[2]_i_2_n_0 ),
        .I3(cpltargetpipeline),
        .O(\data_width_64.cpltargetpipeline[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h30FF880030008800)) 
    \data_width_64.cpltargetpipeline[2]_i_2 
       (.I0(\data_width_64.cpltargetpipeline[2]_i_3_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(sig_m_axis_cc_tready),
        .I3(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I5(\data_width_64.cpltargetpipeline[2]_i_4_n_0 ),
        .O(\data_width_64.cpltargetpipeline[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000051115555)) 
    \data_width_64.cpltargetpipeline[2]_i_3 
       (.I0(emptysig),
        .I1(s_axis_cc_tvalid_q_reg_0),
        .I2(s_axis_tx_tready),
        .I3(\end_point.psr_reg[2]_0 ),
        .I4(\data_width_64.cpltargetpipeline[2]_i_5_n_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.cpltargetpipeline[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \data_width_64.cpltargetpipeline[2]_i_4 
       (.I0(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ),
        .I1(\data_width_64.dis_rden_reg_1 ),
        .I2(\end_point.psr_reg[2]_0 ),
        .I3(s_axis_tx_tready),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.cpltargetpipeline[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.cpltargetpipeline[2]_i_5 
       (.I0(\data_width_64.lnkdowndataflush_reg_0 ),
        .I1(\data_width_64.lnkdowndataflush_i_5_n_0 ),
        .O(\data_width_64.cpltargetpipeline[2]_i_5_n_0 ));
  FDRE \data_width_64.cpltargetpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltargetpipeline[0]_i_1_n_0 ),
        .Q(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .R(SR));
  FDRE \data_width_64.cpltargetpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltargetpipeline[1]_i_1_n_0 ),
        .Q(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .R(SR));
  FDRE \data_width_64.cpltargetpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltargetpipeline[2]_i_1_n_0 ),
        .Q(cpltargetpipeline),
        .R(SR));
  LUT5 #(
    .INIT(32'hBABF8A80)) 
    \data_width_64.cpltlpsmsig[0]_i_1 
       (.I0(\data_width_64.cpltlpsmsig[0]_i_2_n_0 ),
        .I1(\data_width_64.cpltlpsmsig[2]_i_3_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig[0]_i_3_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.cpltlpsmsig[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF4747FF)) 
    \data_width_64.cpltlpsmsig[0]_i_2 
       (.I0(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.cpltlpsmsig[0]_i_4_n_0 ),
        .O(\data_width_64.cpltlpsmsig[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \data_width_64.cpltlpsmsig[0]_i_3 
       (.I0(\data_width_64.cpltlpsmsig[2]_i_6_n_0 ),
        .I1(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.cpltlpsmsig[0]_i_5_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_5_n_0 ),
        .O(\data_width_64.cpltlpsmsig[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00FF8F0000FF8FFF)) 
    \data_width_64.cpltlpsmsig[0]_i_4 
       (.I0(\data_width_64.cpltlpsmsig[1]_i_6_n_0 ),
        .I1(eqOp20_in),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I5(neqOp2_out),
        .O(\data_width_64.cpltlpsmsig[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA2222222)) 
    \data_width_64.cpltlpsmsig[0]_i_5 
       (.I0(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I1(rdreq_reg),
        .I2(s_axis_cc_tvalid_q_reg_0),
        .I3(\end_point.psr_reg[2]_0 ),
        .I4(s_axis_tx_tready),
        .O(\data_width_64.cpltlpsmsig[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBABF8A8ABABF8080)) 
    \data_width_64.cpltlpsmsig[1]_i_1 
       (.I0(\data_width_64.cpltlpsmsig[1]_i_2_n_0 ),
        .I1(\data_width_64.cpltlpsmsig[2]_i_3_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig[2]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_5_n_0 ),
        .O(\data_width_64.cpltlpsmsig[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \data_width_64.cpltlpsmsig[1]_i_2 
       (.I0(\data_width_64.cpltlpsmsig[1]_i_3_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I3(\data_width_64.cpltlpsmsig[1]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I5(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ),
        .O(\data_width_64.cpltlpsmsig[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT4 #(
    .INIT(16'h000D)) 
    \data_width_64.cpltlpsmsig[1]_i_3 
       (.I0(rdreq_reg),
        .I1(neqOp2_out),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .O(\data_width_64.cpltlpsmsig[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7F007FFF)) 
    \data_width_64.cpltlpsmsig[1]_i_4 
       (.I0(\data_width_64.cpltlpsmsig[1]_i_6_n_0 ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(eqOp20_in),
        .I3(rdreq_reg),
        .I4(emptysig),
        .O(\data_width_64.cpltlpsmsig[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6FFFFFFFFFFF6FFF)) 
    \data_width_64.cpltlpsmsig[1]_i_5 
       (.I0(cpldsplitcounttemp[4]),
        .I1(\data_width_64.cplcounter_reg_n_0_[4] ),
        .I2(\data_width_64.cpltlpsmsig[1]_i_7_n_0 ),
        .I3(\data_width_64.cpltlpsmsig[1]_i_8_n_0 ),
        .I4(\data_width_64.cplcounter_reg_n_0_[3] ),
        .I5(cpldsplitcounttemp[3]),
        .O(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9000000000009000)) 
    \data_width_64.cpltlpsmsig[1]_i_6 
       (.I0(\data_width_64.cplcounter_reg_n_0_[3] ),
        .I1(cpldsplitcounttemp[3]),
        .I2(\data_width_64.cpltlpsmsig[1]_i_8_n_0 ),
        .I3(\data_width_64.cpltlpsmsig[1]_i_7_n_0 ),
        .I4(cpldsplitcounttemp[4]),
        .I5(\data_width_64.cplcounter_reg_n_0_[4] ),
        .O(\data_width_64.cpltlpsmsig[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \data_width_64.cpltlpsmsig[1]_i_7 
       (.I0(\data_width_64.cplcounter_reg_n_0_[1] ),
        .I1(cpldsplitcounttemp[1]),
        .I2(\data_width_64.cplcounter_reg_n_0_[2] ),
        .I3(cpldsplitcounttemp[2]),
        .O(\data_width_64.cpltlpsmsig[1]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \data_width_64.cpltlpsmsig[1]_i_8 
       (.I0(cpldsplitcounttemp[0]),
        .I1(\data_width_64.cplcounter_reg_n_0_[0] ),
        .O(\data_width_64.cpltlpsmsig[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBAB0BABABAB0B0B0)) 
    \data_width_64.cpltlpsmsig[2]_i_1 
       (.I0(\data_width_64.cpltlpsmsig[2]_i_2_n_0 ),
        .I1(\data_width_64.cpltlpsmsig[2]_i_3_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig[2]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_5_n_0 ),
        .O(\data_width_64.cpltlpsmsig[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \data_width_64.cpltlpsmsig[2]_i_2 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I4(rdreq_reg),
        .O(\data_width_64.cpltlpsmsig[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT4 #(
    .INIT(16'hFCB3)) 
    \data_width_64.cpltlpsmsig[2]_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(sig_m_axis_cc_tready),
        .I3(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.cpltlpsmsig[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2F202F2020202F20)) 
    \data_width_64.cpltlpsmsig[2]_i_4 
       (.I0(\data_width_64.cpltlpsmsig[2]_i_6_n_0 ),
        .I1(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I4(rdreq_reg),
        .I5(p_76_out),
        .O(\data_width_64.cpltlpsmsig[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'hF404FFFF)) 
    \data_width_64.cpltlpsmsig[2]_i_5 
       (.I0(emptysig),
        .I1(neqOp2_out),
        .I2(rdreq_reg),
        .I3(\data_width_64.cpldsplitcounttemp[4]_i_3_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.cpltlpsmsig[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000070007777)) 
    \data_width_64.cpltlpsmsig[2]_i_6 
       (.I0(\data_width_64.lnkdowndataflush_reg_0 ),
        .I1(\data_width_64.lnkdowndataflush_i_5_n_0 ),
        .I2(\end_point.psr_reg[2]_0 ),
        .I3(s_axis_tx_tready),
        .I4(s_axis_cc_tvalid_q_reg_0),
        .I5(emptysig),
        .O(\data_width_64.cpltlpsmsig[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \data_width_64.cpltlpsmsig[2]_i_7 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I5(\data_width_64.data_phase_i_4_n_0 ),
        .O(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ));
  FDSE \data_width_64.cpltlpsmsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig[0]_i_1_n_0 ),
        .Q(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .S(SR));
  FDRE \data_width_64.cpltlpsmsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig[1]_i_1_n_0 ),
        .Q(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .R(SR));
  FDRE \data_width_64.cpltlpsmsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig[2]_i_1_n_0 ),
        .Q(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair585" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[0]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[0]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[0]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[0]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [0]),
        .I1(\ctlpbytecount_reg[0,1]__0 [0]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [0]),
        .O(\data_width_64.ctlpbytecounttemp[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair579" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[10]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[10]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[10]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[10]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [10]),
        .I1(\ctlpbytecount_reg[0,1]__0 [10]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [10]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [10]),
        .O(\data_width_64.ctlpbytecounttemp[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair575" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[11]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[11]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_10 
       (.I0(\ctlpbytecount_reg[1,3]__0 [10]),
        .I1(\ctlpbytecount_reg[1,1]__0 [10]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [10]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [10]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_11 
       (.I0(\ctlplength_reg[1,3]__0 [8]),
        .I1(\ctlplength_reg[1,1]__0 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[1,2]__0 [8]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[1,0]__0 [8]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_12 
       (.I0(\ctlpbytecount_reg[1,3]__0 [9]),
        .I1(\ctlpbytecount_reg[1,1]__0 [9]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [9]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [9]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_13 
       (.I0(\ctlplength_reg[1,3]__0 [7]),
        .I1(\ctlplength_reg[1,1]__0 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[1,2]__0 [7]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[1,0]__0 [7]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_14 
       (.I0(\ctlpbytecount_reg[1,3]__0 [8]),
        .I1(\ctlpbytecount_reg[1,1]__0 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [8]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [8]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_15 
       (.I0(\ctlplength_reg[1,3]__0 [6]),
        .I1(\ctlplength_reg[1,1]__0 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[1,2]__0 [6]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[1,0]__0 [6]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[11]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [11]),
        .I1(\ctlpbytecount_reg[0,1]__0 [11]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [11]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [11]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.ctlpbytecounttemp[11]_i_4 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[11]_i_9_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[11] ),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h1BE4)) 
    \data_width_64.ctlpbytecounttemp[11]_i_5 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[11]_i_10_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp[11]_i_11_n_0 ),
        .I3(\data_width_64.ctlpbytecounttemp_reg_n_0_[10] ),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h1BE4)) 
    \data_width_64.ctlpbytecounttemp[11]_i_6 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[11]_i_12_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp[11]_i_13_n_0 ),
        .I3(\data_width_64.ctlpbytecounttemp_reg_n_0_[9] ),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h1BE4)) 
    \data_width_64.ctlpbytecounttemp[11]_i_7 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[11]_i_14_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp[11]_i_15_n_0 ),
        .I3(\data_width_64.ctlpbytecounttemp_reg_n_0_[8] ),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \data_width_64.ctlpbytecounttemp[11]_i_8 
       (.I0(\data_width_64.cplcounter_reg_n_0_[2] ),
        .I1(\data_width_64.cplcounter_reg_n_0_[0] ),
        .I2(\data_width_64.cplcounter_reg_n_0_[1] ),
        .I3(\data_width_64.cplcounter_reg_n_0_[3] ),
        .I4(\data_width_64.cplcounter_reg_n_0_[4] ),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[11]_i_9 
       (.I0(\ctlpbytecount_reg[1,3]__0 [11]),
        .I1(\ctlpbytecount_reg[1,1]__0 [11]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [11]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [11]),
        .O(\data_width_64.ctlpbytecounttemp[11]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair585" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[1]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[1]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[1]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[1]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [1]),
        .I1(\ctlpbytecount_reg[0,1]__0 [1]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [1]),
        .O(\data_width_64.ctlpbytecounttemp[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair583" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[2]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[2]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[2]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[2]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [2]),
        .I1(\ctlpbytecount_reg[0,1]__0 [2]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [2]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [2]),
        .O(\data_width_64.ctlpbytecounttemp[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair583" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[3]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[3]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[3]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0FFF000AACCAACC)) 
    \data_width_64.ctlpbytecounttemp[3]_i_10 
       (.I0(\ctlpbytecount_reg[1,2]__0 [1]),
        .I1(\ctlpbytecount_reg[1,0]__0 [1]),
        .I2(\ctlpbytecount_reg[1,3]__0 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\ctlpbytecount_reg[1,1]__0 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hF0FFF000AACCAACC)) 
    \data_width_64.ctlpbytecounttemp[3]_i_11 
       (.I0(\ctlpbytecount_reg[1,2]__0 [0]),
        .I1(\ctlpbytecount_reg[1,0]__0 [0]),
        .I2(\ctlpbytecount_reg[1,3]__0 [0]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\ctlpbytecount_reg[1,1]__0 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[3]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [3]),
        .I1(\ctlpbytecount_reg[0,1]__0 [3]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [3]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [3]),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.ctlpbytecounttemp[3]_i_4 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[3]_i_8_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[3] ),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.ctlpbytecounttemp[3]_i_5 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[3]_i_9_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[2] ),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h2D)) 
    \data_width_64.ctlpbytecounttemp[3]_i_6 
       (.I0(\data_width_64.ctlpbytecounttemp[3]_i_10_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[1] ),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h2D)) 
    \data_width_64.ctlpbytecounttemp[3]_i_7 
       (.I0(\data_width_64.ctlpbytecounttemp[3]_i_11_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[0] ),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[3]_i_8 
       (.I0(\ctlpbytecount_reg[1,3]__0 [3]),
        .I1(\ctlpbytecount_reg[1,1]__0 [3]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [3]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [3]),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[3]_i_9 
       (.I0(\ctlpbytecount_reg[1,3]__0 [2]),
        .I1(\ctlpbytecount_reg[1,1]__0 [2]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [2]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [2]),
        .O(\data_width_64.ctlpbytecounttemp[3]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair582" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[4]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[4]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[4]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[4]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [4]),
        .I1(\ctlpbytecount_reg[0,1]__0 [4]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [4]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [4]),
        .O(\data_width_64.ctlpbytecounttemp[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair580" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[5]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[5]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[5]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[5]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [5]),
        .I1(\ctlpbytecount_reg[0,1]__0 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [5]),
        .O(\data_width_64.ctlpbytecounttemp[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair582" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[6]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[6]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[6]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[6]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [6]),
        .I1(\ctlpbytecount_reg[0,1]__0 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [6]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [6]),
        .O(\data_width_64.ctlpbytecounttemp[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair580" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[7]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[7]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[7]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[7]_i_10 
       (.I0(\ctlpbytecount_reg[1,3]__0 [6]),
        .I1(\ctlpbytecount_reg[1,1]__0 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [6]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [6]),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[7]_i_11 
       (.I0(\ctlpbytecount_reg[1,3]__0 [5]),
        .I1(\ctlpbytecount_reg[1,1]__0 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [5]),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[7]_i_12 
       (.I0(\ctlpbytecount_reg[1,3]__0 [4]),
        .I1(\ctlpbytecount_reg[1,1]__0 [4]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [4]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [4]),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[7]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [7]),
        .I1(\ctlpbytecount_reg[0,1]__0 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [7]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [7]),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h1BE4)) 
    \data_width_64.ctlpbytecounttemp[7]_i_4 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[7]_i_8_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp[7]_i_9_n_0 ),
        .I3(\data_width_64.ctlpbytecounttemp_reg_n_0_[7] ),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.ctlpbytecounttemp[7]_i_5 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[7]_i_10_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[6] ),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.ctlpbytecounttemp[7]_i_6 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[7]_i_11_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[5] ),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.ctlpbytecounttemp[7]_i_7 
       (.I0(\data_width_64.ctlpbytecounttemp[11]_i_8_n_0 ),
        .I1(\data_width_64.ctlpbytecounttemp[7]_i_12_n_0 ),
        .I2(\data_width_64.ctlpbytecounttemp_reg_n_0_[4] ),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[7]_i_8 
       (.I0(\ctlpbytecount_reg[1,3]__0 [7]),
        .I1(\ctlpbytecount_reg[1,1]__0 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[1,2]__0 [7]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[1,0]__0 [7]),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h505F3030505F3F3F)) 
    \data_width_64.ctlpbytecounttemp[7]_i_9 
       (.I0(\ctlplength_reg[1,3]__0 [5]),
        .I1(\ctlplength_reg[1,1]__0 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[1,2]__0 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[1,0]__0 [5]),
        .O(\data_width_64.ctlpbytecounttemp[7]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair579" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[8]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[8]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[8]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[8]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [8]),
        .I1(\ctlpbytecount_reg[0,1]__0 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [8]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [8]),
        .O(\data_width_64.ctlpbytecounttemp[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair575" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.ctlpbytecounttemp[9]_i_1 
       (.I0(\data_width_64.ctlpbytecounttemp[9]_i_2_n_0 ),
        .I1(ctlpbytecounttemp[9]),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.ctlpbytecounttemp[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlpbytecounttemp[9]_i_2 
       (.I0(\ctlpbytecount_reg[0,3]__0 [9]),
        .I1(\ctlpbytecount_reg[0,1]__0 [9]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlpbytecount_reg[0,2]__0 [9]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlpbytecount_reg[0,0]__0 [9]),
        .O(\data_width_64.ctlpbytecounttemp[9]_i_2_n_0 ));
  FDRE \data_width_64.ctlpbytecounttemp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[0]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[10]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[10] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[11]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[11] ),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \data_width_64.ctlpbytecounttemp_reg[11]_i_3 
       (.CI(\data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_0 ),
        .CO({\NLW_data_width_64.ctlpbytecounttemp_reg[11]_i_3_CO_UNCONNECTED [3],\data_width_64.ctlpbytecounttemp_reg[11]_i_3_n_1 ,\data_width_64.ctlpbytecounttemp_reg[11]_i_3_n_2 ,\data_width_64.ctlpbytecounttemp_reg[11]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\data_width_64.ctlpbytecounttemp_reg_n_0_[10] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[9] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[8] }),
        .O(ctlpbytecounttemp[11:8]),
        .S({\data_width_64.ctlpbytecounttemp[11]_i_4_n_0 ,\data_width_64.ctlpbytecounttemp[11]_i_5_n_0 ,\data_width_64.ctlpbytecounttemp[11]_i_6_n_0 ,\data_width_64.ctlpbytecounttemp[11]_i_7_n_0 }));
  FDRE \data_width_64.ctlpbytecounttemp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[1]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[2]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[2] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[3]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[3] ),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \data_width_64.ctlpbytecounttemp_reg[3]_i_3 
       (.CI(1'b0),
        .CO({\data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_0 ,\data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_1 ,\data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_2 ,\data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({\data_width_64.ctlpbytecounttemp_reg_n_0_[3] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[2] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[1] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[0] }),
        .O(ctlpbytecounttemp[3:0]),
        .S({\data_width_64.ctlpbytecounttemp[3]_i_4_n_0 ,\data_width_64.ctlpbytecounttemp[3]_i_5_n_0 ,\data_width_64.ctlpbytecounttemp[3]_i_6_n_0 ,\data_width_64.ctlpbytecounttemp[3]_i_7_n_0 }));
  FDRE \data_width_64.ctlpbytecounttemp_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[4]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[4] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[5]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[5] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[6]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[6] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[7]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[7] ),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \data_width_64.ctlpbytecounttemp_reg[7]_i_3 
       (.CI(\data_width_64.ctlpbytecounttemp_reg[3]_i_3_n_0 ),
        .CO({\data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_0 ,\data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_1 ,\data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_2 ,\data_width_64.ctlpbytecounttemp_reg[7]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\data_width_64.ctlpbytecounttemp_reg_n_0_[7] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[6] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[5] ,\data_width_64.ctlpbytecounttemp_reg_n_0_[4] }),
        .O(ctlpbytecounttemp[7:4]),
        .S({\data_width_64.ctlpbytecounttemp[7]_i_4_n_0 ,\data_width_64.ctlpbytecounttemp[7]_i_5_n_0 ,\data_width_64.ctlpbytecounttemp[7]_i_6_n_0 ,\data_width_64.ctlpbytecounttemp[7]_i_7_n_0 }));
  FDRE \data_width_64.ctlpbytecounttemp_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[8]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[8] ),
        .R(SR));
  FDRE \data_width_64.ctlpbytecounttemp_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlpbytecounttemp[9]_i_1_n_0 ),
        .Q(\data_width_64.ctlpbytecounttemp_reg_n_0_[9] ),
        .R(SR));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[0]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[0]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[0]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[0]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[0]_i_2 
       (.I0(\ctlplength_reg[2,3]__0 [0]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,1]__0 [0]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[0]_i_3 
       (.I0(\ctlplength_reg[2,2]__0 [0]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,0]__0 [0]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[0]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [0]),
        .I1(\ctlplength_reg[0,1]__0 [0]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [0]),
        .O(\data_width_64.ctlplengthtemp[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[1]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[1]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[1]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[1]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[1]_i_2 
       (.I0(\ctlplength_reg[2,3]__0 [1]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,1]__0 [1]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[1]_i_3 
       (.I0(\ctlplength_reg[2,2]__0 [1]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,0]__0 [1]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[1]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [1]),
        .I1(\ctlplength_reg[0,1]__0 [1]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [1]),
        .O(\data_width_64.ctlplengthtemp[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[2]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[2]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[2]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[2]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[2]_i_2 
       (.I0(\ctlplength_reg[2,3]__0 [2]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,1]__0 [2]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[2]_i_3 
       (.I0(\ctlplength_reg[2,2]__0 [2]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,0]__0 [2]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[2]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [2]),
        .I1(\ctlplength_reg[0,1]__0 [2]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [2]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [2]),
        .O(\data_width_64.ctlplengthtemp[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[3]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[3]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[3]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[3]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[3]_i_2 
       (.I0(\ctlplength_reg[2,3]__0 [3]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,1]__0 [3]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[3]_i_3 
       (.I0(\ctlplength_reg[2,2]__0 [3]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,0]__0 [3]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[3]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [3]),
        .I1(\ctlplength_reg[0,1]__0 [3]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [3]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [3]),
        .O(\data_width_64.ctlplengthtemp[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[4]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[4]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[4]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[4]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[4]_i_2 
       (.I0(\ctlplength_reg[2,3]__0 [4]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,1]__0 [4]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[4]_i_3 
       (.I0(\ctlplength_reg[2,2]__0 [4]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,0]__0 [4]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[4]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [4]),
        .I1(\ctlplength_reg[0,1]__0 [4]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [4]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [4]),
        .O(\data_width_64.ctlplengthtemp[4]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[5]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[5]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[5]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[5]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[5]_i_2 
       (.I0(\ctlplength_reg[1,3]__0 [5]),
        .I1(\ctlplength_reg[2,3]__0 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,1]__0 [5]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,1]__0 [5]),
        .O(\data_width_64.ctlplengthtemp[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[5]_i_3 
       (.I0(\ctlplength_reg[1,2]__0 [5]),
        .I1(\ctlplength_reg[2,2]__0 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,0]__0 [5]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,0]__0 [5]),
        .O(\data_width_64.ctlplengthtemp[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[5]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [5]),
        .I1(\ctlplength_reg[0,1]__0 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [5]),
        .O(\data_width_64.ctlplengthtemp[5]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[6]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[6]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[6]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[6]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[6]_i_2 
       (.I0(\ctlplength_reg[1,3]__0 [6]),
        .I1(\ctlplength_reg[2,3]__0 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,1]__0 [6]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,1]__0 [6]),
        .O(\data_width_64.ctlplengthtemp[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[6]_i_3 
       (.I0(\ctlplength_reg[1,2]__0 [6]),
        .I1(\ctlplength_reg[2,2]__0 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,0]__0 [6]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,0]__0 [6]),
        .O(\data_width_64.ctlplengthtemp[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[6]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [6]),
        .I1(\ctlplength_reg[0,1]__0 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [6]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [6]),
        .O(\data_width_64.ctlplengthtemp[6]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[7]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[7]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[7]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[7]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[7]_i_2 
       (.I0(\ctlplength_reg[1,3]__0 [7]),
        .I1(\ctlplength_reg[2,3]__0 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,1]__0 [7]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,1]__0 [7]),
        .O(\data_width_64.ctlplengthtemp[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[7]_i_3 
       (.I0(\ctlplength_reg[1,2]__0 [7]),
        .I1(\ctlplength_reg[2,2]__0 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,0]__0 [7]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,0]__0 [7]),
        .O(\data_width_64.ctlplengthtemp[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[7]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [7]),
        .I1(\ctlplength_reg[0,1]__0 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [7]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [7]),
        .O(\data_width_64.ctlplengthtemp[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[8]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[8]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[8]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[8]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[8]_i_2 
       (.I0(\ctlplength_reg[1,3]__0 [8]),
        .I1(\ctlplength_reg[2,3]__0 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,1]__0 [8]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,1]__0 [8]),
        .O(\data_width_64.ctlplengthtemp[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[8]_i_3 
       (.I0(\ctlplength_reg[1,2]__0 [8]),
        .I1(\ctlplength_reg[2,2]__0 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(\ctlplength_reg[1,0]__0 [8]),
        .I4(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .I5(\ctlplength_reg[2,0]__0 [8]),
        .O(\data_width_64.ctlplengthtemp[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[8]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [8]),
        .I1(\ctlplength_reg[0,1]__0 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [8]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [8]),
        .O(\data_width_64.ctlplengthtemp[8]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.ctlplengthtemp[9]_i_1 
       (.I0(\data_width_64.ctlplengthtemp[9]_i_2_n_0 ),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I2(\data_width_64.ctlplengthtemp[9]_i_3_n_0 ),
        .I3(\data_width_64.ctlplengthtemp[9]_i_4_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.ctlplengthtemp[9]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[9]_i_2 
       (.I0(\ctlplength_reg[2,3]__0 [9]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,1]__0 [9]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[9]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \data_width_64.ctlplengthtemp[9]_i_3 
       (.I0(\ctlplength_reg[2,2]__0 [9]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I2(\ctlplength_reg[2,0]__0 [9]),
        .I3(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ),
        .O(\data_width_64.ctlplengthtemp[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.ctlplengthtemp[9]_i_4 
       (.I0(\ctlplength_reg[0,3]__0 [9]),
        .I1(\ctlplength_reg[0,1]__0 [9]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\ctlplength_reg[0,2]__0 [9]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\ctlplength_reg[0,0]__0 [9]),
        .O(\data_width_64.ctlplengthtemp[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFEEFDFFDDFFDEFFE)) 
    \data_width_64.ctlplengthtemp[9]_i_5 
       (.I0(cpldsplitcounttemp[3]),
        .I1(\data_width_64.ctlplengthtemp[9]_i_6_n_0 ),
        .I2(cpldsplitcounttemp[4]),
        .I3(\data_width_64.cplcounter_reg_n_0_[4] ),
        .I4(\data_width_64.cplcounter_reg_n_0_[3] ),
        .I5(\data_width_64.ctlplengthtemp[9]_i_7_n_0 ),
        .O(\data_width_64.ctlplengthtemp[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFBE7DFFEBFFFF7D)) 
    \data_width_64.ctlplengthtemp[9]_i_6 
       (.I0(cpldsplitcounttemp[0]),
        .I1(cpldsplitcounttemp[2]),
        .I2(\data_width_64.cplcounter_reg_n_0_[2] ),
        .I3(\data_width_64.cplcounter_reg_n_0_[1] ),
        .I4(\data_width_64.cplcounter_reg_n_0_[0] ),
        .I5(cpldsplitcounttemp[1]),
        .O(\data_width_64.ctlplengthtemp[9]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \data_width_64.ctlplengthtemp[9]_i_7 
       (.I0(\data_width_64.cplcounter_reg_n_0_[2] ),
        .I1(\data_width_64.cplcounter_reg_n_0_[0] ),
        .I2(\data_width_64.cplcounter_reg_n_0_[1] ),
        .O(\data_width_64.ctlplengthtemp[9]_i_7_n_0 ));
  FDRE \data_width_64.ctlplengthtemp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[0]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[1]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[2]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[3]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[4]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[5]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[5] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[6]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[7]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[8]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .R(SR));
  FDRE \data_width_64.ctlplengthtemp_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(ctlplengthtemp),
        .D(\data_width_64.ctlplengthtemp[9]_i_1_n_0 ),
        .Q(\data_width_64.ctlplengthtemp_reg_n_0_[9] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \data_width_64.data_phase_i_2 
       (.I0(\data_width_64.data_phase_i_4_n_0 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I5(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .O(\data_width_64.dis_rden_reg_1 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_width_64.data_phase_i_4 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[8] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[9] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[5] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[7] ),
        .O(\data_width_64.data_phase_i_4_n_0 ));
  FDRE \data_width_64.data_phase_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[2]_3 ),
        .Q(data_phase),
        .R(SR));
  LUT6 #(
    .INIT(64'h77757777FFFFFFFF)) 
    \data_width_64.dis_rden_i_2 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I1(\data_width_64.dis_rden_reg_1 ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I3(m_axis_cc_tdata_d1),
        .I4(\data_width_64.dis_rden_i_3_n_0 ),
        .I5(m_axis_cc_tvalid_d50_out),
        .O(\data_width_64.dis_rden_reg_2 ));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    \data_width_64.dis_rden_i_3 
       (.I0(\data_width_64.data_phase_i_4_n_0 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I5(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .O(\data_width_64.dis_rden_i_3_n_0 ));
  FDRE \data_width_64.dis_rden_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[2]_4 ),
        .Q(\data_width_64.dis_rden_reg_0 ),
        .R(SR));
  FDRE \data_width_64.firstdwbesig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [24]),
        .Q(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.firstdwbesig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [25]),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \data_width_64.firstdwbesig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [26]),
        .Q(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .R(SR));
  FDRE \data_width_64.firstdwbesig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [27]),
        .Q(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .R(SR));
  FDRE \data_width_64.lastdwbesig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [28]),
        .Q(\data_width_64.lastdwbesig_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.lastdwbesig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [29]),
        .Q(p_0_in27_in),
        .R(SR));
  FDRE \data_width_64.lastdwbesig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [30]),
        .Q(\data_width_64.lastdwbesig_reg_n_0_[2] ),
        .R(SR));
  FDRE \data_width_64.lastdwbesig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [31]),
        .Q(p_0_in2_in),
        .R(SR));
  LUT6 #(
    .INIT(64'h001EFFFF001E0000)) 
    \data_width_64.linkdownflushdepth[0]_i_1 
       (.I0(ARG[0]),
        .I1(p_3_out),
        .I2(ARG[1]),
        .I3(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I5(\data_width_64.linkdownflushdepth_reg[3]_i_3_n_7 ),
        .O(\data_width_64.linkdownflushdepth[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[1]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[1]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[3]_i_3_n_6 ),
        .O(\data_width_64.linkdownflushdepth[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h666A)) 
    \data_width_64.linkdownflushdepth[1]_i_2 
       (.I0(ARG[2]),
        .I1(ARG[1]),
        .I2(ARG[0]),
        .I3(p_3_out),
        .O(\data_width_64.linkdownflushdepth[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[2]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[2]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[3]_i_3_n_5 ),
        .O(\data_width_64.linkdownflushdepth[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT5 #(
    .INIT(32'h666AAAAA)) 
    \data_width_64.linkdownflushdepth[2]_i_2 
       (.I0(ARG[3]),
        .I1(ARG[2]),
        .I2(p_3_out),
        .I3(ARG[0]),
        .I4(ARG[1]),
        .O(\data_width_64.linkdownflushdepth[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[3]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[3]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[3]_i_3_n_4 ),
        .O(\data_width_64.linkdownflushdepth[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6A6A6AAAAAAAAAAA)) 
    \data_width_64.linkdownflushdepth[3]_i_2 
       (.I0(ARG[4]),
        .I1(ARG[3]),
        .I2(ARG[1]),
        .I3(ARG[0]),
        .I4(p_3_out),
        .I5(ARG[2]),
        .O(\data_width_64.linkdownflushdepth[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6999999999999999)) 
    \data_width_64.linkdownflushdepth[3]_i_4 
       (.I0(linkdownflushdepth[3]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I5(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .O(\data_width_64.linkdownflushdepth[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h69999999)) 
    \data_width_64.linkdownflushdepth[3]_i_5 
       (.I0(linkdownflushdepth[2]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .O(\data_width_64.linkdownflushdepth[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h6999)) 
    \data_width_64.linkdownflushdepth[3]_i_6 
       (.I0(linkdownflushdepth[1]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .O(\data_width_64.linkdownflushdepth[3]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \data_width_64.linkdownflushdepth[3]_i_7 
       (.I0(linkdownflushdepth[0]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .O(\data_width_64.linkdownflushdepth[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[4]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[4]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[7]_i_3_n_7 ),
        .O(\data_width_64.linkdownflushdepth[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \data_width_64.linkdownflushdepth[4]_i_2 
       (.I0(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .I1(ARG[5]),
        .I2(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ),
        .O(\data_width_64.linkdownflushdepth[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[5]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[5]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[7]_i_3_n_6 ),
        .O(\data_width_64.linkdownflushdepth[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT4 #(
    .INIT(16'h366C)) 
    \data_width_64.linkdownflushdepth[5]_i_2 
       (.I0(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ),
        .I1(ARG[6]),
        .I2(ARG[5]),
        .I3(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .O(\data_width_64.linkdownflushdepth[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[6]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[6]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[7]_i_3_n_5 ),
        .O(\data_width_64.linkdownflushdepth[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'h3C6C6CCC)) 
    \data_width_64.linkdownflushdepth[6]_i_2 
       (.I0(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ),
        .I1(ARG[7]),
        .I2(ARG[6]),
        .I3(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .I4(ARG[5]),
        .O(\data_width_64.linkdownflushdepth[6]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[7]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[7]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[7]_i_3_n_4 ),
        .O(\data_width_64.linkdownflushdepth[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.linkdownflushdepth[7]_i_10 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .O(\data_width_64.linkdownflushdepth[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h3C6C6CCCCCCCCCCC)) 
    \data_width_64.linkdownflushdepth[7]_i_2 
       (.I0(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ),
        .I1(ARG[8]),
        .I2(ARG[7]),
        .I3(ARG[5]),
        .I4(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .I5(ARG[6]),
        .O(\data_width_64.linkdownflushdepth[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0880000000000000)) 
    \data_width_64.linkdownflushdepth[7]_i_4 
       (.I0(ARG[4]),
        .I1(ARG[2]),
        .I2(ARG[0]),
        .I3(p_3_out),
        .I4(ARG[1]),
        .I5(ARG[3]),
        .O(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.linkdownflushdepth[7]_i_5 
       (.I0(ARG[4]),
        .I1(ARG[2]),
        .I2(p_3_out),
        .I3(ARG[0]),
        .I4(ARG[1]),
        .I5(ARG[3]),
        .O(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h69999999)) 
    \data_width_64.linkdownflushdepth[7]_i_6 
       (.I0(linkdownflushdepth[7]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .I3(\data_width_64.linkdownflushdepth[9]_i_18_n_0 ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .O(\data_width_64.linkdownflushdepth[7]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h6999)) 
    \data_width_64.linkdownflushdepth[7]_i_7 
       (.I0(linkdownflushdepth[6]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I3(\data_width_64.linkdownflushdepth[9]_i_18_n_0 ),
        .O(\data_width_64.linkdownflushdepth[7]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \data_width_64.linkdownflushdepth[7]_i_8 
       (.I0(linkdownflushdepth[5]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I2(\data_width_64.linkdownflushdepth[9]_i_18_n_0 ),
        .O(\data_width_64.linkdownflushdepth[7]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \data_width_64.linkdownflushdepth[7]_i_9 
       (.I0(linkdownflushdepth[4]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[5] ),
        .I2(\data_width_64.linkdownflushdepth[7]_i_10_n_0 ),
        .O(\data_width_64.linkdownflushdepth[7]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \data_width_64.linkdownflushdepth[8]_i_1 
       (.I0(\data_width_64.linkdownflushdepth[8]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.linkdownflushdepth_reg[9]_i_6_n_7 ),
        .O(\data_width_64.linkdownflushdepth[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80007FFF7FFF8000)) 
    \data_width_64.linkdownflushdepth[8]_i_2 
       (.I0(ARG[7]),
        .I1(\data_width_64.linkdownflushdepth[9]_i_7_n_0 ),
        .I2(ARG[6]),
        .I3(ARG[8]),
        .I4(ARG[9]),
        .I5(\data_width_64.linkdownflushdepth[9]_i_8_n_0 ),
        .O(\data_width_64.linkdownflushdepth[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8B888888)) 
    \data_width_64.linkdownflushdepth[9]_i_1 
       (.I0(\data_width_64.linkdownflushdepth_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.linkdownflushdepth[9]_i_3_n_0 ),
        .O(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'h28000000)) 
    \data_width_64.linkdownflushdepth[9]_i_10 
       (.I0(ARG[7]),
        .I1(ARG[5]),
        .I2(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .I3(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ),
        .I4(ARG[6]),
        .O(\data_width_64.linkdownflushdepth[9]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \data_width_64.linkdownflushdepth[9]_i_11 
       (.I0(\data_width_64.linkdownflushdepth[5]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[6]_i_2_n_0 ),
        .O(\data_width_64.linkdownflushdepth[9]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hDFFF7FFF7FFFFFFD)) 
    \data_width_64.linkdownflushdepth[9]_i_12 
       (.I0(\data_width_64.linkdownflushdepth[9]_i_15_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_16_n_0 ),
        .I2(ARG[5]),
        .I3(ARG[4]),
        .I4(\data_width_64.linkdownflushdepth[9]_i_17_n_0 ),
        .I5(ARG[3]),
        .O(\data_width_64.linkdownflushdepth[9]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9555555555555555)) 
    \data_width_64.linkdownflushdepth[9]_i_13 
       (.I0(linkdownflushdepth[9]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I3(\data_width_64.linkdownflushdepth[9]_i_18_n_0 ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .I5(\data_width_64.ctlplengthtemp_reg_n_0_[9] ),
        .O(\data_width_64.linkdownflushdepth[9]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h6999999999999999)) 
    \data_width_64.linkdownflushdepth[9]_i_14 
       (.I0(linkdownflushdepth[8]),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[9] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I4(\data_width_64.linkdownflushdepth[9]_i_18_n_0 ),
        .I5(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .O(\data_width_64.linkdownflushdepth[9]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT4 #(
    .INIT(16'hE001)) 
    \data_width_64.linkdownflushdepth[9]_i_15 
       (.I0(p_3_out),
        .I1(ARG[0]),
        .I2(ARG[1]),
        .I3(ARG[2]),
        .O(\data_width_64.linkdownflushdepth[9]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'h2800)) 
    \data_width_64.linkdownflushdepth[9]_i_16 
       (.I0(ARG[2]),
        .I1(ARG[0]),
        .I2(p_3_out),
        .I3(ARG[1]),
        .O(\data_width_64.linkdownflushdepth[9]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \data_width_64.linkdownflushdepth[9]_i_17 
       (.I0(ARG[2]),
        .I1(p_3_out),
        .I2(ARG[0]),
        .I3(ARG[1]),
        .O(\data_width_64.linkdownflushdepth[9]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.linkdownflushdepth[9]_i_18 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[5] ),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I5(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .O(\data_width_64.linkdownflushdepth[9]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hEEF0)) 
    \data_width_64.linkdownflushdepth[9]_i_2 
       (.I0(\data_width_64.linkdownflushdepth[9]_i_4_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ),
        .I2(\data_width_64.linkdownflushdepth_reg[9]_i_6_n_6 ),
        .I3(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.linkdownflushdepth[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \data_width_64.linkdownflushdepth[9]_i_3 
       (.I0(rdreq_reg),
        .I1(p_76_out),
        .I2(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I3(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.linkdownflushdepth[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF800080000000)) 
    \data_width_64.linkdownflushdepth[9]_i_4 
       (.I0(ARG[8]),
        .I1(ARG[6]),
        .I2(\data_width_64.linkdownflushdepth[9]_i_7_n_0 ),
        .I3(ARG[7]),
        .I4(\data_width_64.linkdownflushdepth[9]_i_8_n_0 ),
        .I5(ARG[9]),
        .O(\data_width_64.linkdownflushdepth[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    \data_width_64.linkdownflushdepth[9]_i_5 
       (.I0(\data_width_64.linkdownflushdepth[9]_i_9_n_0 ),
        .I1(ARG[8]),
        .I2(\data_width_64.linkdownflushdepth[9]_i_10_n_0 ),
        .I3(\data_width_64.linkdownflushdepth[9]_i_11_n_0 ),
        .I4(ARG[9]),
        .I5(\data_width_64.linkdownflushdepth[9]_i_12_n_0 ),
        .O(\data_width_64.linkdownflushdepth[9]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair593" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.linkdownflushdepth[9]_i_7 
       (.I0(ARG[5]),
        .I1(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .O(\data_width_64.linkdownflushdepth[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0080800000000000)) 
    \data_width_64.linkdownflushdepth[9]_i_8 
       (.I0(ARG[8]),
        .I1(ARG[6]),
        .I2(\data_width_64.linkdownflushdepth[7]_i_4_n_0 ),
        .I3(\data_width_64.linkdownflushdepth[7]_i_5_n_0 ),
        .I4(ARG[5]),
        .I5(ARG[7]),
        .O(\data_width_64.linkdownflushdepth[9]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \data_width_64.linkdownflushdepth[9]_i_9 
       (.I0(ARG[7]),
        .I1(\data_width_64.linkdownflushdepth[9]_i_7_n_0 ),
        .I2(ARG[6]),
        .O(\data_width_64.linkdownflushdepth[9]_i_9_n_0 ));
  FDRE \data_width_64.linkdownflushdepth_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[0]_i_1_n_0 ),
        .Q(linkdownflushdepth[0]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[1]_i_1_n_0 ),
        .Q(linkdownflushdepth[1]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[2]_i_1_n_0 ),
        .Q(linkdownflushdepth[2]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[3]_i_1_n_0 ),
        .Q(linkdownflushdepth[3]),
        .R(SR));
  CARRY4 \data_width_64.linkdownflushdepth_reg[3]_i_3 
       (.CI(1'b0),
        .CO({\data_width_64.linkdownflushdepth_reg[3]_i_3_n_0 ,\data_width_64.linkdownflushdepth_reg[3]_i_3_n_1 ,\data_width_64.linkdownflushdepth_reg[3]_i_3_n_2 ,\data_width_64.linkdownflushdepth_reg[3]_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI(linkdownflushdepth[3:0]),
        .O({\data_width_64.linkdownflushdepth_reg[3]_i_3_n_4 ,\data_width_64.linkdownflushdepth_reg[3]_i_3_n_5 ,\data_width_64.linkdownflushdepth_reg[3]_i_3_n_6 ,\data_width_64.linkdownflushdepth_reg[3]_i_3_n_7 }),
        .S({\data_width_64.linkdownflushdepth[3]_i_4_n_0 ,\data_width_64.linkdownflushdepth[3]_i_5_n_0 ,\data_width_64.linkdownflushdepth[3]_i_6_n_0 ,\data_width_64.linkdownflushdepth[3]_i_7_n_0 }));
  FDRE \data_width_64.linkdownflushdepth_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[4]_i_1_n_0 ),
        .Q(linkdownflushdepth[4]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[5]_i_1_n_0 ),
        .Q(linkdownflushdepth[5]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[6]_i_1_n_0 ),
        .Q(linkdownflushdepth[6]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[7]_i_1_n_0 ),
        .Q(linkdownflushdepth[7]),
        .R(SR));
  CARRY4 \data_width_64.linkdownflushdepth_reg[7]_i_3 
       (.CI(\data_width_64.linkdownflushdepth_reg[3]_i_3_n_0 ),
        .CO({\data_width_64.linkdownflushdepth_reg[7]_i_3_n_0 ,\data_width_64.linkdownflushdepth_reg[7]_i_3_n_1 ,\data_width_64.linkdownflushdepth_reg[7]_i_3_n_2 ,\data_width_64.linkdownflushdepth_reg[7]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI(linkdownflushdepth[7:4]),
        .O({\data_width_64.linkdownflushdepth_reg[7]_i_3_n_4 ,\data_width_64.linkdownflushdepth_reg[7]_i_3_n_5 ,\data_width_64.linkdownflushdepth_reg[7]_i_3_n_6 ,\data_width_64.linkdownflushdepth_reg[7]_i_3_n_7 }),
        .S({\data_width_64.linkdownflushdepth[7]_i_6_n_0 ,\data_width_64.linkdownflushdepth[7]_i_7_n_0 ,\data_width_64.linkdownflushdepth[7]_i_8_n_0 ,\data_width_64.linkdownflushdepth[7]_i_9_n_0 }));
  FDRE \data_width_64.linkdownflushdepth_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[8]_i_1_n_0 ),
        .Q(linkdownflushdepth[8]),
        .R(SR));
  FDRE \data_width_64.linkdownflushdepth_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.linkdownflushdepth[9]_i_1_n_0 ),
        .D(\data_width_64.linkdownflushdepth[9]_i_2_n_0 ),
        .Q(linkdownflushdepth[9]),
        .R(SR));
  CARRY4 \data_width_64.linkdownflushdepth_reg[9]_i_6 
       (.CI(\data_width_64.linkdownflushdepth_reg[7]_i_3_n_0 ),
        .CO({\NLW_data_width_64.linkdownflushdepth_reg[9]_i_6_CO_UNCONNECTED [3:1],\data_width_64.linkdownflushdepth_reg[9]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,linkdownflushdepth[8]}),
        .O({\NLW_data_width_64.linkdownflushdepth_reg[9]_i_6_O_UNCONNECTED [3:2],\data_width_64.linkdownflushdepth_reg[9]_i_6_n_6 ,\data_width_64.linkdownflushdepth_reg[9]_i_6_n_7 }),
        .S({1'b0,1'b0,\data_width_64.linkdownflushdepth[9]_i_13_n_0 ,\data_width_64.linkdownflushdepth[9]_i_14_n_0 }));
  LUT5 #(
    .INIT(32'hE0E04F40)) 
    \data_width_64.lnkdowndataflush_i_2 
       (.I0(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I1(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I3(neqOp2_out),
        .I4(emptysig),
        .O(\data_width_64.lnkdowndataflush_reg_2 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \data_width_64.lnkdowndataflush_i_3 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I1(rdreq_reg),
        .I2(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I3(emptysig),
        .O(\data_width_64.lnkdowndataflush_reg_3 ));
  LUT6 #(
    .INIT(64'h0010FFFF00100000)) 
    \data_width_64.lnkdowndataflush_i_4 
       (.I0(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I1(emptysig),
        .I2(\data_width_64.lnkdowndataflush_reg_0 ),
        .I3(\data_width_64.lnkdowndataflush_i_5_n_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.tlplengthcntr_reg[0]_0 ),
        .O(\data_width_64.lnkdowndataflush_reg_1 ));
  LUT6 #(
    .INIT(64'hFFBE7DFFEBFFFF7D)) 
    \data_width_64.lnkdowndataflush_i_5 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_0 ),
        .I1(ctargetpipeline[2]),
        .I2(cpltargetpipeline),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I5(ctargetpipeline[1]),
        .O(\data_width_64.lnkdowndataflush_i_5_n_0 ));
  FDRE \data_width_64.lnkdowndataflush_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[0]_1 ),
        .Q(\data_width_64.lnkdowndataflush_reg_0 ),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \data_width_64.m_axi_wstrb[7]_i_1 
       (.I0(axi_aresetn),
        .O(SR));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[0]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[0]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(\data_width_64.rdtlpaddrltemp_reg_n_0_[0] ),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[10]_i_2 
       (.I0(\data_width_64.tlptag_reg[2]_23 [2]),
        .I1(\data_width_64.tlptag_reg[0]_21 [2]),
        .I2(\data_width_64.tlptag_reg[3]_24 [2]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlptag_reg[1]_22 [2]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[10]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[11]_i_2 
       (.I0(\data_width_64.tlptag_reg[2]_23 [3]),
        .I1(\data_width_64.tlptag_reg[0]_21 [3]),
        .I2(\data_width_64.tlptag_reg[3]_24 [3]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlptag_reg[1]_22 [3]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[11]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair577" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.m_axis_cc_tdata_h[12]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[12]_i_2_n_0 ),
        .I1(\data_width_64.m_axis_cc_tdata_h[12]_i_3_n_0 ),
        .I2(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[12]_i_2 
       (.I0(\data_width_64.tlptag_reg[3]_24 [4]),
        .I1(\data_width_64.tlptag_reg[1]_22 [4]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlptag_reg[2]_23 [4]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlptag_reg[0]_21 [4]),
        .O(\data_width_64.m_axis_cc_tdata_h[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[12]_i_3 
       (.I0(\data_width_64.tlpattr_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpattr_reg_n_0_[1][0] ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpattr_reg_n_0_[2][0] ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpattr_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_h[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair577" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.m_axis_cc_tdata_h[13]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[13]_i_2_n_0 ),
        .I1(\data_width_64.m_axis_cc_tdata_h[13]_i_3_n_0 ),
        .I2(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[13]_i_2 
       (.I0(\data_width_64.tlptag_reg[3]_24 [5]),
        .I1(\data_width_64.tlptag_reg[1]_22 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlptag_reg[2]_23 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlptag_reg[0]_21 [5]),
        .O(\data_width_64.m_axis_cc_tdata_h[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[13]_i_3 
       (.I0(\data_width_64.tlpattr_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpattr_reg_n_0_[1][1] ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpattr_reg_n_0_[2][1] ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpattr_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_h[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[14]_i_2 
       (.I0(\data_width_64.tlptag_reg[2]_23 [6]),
        .I1(\data_width_64.tlptag_reg[0]_21 [6]),
        .I2(\data_width_64.tlptag_reg[3]_24 [6]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlptag_reg[1]_22 [6]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[14]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[15]_i_2 
       (.I0(\data_width_64.tlptag_reg[2]_23 [7]),
        .I1(\data_width_64.tlptag_reg[0]_21 [7]),
        .I2(\data_width_64.tlptag_reg[3]_24 [7]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlptag_reg[1]_22 [7]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[16]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [0]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [0]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [0]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[16]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[17]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [1]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [1]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[17]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[18]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [2]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [2]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [2]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [2]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[18]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[19]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [3]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [3]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [3]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [3]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[19]_0 ));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[1]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[1]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(\data_width_64.rdtlpaddrltemp_reg_n_0_[1] ),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair578" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.m_axis_cc_tdata_h[20]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[20]_i_2_n_0 ),
        .I1(\data_width_64.m_axis_cc_tdata_h[20]_i_3_n_0 ),
        .I2(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[20]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[3]_20 [4]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [4]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlprequesterid_reg[2]_19 [4]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlprequesterid_reg[0]_17 [4]),
        .O(\data_width_64.m_axis_cc_tdata_h[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[20]_i_3 
       (.I0(\data_width_64.tlptc_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlptc_reg_n_0_[1][0] ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlptc_reg_n_0_[2][0] ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlptc_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_h[20]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair578" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.m_axis_cc_tdata_h[21]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[21]_i_2_n_0 ),
        .I1(\data_width_64.m_axis_cc_tdata_h[21]_i_3_n_0 ),
        .I2(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[21]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[3]_20 [5]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlprequesterid_reg[2]_19 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlprequesterid_reg[0]_17 [5]),
        .O(\data_width_64.m_axis_cc_tdata_h[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[21]_i_3 
       (.I0(\data_width_64.tlptc_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlptc_reg_n_0_[1][1] ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlptc_reg_n_0_[2][1] ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlptc_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_h[21]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.m_axis_cc_tdata_h[22]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[22]_i_2_n_0 ),
        .I1(\data_width_64.m_axis_cc_tdata_h[22]_i_3_n_0 ),
        .I2(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[22]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[3]_20 [6]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlprequesterid_reg[2]_19 [6]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlprequesterid_reg[0]_17 [6]),
        .O(\data_width_64.m_axis_cc_tdata_h[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[22]_i_3 
       (.I0(\data_width_64.tlptc_reg_n_0_[3][2] ),
        .I1(\data_width_64.tlptc_reg_n_0_[1][2] ),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlptc_reg_n_0_[2][2] ),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlptc_reg_n_0_[0][2] ),
        .O(\data_width_64.m_axis_cc_tdata_h[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[23]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [7]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [7]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [7]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [7]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[23]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[24]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [8]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [8]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [8]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [8]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[24]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[25]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [9]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [9]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [9]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [9]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[25]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[26]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [10]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [10]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [10]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [10]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[26]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[27]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [11]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [11]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [11]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [11]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[27]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[28]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [12]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [12]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [12]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [12]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[28]_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[29]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [13]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [13]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [13]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [13]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[29]_0 ));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[2]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[2]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(Q),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \data_width_64.m_axis_cc_tdata_h[30]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[30]_i_2_n_0 ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[30]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[3]_20 [14]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [14]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlprequesterid_reg[2]_19 [14]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlprequesterid_reg[0]_17 [14]),
        .O(\data_width_64.m_axis_cc_tdata_h[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[31]_i_2 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [15]),
        .I1(\data_width_64.tlprequesterid_reg[0]_17 [15]),
        .I2(\data_width_64.tlprequesterid_reg[3]_20 [15]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlprequesterid_reg[1]_18 [15]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[31]_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[32]_i_1 
       (.I0(\goreg_bm.dout_i_reg[24] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[0] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[0]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[33]_i_1 
       (.I0(\goreg_bm.dout_i_reg[25] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[1] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[1]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[34]_i_1 
       (.I0(\goreg_bm.dout_i_reg[26] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[2] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[2]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[34]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[35]_i_1 
       (.I0(\goreg_bm.dout_i_reg[27] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[3] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[3]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[36]_i_1 
       (.I0(\goreg_bm.dout_i_reg[28] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[4] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[4]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[36]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[37]_i_1 
       (.I0(\goreg_bm.dout_i_reg[29] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[5] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[5]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[37]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[38]_i_1 
       (.I0(\goreg_bm.dout_i_reg[30] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[6] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[6]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[39]_i_1 
       (.I0(\goreg_bm.dout_i_reg[31] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[7] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[7]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[3]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[3]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(\data_width_64.rdtlpaddrltemp_reg_n_0_[3] ),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[40]_i_1 
       (.I0(\goreg_bm.dout_i_reg[16] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[8] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[8]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[40]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[41]_i_1 
       (.I0(\goreg_bm.dout_i_reg[17] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[9] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[9]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[41]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[42]_i_1 
       (.I0(\goreg_bm.dout_i_reg[18] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[10] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[10]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[42]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \data_width_64.m_axis_cc_tdata_h[43]_i_1 
       (.I0(\goreg_bm.dout_i_reg[19] ),
        .I1(\data_width_64.ctlpbytecounttemp_reg_n_0_[11] ),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(totalbytecount[11]),
        .I4(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[48]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [0]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [0]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[48]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[49]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [1]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [1]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [1]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[49]_0 ));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[4]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[4]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(\data_width_64.rdtlpaddrltemp_reg_n_0_[4] ),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[50]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [2]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [2]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [2]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [2]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[50]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[51]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [3]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [3]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [3]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [3]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[51]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[52]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [4]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [4]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [4]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [4]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[52]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[53]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [5]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [5]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [5]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [5]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[53]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[54]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [6]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [6]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [6]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [6]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[54]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[55]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [7]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [7]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [7]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [7]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[55]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[56]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [8]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [8]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [8]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [8]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[56]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[57]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [9]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [9]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [9]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [9]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[57]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[58]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [10]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [10]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [10]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [10]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[58]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[59]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [11]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [11]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [11]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [11]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[59]_0 ));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[5]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[5] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[5]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(\data_width_64.rdtlpaddrltemp_reg_n_0_[5] ),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[60]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [12]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [12]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [12]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [12]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[60]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[61]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [13]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [13]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [13]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [13]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[61]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[62]_i_2 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [14]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [14]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [14]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [14]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[62]_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I3(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I4(rdreq_reg),
        .O(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h80FF)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_3 
       (.I0(p_77_in),
        .I1(rrespdelayed),
        .I2(p_1_in79_in),
        .I3(rdreq_reg),
        .O(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair589" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_5 
       (.I0(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I1(Q),
        .O(m_axis_cc_tdata_d1));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_7 
       (.I0(\data_width_64.tlpcompleterid_reg[3]_28 [15]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [15]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I3(\data_width_64.tlpcompleterid_reg[2]_27 [15]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlpcompleterid_reg[0]_25 [15]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_8 
       (.I0(cplpendcpl[3]),
        .I1(cplpendcpl[2]),
        .I2(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I3(cplpendcpl[1]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I5(cplpendcpl[0]),
        .O(p_77_in));
  LUT6 #(
    .INIT(64'hFF330000B8B8B8B8)) 
    \data_width_64.m_axis_cc_tdata_h[6]_i_1 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I1(\data_width_64.rresp_reg[3][1] ),
        .I2(totallength[6]),
        .I3(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I4(\data_width_64.rdtlpaddrltemp_reg_n_0_[6] ),
        .I5(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT4 #(
    .INIT(16'h00E4)) 
    \data_width_64.m_axis_cc_tdata_h[7]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(totallength[7]),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .I3(p_76_out),
        .O(\data_width_64.m_axis_cc_tdata_h[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h74777444)) 
    \data_width_64.m_axis_cc_tdata_h[8]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[8]_i_2_n_0 ),
        .I1(p_76_out),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .I3(\data_width_64.rresp_reg[3][1] ),
        .I4(totallength[8]),
        .O(\data_width_64.m_axis_cc_tdata_h[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[8]_i_2 
       (.I0(\data_width_64.tlptag_reg[2]_23 [0]),
        .I1(\data_width_64.tlptag_reg[0]_21 [0]),
        .I2(\data_width_64.tlptag_reg[3]_24 [0]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlptag_reg[1]_22 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h74777444)) 
    \data_width_64.m_axis_cc_tdata_h[9]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_h[9]_i_2_n_0 ),
        .I1(p_76_out),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[9] ),
        .I3(\data_width_64.rresp_reg[3][1] ),
        .I4(totallength[9]),
        .O(\data_width_64.m_axis_cc_tdata_h[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    \data_width_64.m_axis_cc_tdata_h[9]_i_2 
       (.I0(\data_width_64.tlptag_reg[2]_23 [1]),
        .I1(\data_width_64.tlptag_reg[0]_21 [1]),
        .I2(\data_width_64.tlptag_reg[3]_24 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlptag_reg[1]_22 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.m_axis_cc_tdata_h[9]_i_2_n_0 ));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[0]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[0]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [0]),
        .Q(m_axis_cc_tdata_h[10]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [1]),
        .Q(m_axis_cc_tdata_h[11]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[12]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[12]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[13]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[13]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [2]),
        .Q(m_axis_cc_tdata_h[14]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [3]),
        .Q(m_axis_cc_tdata_h[15]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [4]),
        .Q(m_axis_cc_tdata_h[16]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [5]),
        .Q(m_axis_cc_tdata_h[17]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [6]),
        .Q(m_axis_cc_tdata_h[18]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [7]),
        .Q(m_axis_cc_tdata_h[19]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[1]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[1]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[20]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[20]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[21]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[21]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[22]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[22]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [8]),
        .Q(m_axis_cc_tdata_h[23]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [9]),
        .Q(m_axis_cc_tdata_h[24]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [10]),
        .Q(m_axis_cc_tdata_h[25]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [11]),
        .Q(m_axis_cc_tdata_h[26]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [12]),
        .Q(m_axis_cc_tdata_h[27]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [13]),
        .Q(m_axis_cc_tdata_h[28]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [14]),
        .Q(m_axis_cc_tdata_h[29]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[2]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[2]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[30]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[30]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [15]),
        .Q(m_axis_cc_tdata_h[31]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[32]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[32]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[33]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[33]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[34]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[34]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[35]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[35]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[36]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[36]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[37]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[37]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[38]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[38]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[39]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[39]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[3]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[3]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[40]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[40]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[41]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[41]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[42]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[42]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[43]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[43]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [16]),
        .Q(m_axis_cc_tdata_h[44]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [17]),
        .Q(m_axis_cc_tdata_h[45]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [18]),
        .Q(m_axis_cc_tdata_h[46]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [19]),
        .Q(m_axis_cc_tdata_h[47]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [20]),
        .Q(m_axis_cc_tdata_h[48]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [21]),
        .Q(m_axis_cc_tdata_h[49]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[4]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[4]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [22]),
        .Q(m_axis_cc_tdata_h[50]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [23]),
        .Q(m_axis_cc_tdata_h[51]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [24]),
        .Q(m_axis_cc_tdata_h[52]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [25]),
        .Q(m_axis_cc_tdata_h[53]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [26]),
        .Q(m_axis_cc_tdata_h[54]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [27]),
        .Q(m_axis_cc_tdata_h[55]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [28]),
        .Q(m_axis_cc_tdata_h[56]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [29]),
        .Q(m_axis_cc_tdata_h[57]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [30]),
        .Q(m_axis_cc_tdata_h[58]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [31]),
        .Q(m_axis_cc_tdata_h[59]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[5]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[5]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [32]),
        .Q(m_axis_cc_tdata_h[60]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [33]),
        .Q(m_axis_cc_tdata_h[61]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [34]),
        .Q(m_axis_cc_tdata_h[62]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[39] [35]),
        .Q(m_axis_cc_tdata_h[63]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[6]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[6]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[7]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[7]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[8]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[8]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_h_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_h[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_h[9]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_h[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair555" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[0]_i_1 
       (.I0(p_3_out__0[0]),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair605" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[10]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[10]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[10]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][2] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][2] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][2] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][2] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair604" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[11]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[11]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[11]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][3] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][3] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][3] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][3] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair563" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[12]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[12]_i_2_n_0 ),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[12]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[12]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][4] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][4] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][4] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][4] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[12]_i_3 
       (.I0(\data_width_64.tlpndattr_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpndattr_reg_n_0_[1][0] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndattr_reg_n_0_[2][0] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndattr_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair564" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[13]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[13]_i_2_n_0 ),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[13]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[13]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][5] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][5] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][5] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][5] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[13]_i_3 
       (.I0(\data_width_64.tlpndattr_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpndattr_reg_n_0_[1][1] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndattr_reg_n_0_[2][1] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndattr_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair603" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[14]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[14]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[14]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][6] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][6] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][6] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][6] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[14]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair602" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[15]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[15]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[15]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][7] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][7] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][7] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][7] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair601" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[16]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[16]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[16]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][0] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][0] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[16]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair600" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[17]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[17]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[17]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][1] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][1] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair599" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[18]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[18]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[18]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][2] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][2] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][2] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][2] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[18]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair611" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[19]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[19]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[19]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][3] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][3] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][3] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][3] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[19]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair609" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[1]_i_1 
       (.I0(p_85_out),
        .I1(p_3_out__0[1]),
        .O(\data_width_64.m_axis_cc_tdata_nd[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair565" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[20]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[20]_i_2_n_0 ),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[20]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[20]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][4] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][4] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][4] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][4] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[20]_i_3 
       (.I0(\data_width_64.tlpndtc_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpndtc_reg_n_0_[1][0] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[2][0] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtc_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[20]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair566" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[21]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[21]_i_2_n_0 ),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[21]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[21]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][5] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][5] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][5] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][5] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[21]_i_3 
       (.I0(\data_width_64.tlpndtc_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpndtc_reg_n_0_[1][1] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[2][1] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtc_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[21]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair567" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[22]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[22]_i_2_n_0 ),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[22]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[22]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][6] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][6] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][6] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][6] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[22]_i_3 
       (.I0(\data_width_64.tlpndtc_reg_n_0_[3][2] ),
        .I1(\data_width_64.tlpndtc_reg_n_0_[1][2] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[2][2] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtc_reg_n_0_[0][2] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[22]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair597" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[23]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[23]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[23]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][7] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][7] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][7] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][7] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[23]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair596" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[24]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[24]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[24]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][8] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][8] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][8] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][8] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair563" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.m_axis_cc_tdata_nd[25]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[25]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[25]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][9] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][9] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][9] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][9] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[25]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair595" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[26]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[26]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[26]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][10] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][10] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][10] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][10] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[26]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair564" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.m_axis_cc_tdata_nd[27]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[27]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[27]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][11] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][11] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][11] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][11] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[28]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[28]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[28]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][12] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][12] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][12] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][12] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[28]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair598" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[29]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[29]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[29]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][13] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][13] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][13] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][13] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair610" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[2]_i_1 
       (.I0(p_85_out),
        .I1(p_3_out__0[2]),
        .O(\data_width_64.m_axis_cc_tdata_nd[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair556" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.m_axis_cc_tdata_nd[30]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[30]_i_2_n_0 ),
        .I1(p_85_out),
        .I2(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[30]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][14] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][14] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][14] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][14] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[30]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair594" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[31]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[31]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[31]_i_2 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[3][15] ),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][15] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndrequesterid_reg_n_0_[2][15] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndrequesterid_reg_n_0_[0][15] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair558" *) 
  LUT3 #(
    .INIT(8'h54)) 
    \data_width_64.m_axis_cc_tdata_nd[32]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[32]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[32]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][0] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][0] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[32]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair561" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[33]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[33]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[33]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][1] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][1] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair556" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[34]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[34]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[34]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][2] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][2] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][2] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][2] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[34]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair558" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[35]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[35]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[35]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][3] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][3] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][3] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][3] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[35]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair555" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[36]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[36]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[36]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][4] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][4] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][4] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][4] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[36]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair561" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[37]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[37]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[37]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][5] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][5] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][5] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][5] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[37]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair572" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[38]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[38]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[38]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][6] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][6] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][6] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][6] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[38]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair572" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[39]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[39]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[39]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][7] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][7] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][7] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][7] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[39]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair611" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[3]_i_1 
       (.I0(p_85_out),
        .I1(p_3_out__0[3]),
        .O(\data_width_64.m_axis_cc_tdata_nd[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair573" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[40]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[40]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[40]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][8] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][8] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][8] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][8] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[40]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair573" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[41]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[41]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[41]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][9] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][9] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][9] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][9] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[41]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair574" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[42]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[42]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[42]_i_2 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][10] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][10] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][10] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][10] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[42]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair574" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \data_width_64.m_axis_cc_tdata_nd[43]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_nd[43]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair586" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \data_width_64.m_axis_cc_tdata_nd[43]_i_2 
       (.I0(\data_width_64.cplndstatuscode_reg[3][2]_1 ),
        .I1(\data_width_64.cplndstatuscode_reg[3][0]_0 ),
        .I2(\data_width_64.cplndstatuscode_reg[3][1]_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[43]_i_3 
       (.I0(\data_width_64.tlpndbytecount_reg_n_0_[3][11] ),
        .I1(\data_width_64.tlpndbytecount_reg_n_0_[1][11] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndbytecount_reg_n_0_[2][11] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndbytecount_reg_n_0_[0][11] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[43]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair607" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[45]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[3][0]_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair608" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[46]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[3][1]_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[46]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair586" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[47]_i_1 
       (.I0(\data_width_64.cplndstatuscode_reg[3][2]_1 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[47]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair565" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[48]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[48]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[48]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[48]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][0] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][0] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[48]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair566" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[49]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[49]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[49]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[49]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][1] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][1] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[49]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair610" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[4]_i_1 
       (.I0(p_85_out),
        .I1(p_3_out__0[4]),
        .O(\data_width_64.m_axis_cc_tdata_nd[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair567" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[50]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[50]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[50]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[50]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][2] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][2] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][2] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][2] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[50]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair594" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[51]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[51]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[51]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[51]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][3] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][3] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][3] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][3] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[51]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair595" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[52]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[52]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[52]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[52]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][4] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][4] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][4] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][4] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[52]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair596" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[53]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[53]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[53]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[53]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][5] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][5] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][5] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][5] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[53]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair597" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[54]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[54]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[54]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[54]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][6] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][6] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][6] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][6] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[54]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair598" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[55]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[55]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[55]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[55]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][7] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][7] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][7] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][7] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[55]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair599" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[56]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[56]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[56]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[56]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][8] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][8] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][8] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][8] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[56]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair600" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[57]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[57]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[57]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[57]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][9] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][9] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][9] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][9] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[57]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair601" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[58]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[58]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[58]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[58]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][10] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][10] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][10] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][10] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[58]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair602" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[59]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[59]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[59]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[59]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][11] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][11] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][11] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][11] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[59]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair609" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[5]_i_1 
       (.I0(p_85_out),
        .I1(p_3_out__0[5]),
        .O(\data_width_64.m_axis_cc_tdata_nd[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair603" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[60]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[60]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[60]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[60]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][12] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][12] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][12] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][12] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[60]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair604" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[61]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[61]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[61]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[61]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][13] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][13] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][13] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][13] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[61]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair605" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[62]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[62]_i_2_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[62]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[62]_i_2 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][14] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][14] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][14] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][14] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[62]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_1 
       (.I0(p_17_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair606" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[63]_i_5_n_0 ),
        .I1(p_85_out),
        .O(\data_width_64.m_axis_cc_tdata_nd[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_3 
       (.I0(cplndpendcpl[3]),
        .I1(cplndpendcpl[2]),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I3(cplndpendcpl[1]),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I5(cplndpendcpl[0]),
        .O(p_17_in));
  LUT6 #(
    .INIT(64'h000000BE00000000)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_4 
       (.I0(\data_width_64.m_axis_cc_tdata_nd[63]_i_7_n_0 ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I5(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_5 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[3][15] ),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][15] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndcompleterid_reg_n_0_[2][15] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndcompleterid_reg_n_0_[0][15] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[63]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_6 
       (.I0(s_axis_cc_tvalid_q_reg),
        .I1(sig_m_axis_cc_tready),
        .O(p_85_out));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \data_width_64.m_axis_cc_tdata_nd[63]_i_7 
       (.I0(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(cplndtargetpipeline),
        .I3(rdndtargetpipeline[2]),
        .O(\data_width_64.m_axis_cc_tdata_nd[63]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair608" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[6]_i_1 
       (.I0(p_85_out),
        .I1(p_3_out__0[6]),
        .O(\data_width_64.m_axis_cc_tdata_nd[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair607" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[8]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[8]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[8]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][0] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][0] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][0] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][0] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair606" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.m_axis_cc_tdata_nd[9]_i_1 
       (.I0(p_85_out),
        .I1(\data_width_64.m_axis_cc_tdata_nd[9]_i_2_n_0 ),
        .O(\data_width_64.m_axis_cc_tdata_nd[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.m_axis_cc_tdata_nd[9]_i_2 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[3][1] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][1] ),
        .I2(\data_width_64.cplndtargetpipeline_reg[2]_0 [0]),
        .I3(\data_width_64.tlpndtag_reg_n_0_[2][1] ),
        .I4(\data_width_64.cplndtargetpipeline_reg[2]_0 [1]),
        .I5(\data_width_64.tlpndtag_reg_n_0_[0][1] ),
        .O(\data_width_64.m_axis_cc_tdata_nd[9]_i_2_n_0 ));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[0]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[0]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[10]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[10]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[11]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[11]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[12]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[12]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[13]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[13]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[14]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[14]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[15]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[15]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[16]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[16]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[17]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[17]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[18]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[18]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[19]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[19]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[1]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[1]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[20]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[20]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[21]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[21]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[22]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[22]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[23]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[23]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[24]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[24]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[25]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[25]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[26]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[26]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[27]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[27]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[28]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[28]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[29]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[29]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[2]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[2]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[30]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[30]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[31]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[31]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[32]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[32]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[33]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[33]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[34]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[34]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[35]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[35]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[36]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[36]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[37]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[37]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[38]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[38]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[39]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[39]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[3]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[3]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[40]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[40]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[41]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[41]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[42]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[42]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[43]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[43]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[45]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[45]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[46]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[46]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[47]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[47]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[48]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[48]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[49]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[49]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[4]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[4]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[50]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[50]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[51]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[51]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[52]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[52]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[53]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[53]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[54]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[54]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[55]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[55]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[56]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[56]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[57]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[57]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[58]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[58]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[59]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[59]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[5]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[5]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[60]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[60]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[61]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[61]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[62]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[62]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[63]_i_2_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[63]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[6]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[6]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[8]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[8]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdata_nd_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdata_nd[63]_i_1_n_0 ),
        .D(\data_width_64.m_axis_cc_tdata_nd[9]_i_1_n_0 ),
        .Q(m_axis_cc_tdata_nd__0[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \data_width_64.m_axis_cc_tdatatemp64[31]_i_1 
       (.I0(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.linkdownflushdepth[9]_i_3_n_0 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I4(sig_m_axis_cc_tready),
        .I5(\data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ),
        .O(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair591" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.m_axis_cc_tdatatemp64[31]_i_2 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(emptysig),
        .O(\data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [32]),
        .Q(m_axis_cc_tdatatemp64[0]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [42]),
        .Q(m_axis_cc_tdatatemp64[10]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [43]),
        .Q(m_axis_cc_tdatatemp64[11]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [44]),
        .Q(m_axis_cc_tdatatemp64[12]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [45]),
        .Q(m_axis_cc_tdatatemp64[13]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [46]),
        .Q(m_axis_cc_tdatatemp64[14]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [47]),
        .Q(m_axis_cc_tdatatemp64[15]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [48]),
        .Q(m_axis_cc_tdatatemp64[16]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [49]),
        .Q(m_axis_cc_tdatatemp64[17]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [50]),
        .Q(m_axis_cc_tdatatemp64[18]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [51]),
        .Q(m_axis_cc_tdatatemp64[19]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [33]),
        .Q(m_axis_cc_tdatatemp64[1]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [52]),
        .Q(m_axis_cc_tdatatemp64[20]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [53]),
        .Q(m_axis_cc_tdatatemp64[21]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [54]),
        .Q(m_axis_cc_tdatatemp64[22]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [55]),
        .Q(m_axis_cc_tdatatemp64[23]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [56]),
        .Q(m_axis_cc_tdatatemp64[24]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [57]),
        .Q(m_axis_cc_tdatatemp64[25]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [58]),
        .Q(m_axis_cc_tdatatemp64[26]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [59]),
        .Q(m_axis_cc_tdatatemp64[27]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [60]),
        .Q(m_axis_cc_tdatatemp64[28]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [61]),
        .Q(m_axis_cc_tdatatemp64[29]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [34]),
        .Q(m_axis_cc_tdatatemp64[2]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [62]),
        .Q(m_axis_cc_tdatatemp64[30]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [63]),
        .Q(m_axis_cc_tdatatemp64[31]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [35]),
        .Q(m_axis_cc_tdatatemp64[3]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [36]),
        .Q(m_axis_cc_tdatatemp64[4]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [37]),
        .Q(m_axis_cc_tdatatemp64[5]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [38]),
        .Q(m_axis_cc_tdatatemp64[6]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [39]),
        .Q(m_axis_cc_tdatatemp64[7]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [40]),
        .Q(m_axis_cc_tdatatemp64[8]),
        .R(SR));
  FDRE \data_width_64.m_axis_cc_tdatatemp64_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.m_axis_cc_tdatatemp64[31]_i_1_n_0 ),
        .D(\goreg_bm.dout_i_reg[63] [41]),
        .Q(m_axis_cc_tdatatemp64[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h88080000)) 
    \data_width_64.m_axis_cc_tlast_d_i_2 
       (.I0(rdreq_reg),
        .I1(p_76_out),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(eqOp20_in),
        .I4(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .O(m_axis_cc_tlast_d19_out));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \data_width_64.m_axis_cc_tlast_d_i_3 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I5(\data_width_64.data_phase_i_4_n_0 ),
        .O(\data_width_64.m_axis_cc_tlast_d_reg_1 ));
  LUT6 #(
    .INIT(64'h6626060626260606)) 
    \data_width_64.m_axis_cc_tlast_d_i_4 
       (.I0(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ),
        .I4(sig_m_axis_cc_tready),
        .I5(m_axis_cc_tlast_d26_in),
        .O(\data_width_64.m_axis_cc_tlast_d_reg_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \data_width_64.m_axis_cc_tlast_d_i_5 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[5] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[9] ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .I5(\data_width_64.m_axis_cc_tlast_d_i_6_n_0 ),
        .O(eqOp20_in));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \data_width_64.m_axis_cc_tlast_d_i_6 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I1(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I2(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I3(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .I4(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .O(\data_width_64.m_axis_cc_tlast_d_i_6_n_0 ));
  FDRE \data_width_64.m_axis_cc_tlast_d_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[1]_2 ),
        .Q(s_axis_tx_tlast_d_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \data_width_64.m_axis_cc_tlast_nd_i_1 
       (.I0(p_85_out),
        .I1(rdreq_reg),
        .I2(p_17_in),
        .I3(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I4(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .O(\data_width_64.m_axis_cc_tlast_nd_i_1_n_0 ));
  FDRE \data_width_64.m_axis_cc_tlast_nd_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndtlpsmsig_reg[1]_0 ),
        .D(\data_width_64.m_axis_cc_tlast_nd_i_1_n_0 ),
        .Q(s_axis_tx_tlast_d_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'hFAEFFFEF0A200020)) 
    \data_width_64.m_axis_cc_tstrb_d[7]_i_1 
       (.I0(\data_width_64.m_axis_cc_tstrb_d[7]_i_2_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.m_axis_cc_tstrb_d[7]_i_3_n_0 ),
        .I5(m_axis_cc_tstrb_d),
        .O(\data_width_64.m_axis_cc_tstrb_d[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB8B888B8888888B8)) 
    \data_width_64.m_axis_cc_tstrb_d[7]_i_2 
       (.I0(\data_width_64.m_axis_cc_tstrb_d[7]_i_4_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I3(p_76_out),
        .I4(\data_width_64.rresp_reg[3][1] ),
        .I5(rdreq_reg),
        .O(\data_width_64.m_axis_cc_tstrb_d[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h80FF800080008000)) 
    \data_width_64.m_axis_cc_tstrb_d[7]_i_3 
       (.I0(sig_m_axis_cc_tready),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ),
        .I2(m_axis_cc_tlast_d26_in),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I4(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I5(rdreq_reg),
        .O(\data_width_64.m_axis_cc_tstrb_d[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair591" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.m_axis_cc_tstrb_d[7]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[0] ),
        .I1(\data_width_64.dis_rden_reg_1 ),
        .O(\data_width_64.m_axis_cc_tstrb_d[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \data_width_64.m_axis_cc_tstrb_d[7]_i_5 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I4(\data_width_64.data_phase_i_4_n_0 ),
        .O(m_axis_cc_tlast_d26_in));
  FDRE \data_width_64.m_axis_cc_tstrb_d_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.m_axis_cc_tstrb_d[7]_i_1_n_0 ),
        .Q(m_axis_cc_tstrb_d),
        .R(SR));
  LUT6 #(
    .INIT(64'h4404000000000000)) 
    \data_width_64.m_axis_cc_tstrb_nd[7]_i_1 
       (.I0(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .I1(p_17_in),
        .I2(p_85_out),
        .I3(\data_width_64.m_axis_cc_tdata_nd[43]_i_2_n_0 ),
        .I4(rdreq_reg),
        .I5(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .O(\data_width_64.m_axis_cc_tstrb_nd[7]_i_1_n_0 ));
  FDRE \data_width_64.m_axis_cc_tstrb_nd_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndtlpsmsig_reg[1]_0 ),
        .D(\data_width_64.m_axis_cc_tstrb_nd[7]_i_1_n_0 ),
        .Q(m_axis_cc_tstrb_nd),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000006E556E)) 
    \data_width_64.m_axis_cc_tvalid_d_i_2 
       (.I0(emptysig),
        .I1(rdreq_reg),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I4(\data_width_64.dis_rden_reg_1 ),
        .I5(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.m_axis_cc_tvalid_d_reg_2 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT3 #(
    .INIT(8'h4D)) 
    \data_width_64.m_axis_cc_tvalid_d_i_3 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(sig_m_axis_cc_tready),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.m_axis_cc_tvalid_d_reg_0 ));
  LUT6 #(
    .INIT(64'h8FAF80AF80A080A0)) 
    \data_width_64.m_axis_cc_tvalid_d_i_4 
       (.I0(sig_m_axis_cc_tready),
        .I1(\data_width_64.dis_rden_reg_1 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(emptysig),
        .I4(rdreq_reg),
        .I5(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .O(\data_width_64.m_axis_cc_tvalid_d_reg_1 ));
  FDRE \data_width_64.m_axis_cc_tvalid_d_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[0]_2 ),
        .Q(s_axis_cc_tvalid_q_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \data_width_64.m_axis_cc_tvalid_nd_i_2 
       (.I0(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I1(p_17_in),
        .I2(rdreq_reg),
        .I3(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .O(\data_width_64.m_axis_cc_tvalid_nd_i_2_n_0 ));
  FDRE \data_width_64.m_axis_cc_tvalid_nd_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndtlpsmsig_reg[1]_0 ),
        .D(\data_width_64.m_axis_cc_tvalid_nd_i_2_n_0 ),
        .Q(s_axis_cc_tvalid_q_reg),
        .R(SR));
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.orcplndpipeline[0]_i_1 
       (.I0(neqOp0_out),
        .I1(p_14_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .O(\data_width_64.orcplndpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.orcplndpipeline[1]_i_1 
       (.I0(neqOp0_out),
        .I1(p_14_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .O(\data_width_64.orcplndpipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \data_width_64.orcplndpipeline[2]_i_1 
       (.I0(neqOp0_out),
        .I1(p_14_out),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I4(\data_width_64.orcplndpipeline_reg_n_0_[2] ),
        .O(\data_width_64.orcplndpipeline[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \data_width_64.orcplndpipeline[2]_i_2 
       (.I0(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I1(rdndtargetpipeline[0]),
        .I2(rdndtargetpipeline[2]),
        .I3(\data_width_64.orcplndpipeline_reg_n_0_[2] ),
        .I4(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .O(neqOp0_out));
  LUT3 #(
    .INIT(8'hFE)) 
    \data_width_64.orcplndpipeline[2]_i_3 
       (.I0(\data_width_64.orcplndpipeline[2]_i_4_n_0 ),
        .I1(eqOp0_out),
        .I2(\data_width_64.wrreqpendsig_reg[0] ),
        .O(p_14_out));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.orcplndpipeline[2]_i_4 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[3][3] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[1][3] ),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[2][3] ),
        .I4(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[0][3] ),
        .O(\data_width_64.orcplndpipeline[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \data_width_64.orcplndpipeline[2]_i_5 
       (.I0(\data_width_64.orcplndpipeline[2]_i_6_n_0 ),
        .I1(\respmmpipeline_reg[0] ),
        .I2(\respmmpipeline_reg[2] ),
        .I3(\data_width_64.orcplndpipeline[2]_i_7_n_0 ),
        .I4(\respmmpipeline_reg[1] ),
        .I5(\data_width_64.orcplndpipeline[2]_i_8_n_0 ),
        .O(eqOp0_out));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.orcplndpipeline[2]_i_6 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[3][0] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[1][0] ),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[2][0] ),
        .I4(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[0][0] ),
        .O(\data_width_64.orcplndpipeline[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.orcplndpipeline[2]_i_7 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[3][2] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[1][2] ),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[2][2] ),
        .I4(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[0][2] ),
        .O(\data_width_64.orcplndpipeline[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_width_64.orcplndpipeline[2]_i_8 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[3][1] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[1][1] ),
        .I2(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[2][1] ),
        .I4(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[0][1] ),
        .O(\data_width_64.orcplndpipeline[2]_i_8_n_0 ));
  FDRE \data_width_64.orcplndpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.orcplndpipeline[0]_i_1_n_0 ),
        .Q(\data_width_64.orcplndpipeline_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.orcplndpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.orcplndpipeline[1]_i_1_n_0 ),
        .Q(\data_width_64.orcplndpipeline_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.orcplndpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.orcplndpipeline[2]_i_1_n_0 ),
        .Q(\data_width_64.orcplndpipeline_reg_n_0_[2] ),
        .R(SR));
  LUT6 #(
    .INIT(64'hBB8B888B88888888)) 
    \data_width_64.rd_en_sig_i_2 
       (.I0(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(emptysig),
        .I3(rdreq_reg),
        .I4(p_76_out),
        .I5(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .O(\data_width_64.rd_en_sig_reg_2 ));
  LUT6 #(
    .INIT(64'hAAAAFAFFEAFFAAAA)) 
    \data_width_64.rd_en_sig_i_3 
       (.I0(\data_width_64.rd_en_sig_i_4_n_0 ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[0]_0 ),
        .I2(sig_m_axis_cc_tready),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.rd_en_sig_reg_1 ));
  LUT6 #(
    .INIT(64'h0000000044044444)) 
    \data_width_64.rd_en_sig_i_4 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.lnkdowndataflush_i_5_n_0 ),
        .I3(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I4(\data_width_64.lnkdowndataflush_reg_0 ),
        .I5(emptysig),
        .O(\data_width_64.rd_en_sig_i_4_n_0 ));
  FDRE \data_width_64.rd_en_sig_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[1]_3 ),
        .Q(\data_width_64.rd_en_sig_reg_0 ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT4 #(
    .INIT(16'h88B8)) 
    \data_width_64.rdndreqpipelinedecr_i_1 
       (.I0(sig_m_axis_cc_tready),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_0 ),
        .I2(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I3(rdreq_reg),
        .O(\data_width_64.rdndreqpipelinedecr_i_1_n_0 ));
  FDRE \data_width_64.rdndreqpipelinedecr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cplndtlpsmsig_reg[1]_0 ),
        .D(\data_width_64.rdndreqpipelinedecr_i_1_n_0 ),
        .Q(\data_width_64.rdndreqpipelinedecr_reg_n_0 ),
        .R(SR));
  LUT6 #(
    .INIT(64'h400F000F4F0F000F)) 
    \data_width_64.rdndreqpipelineincr_i_2 
       (.I0(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I1(s_axis_cr_tready_sig106_out),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(s_axis_cr_tready_sig61_out),
        .I5(\data_width_64.tagsig_reg[0]_0 ),
        .O(\data_width_64.rdndreqpipelineincr_reg_0 ));
  FDRE \data_width_64.rdndreqpipelineincr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig_reg[2]_1 ),
        .Q(rdndreqpipelineincr),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.rdndtargetpipeline[0]_i_1 
       (.I0(\data_width_64.rdndtargetpipeline[2]_i_2_n_0 ),
        .I1(rdndtargetpipeline[0]),
        .O(\data_width_64.rdndtargetpipeline[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.rdndtargetpipeline[0]_rep_i_1 
       (.I0(\data_width_64.rdndtargetpipeline[2]_i_2_n_0 ),
        .I1(rdndtargetpipeline[0]),
        .O(\data_width_64.rdndtargetpipeline[0]_rep_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.rdndtargetpipeline[1]_i_1 
       (.I0(rdndtargetpipeline[0]),
        .I1(\data_width_64.rdndtargetpipeline[2]_i_2_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(\data_width_64.rdndtargetpipeline[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.rdndtargetpipeline[1]_rep_i_1 
       (.I0(rdndtargetpipeline[0]),
        .I1(\data_width_64.rdndtargetpipeline[2]_i_2_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .O(\data_width_64.rdndtargetpipeline[1]_rep_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.rdndtargetpipeline[2]_i_1 
       (.I0(rdndtargetpipeline[0]),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdndtargetpipeline[2]_i_2_n_0 ),
        .I3(rdndtargetpipeline[2]),
        .O(\data_width_64.rdndtargetpipeline[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA200000002000)) 
    \data_width_64.rdndtargetpipeline[2]_i_2 
       (.I0(\data_width_64.tagsig_reg[0]_1 ),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(rdreq_reg),
        .I3(neqOp57_in),
        .I4(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I5(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_9_n_0 ),
        .O(\data_width_64.rdndtargetpipeline[2]_i_2_n_0 ));
  (* ORIG_CELL_NAME = "data_width_64.rdndtargetpipeline_reg[0]" *) 
  FDRE \data_width_64.rdndtargetpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdndtargetpipeline[0]_i_1_n_0 ),
        .Q(rdndtargetpipeline[0]),
        .R(SR));
  (* ORIG_CELL_NAME = "data_width_64.rdndtargetpipeline_reg[0]" *) 
  FDRE \data_width_64.rdndtargetpipeline_reg[0]_rep 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdndtargetpipeline[0]_rep_i_1_n_0 ),
        .Q(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .R(SR));
  (* ORIG_CELL_NAME = "data_width_64.rdndtargetpipeline_reg[1]" *) 
  FDRE \data_width_64.rdndtargetpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdndtargetpipeline[1]_i_1_n_0 ),
        .Q(rdndtargetpipeline[1]),
        .R(SR));
  (* ORIG_CELL_NAME = "data_width_64.rdndtargetpipeline_reg[1]" *) 
  FDRE \data_width_64.rdndtargetpipeline_reg[1]_rep 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdndtargetpipeline[1]_rep_i_1_n_0 ),
        .Q(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .R(SR));
  FDRE \data_width_64.rdndtargetpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdndtargetpipeline[2]_i_1_n_0 ),
        .Q(rdndtargetpipeline[2]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.rdndtlpaddrl_reg_0_3_0_5 
       (.ADDRA({1'b0,1'b0,1'b0,\data_width_64.cplndtargetpipeline_reg[2]_0 }),
        .ADDRB({1'b0,1'b0,1'b0,\data_width_64.cplndtargetpipeline_reg[2]_0 }),
        .ADDRC({1'b0,1'b0,1'b0,\data_width_64.cplndtargetpipeline_reg[2]_0 }),
        .ADDRD({1'b0,1'b0,1'b0,rdndtargetpipeline[1],\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 }),
        .DIA({\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_2_n_0 ,\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_3_n_0 }),
        .DIB({\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_4_n_0 ,\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_5_n_0 }),
        .DIC({\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_6_n_0 ,\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_7_n_0 }),
        .DID({1'b0,1'b0}),
        .DOA(p_3_out__0[1:0]),
        .DOB(p_3_out__0[3:2]),
        .DOC(p_3_out__0[5:4]),
        .DOD(\NLW_data_width_64.rdndtlpaddrl_reg_0_3_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000F80800000000)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_1 
       (.I0(neqOp57_in),
        .I1(rdreq_reg),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I3(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_9_n_0 ),
        .I4(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_10_n_0 ),
        .I5(axi_aresetn),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h5D)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_10 
       (.I0(\data_width_64.tagsig_reg[0]_1 ),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0302FFFF03020000)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_2 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I2(p_0_in0_in),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I4(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I5(\data_width_64.rdndtlpaddrlow_reg_n_0_[1] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00DCFFFF00DC0000)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_3 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I4(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I5(\data_width_64.rdndtlpaddrlow_reg_n_0_[0] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_4 
       (.I0(\m_axis_cr_tdata_reg[63] [3]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [27]),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(\data_width_64.rdndtlpaddrlow_reg_n_0_[3] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_5 
       (.I0(\m_axis_cr_tdata_reg[63] [2]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [26]),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(\data_width_64.rdndtlpaddrlow_reg_n_0_[2] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_6 
       (.I0(\m_axis_cr_tdata_reg[63] [5]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [29]),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(\data_width_64.rdndtlpaddrlow_reg_n_0_[5] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_7 
       (.I0(\m_axis_cr_tdata_reg[63] [4]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [28]),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(\data_width_64.rdndtlpaddrlow_reg_n_0_[4] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_8 
       (.I0(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .I1(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .O(neqOp57_in));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_9 
       (.I0(neqOp57_in),
        .I1(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I2(rdreq_reg),
        .I3(sig_s_axis_cr_tlast),
        .I4(cr_full),
        .I5(sig_blk_lnk_up),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_9_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.rdndtlpaddrl_reg_0_3_6_6 
       (.ADDRA({1'b0,1'b0,1'b0,\data_width_64.cplndtargetpipeline_reg[2]_0 }),
        .ADDRB({1'b0,1'b0,1'b0,\data_width_64.cplndtargetpipeline_reg[2]_0 }),
        .ADDRC({1'b0,1'b0,1'b0,\data_width_64.cplndtargetpipeline_reg[2]_0 }),
        .ADDRD({1'b0,1'b0,1'b0,\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ,rdndtargetpipeline[0]}),
        .DIA({1'b0,\data_width_64.rdndtlpaddrl_reg_0_3_6_6_i_1_n_0 }),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOA_UNCONNECTED [1],p_3_out__0[6]}),
        .DOB(\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOB_UNCONNECTED [1:0]),
        .DOC(\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_data_width_64.rdndtlpaddrl_reg_0_3_6_6_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdndtlpaddrl_reg_0_3_6_6_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [6]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [30]),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(\data_width_64.rdndtlpaddrlow_reg_n_0_[6] ),
        .O(\data_width_64.rdndtlpaddrl_reg_0_3_6_6_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \data_width_64.rdndtlpaddrlow[6]_i_1 
       (.I0(axi_aresetn),
        .I1(user_lnk_up_mux_reg_1),
        .I2(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I3(neqOp57_in),
        .I4(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I5(\data_width_64.tagsig_reg[0]_1 ),
        .O(rdndtlpaddrlow));
  FDRE \data_width_64.rdndtlpaddrlow_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(\data_width_64.tlpaddrlow[0]_i_1_n_0 ),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \data_width_64.rdndtlpaddrlow_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(p_8_out),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \data_width_64.rdndtlpaddrlow_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(\m_axis_cr_tdata_reg[6] [0]),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \data_width_64.rdndtlpaddrlow_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(\m_axis_cr_tdata_reg[6] [1]),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \data_width_64.rdndtlpaddrlow_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(\m_axis_cr_tdata_reg[6] [2]),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \data_width_64.rdndtlpaddrlow_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(\m_axis_cr_tdata_reg[6] [3]),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \data_width_64.rdndtlpaddrlow_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(rdndtlpaddrlow),
        .D(\m_axis_cr_tdata_reg[6] [4]),
        .Q(\data_width_64.rdndtlpaddrlow_reg_n_0_[6] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h88888888888B8888)) 
    \data_width_64.rdreqpipelinedecr_i_2 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I2(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I3(emptysig),
        .I4(\end_point.psr_reg[2] ),
        .I5(\data_width_64.lnkdowndataflush_reg_0 ),
        .O(\data_width_64.rdreqpipelinedecr_reg_0 ));
  LUT6 #(
    .INIT(64'h0CCC2CCC0C0C0C0C)) 
    \data_width_64.rdreqpipelinedecr_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.cpltlpsmsig[1]_i_5_n_0 ),
        .I5(sig_m_axis_cc_tready),
        .O(\data_width_64.rdreqpipelinedecr_reg_1 ));
  FDRE \data_width_64.rdreqpipelinedecr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[1]_1 ),
        .Q(\rd_req_32_64.rdreqpipeline_reg[2]_0 ),
        .R(SR));
  LUT6 #(
    .INIT(64'hB000800033333333)) 
    \data_width_64.rdreqpipelineincr_i_2 
       (.I0(user_lnk_up_mux_reg),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(neqOp37_in),
        .I3(rdreq_reg),
        .I4(\data_width_64.tagsig_reg[0]_0 ),
        .I5(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .O(\data_width_64.rdreqpipelineincr_reg_0 ));
  FDRE \data_width_64.rdreqpipelineincr_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig_reg[1]_1 ),
        .Q(rdreq_ordernotreq),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.rdreqsmsig[0]_i_1 
       (.I0(\data_width_64.rdreqsmsig[0]_i_2_n_0 ),
        .I1(rdreqsmsig),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .O(\data_width_64.rdreqsmsig[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h40C040F070337033)) 
    \data_width_64.rdreqsmsig[0]_i_2 
       (.I0(\data_width_64.rdreqsmsig[2]_i_2_n_0 ),
        .I1(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(\m_axis_cr_tdata_reg[63] [23]),
        .I5(\data_width_64.tagsig_reg[0]_0 ),
        .O(\data_width_64.rdreqsmsig[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'h88FF3000)) 
    \data_width_64.rdreqsmsig[1]_i_1 
       (.I0(\data_width_64.rdreqsmsig[1]_i_2_n_0 ),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .I3(rdreqsmsig),
        .I4(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .O(\data_width_64.rdreqsmsig[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h202F2F2F2F2F2F2F)) 
    \data_width_64.rdreqsmsig[1]_i_2 
       (.I0(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I1(neqOp37_in),
        .I2(rdreq_reg),
        .I3(sig_blk_lnk_up),
        .I4(cr_full),
        .I5(sig_s_axis_cr_tlast),
        .O(\data_width_64.rdreqsmsig[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8080FFFF30000000)) 
    \data_width_64.rdreqsmsig[2]_i_1 
       (.I0(\data_width_64.rdreqsmsig[2]_i_2_n_0 ),
        .I1(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_0 ),
        .I4(rdreqsmsig),
        .I5(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.rdreqsmsig[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h02020200)) 
    \data_width_64.rdreqsmsig[2]_i_2 
       (.I0(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .I1(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .I3(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .I4(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .O(\data_width_64.rdreqsmsig[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFCFAFFFAFC0AFFF)) 
    \data_width_64.rdreqsmsig[2]_i_3 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_i_4_n_0 ),
        .I1(s_axis_cr_tready_sig106_out),
        .I2(\data_width_64.rdreqsmsig[2]_i_5_n_0 ),
        .I3(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_10_n_0 ),
        .I4(rdreq_reg),
        .I5(neqOp57_in),
        .O(rdreqsmsig));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.rdreqsmsig[2]_i_5 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.rdreqsmsig[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBFB0B0B0B0B0B0B0)) 
    \data_width_64.rdreqsmsig[2]_i_7 
       (.I0(neqOp37_in),
        .I1(rdreq_reg),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .I3(cr_full),
        .I4(sig_blk_lnk_up),
        .I5(sig_s_axis_cr_tlast),
        .O(\data_width_64.rdreqsmsig[2]_i_7_n_0 ));
  FDRE \data_width_64.rdreqsmsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig[0]_i_1_n_0 ),
        .Q(\data_width_64.tagsig_reg[0]_0 ),
        .R(SR));
  FDRE \data_width_64.rdreqsmsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig[1]_i_1_n_0 ),
        .Q(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .R(SR));
  FDRE \data_width_64.rdreqsmsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig[2]_i_1_n_0 ),
        .Q(\data_width_64.tagsig_reg[0]_1 ),
        .R(SR));
  MUXF7 \data_width_64.rdreqsmsig_reg[2]_i_4 
       (.I0(\m_axis_cr_tdata_reg[30] ),
        .I1(\data_width_64.rdreqsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.rdreqsmsig_reg[2]_i_4_n_0 ),
        .S(\data_width_64.rdreqsmsig_reg[2]_0 ));
  LUT4 #(
    .INIT(16'h8FB0)) 
    \data_width_64.rdtargetpipeline[0]_i_1 
       (.I0(sig_addrstreampipeline[0]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.rdtargetpipeline[2]_i_2_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .O(\data_width_64.rdtargetpipeline[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8FB0)) 
    \data_width_64.rdtargetpipeline[0]_rep_i_1 
       (.I0(sig_addrstreampipeline[0]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.rdtargetpipeline[2]_i_2_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .O(\data_width_64.rdtargetpipeline[0]_rep_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8BFFB800)) 
    \data_width_64.rdtargetpipeline[1]_i_1 
       (.I0(sig_addrstreampipeline[1]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline[2]_i_2_n_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.rdtargetpipeline[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8BFFB800)) 
    \data_width_64.rdtargetpipeline[1]_rep_i_1 
       (.I0(sig_addrstreampipeline[1]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline[2]_i_2_n_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.rdtargetpipeline[1]_rep_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8BBBFFFFB8880000)) 
    \data_width_64.rdtargetpipeline[2]_i_1 
       (.I0(sig_addrstreampipeline[2]),
        .I1(\ctargetpipeline[2]_i_2_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I4(\data_width_64.rdtargetpipeline[2]_i_2_n_0 ),
        .I5(rdtargetpipeline),
        .O(\data_width_64.rdtargetpipeline[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFEAEAEAAAAAAAAA)) 
    \data_width_64.rdtargetpipeline[2]_i_2 
       (.I0(\ctargetpipeline[2]_i_2_n_0 ),
        .I1(\data_width_64.rdtargetpipeline[2]_i_3_n_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(\data_width_64.tagsig_reg[0]_0 ),
        .I4(\data_width_64.tlpaddrl_reg_0_3_0_5_i_8_n_0 ),
        .I5(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .O(\data_width_64.rdtargetpipeline[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.rdtargetpipeline[2]_i_3 
       (.I0(neqOp37_in),
        .I1(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I2(rdreq_reg),
        .I3(sig_s_axis_cr_tlast),
        .I4(cr_full),
        .I5(sig_blk_lnk_up),
        .O(\data_width_64.rdtargetpipeline[2]_i_3_n_0 ));
  (* ORIG_CELL_NAME = "data_width_64.rdtargetpipeline_reg[0]" *) 
  FDRE \data_width_64.rdtargetpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdtargetpipeline[0]_i_1_n_0 ),
        .Q(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .R(SR));
  (* ORIG_CELL_NAME = "data_width_64.rdtargetpipeline_reg[0]" *) 
  FDRE \data_width_64.rdtargetpipeline_reg[0]_rep 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdtargetpipeline[0]_rep_i_1_n_0 ),
        .Q(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .R(SR));
  (* ORIG_CELL_NAME = "data_width_64.rdtargetpipeline_reg[1]" *) 
  FDRE \data_width_64.rdtargetpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdtargetpipeline[1]_i_1_n_0 ),
        .Q(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .R(SR));
  (* ORIG_CELL_NAME = "data_width_64.rdtargetpipeline_reg[1]" *) 
  FDRE \data_width_64.rdtargetpipeline_reg[1]_rep 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdtargetpipeline[1]_rep_i_1_n_0 ),
        .Q(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .R(SR));
  FDRE \data_width_64.rdtargetpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdtargetpipeline[2]_i_1_n_0 ),
        .Q(rdtargetpipeline),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5 
       (.ADDRA({1'b0,1'b0,1'b0,plusOp42,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_9_n_0 }),
        .ADDRB({1'b0,1'b0,1'b0,plusOp42,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_9_n_0 }),
        .ADDRC({1'b0,1'b0,1'b0,plusOp42,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_9_n_0 }),
        .ADDRD({1'b0,1'b0,1'b0,\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ,\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 }),
        .DIA({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_2_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_3_n_0 }),
        .DIB({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_4_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_5_n_0 }),
        .DIC({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_6_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_7_n_0 }),
        .DID({1'b0,1'b0}),
        .DOA({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_1 }),
        .DOB({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_2 ,p_5_out}),
        .DOC({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_4 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_n_5 }),
        .DOD(\NLW_data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8808080800000000)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_1 
       (.I0(neqOp37_in),
        .I1(rdreq_reg),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(s_axis_cr_tready_sig106_out),
        .I4(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I5(tlpaddrl),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_10 
       (.I0(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .O(neqOp37_in));
  LUT2 #(
    .INIT(4'h1)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_12 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .O(\data_width_64.rdndtlpaddrlow_reg[0]_0 ));
  LUT4 #(
    .INIT(16'hA800)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_13 
       (.I0(axi_aresetn),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .O(tlpaddrl));
  LUT6 #(
    .INIT(64'h0302FFFF03020000)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_2 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I2(p_0_in0_in),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .I5(tlpaddrlow[1]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00DCFFFF00DC0000)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_3 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .I5(tlpaddrlow[0]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_4 
       (.I0(\m_axis_cr_tdata_reg[63] [3]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [27]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(tlpaddrlow[3]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_5 
       (.I0(\m_axis_cr_tdata_reg[63] [2]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [26]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(tlpaddrlow[2]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_6 
       (.I0(\m_axis_cr_tdata_reg[63] [5]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [29]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(tlpaddrlow[5]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_7 
       (.I0(\m_axis_cr_tdata_reg[63] [4]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [28]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(tlpaddrlow[4]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_8 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I1(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .O(plusOp42));
  LUT1 #(
    .INIT(2'h1)) 
    \data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_9 
       (.I0(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_9_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.rdtlpaddrl_reg_r2_0_3_0_5 
       (.ADDRA({1'b0,1'b0,1'b0,\data_width_64.cpldsplitcounttemp_reg[4]_1 }),
        .ADDRB({1'b0,1'b0,1'b0,\data_width_64.cpldsplitcounttemp_reg[4]_1 }),
        .ADDRC({1'b0,1'b0,1'b0,\data_width_64.cpldsplitcounttemp_reg[4]_1 }),
        .ADDRD({1'b0,1'b0,1'b0,\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ,\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 }),
        .DIA({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_2_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_3_n_0 }),
        .DIB({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_4_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_5_n_0 }),
        .DIC({\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_6_n_0 ,\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_7_n_0 }),
        .DID({1'b0,1'b0}),
        .DOA({\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_0 ,\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_1 }),
        .DOB({\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_2 ,p_3_out}),
        .DOC({\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_4 ,\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_5 }),
        .DOD(\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_1_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.rdtlpaddrl_reg_r2_0_3_6_6 
       (.ADDRA({1'b0,1'b0,1'b0,\data_width_64.cpldsplitcounttemp_reg[4]_1 }),
        .ADDRB({1'b0,1'b0,1'b0,\data_width_64.cpldsplitcounttemp_reg[4]_1 }),
        .ADDRC({1'b0,1'b0,1'b0,\data_width_64.cpldsplitcounttemp_reg[4]_1 }),
        .ADDRD({1'b0,1'b0,1'b0,\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ,\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 }),
        .DIA({1'b0,\data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_i_1_n_0 }),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOA_UNCONNECTED [1],\data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_n_1 }),
        .DOB(\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOB_UNCONNECTED [1:0]),
        .DOC(\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.rdtlpaddrl_reg_r1_0_3_0_5_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [6]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [30]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(tlpaddrlow[6]),
        .O(\data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_i_1_n_0 ));
  FDRE \data_width_64.rdtlpaddrltemp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_1 ),
        .Q(\data_width_64.rdtlpaddrltemp_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.rdtlpaddrltemp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_0 ),
        .Q(\data_width_64.rdtlpaddrltemp_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.rdtlpaddrltemp_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(p_3_out),
        .Q(Q),
        .R(SR));
  FDRE \data_width_64.rdtlpaddrltemp_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_2 ),
        .Q(\data_width_64.rdtlpaddrltemp_reg_n_0_[3] ),
        .R(SR));
  FDRE \data_width_64.rdtlpaddrltemp_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_5 ),
        .Q(\data_width_64.rdtlpaddrltemp_reg_n_0_[4] ),
        .R(SR));
  FDRE \data_width_64.rdtlpaddrltemp_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.rdtlpaddrl_reg_r2_0_3_0_5_n_4 ),
        .Q(\data_width_64.rdtlpaddrltemp_reg_n_0_[5] ),
        .R(SR));
  FDRE \data_width_64.rdtlpaddrltemp_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.rdtlpaddrl_reg_r2_0_3_6_6_n_1 ),
        .Q(\data_width_64.rdtlpaddrltemp_reg_n_0_[6] ),
        .R(SR));
  FDRE \data_width_64.requesteridsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [40]),
        .Q(requesteridsig[0]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [50]),
        .Q(requesteridsig[10]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [51]),
        .Q(requesteridsig[11]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [52]),
        .Q(requesteridsig[12]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [53]),
        .Q(requesteridsig[13]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [54]),
        .Q(requesteridsig[14]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [55]),
        .Q(requesteridsig[15]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [41]),
        .Q(requesteridsig[1]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [42]),
        .Q(requesteridsig[2]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [43]),
        .Q(requesteridsig[3]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [44]),
        .Q(requesteridsig[4]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [45]),
        .Q(requesteridsig[5]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [46]),
        .Q(requesteridsig[6]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [47]),
        .Q(requesteridsig[7]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [48]),
        .Q(requesteridsig[8]),
        .R(1'b0));
  FDRE \data_width_64.requesteridsig_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [49]),
        .Q(requesteridsig[9]),
        .R(1'b0));
  FDRE \data_width_64.rrespdelayed_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.cpltlpsmsig_reg[1]_0 ),
        .Q(rrespdelayed),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT4 #(
    .INIT(16'hFD00)) 
    \data_width_64.s_axis_cr_tready_sig_i_2 
       (.I0(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .I1(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .I3(rdreq_reg),
        .O(s_axis_cr_tready_sig61_out));
  LUT5 #(
    .INIT(32'h88008F00)) 
    \data_width_64.s_axis_cr_tready_sig_i_3 
       (.I0(neqOp37_in),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I3(rdreq_reg),
        .I4(\data_width_64.lnkdowndataflush_reg_0 ),
        .O(\data_width_64.s_axis_cr_tready_sig_reg_0 ));
  LUT6 #(
    .INIT(64'h8A8A8A8ABABA8ABA)) 
    \data_width_64.s_axis_cr_tready_sig_i_4 
       (.I0(\data_width_64.s_axis_cr_tready_sig_reg_i_5_n_0 ),
        .I1(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(rdreq_reg),
        .I4(neqOp57_in),
        .I5(\data_width_64.tagsig_reg[0]_0 ),
        .O(s_axis_cr_tready_sig));
  LUT6 #(
    .INIT(64'h2222222AAAAAAA2A)) 
    \data_width_64.s_axis_cr_tready_sig_i_6 
       (.I0(s_axis_cr_tready_sig106_out),
        .I1(rdreq_reg),
        .I2(neqOp37_in),
        .I3(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I4(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .I5(neqOp57_in),
        .O(\data_width_64.s_axis_cr_tready_sig_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hA0A0F0F0C0CFC0C0)) 
    \data_width_64.s_axis_cr_tready_sig_i_7 
       (.I0(neqOp37_in),
        .I1(s_axis_cr_tready_sig106_out),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I3(\data_width_64.lnkdowndataflush_reg_0 ),
        .I4(rdreq_reg),
        .I5(\data_width_64.tagsig_reg[0]_0 ),
        .O(\data_width_64.s_axis_cr_tready_sig_i_7_n_0 ));
  FDRE \data_width_64.s_axis_cr_tready_sig_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig_reg[1]_2 ),
        .Q(sig_s_axis_cr_tready),
        .R(SR));
  MUXF7 \data_width_64.s_axis_cr_tready_sig_reg_i_5 
       (.I0(\data_width_64.s_axis_cr_tready_sig_i_6_n_0 ),
        .I1(\data_width_64.s_axis_cr_tready_sig_i_7_n_0 ),
        .O(\data_width_64.s_axis_cr_tready_sig_reg_i_5_n_0 ),
        .S(\data_width_64.rdndtlpaddrl_reg_0_3_0_5_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[0][0]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [0]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ),
        .I3(\data_width_64.s_axis_cr_tusersig[0][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[0]_45 [0]),
        .O(\data_width_64.s_axis_cr_tusersig[0][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[0][1]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [1]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ),
        .I3(\data_width_64.s_axis_cr_tusersig[0][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[0]_45 [1]),
        .O(\data_width_64.s_axis_cr_tusersig[0][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[0][2]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [2]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ),
        .I3(\data_width_64.s_axis_cr_tusersig[0][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[0]_45 [2]),
        .O(\data_width_64.s_axis_cr_tusersig[0][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA808080808080808)) 
    \data_width_64.s_axis_cr_tusersig[0][2]_i_2 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.s_axis_cr_tusersig[0][2]_i_3_n_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(\data_width_64.s_axis_cr_tusersig[0][2]_i_4_n_0 ),
        .I4(user_lnk_up_mux_reg),
        .I5(rdreq_reg),
        .O(\data_width_64.s_axis_cr_tusersig[0][2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \data_width_64.s_axis_cr_tusersig[0][2]_i_3 
       (.I0(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I1(neqOp37_in),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I4(rdreq_reg),
        .O(\data_width_64.s_axis_cr_tusersig[0][2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h000000FD)) 
    \data_width_64.s_axis_cr_tusersig[0][2]_i_4 
       (.I0(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .O(\data_width_64.s_axis_cr_tusersig[0][2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[1][0]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [0]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ),
        .I3(\data_width_64.s_axis_cr_tusersig[1][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[1]_46 [0]),
        .O(\data_width_64.s_axis_cr_tusersig[1][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[1][1]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [1]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ),
        .I3(\data_width_64.s_axis_cr_tusersig[1][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[1]_46 [1]),
        .O(\data_width_64.s_axis_cr_tusersig[1][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[1][2]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [2]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ),
        .I3(\data_width_64.s_axis_cr_tusersig[1][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[1]_46 [2]),
        .O(\data_width_64.s_axis_cr_tusersig[1][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA808080808080808)) 
    \data_width_64.s_axis_cr_tusersig[1][2]_i_2 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.s_axis_cr_tusersig[1][2]_i_3_n_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(\data_width_64.s_axis_cr_tusersig[1][2]_i_4_n_0 ),
        .I4(user_lnk_up_mux_reg),
        .I5(rdreq_reg),
        .O(\data_width_64.s_axis_cr_tusersig[1][2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \data_width_64.s_axis_cr_tusersig[1][2]_i_3 
       (.I0(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I1(neqOp37_in),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .O(\data_width_64.s_axis_cr_tusersig[1][2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h00FD0000)) 
    \data_width_64.s_axis_cr_tusersig[1][2]_i_4 
       (.I0(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .O(\data_width_64.s_axis_cr_tusersig[1][2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[2][0]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [0]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ),
        .I3(\data_width_64.s_axis_cr_tusersig[2][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[2]_47 [0]),
        .O(\data_width_64.s_axis_cr_tusersig[2][0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[2][1]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [1]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ),
        .I3(\data_width_64.s_axis_cr_tusersig[2][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[2]_47 [1]),
        .O(\data_width_64.s_axis_cr_tusersig[2][1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \data_width_64.s_axis_cr_tusersig[2][2]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [2]),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ),
        .I3(\data_width_64.s_axis_cr_tusersig[2][2]_i_2_n_0 ),
        .I4(\s_axis_cr_tusersig[2]_47 [2]),
        .O(\data_width_64.s_axis_cr_tusersig[2][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA808080808080808)) 
    \data_width_64.s_axis_cr_tusersig[2][2]_i_2 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.s_axis_cr_tusersig[2][2]_i_3_n_0 ),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(\data_width_64.s_axis_cr_tusersig[2][2]_i_4_n_0 ),
        .I4(user_lnk_up_mux_reg),
        .I5(rdreq_reg),
        .O(\data_width_64.s_axis_cr_tusersig[2][2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \data_width_64.s_axis_cr_tusersig[2][2]_i_3 
       (.I0(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I1(neqOp37_in),
        .I2(rdreq_reg),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I4(\data_width_64.tagsig_reg[0]_0 ),
        .O(\data_width_64.s_axis_cr_tusersig[2][2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'h00FD0000)) 
    \data_width_64.s_axis_cr_tusersig[2][2]_i_4 
       (.I0(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .I3(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.s_axis_cr_tusersig[2][2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF77780888000)) 
    \data_width_64.s_axis_cr_tusersig[3][0]_i_1 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.s_axis_cr_tusersig[3][2]_i_2_n_0 ),
        .I2(\m_axis_cr_tuser_reg[6] [0]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ),
        .I5(\s_axis_cr_tusersig[3]_48 [0]),
        .O(\data_width_64.s_axis_cr_tusersig[3][0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF77780888000)) 
    \data_width_64.s_axis_cr_tusersig[3][1]_i_1 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.s_axis_cr_tusersig[3][2]_i_2_n_0 ),
        .I2(\m_axis_cr_tuser_reg[6] [1]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ),
        .I5(\s_axis_cr_tusersig[3]_48 [1]),
        .O(\data_width_64.s_axis_cr_tusersig[3][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFF77780888000)) 
    \data_width_64.s_axis_cr_tusersig[3][2]_i_1 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.s_axis_cr_tusersig[3][2]_i_2_n_0 ),
        .I2(\m_axis_cr_tuser_reg[6] [2]),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ),
        .I5(\s_axis_cr_tusersig[3]_48 [2]),
        .O(\data_width_64.s_axis_cr_tusersig[3][2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB080000000000000)) 
    \data_width_64.s_axis_cr_tusersig[3][2]_i_2 
       (.I0(user_lnk_up_mux_reg),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_0 ),
        .I4(neqOp37_in),
        .I5(\s_axis_cr_tusersig_reg[3]_7 ),
        .O(\data_width_64.s_axis_cr_tusersig[3][2]_i_2_n_0 ));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[0][0]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[0]_45 [0]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[0][1]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[0]_45 [1]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[0][2]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[0]_45 [2]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[1][0]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[1]_46 [0]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[1][1]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[1]_46 [1]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[1][2]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[1]_46 [2]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[2][0]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[2]_47 [0]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[2][1]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[2]_47 [1]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[2][2]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[2]_47 [2]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[3][0]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[3]_48 [0]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[3][1]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[3]_48 [1]),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersig_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersig[3][2]_i_1_n_0 ),
        .Q(\s_axis_cr_tusersig[3]_48 [2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair569" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.s_axis_cr_tusersigtemp[0]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [0]),
        .I1(\data_width_64.s_axis_cr_tusersigtemp[2]_i_2_n_0 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ),
        .O(\data_width_64.s_axis_cr_tusersigtemp[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.s_axis_cr_tusersigtemp[1]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [1]),
        .I1(\data_width_64.s_axis_cr_tusersigtemp[2]_i_2_n_0 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ),
        .O(\data_width_64.s_axis_cr_tusersigtemp[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair569" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.s_axis_cr_tusersigtemp[2]_i_1 
       (.I0(\m_axis_cr_tuser_reg[6] [2]),
        .I1(\data_width_64.s_axis_cr_tusersigtemp[2]_i_2_n_0 ),
        .I2(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ),
        .O(\data_width_64.s_axis_cr_tusersigtemp[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \data_width_64.s_axis_cr_tusersigtemp[2]_i_2 
       (.I0(\data_width_64.tagsig_reg[0]_1 ),
        .I1(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I2(neqOp37_in),
        .I3(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I4(rdreq_reg),
        .I5(s_axis_cr_tready_sig106_out),
        .O(\data_width_64.s_axis_cr_tusersigtemp[2]_i_2_n_0 ));
  FDRE \data_width_64.s_axis_cr_tusersigtemp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersigtemp[0]_i_1_n_0 ),
        .Q(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[0] ),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersigtemp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersigtemp[1]_i_1_n_0 ),
        .Q(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.s_axis_cr_tusersigtemp_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.s_axis_cr_tusersigtemp[2]_i_1_n_0 ),
        .Q(\data_width_64.s_axis_cr_tusersigtemp_reg_n_0_[2] ),
        .R(SR));
  FDRE \data_width_64.tagsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [32]),
        .Q(\data_width_64.tagsig_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [33]),
        .Q(\data_width_64.tagsig_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [34]),
        .Q(\data_width_64.tagsig_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [35]),
        .Q(\data_width_64.tagsig_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [36]),
        .Q(\data_width_64.tagsig_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [37]),
        .Q(\data_width_64.tagsig_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [38]),
        .Q(\data_width_64.tagsig_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \data_width_64.tagsig_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [39]),
        .Q(\data_width_64.tagsig_reg_n_0_[7] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][12]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [12]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [36]),
        .I3(tlpaddrlow__0[12]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][13]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [13]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [37]),
        .I3(tlpaddrlow__0[13]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][14]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [14]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [38]),
        .I3(tlpaddrlow__0[14]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][15]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [15]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [39]),
        .I3(tlpaddrlow__0[15]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][16]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [16]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [40]),
        .I3(tlpaddrlow__0[16]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][17]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [17]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [41]),
        .I3(tlpaddrlow__0[17]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][18]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [18]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [42]),
        .I3(tlpaddrlow__0[18]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][19]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [19]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [43]),
        .I3(tlpaddrlow__0[19]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][20]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [20]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [44]),
        .I3(tlpaddrlow__0[20]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][21]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [21]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [45]),
        .I3(tlpaddrlow__0[21]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_out[0][22]_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [22]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [46]),
        .I3(tlpaddrlow__0[22]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_out[0][22]_i_1_n_0 ));
  FDRE \data_width_64.tlpaddrl_out_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][12]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][13]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][14]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][15]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][16]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [16]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][17]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [17]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][18]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [18]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][19]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [19]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][20]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [20]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][21]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [21]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_out[0][22]_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [22]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ),
        .Q(\tlpaddrlsig[0]_33 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][12]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][13]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][14]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][15]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][16]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [16]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][17]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [17]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][18]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [18]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][19]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [19]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][20]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [20]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][21]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [21]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_out[0][22]_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [22]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ),
        .Q(\tlpaddrlsig[1]_34 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][12]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][13]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][14]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][15]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][16]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [16]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][17]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [17]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][18]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [18]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][19]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [19]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][20]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [20]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][21]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [21]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_out[0][22]_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [22]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ),
        .Q(\tlpaddrlsig[2]_35 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][12]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][13]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][14]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][15]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][16]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [16]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][17]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [17]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][18]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [18]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][19]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [19]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][20]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [20]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][21]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [21]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_out[0][22]_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [22]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpaddrl_out_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ),
        .Q(\tlpaddrlsig[3]_36 [9]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.tlpaddrl_reg_0_3_0_5 
       (.ADDRA({1'b0,1'b0,1'b0,ctargetpipeline[1],\data_width_64.cpldsplitcounttemp_reg[4]_0 }),
        .ADDRB({1'b0,1'b0,1'b0,ctargetpipeline[1],\data_width_64.cpldsplitcounttemp_reg[4]_0 }),
        .ADDRC({1'b0,1'b0,1'b0,ctargetpipeline[1],\data_width_64.cpldsplitcounttemp_reg[4]_0 }),
        .ADDRD({1'b0,1'b0,1'b0,\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ,\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 }),
        .DIA({\data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ,\data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 }),
        .DIB({\data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ,\data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 }),
        .DIC({\data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ,\data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 }),
        .DID({1'b0,1'b0}),
        .DOA(R[1:0]),
        .DOB(R_0[3:2]),
        .DOC(R_0[5:4]),
        .DOD(\NLW_data_width_64.tlpaddrl_reg_0_3_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.tlpaddrl_reg_0_3_0_5_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C00000000000)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_1 
       (.I0(\data_width_64.tlpaddrl_reg_0_3_0_5_i_8_n_0 ),
        .I1(\data_width_64.tlpaddrl_reg_0_3_0_5_i_9_n_0 ),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(\data_width_64.tagsig_reg[0]_0 ),
        .I5(axi_aresetn),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h03020302FFFF0000)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_2 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I2(p_0_in0_in),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I4(tlpaddrlow[1]),
        .I5(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00DC00DCFFFF0000)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_3 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I4(tlpaddrlow[0]),
        .I5(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_4 
       (.I0(\m_axis_cr_tdata_reg[63] [3]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [27]),
        .I3(tlpaddrlow[3]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_5 
       (.I0(\m_axis_cr_tdata_reg[63] [2]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [26]),
        .I3(tlpaddrlow[2]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_6 
       (.I0(\m_axis_cr_tdata_reg[63] [5]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [29]),
        .I3(tlpaddrlow[5]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_7 
       (.I0(\m_axis_cr_tdata_reg[63] [4]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [28]),
        .I3(tlpaddrlow[4]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hAAA2)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_8 
       (.I0(rdreq_reg),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I3(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \data_width_64.tlpaddrl_reg_0_3_0_5_i_9 
       (.I0(sig_s_axis_cr_tvalid),
        .I1(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .I2(sig_s_axis_cr_tlast),
        .I3(rdreq_reg),
        .I4(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I5(neqOp37_in),
        .O(\data_width_64.tlpaddrl_reg_0_3_0_5_i_9_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \data_width_64.tlpaddrl_reg_0_3_6_11 
       (.ADDRA({1'b0,1'b0,1'b0,ctargetpipeline[1],\data_width_64.cpldsplitcounttemp_reg[4]_0 }),
        .ADDRB({1'b0,1'b0,1'b0,ctargetpipeline[1],\data_width_64.cpldsplitcounttemp_reg[4]_0 }),
        .ADDRC({1'b0,1'b0,1'b0,ctargetpipeline[1],\data_width_64.cpldsplitcounttemp_reg[4]_0 }),
        .ADDRD({1'b0,1'b0,1'b0,\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ,\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 }),
        .DIA({\data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ,\data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 }),
        .DIB({\data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ,\data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 }),
        .DIC({\data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ,\data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 }),
        .DID({1'b0,1'b0}),
        .DOA(R[3:2]),
        .DOB(R[5:4]),
        .DOC({\data_width_64.tlpaddrl_reg_0_3_6_11_n_4 ,R[6]}),
        .DOD(\NLW_data_width_64.tlpaddrl_reg_0_3_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(\resetovrd.reset_reg[4] ),
        .WE(\data_width_64.tlpaddrl_reg_0_3_0_5_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_6_11_i_1 
       (.I0(\m_axis_cr_tdata_reg[63] [7]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [31]),
        .I3(tlpaddrlow__0[7]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_6_11_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_6_11_i_2 
       (.I0(\m_axis_cr_tdata_reg[63] [6]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [30]),
        .I3(tlpaddrlow[6]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_6_11_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_6_11_i_3 
       (.I0(\m_axis_cr_tdata_reg[63] [9]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [33]),
        .I3(tlpaddrlow__0[9]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_6_11_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_6_11_i_4 
       (.I0(\m_axis_cr_tdata_reg[63] [8]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [32]),
        .I3(tlpaddrlow__0[8]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_6_11_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_6_11_i_5 
       (.I0(\m_axis_cr_tdata_reg[63] [11]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [35]),
        .I3(tlpaddrlow__0[11]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_6_11_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hB8B8FF00)) 
    \data_width_64.tlpaddrl_reg_0_3_6_11_i_6 
       (.I0(\m_axis_cr_tdata_reg[63] [10]),
        .I1(\data_width_64.tagsig_reg[0]_0 ),
        .I2(\m_axis_cr_tdata_reg[63] [34]),
        .I3(tlpaddrlow__0[10]),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpaddrl_reg_0_3_6_11_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT4 #(
    .INIT(16'h00DC)) 
    \data_width_64.tlpaddrlow[0]_i_1 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .O(\data_width_64.tlpaddrlow[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT4 #(
    .INIT(16'h0302)) 
    \data_width_64.tlpaddrlow[1]_i_1 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I2(p_0_in0_in),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .O(p_8_out));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \data_width_64.tlpaddrlow[22]_i_1 
       (.I0(\data_width_64.tagsig_reg[0]_1 ),
        .I1(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I2(s_axis_cr_tready_sig106_out),
        .I3(rdreq_reg),
        .I4(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I5(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .O(\data_width_64.tlpaddrlow[22]_i_1_n_0 ));
  FDRE \data_width_64.tlpaddrlow_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\data_width_64.tlpaddrlow[0]_i_1_n_0 ),
        .Q(tlpaddrlow[0]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [8]),
        .Q(tlpaddrlow__0[10]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [9]),
        .Q(tlpaddrlow__0[11]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [10]),
        .Q(tlpaddrlow__0[12]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [11]),
        .Q(tlpaddrlow__0[13]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [12]),
        .Q(tlpaddrlow__0[14]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [13]),
        .Q(tlpaddrlow__0[15]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [14]),
        .Q(tlpaddrlow__0[16]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [15]),
        .Q(tlpaddrlow__0[17]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [16]),
        .Q(tlpaddrlow__0[18]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [17]),
        .Q(tlpaddrlow__0[19]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(p_8_out),
        .Q(tlpaddrlow[1]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [18]),
        .Q(tlpaddrlow__0[20]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [19]),
        .Q(tlpaddrlow__0[21]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [20]),
        .Q(tlpaddrlow__0[22]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [0]),
        .Q(tlpaddrlow[2]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [1]),
        .Q(tlpaddrlow[3]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [2]),
        .Q(tlpaddrlow[4]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [3]),
        .Q(tlpaddrlow[5]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [4]),
        .Q(tlpaddrlow[6]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [5]),
        .Q(tlpaddrlow__0[7]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [6]),
        .Q(tlpaddrlow__0[8]),
        .R(SR));
  FDRE \data_width_64.tlpaddrlow_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrlow[22]_i_1_n_0 ),
        .D(\m_axis_cr_tdata_reg[22] [7]),
        .Q(tlpaddrlow__0[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpattr[0][0]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattr_reg_n_0_[0][0] ),
        .O(tlpattr0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpattr[0][1]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattr_reg_n_0_[0][1] ),
        .O(tlpattr0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair510" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpattr[1][0]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattr_reg_n_0_[1][0] ),
        .O(tlpattr0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair511" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpattr[1][1]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattr_reg_n_0_[1][1] ),
        .O(tlpattr0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair510" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpattr[2][0]_i_1 
       (.I0(\data_width_64.tlpattr_reg_n_0_[2][0] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .O(tlpattr0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair511" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpattr[2][1]_i_1 
       (.I0(\data_width_64.tlpattr_reg_n_0_[2][1] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .O(tlpattr0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpattr[3][0]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattr_reg_n_0_[3][0] ),
        .O(tlpattr0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpattr[3][1]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlpattr_reg_n_0_[3][1] ),
        .O(tlpattr0_in[1]));
  FDRE \data_width_64.tlpattr_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[6]),
        .Q(\data_width_64.tlpattr_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[7]),
        .Q(\data_width_64.tlpattr_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[4]),
        .Q(\data_width_64.tlpattr_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[5]),
        .Q(\data_width_64.tlpattr_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[2]),
        .Q(\data_width_64.tlpattr_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[3]),
        .Q(\data_width_64.tlpattr_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[0]),
        .Q(\data_width_64.tlpattr_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattr_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlpattr0_in[1]),
        .Q(\data_width_64.tlpattr_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattrsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [12]),
        .Q(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpattrsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [13]),
        .Q(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlpbytecount[0][11]_i_1 
       (.I0(axi_aresetn),
        .I1(user_lnk_up_mux_reg_0),
        .I2(rdreq_reg),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(neqOp37_in),
        .I5(\s_axis_cr_tusersig_reg[0]_8 ),
        .O(\wrpendingsig[0]_6 ));
  (* SOFT_HLUTNM = "soft_lutpair590" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \data_width_64.tlpbytecount[0][11]_i_2 
       (.I0(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\s_axis_cr_tusersig_reg[0]_8 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlpbytecount[1][11]_i_1 
       (.I0(axi_aresetn),
        .I1(user_lnk_up_mux_reg_0),
        .I2(rdreq_reg),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(neqOp37_in),
        .I5(\data_width_64.tlpbytecount[1][11]_i_2_n_0 ),
        .O(\wrpendingsig[1]_4 ));
  (* SOFT_HLUTNM = "soft_lutpair590" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.tlpbytecount[1][11]_i_2 
       (.I0(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpbytecount[1][11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlpbytecount[2][11]_i_1 
       (.I0(axi_aresetn),
        .I1(user_lnk_up_mux_reg_0),
        .I2(rdreq_reg),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(neqOp37_in),
        .I5(\data_width_64.tlpbytecount[2][11]_i_2_n_0 ),
        .O(\wrpendingsig[2]_5 ));
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.tlpbytecount[2][11]_i_2 
       (.I0(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I1(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .O(\data_width_64.tlpbytecount[2][11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlpbytecount[3][11]_i_1 
       (.I0(axi_aresetn),
        .I1(user_lnk_up_mux_reg_0),
        .I2(rdreq_reg),
        .I3(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I4(neqOp37_in),
        .I5(\s_axis_cr_tusersig_reg[3]_7 ),
        .O(\wrpendingsig[3]_3 ));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlpbytecount[3][11]_i_3 
       (.I0(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\s_axis_cr_tusersig_reg[3]_7 ));
  FDRE \data_width_64.tlpbytecount_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpbytecount_reg[0]_32 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpbytecount_reg[1]_31 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpbytecount_reg[2]_30 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpbytecount_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpbytecount_reg[3]_29 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][0]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_function_number_d_reg[2] [0]),
        .O(\data_width_64.tlpcompleterid[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][10]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [10]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [2]),
        .O(\data_width_64.tlpcompleterid[0][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][11]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [11]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [3]),
        .O(\data_width_64.tlpcompleterid[0][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][12]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [12]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [4]),
        .O(\data_width_64.tlpcompleterid[0][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][13]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [13]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [5]),
        .O(\data_width_64.tlpcompleterid[0][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][14]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [14]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [6]),
        .O(\data_width_64.tlpcompleterid[0][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][15]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [15]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\cfg_bus_number_d_reg[7] [7]),
        .O(\data_width_64.tlpcompleterid[0][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][1]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_function_number_d_reg[2] [1]),
        .O(\data_width_64.tlpcompleterid[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][2]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_function_number_d_reg[2] [2]),
        .O(\data_width_64.tlpcompleterid[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][3]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [0]),
        .O(\data_width_64.tlpcompleterid[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][4]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [1]),
        .O(\data_width_64.tlpcompleterid[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][5]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [2]),
        .O(\data_width_64.tlpcompleterid[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][6]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [3]),
        .O(\data_width_64.tlpcompleterid[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][7]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [4]),
        .O(\data_width_64.tlpcompleterid[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][8]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [8]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [0]),
        .O(\data_width_64.tlpcompleterid[0][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpcompleterid[0][9]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[0]_25 [9]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [1]),
        .O(\data_width_64.tlpcompleterid[0][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][0]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [0]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][10]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [2]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [10]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][11]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [3]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [11]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][12]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [4]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [12]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][13]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [5]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [13]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][14]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [6]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [14]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][15]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [7]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [15]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlpcompleterid[1][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][1]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [1]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][2]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [2]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][3]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [0]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][4]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [1]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][5]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [2]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][6]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [3]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][7]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [4]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][8]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [0]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [8]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpcompleterid[1][9]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [1]),
        .I1(\data_width_64.tlpcompleterid_reg[1]_26 [9]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[1][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][0]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_function_number_d_reg[2] [0]),
        .O(\data_width_64.tlpcompleterid[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][10]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [10]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [2]),
        .O(\data_width_64.tlpcompleterid[2][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][11]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [11]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [3]),
        .O(\data_width_64.tlpcompleterid[2][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][12]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [12]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [4]),
        .O(\data_width_64.tlpcompleterid[2][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][13]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [13]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [5]),
        .O(\data_width_64.tlpcompleterid[2][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][14]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [14]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [6]),
        .O(\data_width_64.tlpcompleterid[2][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][15]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [15]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\cfg_bus_number_d_reg[7] [7]),
        .O(\data_width_64.tlpcompleterid[2][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][1]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_function_number_d_reg[2] [1]),
        .O(\data_width_64.tlpcompleterid[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][2]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_function_number_d_reg[2] [2]),
        .O(\data_width_64.tlpcompleterid[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][3]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [0]),
        .O(\data_width_64.tlpcompleterid[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][4]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [1]),
        .O(\data_width_64.tlpcompleterid[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][5]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [2]),
        .O(\data_width_64.tlpcompleterid[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][6]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [3]),
        .O(\data_width_64.tlpcompleterid[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][7]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_device_number_d_reg[4] [4]),
        .O(\data_width_64.tlpcompleterid[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][8]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [8]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [0]),
        .O(\data_width_64.tlpcompleterid[2][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpcompleterid[2][9]_i_1 
       (.I0(\data_width_64.tlpcompleterid_reg[2]_27 [9]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [1]),
        .O(\data_width_64.tlpcompleterid[2][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][0]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [0]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][10]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [2]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [10]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][11]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [3]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [11]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][12]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [4]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [12]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][13]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [5]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [13]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][14]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [6]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [14]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlpcompleterid[3][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][15]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [7]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [15]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlpcompleterid[3][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][1]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [1]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][2]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [2]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][3]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [0]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][4]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [1]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][5]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [2]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][6]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [3]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][7]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [4]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][8]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [0]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [8]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpcompleterid[3][9]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [1]),
        .I1(\data_width_64.tlpcompleterid_reg[3]_28 [9]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpcompleterid[3][9]_i_1_n_0 ));
  FDRE \data_width_64.tlpcompleterid_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[0][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[0]_25 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[1][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[1]_26 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[2][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[2]_27 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlpcompleterid_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlpcompleterid[3][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpcompleterid_reg[3]_28 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][0]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[0]),
        .O(\data_width_64.tlplength[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][1]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[1]),
        .O(\data_width_64.tlplength[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][2]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[2]),
        .O(\data_width_64.tlplength[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][3]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[3]),
        .O(\data_width_64.tlplength[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][4]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[4]),
        .O(\data_width_64.tlplength[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][5]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[5]),
        .O(\data_width_64.tlplength[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][6]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[6]),
        .O(\data_width_64.tlplength[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][7]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[7]),
        .O(\data_width_64.tlplength[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][8]_i_1 
       (.I0(\data_width_64.tlplength_reg[0]_13 [8]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[8]),
        .O(\data_width_64.tlplength[0][8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8080008000000080)) 
    \data_width_64.tlplength[0][9]_i_1 
       (.I0(axi_aresetn),
        .I1(neqOp37_in),
        .I2(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I3(\data_width_64.tlplength[0][9]_i_3_n_0 ),
        .I4(\data_width_64.tagsig_reg[0]_1 ),
        .I5(tlprequesterid),
        .O(\data_width_64.tlplength[0][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlplength[0][9]_i_2 
       (.I0(\data_width_64.tlplength_reg[0]_13 [9]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[9]),
        .O(\data_width_64.tlplength[0][9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.tlplength[0][9]_i_3 
       (.I0(\data_width_64.tagsig_reg[0]_0 ),
        .I1(rdreq_reg),
        .O(\data_width_64.tlplength[0][9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair519" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][0]_i_1 
       (.I0(tlplengthsig[0]),
        .I1(\data_width_64.tlplength_reg[1]_14 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair520" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][1]_i_1 
       (.I0(tlplengthsig[1]),
        .I1(\data_width_64.tlplength_reg[1]_14 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair521" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][2]_i_1 
       (.I0(tlplengthsig[2]),
        .I1(\data_width_64.tlplength_reg[1]_14 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair522" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][3]_i_1 
       (.I0(tlplengthsig[3]),
        .I1(\data_width_64.tlplength_reg[1]_14 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair523" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][4]_i_1 
       (.I0(tlplengthsig[4]),
        .I1(\data_width_64.tlplength_reg[1]_14 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair524" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][5]_i_1 
       (.I0(tlplengthsig[5]),
        .I1(\data_width_64.tlplength_reg[1]_14 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair525" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][6]_i_1 
       (.I0(tlplengthsig[6]),
        .I1(\data_width_64.tlplength_reg[1]_14 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair526" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][7]_i_1 
       (.I0(tlplengthsig[7]),
        .I1(\data_width_64.tlplength_reg[1]_14 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair527" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][8]_i_1 
       (.I0(tlplengthsig[8]),
        .I1(\data_width_64.tlplength_reg[1]_14 [8]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair528" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlplength[1][9]_i_1 
       (.I0(tlplengthsig[9]),
        .I1(\data_width_64.tlplength_reg[1]_14 [9]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[1][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair519" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][0]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[0]),
        .O(\data_width_64.tlplength[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair520" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][1]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[1]),
        .O(\data_width_64.tlplength[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair521" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][2]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[2]),
        .O(\data_width_64.tlplength[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair522" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][3]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[3]),
        .O(\data_width_64.tlplength[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair523" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][4]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[4]),
        .O(\data_width_64.tlplength[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair524" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][5]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[5]),
        .O(\data_width_64.tlplength[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair525" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][6]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[6]),
        .O(\data_width_64.tlplength[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair526" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][7]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[7]),
        .O(\data_width_64.tlplength[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair527" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][8]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [8]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[8]),
        .O(\data_width_64.tlplength[2][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair528" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlplength[2][9]_i_1 
       (.I0(\data_width_64.tlplength_reg[2]_15 [9]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(tlplengthsig[9]),
        .O(\data_width_64.tlplength[2][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][0]_i_1 
       (.I0(tlplengthsig[0]),
        .I1(\data_width_64.tlplength_reg[3]_16 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][1]_i_1 
       (.I0(tlplengthsig[1]),
        .I1(\data_width_64.tlplength_reg[3]_16 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][2]_i_1 
       (.I0(tlplengthsig[2]),
        .I1(\data_width_64.tlplength_reg[3]_16 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][3]_i_1 
       (.I0(tlplengthsig[3]),
        .I1(\data_width_64.tlplength_reg[3]_16 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][4]_i_1 
       (.I0(tlplengthsig[4]),
        .I1(\data_width_64.tlplength_reg[3]_16 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][5]_i_1 
       (.I0(tlplengthsig[5]),
        .I1(\data_width_64.tlplength_reg[3]_16 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][6]_i_1 
       (.I0(tlplengthsig[6]),
        .I1(\data_width_64.tlplength_reg[3]_16 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][7]_i_1 
       (.I0(tlplengthsig[7]),
        .I1(\data_width_64.tlplength_reg[3]_16 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][8]_i_1 
       (.I0(tlplengthsig[8]),
        .I1(\data_width_64.tlplength_reg[3]_16 [8]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlplength[3][9]_i_1 
       (.I0(tlplengthsig[9]),
        .I1(\data_width_64.tlplength_reg[3]_16 [9]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlplength[3][9]_i_1_n_0 ));
  FDRE \data_width_64.tlplength_out_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[0]),
        .Q(\tlplengthsig[0]_37 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[1]),
        .Q(\tlplengthsig[0]_37 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[2]),
        .Q(\tlplengthsig[0]_37 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[3]),
        .Q(\tlplengthsig[0]_37 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[4]),
        .Q(\tlplengthsig[0]_37 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[5]),
        .Q(\tlplengthsig[0]_37 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[6]),
        .Q(\tlplengthsig[0]_37 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[7]),
        .Q(\tlplengthsig[0]_37 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[8]),
        .Q(\tlplengthsig[0]_37 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(tlplengthsig[9]),
        .Q(\tlplengthsig[0]_37 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[0]),
        .Q(\tlplengthsig[1]_38 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[1]),
        .Q(\tlplengthsig[1]_38 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[2]),
        .Q(\tlplengthsig[1]_38 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[3]),
        .Q(\tlplengthsig[1]_38 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[4]),
        .Q(\tlplengthsig[1]_38 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[5]),
        .Q(\tlplengthsig[1]_38 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[6]),
        .Q(\tlplengthsig[1]_38 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[7]),
        .Q(\tlplengthsig[1]_38 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[8]),
        .Q(\tlplengthsig[1]_38 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(tlplengthsig[9]),
        .Q(\tlplengthsig[1]_38 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[0]),
        .Q(\tlplengthsig[2]_39 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[1]),
        .Q(\tlplengthsig[2]_39 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[2]),
        .Q(\tlplengthsig[2]_39 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[3]),
        .Q(\tlplengthsig[2]_39 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[4]),
        .Q(\tlplengthsig[2]_39 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[5]),
        .Q(\tlplengthsig[2]_39 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[6]),
        .Q(\tlplengthsig[2]_39 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[7]),
        .Q(\tlplengthsig[2]_39 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[8]),
        .Q(\tlplengthsig[2]_39 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(tlplengthsig[9]),
        .Q(\tlplengthsig[2]_39 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[0]),
        .Q(\tlplengthsig[3]_40 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[1]),
        .Q(\tlplengthsig[3]_40 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[2]),
        .Q(\tlplengthsig[3]_40 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[3]),
        .Q(\tlplengthsig[3]_40 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[4]),
        .Q(\tlplengthsig[3]_40 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[5]),
        .Q(\tlplengthsig[3]_40 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[6]),
        .Q(\tlplengthsig[3]_40 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[7]),
        .Q(\tlplengthsig[3]_40 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[8]),
        .Q(\tlplengthsig[3]_40 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_out_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(tlplengthsig[9]),
        .Q(\tlplengthsig[3]_40 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][8]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[0][9]_i_2_n_0 ),
        .Q(\data_width_64.tlplength_reg[0]_13 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][8]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[1][9]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[1]_14 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][8]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[2][9]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[2]_15 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][0]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][1]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][2]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][3]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][4]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][5]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][6]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][7]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][8]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlplength_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlplength[3][9]_i_1_n_0 ),
        .Q(\data_width_64.tlplength_reg[3]_16 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h5F5C505C)) 
    \data_width_64.tlplengthcntr[0]_i_1 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I1(\data_width_64.tlplengthcntr[0]_i_2_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.tlplengthcntr_reg[0]_i_3_n_0 ),
        .O(\data_width_64.tlplengthcntr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT3 #(
    .INIT(8'h56)) 
    \data_width_64.tlplengthcntr[0]_i_2 
       (.I0(ARG[1]),
        .I1(p_3_out),
        .I2(ARG[0]),
        .O(\data_width_64.tlplengthcntr[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[0]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[1] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[0]),
        .I3(\data_width_64.tlplengthcntr[0]_i_6_n_0 ),
        .I4(p_2_out0),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBB0F0F0FF0)) 
    \data_width_64.tlplengthcntr[0]_i_5 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I2(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I3(p_5_out),
        .I4(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair584" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.tlplengthcntr[0]_i_6 
       (.I0(ARG[0]),
        .I1(Q),
        .I2(ARG[1]),
        .O(\data_width_64.tlplengthcntr[0]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair589" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.tlplengthcntr[0]_i_7 
       (.I0(ARG[0]),
        .I1(Q),
        .O(p_2_out0));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[1]_i_1 
       (.I0(\data_width_64.tlplengthcntr[1]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[1]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[1]_i_3_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[1]_i_4_n_0 ),
        .O(\data_width_64.tlplengthcntr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair570" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.tlplengthcntr[1]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .O(\data_width_64.tlplengthcntr[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBEBEBEB00FFFF00)) 
    \data_width_64.tlplengthcntr[1]_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I3(\data_width_64.tlplengthcntr[1]_i_5_n_0 ),
        .I4(\data_width_64.tlplengthcntr[1]_i_6_n_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[1]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[2] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[1]),
        .I3(\data_width_64.tlplengthcntr[1]_i_7_n_0 ),
        .I4(\data_width_64.tlplengthcntr[1]_i_8_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \data_width_64.tlplengthcntr[1]_i_5 
       (.I0(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I1(p_5_out),
        .I2(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .O(\data_width_64.tlplengthcntr[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.tlplengthcntr[1]_i_6 
       (.I0(p_5_out),
        .I1(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_10_n_0 ),
        .O(\data_width_64.tlplengthcntr[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair584" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \data_width_64.tlplengthcntr[1]_i_7 
       (.I0(ARG[1]),
        .I1(Q),
        .I2(ARG[0]),
        .O(\data_width_64.tlplengthcntr[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.tlplengthcntr[1]_i_8 
       (.I0(Q),
        .I1(ARG[0]),
        .I2(ARG[1]),
        .I3(ARG[2]),
        .O(\data_width_64.tlplengthcntr[1]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h5F5C505C)) 
    \data_width_64.tlplengthcntr[2]_i_1 
       (.I0(\data_width_64.tlplengthcntr[2]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[2]_i_2_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.tlplengthcntr_reg[2]_i_3_n_0 ),
        .O(\data_width_64.tlplengthcntr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair570" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.tlplengthcntr[2]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .O(\data_width_64.tlplengthcntr[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[2]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[3] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[2]),
        .I3(\data_width_64.tlplengthcntr[2]_i_6_n_0 ),
        .I4(\data_width_64.tlplengthcntr[2]_i_7_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEEEBEEEBFFFF0000)) 
    \data_width_64.tlplengthcntr[2]_i_5 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I4(\data_width_64.tlplengthcntr[2]_i_8_n_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h2800)) 
    \data_width_64.tlplengthcntr[2]_i_6 
       (.I0(ARG[2]),
        .I1(ARG[0]),
        .I2(Q),
        .I3(ARG[1]),
        .O(\data_width_64.tlplengthcntr[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \data_width_64.tlplengthcntr[2]_i_7 
       (.I0(ARG[1]),
        .I1(ARG[0]),
        .I2(Q),
        .I3(ARG[2]),
        .I4(ARG[3]),
        .O(\data_width_64.tlplengthcntr[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h666AAAAA)) 
    \data_width_64.tlplengthcntr[2]_i_8 
       (.I0(\data_width_64.tlplengthcntr[4]_i_14_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_10_n_0 ),
        .I2(p_5_out),
        .I3(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .O(\data_width_64.tlplengthcntr[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h5F5C505C)) 
    \data_width_64.tlplengthcntr[3]_i_1 
       (.I0(\data_width_64.tlplengthcntr[3]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[3]_i_2_n_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.tlplengthcntr_reg[3]_i_3_n_0 ),
        .O(\data_width_64.tlplengthcntr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT4 #(
    .INIT(16'h01FE)) 
    \data_width_64.tlplengthcntr[3]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .O(\data_width_64.tlplengthcntr[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[3]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[4] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[3]),
        .I3(\data_width_64.tlplengthcntr[3]_i_6_n_0 ),
        .I4(\data_width_64.tlplengthcntr[3]_i_7_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hBBBB0FF0)) 
    \data_width_64.tlplengthcntr[3]_i_5 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr[3]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[3]_i_8_n_0 ),
        .I3(\data_width_64.tlplengthcntr[3]_i_9_n_0 ),
        .I4(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[3]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h08800000)) 
    \data_width_64.tlplengthcntr[3]_i_6 
       (.I0(ARG[3]),
        .I1(ARG[1]),
        .I2(Q),
        .I3(ARG[0]),
        .I4(ARG[2]),
        .O(\data_width_64.tlplengthcntr[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \data_width_64.tlplengthcntr[3]_i_7 
       (.I0(ARG[2]),
        .I1(Q),
        .I2(ARG[0]),
        .I3(ARG[1]),
        .I4(ARG[3]),
        .I5(ARG[4]),
        .O(\data_width_64.tlplengthcntr[3]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h08800000)) 
    \data_width_64.tlplengthcntr[3]_i_8 
       (.I0(\data_width_64.tlplengthcntr[4]_i_14_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I2(p_5_out),
        .I3(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_10_n_0 ),
        .O(\data_width_64.tlplengthcntr[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \data_width_64.tlplengthcntr[3]_i_9 
       (.I0(\data_width_64.tlplengthcntr[4]_i_10_n_0 ),
        .I1(p_5_out),
        .I2(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_14_n_0 ),
        .I5(\data_width_64.tlplengthcntr[4]_i_13_n_0 ),
        .O(\data_width_64.tlplengthcntr[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[4]_i_1 
       (.I0(\data_width_64.tlplengthcntr[4]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[4]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_3_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[4]_i_4_n_0 ),
        .O(\data_width_64.tlplengthcntr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[4]_i_10 
       (.I0(\data_width_64.tlplength_reg[3]_16 [2]),
        .I1(\data_width_64.tlplength_reg[1]_14 [2]),
        .I2(\data_width_64.tlplength_reg[2]_15 [2]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [2]),
        .O(\data_width_64.tlplengthcntr[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[4]_i_11 
       (.I0(\data_width_64.tlplength_reg[3]_16 [0]),
        .I1(\data_width_64.tlplength_reg[1]_14 [0]),
        .I2(\data_width_64.tlplength_reg[2]_15 [0]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [0]),
        .O(\data_width_64.tlplengthcntr[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[4]_i_12 
       (.I0(\data_width_64.tlplength_reg[3]_16 [1]),
        .I1(\data_width_64.tlplength_reg[1]_14 [1]),
        .I2(\data_width_64.tlplength_reg[2]_15 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [1]),
        .O(\data_width_64.tlplengthcntr[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[4]_i_13 
       (.I0(\data_width_64.tlplength_reg[3]_16 [4]),
        .I1(\data_width_64.tlplength_reg[1]_14 [4]),
        .I2(\data_width_64.tlplength_reg[2]_15 [4]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [4]),
        .O(\data_width_64.tlplengthcntr[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[4]_i_14 
       (.I0(\data_width_64.tlplength_reg[3]_16 [3]),
        .I1(\data_width_64.tlplength_reg[1]_14 [3]),
        .I2(\data_width_64.tlplength_reg[2]_15 [3]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [3]),
        .O(\data_width_64.tlplengthcntr[4]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \data_width_64.tlplengthcntr[4]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .O(\data_width_64.tlplengthcntr[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0FFF0FF99996666)) 
    \data_width_64.tlplengthcntr[4]_i_3 
       (.I0(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I2(\data_width_64.dis_rden_reg_1 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_2_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_7_n_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[4]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[5] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[4]),
        .I3(\data_width_64.tlplengthcntr[4]_i_8_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_9_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlplengthcntr[4]_i_5 
       (.I0(\data_width_64.tlplengthcntr[4]_i_10_n_0 ),
        .I1(p_5_out),
        .I2(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_13_n_0 ),
        .I5(\data_width_64.tlplengthcntr[4]_i_14_n_0 ),
        .O(\data_width_64.tlplengthcntr[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[4]_i_6 
       (.I0(\data_width_64.tlplength_reg[3]_16 [5]),
        .I1(\data_width_64.tlplength_reg[1]_14 [5]),
        .I2(\data_width_64.tlplength_reg[2]_15 [5]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [5]),
        .O(\data_width_64.tlplengthcntr[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0880000000000000)) 
    \data_width_64.tlplengthcntr[4]_i_7 
       (.I0(\data_width_64.tlplengthcntr[4]_i_13_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_10_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_11_n_0 ),
        .I3(p_5_out),
        .I4(\data_width_64.tlplengthcntr[4]_i_12_n_0 ),
        .I5(\data_width_64.tlplengthcntr[4]_i_14_n_0 ),
        .O(\data_width_64.tlplengthcntr[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0880000000000000)) 
    \data_width_64.tlplengthcntr[4]_i_8 
       (.I0(ARG[4]),
        .I1(ARG[2]),
        .I2(ARG[0]),
        .I3(Q),
        .I4(ARG[1]),
        .I5(ARG[3]),
        .O(\data_width_64.tlplengthcntr[4]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair593" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.tlplengthcntr[4]_i_9 
       (.I0(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I1(ARG[5]),
        .O(\data_width_64.tlplengthcntr[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[5]_i_1 
       (.I0(\data_width_64.tlplengthcntr[5]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[5]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[5]_i_3_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[5]_i_4_n_0 ),
        .O(\data_width_64.tlplengthcntr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000001FFFFFFFE)) 
    \data_width_64.tlplengthcntr[5]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I5(\data_width_64.tlplengthcntr_reg_n_0_[5] ),
        .O(\data_width_64.tlplengthcntr[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBBB0FF0)) 
    \data_width_64.tlplengthcntr[5]_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr[5]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[5]_i_5_n_0 ),
        .I3(\data_width_64.tlplengthcntr[5]_i_6_n_0 ),
        .I4(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[5]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[6] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[5]),
        .I3(\data_width_64.tlplengthcntr[5]_i_7_n_0 ),
        .I4(\data_width_64.tlplengthcntr[5]_i_8_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[5]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \data_width_64.tlplengthcntr[5]_i_5 
       (.I0(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[5]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.tlplengthcntr[5]_i_6 
       (.I0(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .O(\data_width_64.tlplengthcntr[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthcntr[5]_i_7 
       (.I0(\data_width_64.tlplengthcntr[4]_i_9_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_8_n_0 ),
        .O(\data_width_64.tlplengthcntr[5]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.tlplengthcntr[5]_i_8 
       (.I0(ARG[5]),
        .I1(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I2(ARG[6]),
        .O(\data_width_64.tlplengthcntr[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[6]_i_1 
       (.I0(\data_width_64.tlplengthcntr[6]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[6]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[6]_i_3_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[6]_i_4_n_0 ),
        .O(\data_width_64.tlplengthcntr[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair587" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \data_width_64.tlplengthcntr[6]_i_2 
       (.I0(\data_width_64.tlplengthcntr[9]_i_13_n_0 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .O(\data_width_64.tlplengthcntr[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEBEBEBEB00FFFF00)) 
    \data_width_64.tlplengthcntr[6]_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .I2(\data_width_64.tlplengthcntr[9]_i_13_n_0 ),
        .I3(\data_width_64.tlplengthcntr[6]_i_5_n_0 ),
        .I4(\data_width_64.tlplengthcntr[6]_i_6_n_0 ),
        .I5(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[6]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[7] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[6]),
        .I3(\data_width_64.tlplengthcntr[6]_i_7_n_0 ),
        .I4(\data_width_64.tlplengthcntr[6]_i_8_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[6]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'h0880)) 
    \data_width_64.tlplengthcntr[6]_i_5 
       (.I0(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_7_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .O(\data_width_64.tlplengthcntr[6]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.tlplengthcntr[6]_i_6 
       (.I0(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .I3(\data_width_64.tlplengthcntr[9]_i_21_n_0 ),
        .O(\data_width_64.tlplengthcntr[6]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT4 #(
    .INIT(16'h0880)) 
    \data_width_64.tlplengthcntr[6]_i_7 
       (.I0(ARG[6]),
        .I1(\data_width_64.tlplengthcntr[4]_i_8_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I3(ARG[5]),
        .O(\data_width_64.tlplengthcntr[6]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.tlplengthcntr[6]_i_8 
       (.I0(ARG[5]),
        .I1(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I2(ARG[6]),
        .I3(ARG[7]),
        .O(\data_width_64.tlplengthcntr[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[7]_i_1 
       (.I0(\data_width_64.tlplengthcntr[7]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[7]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[7]_i_3_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[7]_i_4_n_0 ),
        .O(\data_width_64.tlplengthcntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair587" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \data_width_64.tlplengthcntr[7]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .I1(\data_width_64.tlplengthcntr[9]_i_13_n_0 ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[7] ),
        .O(\data_width_64.tlplengthcntr[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBBB0FF0)) 
    \data_width_64.tlplengthcntr[7]_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr[7]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[7]_i_5_n_0 ),
        .I3(\data_width_64.tlplengthcntr[7]_i_6_n_0 ),
        .I4(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[7]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[8] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[7]),
        .I3(\data_width_64.tlplengthcntr[7]_i_7_n_0 ),
        .I4(\data_width_64.tlplengthcntr[7]_i_8_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT5 #(
    .INIT(32'h28000000)) 
    \data_width_64.tlplengthcntr[7]_i_5 
       (.I0(\data_width_64.tlplengthcntr[9]_i_21_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_7_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .O(\data_width_64.tlplengthcntr[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \data_width_64.tlplengthcntr[7]_i_6 
       (.I0(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I3(\data_width_64.tlplengthcntr[9]_i_21_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_19_n_0 ),
        .O(\data_width_64.tlplengthcntr[7]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'h28000000)) 
    \data_width_64.tlplengthcntr[7]_i_7 
       (.I0(ARG[7]),
        .I1(ARG[5]),
        .I2(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_8_n_0 ),
        .I4(ARG[6]),
        .O(\data_width_64.tlplengthcntr[7]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \data_width_64.tlplengthcntr[7]_i_8 
       (.I0(ARG[5]),
        .I1(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I2(ARG[6]),
        .I3(ARG[7]),
        .I4(ARG[8]),
        .O(\data_width_64.tlplengthcntr[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[8]_i_1 
       (.I0(\data_width_64.tlplengthcntr[8]_i_2_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[8]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[8]_i_3_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[8]_i_4_n_0 ),
        .O(\data_width_64.tlplengthcntr[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT4 #(
    .INIT(16'h01FE)) 
    \data_width_64.tlplengthcntr[8]_i_2 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[7] ),
        .I1(\data_width_64.tlplengthcntr[9]_i_13_n_0 ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[8] ),
        .O(\data_width_64.tlplengthcntr[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBBBB0FF0)) 
    \data_width_64.tlplengthcntr[8]_i_3 
       (.I0(\data_width_64.dis_rden_reg_1 ),
        .I1(\data_width_64.tlplengthcntr[8]_i_2_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_14_n_0 ),
        .I3(\data_width_64.tlplengthcntr[8]_i_5_n_0 ),
        .I4(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .O(\data_width_64.tlplengthcntr[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B800FFFF00)) 
    \data_width_64.tlplengthcntr[8]_i_4 
       (.I0(\data_width_64.ctlplengthtemp_reg_n_0_[9] ),
        .I1(rdreq_reg),
        .I2(linkdownflushdepth[8]),
        .I3(\data_width_64.tlplengthcntr[9]_i_17_n_0 ),
        .I4(\data_width_64.tlplengthcntr[8]_i_6_n_0 ),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.tlplengthcntr[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \data_width_64.tlplengthcntr[8]_i_5 
       (.I0(\data_width_64.tlplengthcntr[9]_i_21_n_0 ),
        .I1(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I3(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_19_n_0 ),
        .I5(\data_width_64.tlplengthcntr[9]_i_16_n_0 ),
        .O(\data_width_64.tlplengthcntr[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \data_width_64.tlplengthcntr[8]_i_6 
       (.I0(ARG[5]),
        .I1(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I2(ARG[7]),
        .I3(ARG[6]),
        .I4(ARG[8]),
        .I5(ARG[9]),
        .O(\data_width_64.tlplengthcntr[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF00F0880000F088)) 
    \data_width_64.tlplengthcntr[9]_i_1 
       (.I0(\data_width_64.tlplengthcntr_reg[0]_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_4_n_0 ),
        .I3(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I5(\data_width_64.tlplengthcntr[9]_i_5_n_0 ),
        .O(tlplengthcntr));
  LUT6 #(
    .INIT(64'h2F2F2F202F202020)) 
    \data_width_64.tlplengthcntr[9]_i_10 
       (.I0(linkdownflushdepth[9]),
        .I1(rdreq_reg),
        .I2(\data_width_64.rresp_reg[3][1] ),
        .I3(\data_width_64.tlplengthcntr[9]_i_17_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_18_n_0 ),
        .I5(ARG[9]),
        .O(\data_width_64.tlplengthcntr[9]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT4 #(
    .INIT(16'h00F8)) 
    \data_width_64.tlplengthcntr[9]_i_11 
       (.I0(\data_width_64.lnkdowndataflush_i_5_n_0 ),
        .I1(\data_width_64.lnkdowndataflush_reg_0 ),
        .I2(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I3(emptysig),
        .O(\data_width_64.tlplengthcntr[9]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \data_width_64.tlplengthcntr[9]_i_13 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .I2(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .I5(\data_width_64.tlplengthcntr_reg_n_0_[5] ),
        .O(\data_width_64.tlplengthcntr[9]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0080800000000000)) 
    \data_width_64.tlplengthcntr[9]_i_14 
       (.I0(\data_width_64.tlplengthcntr[9]_i_19_n_0 ),
        .I1(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I4(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I5(\data_width_64.tlplengthcntr[9]_i_21_n_0 ),
        .O(\data_width_64.tlplengthcntr[9]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.tlplengthcntr[9]_i_15 
       (.I0(\data_width_64.tlplengthcntr[9]_i_19_n_0 ),
        .I1(\data_width_64.tlplengthcntr[9]_i_20_n_0 ),
        .I2(\data_width_64.tlplengthcntr[4]_i_5_n_0 ),
        .I3(\data_width_64.tlplengthcntr[4]_i_6_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_21_n_0 ),
        .O(\data_width_64.tlplengthcntr[9]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[9]_i_16 
       (.I0(\data_width_64.tlplength_reg[3]_16 [9]),
        .I1(\data_width_64.tlplength_reg[1]_14 [9]),
        .I2(\data_width_64.tlplength_reg[2]_15 [9]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [9]),
        .O(\data_width_64.tlplengthcntr[9]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h0080800000000000)) 
    \data_width_64.tlplengthcntr[9]_i_17 
       (.I0(ARG[8]),
        .I1(ARG[6]),
        .I2(\data_width_64.tlplengthcntr[4]_i_8_n_0 ),
        .I3(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I4(ARG[5]),
        .I5(ARG[7]),
        .O(\data_width_64.tlplengthcntr[9]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \data_width_64.tlplengthcntr[9]_i_18 
       (.I0(ARG[5]),
        .I1(\data_width_64.tlplengthcntr[9]_i_22_n_0 ),
        .I2(ARG[8]),
        .I3(ARG[6]),
        .I4(ARG[7]),
        .O(\data_width_64.tlplengthcntr[9]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[9]_i_19 
       (.I0(\data_width_64.tlplength_reg[3]_16 [8]),
        .I1(\data_width_64.tlplength_reg[1]_14 [8]),
        .I2(\data_width_64.tlplength_reg[2]_15 [8]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [8]),
        .O(\data_width_64.tlplengthcntr[9]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h5F50CFCF5F50C0C0)) 
    \data_width_64.tlplengthcntr[9]_i_2 
       (.I0(\data_width_64.tlplengthcntr[9]_i_6_n_0 ),
        .I1(\data_width_64.linkdownflushdepth[9]_i_4_n_0 ),
        .I2(\data_width_64.tlplengthcntr[9]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[9]_i_8_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_9_n_0 ),
        .I5(\data_width_64.tlplengthcntr[9]_i_10_n_0 ),
        .O(\data_width_64.tlplengthcntr[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[9]_i_20 
       (.I0(\data_width_64.tlplength_reg[3]_16 [6]),
        .I1(\data_width_64.tlplength_reg[1]_14 [6]),
        .I2(\data_width_64.tlplength_reg[2]_15 [6]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [6]),
        .O(\data_width_64.tlplengthcntr[9]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \data_width_64.tlplengthcntr[9]_i_21 
       (.I0(\data_width_64.tlplength_reg[3]_16 [7]),
        .I1(\data_width_64.tlplength_reg[1]_14 [7]),
        .I2(\data_width_64.tlplength_reg[2]_15 [7]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .I4(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I5(\data_width_64.tlplength_reg[0]_13 [7]),
        .O(\data_width_64.tlplengthcntr[9]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \data_width_64.tlplengthcntr[9]_i_22 
       (.I0(ARG[4]),
        .I1(ARG[2]),
        .I2(Q),
        .I3(ARG[0]),
        .I4(ARG[1]),
        .I5(ARG[3]),
        .O(\data_width_64.tlplengthcntr[9]_i_22_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \data_width_64.tlplengthcntr[9]_i_3 
       (.I0(emptysig),
        .I1(neqOp2_out),
        .I2(rdreq_reg),
        .O(\data_width_64.tlplengthcntr_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hB8888888B888B8B8)) 
    \data_width_64.tlplengthcntr[9]_i_4 
       (.I0(\data_width_64.tlplengthcntr[9]_i_11_n_0 ),
        .I1(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I2(\data_width_64.m_axis_cc_tdata_h[63]_i_3_n_0 ),
        .I3(reg_tready_reg),
        .I4(rdreq_reg),
        .I5(emptysig),
        .O(\data_width_64.tlplengthcntr[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0010101000000000)) 
    \data_width_64.tlplengthcntr[9]_i_5 
       (.I0(emptysig),
        .I1(\data_width_64.dis_rden_reg_1 ),
        .I2(sig_m_axis_cc_tready),
        .I3(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .I4(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I5(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .O(\data_width_64.tlplengthcntr[9]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    \data_width_64.tlplengthcntr[9]_i_6 
       (.I0(\data_width_64.tlplengthcntr_reg_n_0_[8] ),
        .I1(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .I2(\data_width_64.tlplengthcntr[9]_i_13_n_0 ),
        .I3(\data_width_64.tlplengthcntr_reg_n_0_[7] ),
        .I4(\data_width_64.tlplengthcntr_reg_n_0_[9] ),
        .O(\data_width_64.tlplengthcntr[9]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.tlplengthcntr[9]_i_7 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .O(\data_width_64.tlplengthcntr[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h1F1F1F101F101010)) 
    \data_width_64.tlplengthcntr[9]_i_8 
       (.I0(\data_width_64.tlplengthcntr[9]_i_6_n_0 ),
        .I1(\data_width_64.dis_rden_reg_1 ),
        .I2(\data_width_64.cpltlpsmsig[2]_i_7_n_0 ),
        .I3(\data_width_64.tlplengthcntr[9]_i_14_n_0 ),
        .I4(\data_width_64.tlplengthcntr[9]_i_15_n_0 ),
        .I5(\data_width_64.tlplengthcntr[9]_i_16_n_0 ),
        .O(\data_width_64.tlplengthcntr[9]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \data_width_64.tlplengthcntr[9]_i_9 
       (.I0(\data_width_64.cpltlpsmsig_reg[2]_1 ),
        .I1(\data_width_64.cpltlpsmsig_reg[2]_0 ),
        .I2(\data_width_64.cpltlpsmsig_reg[0]_0 ),
        .O(\data_width_64.tlplengthcntr[9]_i_9_n_0 ));
  FDRE \data_width_64.tlplengthcntr_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[0]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[0] ),
        .R(SR));
  MUXF7 \data_width_64.tlplengthcntr_reg[0]_i_3 
       (.I0(\data_width_64.tlplengthcntr[0]_i_4_n_0 ),
        .I1(\data_width_64.tlplengthcntr[0]_i_5_n_0 ),
        .O(\data_width_64.tlplengthcntr_reg[0]_i_3_n_0 ),
        .S(\data_width_64.tlplengthcntr[9]_i_9_n_0 ));
  FDRE \data_width_64.tlplengthcntr_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[1]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[1] ),
        .R(SR));
  FDRE \data_width_64.tlplengthcntr_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[2]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[2] ),
        .R(SR));
  MUXF7 \data_width_64.tlplengthcntr_reg[2]_i_3 
       (.I0(\data_width_64.tlplengthcntr[2]_i_4_n_0 ),
        .I1(\data_width_64.tlplengthcntr[2]_i_5_n_0 ),
        .O(\data_width_64.tlplengthcntr_reg[2]_i_3_n_0 ),
        .S(\data_width_64.tlplengthcntr[9]_i_9_n_0 ));
  FDRE \data_width_64.tlplengthcntr_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[3]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[3] ),
        .R(SR));
  MUXF7 \data_width_64.tlplengthcntr_reg[3]_i_3 
       (.I0(\data_width_64.tlplengthcntr[3]_i_4_n_0 ),
        .I1(\data_width_64.tlplengthcntr[3]_i_5_n_0 ),
        .O(\data_width_64.tlplengthcntr_reg[3]_i_3_n_0 ),
        .S(\data_width_64.tlplengthcntr[9]_i_9_n_0 ));
  FDRE \data_width_64.tlplengthcntr_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[4]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[4] ),
        .R(SR));
  FDRE \data_width_64.tlplengthcntr_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[5]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[5] ),
        .R(SR));
  FDRE \data_width_64.tlplengthcntr_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[6]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[6] ),
        .R(SR));
  FDRE \data_width_64.tlplengthcntr_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[7]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[7] ),
        .R(SR));
  FDRE \data_width_64.tlplengthcntr_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[8]_i_1_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[8] ),
        .R(SR));
  FDRE \data_width_64.tlplengthcntr_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlplengthcntr),
        .D(\data_width_64.tlplengthcntr[9]_i_2_n_0 ),
        .Q(\data_width_64.tlplengthcntr_reg_n_0_[9] ),
        .R(SR));
  LUT5 #(
    .INIT(32'h10000000)) 
    \data_width_64.tlplengthsig[9]_i_1__0 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .I3(rdreq_reg),
        .I4(user_lnk_up_mux_reg_2),
        .O(tagsig));
  FDRE \data_width_64.tlplengthsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [0]),
        .Q(tlplengthsig[0]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [1]),
        .Q(tlplengthsig[1]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [2]),
        .Q(tlplengthsig[2]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [3]),
        .Q(tlplengthsig[3]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [4]),
        .Q(tlplengthsig[4]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [5]),
        .Q(tlplengthsig[5]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [6]),
        .Q(tlplengthsig[6]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [7]),
        .Q(tlplengthsig[7]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [8]),
        .Q(tlplengthsig[8]),
        .R(SR));
  FDRE \data_width_64.tlplengthsig_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tagsig),
        .D(\m_axis_cr_tdata_reg[63] [9]),
        .Q(tlplengthsig[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpndattr[0][0]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tlpndattr_reg_n_0_[0][0] ),
        .O(tlpndattr0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpndattr[0][1]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tlpndattr_reg_n_0_[0][1] ),
        .O(tlpndattr0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair514" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpndattr[1][0]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndattr_reg_n_0_[1][0] ),
        .O(tlpndattr0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair515" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpndattr[1][1]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndattr_reg_n_0_[1][1] ),
        .O(tlpndattr0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair514" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpndattr[2][0]_i_1 
       (.I0(\data_width_64.tlpndattr_reg_n_0_[2][0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .O(tlpndattr0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair515" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpndattr[2][1]_i_1 
       (.I0(\data_width_64.tlpndattr_reg_n_0_[2][1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .O(tlpndattr0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpndattr[3][0]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndattr_reg_n_0_[3][0] ),
        .O(tlpndattr0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpndattr[3][1]_i_1 
       (.I0(\data_width_64.tlpattrsig_reg_n_0_[1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndattr_reg_n_0_[3][1] ),
        .O(tlpndattr0_in[1]));
  FDRE \data_width_64.tlpndattr_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[6]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[7]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[4]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[5]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[2]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[3]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[0]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndattr_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndattr0_in[1]),
        .Q(\data_width_64.tlpndattr_reg_n_0_[3][1] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hE0EFEFEF40404040)) 
    \data_width_64.tlpndbytecount[0][0]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][0]_i_2_n_0 ),
        .I2(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I4(p_0_in2_in),
        .I5(C__0),
        .O(\tlpndbytecount[3]0_in [0]));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT4 #(
    .INIT(16'h0DB7)) 
    \data_width_64.tlpndbytecount[0][0]_i_2 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .O(\data_width_64.tlpndbytecount[0][0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5556AAA955565556)) 
    \data_width_64.tlpndbytecount[0][0]_i_3 
       (.I0(\data_width_64.tlpndbytecount[0][0]_i_4_n_0 ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I2(p_0_in0_in),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I4(p_0_in2_in),
        .I5(\data_width_64.lastdwbesig_reg_n_0_[2] ),
        .O(C__0));
  LUT6 #(
    .INIT(64'hDDD2DDDD222D2222)) 
    \data_width_64.tlpndbytecount[0][0]_i_4 
       (.I0(p_0_in0_in),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I2(p_32_out),
        .I3(p_0_in27_in),
        .I4(\data_width_64.lastdwbesig_reg_n_0_[0] ),
        .I5(p_36_out),
        .O(\data_width_64.tlpndbytecount[0][0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][10]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[10]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [10]));
  LUT4 #(
    .INIT(16'h2000)) 
    \data_width_64.tlpndbytecount[0][11]_i_1 
       (.I0(axi_aresetn),
        .I1(\data_width_64.wrpendflush[3][3]_i_3_n_0 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_3_n_0 ),
        .O(\tlpndbytecount[0]_1 ));
  LUT6 #(
    .INIT(64'h000F000C000FFFA0)) 
    \data_width_64.tlpndbytecount[0][11]_i_10 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in27_in),
        .I2(\data_width_64.lastdwbesig_reg_n_0_[2] ),
        .I3(p_0_in2_in),
        .I4(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I5(p_0_in0_in),
        .O(\data_width_64.tlpndbytecount[0][11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFEFCFEFCFF02FEFC)) 
    \data_width_64.tlpndbytecount[0][11]_i_11 
       (.I0(\data_width_64.lastdwbesig_reg_n_0_[0] ),
        .I1(p_0_in27_in),
        .I2(p_32_out),
        .I3(p_36_out),
        .I4(p_0_in0_in),
        .I5(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .O(\data_width_64.tlpndbytecount[0][11]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFE01FEFE00000000)) 
    \data_width_64.tlpndbytecount[0][11]_i_12 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I3(p_0_in2_in),
        .I4(\data_width_64.lastdwbesig_reg_n_0_[2] ),
        .I5(\data_width_64.tlpndbytecount[0][0]_i_4_n_0 ),
        .O(\data_width_64.tlpndbytecount[0][11]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hFE01)) 
    \data_width_64.tlpndbytecount[0][11]_i_13 
       (.I0(tlplengthsig[8]),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_19_n_0 ),
        .I2(tlplengthsig[7]),
        .I3(tlplengthsig[9]),
        .O(\data_width_64.tlpndbytecount[0][11]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \data_width_64.tlpndbytecount[0][11]_i_14 
       (.I0(tlplengthsig[7]),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_19_n_0 ),
        .I2(tlplengthsig[8]),
        .O(\data_width_64.tlpndbytecount[0][11]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \data_width_64.tlpndbytecount[0][11]_i_15 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_19_n_0 ),
        .I1(tlplengthsig[7]),
        .O(\data_width_64.tlpndbytecount[0][11]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_width_64.tlpndbytecount[0][11]_i_16 
       (.I0(tlplengthsig[8]),
        .I1(tlplengthsig[9]),
        .I2(tlplengthsig[5]),
        .I3(tlplengthsig[6]),
        .I4(tlplengthsig[7]),
        .O(\data_width_64.tlpndbytecount[0][11]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \data_width_64.tlpndbytecount[0][11]_i_17 
       (.I0(p_0_in2_in),
        .I1(\data_width_64.lastdwbesig_reg_n_0_[2] ),
        .O(p_32_out));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_width_64.tlpndbytecount[0][11]_i_18 
       (.I0(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I2(p_0_in0_in),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .O(p_36_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \data_width_64.tlpndbytecount[0][11]_i_19 
       (.I0(tlplengthsig[5]),
        .I1(tlplengthsig[3]),
        .I2(tlplengthsig[1]),
        .I3(tlplengthsig[2]),
        .I4(tlplengthsig[4]),
        .I5(tlplengthsig[6]),
        .O(\data_width_64.tlpndbytecount[0][11]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][11]_i_2 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[11]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [11]));
  LUT6 #(
    .INIT(64'h1110111100000000)) 
    \data_width_64.tlpndbytecount[0][11]_i_3 
       (.I0(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I1(rdndtargetpipeline[1]),
        .I2(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .I3(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I4(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .I5(\data_width_64.tagsig_reg[0]_1 ),
        .O(\data_width_64.tlpndbytecount[0][11]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT4 #(
    .INIT(16'hFCA8)) 
    \data_width_64.tlpndbytecount[0][11]_i_4 
       (.I0(\data_width_64.lastdwbesig_reg_n_0_[2] ),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I2(p_0_in0_in),
        .I3(p_0_in2_in),
        .O(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair571" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \data_width_64.tlpndbytecount[0][11]_i_5 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_10_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_11_n_0 ),
        .I2(\data_width_64.tlpndbytecount[0][11]_i_12_n_0 ),
        .O(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    \data_width_64.tlpndbytecount[0][11]_i_7 
       (.I0(tlplengthsig[2]),
        .I1(tlplengthsig[1]),
        .I2(tlplengthsig[0]),
        .I3(tlplengthsig[3]),
        .I4(tlplengthsig[4]),
        .I5(\data_width_64.tlpndbytecount[0][11]_i_16_n_0 ),
        .O(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \data_width_64.tlpndbytecount[0][11]_i_8 
       (.I0(tlplengthsig[2]),
        .I1(tlplengthsig[1]),
        .I2(tlplengthsig[0]),
        .I3(tlplengthsig[3]),
        .I4(tlplengthsig[4]),
        .I5(\data_width_64.tlpndbytecount[0][11]_i_16_n_0 ),
        .O(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \data_width_64.tlpndbytecount[0][11]_i_9 
       (.I0(p_0_in2_in),
        .I1(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .O(p_23_out));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT5 #(
    .INIT(32'h8BBB8888)) 
    \data_width_64.tlpndbytecount[0][1]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][1]_i_2_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I3(p_0_in2_in),
        .I4(C),
        .O(\tlpndbytecount[3]0_in [1]));
  LUT6 #(
    .INIT(64'h8888BBB8BBB8B888)) 
    \data_width_64.tlpndbytecount[0][1]_i_2 
       (.I0(p_1_out[1]),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[2] ),
        .I3(p_0_in0_in),
        .I4(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I5(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .O(\data_width_64.tlpndbytecount[0][1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair571" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \data_width_64.tlpndbytecount[0][1]_i_3 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_12_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_10_n_0 ),
        .I2(\data_width_64.tlpndbytecount[0][11]_i_11_n_0 ),
        .O(C));
  LUT6 #(
    .INIT(64'hF000F066F066F066)) 
    \data_width_64.tlpndbytecount[0][2]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I2(\data_width_64.tlpndbytecount[0][2]_i_2_n_0 ),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I4(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .I5(p_0_in2_in),
        .O(\tlpndbytecount[3]0_in [2]));
  LUT4 #(
    .INIT(16'hB888)) 
    \data_width_64.tlpndbytecount[0][2]_i_2 
       (.I0(p_1_out[2]),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I2(\data_width_64.firstdwbesig_reg_n_0_[3] ),
        .I3(\data_width_64.firstdwbesig_reg_n_0_[0] ),
        .O(\data_width_64.tlpndbytecount[0][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][3]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[3]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [3]));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][4]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[4]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [4]));
  LUT1 #(
    .INIT(2'h1)) 
    \data_width_64.tlpndbytecount[0][4]_i_3 
       (.I0(tlplengthsig[1]),
        .O(\data_width_64.tlpndbytecount[0][4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \data_width_64.tlpndbytecount[0][4]_i_4 
       (.I0(tlplengthsig[1]),
        .I1(tlplengthsig[2]),
        .O(\data_width_64.tlpndbytecount[0][4]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h87)) 
    \data_width_64.tlpndbytecount[0][4]_i_5 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(tlplengthsig[1]),
        .O(\data_width_64.tlpndbytecount[0][4]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \data_width_64.tlpndbytecount[0][4]_i_6 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I2(tlplengthsig[0]),
        .O(\data_width_64.tlpndbytecount[0][4]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \data_width_64.tlpndbytecount[0][4]_i_7 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_12_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_10_n_0 ),
        .I2(\data_width_64.tlpndbytecount[0][11]_i_11_n_0 ),
        .O(\data_width_64.tlpndbytecount[0][4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][5]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[5]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [5]));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][6]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[6]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [6]));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][7]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[7]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [7]));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][8]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[8]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [8]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \data_width_64.tlpndbytecount[0][8]_i_3 
       (.I0(tlplengthsig[5]),
        .I1(tlplengthsig[3]),
        .I2(tlplengthsig[1]),
        .I3(tlplengthsig[2]),
        .I4(tlplengthsig[4]),
        .I5(tlplengthsig[6]),
        .O(\data_width_64.tlpndbytecount[0][8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \data_width_64.tlpndbytecount[0][8]_i_4 
       (.I0(tlplengthsig[4]),
        .I1(tlplengthsig[2]),
        .I2(tlplengthsig[1]),
        .I3(tlplengthsig[3]),
        .I4(tlplengthsig[5]),
        .O(\data_width_64.tlpndbytecount[0][8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFE01)) 
    \data_width_64.tlpndbytecount[0][8]_i_5 
       (.I0(tlplengthsig[3]),
        .I1(tlplengthsig[1]),
        .I2(tlplengthsig[2]),
        .I3(tlplengthsig[4]),
        .O(\data_width_64.tlpndbytecount[0][8]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \data_width_64.tlpndbytecount[0][8]_i_6 
       (.I0(tlplengthsig[2]),
        .I1(tlplengthsig[1]),
        .I2(tlplengthsig[3]),
        .O(\data_width_64.tlpndbytecount[0][8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hF0007777F0000000)) 
    \data_width_64.tlpndbytecount[0][9]_i_1 
       (.I0(\data_width_64.tlpndbytecount[0][11]_i_4_n_0 ),
        .I1(\data_width_64.tlpndbytecount[0][11]_i_5_n_0 ),
        .I2(p_1_out[9]),
        .I3(\data_width_64.tlpndbytecount[0][11]_i_7_n_0 ),
        .I4(\data_width_64.tlpndbytecount[0][11]_i_8_n_0 ),
        .I5(p_23_out),
        .O(\tlpndbytecount[3]0_in [9]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \data_width_64.tlpndbytecount[1][11]_i_1 
       (.I0(axi_aresetn),
        .I1(\data_width_64.wrpendflush[3][3]_i_3_n_0 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(neqOp57_in),
        .I5(\data_width_64.tlpndbytecount[1][11]_i_2_n_0 ),
        .O(\tlpndbytecount[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair560" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.tlpndbytecount[1][11]_i_2 
       (.I0(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I1(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndbytecount[1][11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \data_width_64.tlpndbytecount[2][11]_i_1 
       (.I0(axi_aresetn),
        .I1(\data_width_64.wrpendflush[3][3]_i_3_n_0 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(neqOp57_in),
        .I5(\data_width_64.tlpndbytecount[2][11]_i_2_n_0 ),
        .O(\tlpndbytecount[2]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair559" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.tlpndbytecount[2][11]_i_2 
       (.I0(rdndtargetpipeline[1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(\data_width_64.tlpndbytecount[2][11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \data_width_64.tlpndbytecount[3][11]_i_1 
       (.I0(axi_aresetn),
        .I1(\data_width_64.wrpendflush[3][3]_i_3_n_0 ),
        .I2(rdreq_reg),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(neqOp57_in),
        .I5(\data_width_64.tlpndbytecount[3][11]_i_2_n_0 ),
        .O(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair557" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlpndbytecount[3][11]_i_2 
       (.I0(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I1(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndbytecount[3][11]_i_2_n_0 ));
  FDRE \data_width_64.tlpndbytecount_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][11] ),
        .R(1'b0));
  CARRY4 \data_width_64.tlpndbytecount_reg[0][11]_i_6 
       (.CI(\data_width_64.tlpndbytecount_reg[0][8]_i_2_n_0 ),
        .CO({\NLW_data_width_64.tlpndbytecount_reg[0][11]_i_6_CO_UNCONNECTED [3:2],\data_width_64.tlpndbytecount_reg[0][11]_i_6_n_2 ,\data_width_64.tlpndbytecount_reg[0][11]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_data_width_64.tlpndbytecount_reg[0][11]_i_6_O_UNCONNECTED [3],p_1_out[11:9]}),
        .S({1'b0,\data_width_64.tlpndbytecount[0][11]_i_13_n_0 ,\data_width_64.tlpndbytecount[0][11]_i_14_n_0 ,\data_width_64.tlpndbytecount[0][11]_i_15_n_0 }));
  FDRE \data_width_64.tlpndbytecount_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][4] ),
        .R(1'b0));
  CARRY4 \data_width_64.tlpndbytecount_reg[0][4]_i_2 
       (.CI(1'b0),
        .CO({\data_width_64.tlpndbytecount_reg[0][4]_i_2_n_0 ,\data_width_64.tlpndbytecount_reg[0][4]_i_2_n_1 ,\data_width_64.tlpndbytecount_reg[0][4]_i_2_n_2 ,\data_width_64.tlpndbytecount_reg[0][4]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\data_width_64.tlpndbytecount[0][4]_i_3_n_0 ,tlplengthsig[0],1'b0}),
        .O(p_1_out[4:1]),
        .S({\data_width_64.tlpndbytecount[0][4]_i_4_n_0 ,\data_width_64.tlpndbytecount[0][4]_i_5_n_0 ,\data_width_64.tlpndbytecount[0][4]_i_6_n_0 ,\data_width_64.tlpndbytecount[0][4]_i_7_n_0 }));
  FDRE \data_width_64.tlpndbytecount_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][8] ),
        .R(1'b0));
  CARRY4 \data_width_64.tlpndbytecount_reg[0][8]_i_2 
       (.CI(\data_width_64.tlpndbytecount_reg[0][4]_i_2_n_0 ),
        .CO({\data_width_64.tlpndbytecount_reg[0][8]_i_2_n_0 ,\data_width_64.tlpndbytecount_reg[0][8]_i_2_n_1 ,\data_width_64.tlpndbytecount_reg[0][8]_i_2_n_2 ,\data_width_64.tlpndbytecount_reg[0][8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_1_out[8:5]),
        .S({\data_width_64.tlpndbytecount[0][8]_i_3_n_0 ,\data_width_64.tlpndbytecount[0][8]_i_4_n_0 ,\data_width_64.tlpndbytecount[0][8]_i_5_n_0 ,\data_width_64.tlpndbytecount[0][8]_i_6_n_0 }));
  FDRE \data_width_64.tlpndbytecount_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[0]_1 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[0][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[1]_0 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[1][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\tlpndbytecount[2]_2 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[2][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [0]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [10]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [11]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [1]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [2]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [3]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [4]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [5]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [6]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [7]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [8]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndbytecount_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpndbytecount[3][11]_i_1_n_0 ),
        .D(\tlpndbytecount[3]0_in [9]),
        .Q(\data_width_64.tlpndbytecount_reg_n_0_[3][9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][0]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_function_number_d_reg[2] [0]),
        .O(\data_width_64.tlpndcompleterid[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][10]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][10] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [2]),
        .O(\data_width_64.tlpndcompleterid[0][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][11]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][11] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [3]),
        .O(\data_width_64.tlpndcompleterid[0][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][12]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][12] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [4]),
        .O(\data_width_64.tlpndcompleterid[0][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][13]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][13] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [5]),
        .O(\data_width_64.tlpndcompleterid[0][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][14]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][14] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\cfg_bus_number_d_reg[7] [6]),
        .O(\data_width_64.tlpndcompleterid[0][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][15]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][15] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [7]),
        .O(\data_width_64.tlpndcompleterid[0][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][1]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_function_number_d_reg[2] [1]),
        .O(\data_width_64.tlpndcompleterid[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][2]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][2] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_function_number_d_reg[2] [2]),
        .O(\data_width_64.tlpndcompleterid[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][3]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][3] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [0]),
        .O(\data_width_64.tlpndcompleterid[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][4]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][4] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [1]),
        .O(\data_width_64.tlpndcompleterid[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][5]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][5] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [2]),
        .O(\data_width_64.tlpndcompleterid[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][6]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][6] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [3]),
        .O(\data_width_64.tlpndcompleterid[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][7]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][7] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [4]),
        .O(\data_width_64.tlpndcompleterid[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][8]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][8] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [0]),
        .O(\data_width_64.tlpndcompleterid[0][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndcompleterid[0][9]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[0][9] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [1]),
        .O(\data_width_64.tlpndcompleterid[0][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair532" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][0]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [0]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][0] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair551" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][10]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [2]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][10] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair552" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][11]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [3]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][11] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair553" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][12]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [4]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][12] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair554" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][13]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [5]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][13] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair530" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][14]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [6]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][14] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair531" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][15]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [7]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][15] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair542" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][1]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [1]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][1] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair548" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][2]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [2]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][2] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair543" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][3]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [0]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][3] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair544" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][4]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [1]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][4] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair545" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][5]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [2]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][5] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair549" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][6]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [3]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][6] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair546" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][7]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [4]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][7] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair547" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][8]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [0]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][8] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair550" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndcompleterid[1][9]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [1]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[1][9] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndcompleterid[1][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair532" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][0]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_function_number_d_reg[2] [0]),
        .O(\data_width_64.tlpndcompleterid[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair551" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][10]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][10] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [2]),
        .O(\data_width_64.tlpndcompleterid[2][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair552" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][11]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][11] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [3]),
        .O(\data_width_64.tlpndcompleterid[2][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair553" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][12]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][12] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [4]),
        .O(\data_width_64.tlpndcompleterid[2][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair554" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][13]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][13] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [5]),
        .O(\data_width_64.tlpndcompleterid[2][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair530" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][14]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][14] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [6]),
        .O(\data_width_64.tlpndcompleterid[2][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair531" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][15]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][15] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [7]),
        .O(\data_width_64.tlpndcompleterid[2][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair542" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][1]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_function_number_d_reg[2] [1]),
        .O(\data_width_64.tlpndcompleterid[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair548" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][2]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][2] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_function_number_d_reg[2] [2]),
        .O(\data_width_64.tlpndcompleterid[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair543" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][3]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][3] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [0]),
        .O(\data_width_64.tlpndcompleterid[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair544" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][4]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][4] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [1]),
        .O(\data_width_64.tlpndcompleterid[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair545" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][5]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][5] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [2]),
        .O(\data_width_64.tlpndcompleterid[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair549" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][6]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][6] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [3]),
        .O(\data_width_64.tlpndcompleterid[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair546" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][7]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][7] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_device_number_d_reg[4] [4]),
        .O(\data_width_64.tlpndcompleterid[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair547" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][8]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][8] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [0]),
        .O(\data_width_64.tlpndcompleterid[2][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair550" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndcompleterid[2][9]_i_1 
       (.I0(\data_width_64.tlpndcompleterid_reg_n_0_[2][9] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\cfg_bus_number_d_reg[7] [1]),
        .O(\data_width_64.tlpndcompleterid[2][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair496" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][0]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [0]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][0] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][10]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [2]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][10] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][11]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [3]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][11] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][12]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [4]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][12] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][13]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [5]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][13] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][14]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [6]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][14] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndcompleterid0_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair497" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][15]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [7]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][15] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair495" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][1]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [1]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][1] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair494" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][2]_i_1 
       (.I0(\cfg_function_number_d_reg[2] [2]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][2] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair493" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][3]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [0]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][3] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair492" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][4]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [1]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][4] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair491" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][5]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [2]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][5] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair490" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][6]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [3]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][6] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair489" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][7]_i_1 
       (.I0(\cfg_device_number_d_reg[4] [4]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][7] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair488" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][8]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [0]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][8] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndcompleterid[3][9]_i_1 
       (.I0(\cfg_bus_number_d_reg[7] [1]),
        .I1(\data_width_64.tlpndcompleterid_reg_n_0_[3][9] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndcompleterid0_in[9]));
  FDRE \data_width_64.tlpndcompleterid_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[0][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[0][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[1][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[1][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndcompleterid[2][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[2][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[0]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[10]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[11]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[12]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[13]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[14]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[15]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[1]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[2]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[3]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[4]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[5]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[6]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[7]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[8]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndcompleterid_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndcompleterid0_in[9]),
        .Q(\data_width_64.tlpndcompleterid_reg_n_0_[3][9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][0]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][0] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[0]),
        .O(\data_width_64.tlpndrequesterid[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][10]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][10] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[10]),
        .O(\data_width_64.tlpndrequesterid[0][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][11]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][11] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[11]),
        .O(\data_width_64.tlpndrequesterid[0][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][12]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][12] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[12]),
        .O(\data_width_64.tlpndrequesterid[0][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][13]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][13] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[13]),
        .O(\data_width_64.tlpndrequesterid[0][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][14]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][14] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[14]),
        .O(\data_width_64.tlpndrequesterid[0][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][15]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][15] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[15]),
        .O(\data_width_64.tlpndrequesterid[0][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][1]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][1] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[1]),
        .O(\data_width_64.tlpndrequesterid[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][2]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][2] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[2]),
        .O(\data_width_64.tlpndrequesterid[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][3]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][3] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[3]),
        .O(\data_width_64.tlpndrequesterid[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][4]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][4] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[4]),
        .O(\data_width_64.tlpndrequesterid[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][5]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][5] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[5]),
        .O(\data_width_64.tlpndrequesterid[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][6]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][6] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[6]),
        .O(\data_width_64.tlpndrequesterid[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][7]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][7] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[7]),
        .O(\data_width_64.tlpndrequesterid[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][8]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][8] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[8]),
        .O(\data_width_64.tlpndrequesterid[0][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndrequesterid[0][9]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[0][9] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[9]),
        .O(\data_width_64.tlpndrequesterid[0][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair506" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][0]_i_1 
       (.I0(requesteridsig[0]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][0] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][10]_i_1 
       (.I0(requesteridsig[10]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][10] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][11]_i_1 
       (.I0(requesteridsig[11]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][11] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][12]_i_1 
       (.I0(requesteridsig[12]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][12] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][13]_i_1 
       (.I0(requesteridsig[13]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][13] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][14]_i_1 
       (.I0(requesteridsig[14]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][14] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][15]_i_1 
       (.I0(requesteridsig[15]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][15] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][1]_i_1 
       (.I0(requesteridsig[1]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][1] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][2]_i_1 
       (.I0(requesteridsig[2]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][2] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][3]_i_1 
       (.I0(requesteridsig[3]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][3] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][4]_i_1 
       (.I0(requesteridsig[4]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][4] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][5]_i_1 
       (.I0(requesteridsig[5]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][5] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][6]_i_1 
       (.I0(requesteridsig[6]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][6] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][7]_i_1 
       (.I0(requesteridsig[7]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][7] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][8]_i_1 
       (.I0(requesteridsig[8]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][8] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndrequesterid[1][9]_i_1 
       (.I0(requesteridsig[9]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[1][9] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndrequesterid[1][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair506" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][0]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][0] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[0]),
        .O(\data_width_64.tlpndrequesterid[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair513" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][10]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][10] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[10]),
        .O(\data_width_64.tlpndrequesterid[2][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair502" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][11]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][11] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[11]),
        .O(\data_width_64.tlpndrequesterid[2][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair501" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][12]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][12] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[12]),
        .O(\data_width_64.tlpndrequesterid[2][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][13]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][13] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[13]),
        .O(\data_width_64.tlpndrequesterid[2][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][14]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][14] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[14]),
        .O(\data_width_64.tlpndrequesterid[2][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][15]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][15] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[15]),
        .O(\data_width_64.tlpndrequesterid[2][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair541" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][1]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][1] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[1]),
        .O(\data_width_64.tlpndrequesterid[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair540" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][2]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][2] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[2]),
        .O(\data_width_64.tlpndrequesterid[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair539" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][3]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][3] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[3]),
        .O(\data_width_64.tlpndrequesterid[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair538" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][4]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][4] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[4]),
        .O(\data_width_64.tlpndrequesterid[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair537" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][5]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][5] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[5]),
        .O(\data_width_64.tlpndrequesterid[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair536" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][6]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][6] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[6]),
        .O(\data_width_64.tlpndrequesterid[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair535" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][7]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][7] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[7]),
        .O(\data_width_64.tlpndrequesterid[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair534" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][8]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][8] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[8]),
        .O(\data_width_64.tlpndrequesterid[2][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair533" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndrequesterid[2][9]_i_1 
       (.I0(\data_width_64.tlpndrequesterid_reg_n_0_[2][9] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(requesteridsig[9]),
        .O(\data_width_64.tlpndrequesterid[2][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][0]_i_1 
       (.I0(requesteridsig[0]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][0] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair513" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][10]_i_1 
       (.I0(requesteridsig[10]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][10] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair502" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][11]_i_1 
       (.I0(requesteridsig[11]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][11] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair501" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][12]_i_1 
       (.I0(requesteridsig[12]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][12] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair500" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][13]_i_1 
       (.I0(requesteridsig[13]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][13] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair499" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][14]_i_1 
       (.I0(requesteridsig[14]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][14] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair498" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][15]_i_1 
       (.I0(requesteridsig[15]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][15] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair541" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][1]_i_1 
       (.I0(requesteridsig[1]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][1] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair540" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][2]_i_1 
       (.I0(requesteridsig[2]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][2] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair539" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][3]_i_1 
       (.I0(requesteridsig[3]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][3] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair538" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][4]_i_1 
       (.I0(requesteridsig[4]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][4] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair537" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][5]_i_1 
       (.I0(requesteridsig[5]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][5] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair536" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][6]_i_1 
       (.I0(requesteridsig[6]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][6] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair535" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][7]_i_1 
       (.I0(requesteridsig[7]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][7] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair534" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][8]_i_1 
       (.I0(requesteridsig[8]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][8] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair533" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndrequesterid[3][9]_i_1 
       (.I0(requesteridsig[9]),
        .I1(\data_width_64.tlpndrequesterid_reg_n_0_[3][9] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndrequesterid0_in[9]));
  FDRE \data_width_64.tlpndrequesterid_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[0][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[0][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[1][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[1][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][10]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][11]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][12]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][13]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][14]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][15]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][8]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndrequesterid[2][9]_i_1_n_0 ),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[2][9] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[0]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[10]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][10] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[11]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][11] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[12]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][12] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[13]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][13] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[14]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][14] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[15]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][15] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[1]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[2]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[3]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[4]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[5]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[6]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[7]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[8]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][8] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndrequesterid_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndrequesterid0_in[9]),
        .Q(\data_width_64.tlpndrequesterid_reg_n_0_[3][9] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][0]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[0] ),
        .O(\data_width_64.tlpndtag[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][1]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[1] ),
        .O(\data_width_64.tlpndtag[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][2]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][2] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[2] ),
        .O(\data_width_64.tlpndtag[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][3]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][3] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[3] ),
        .O(\data_width_64.tlpndtag[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][4]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][4] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tagsig_reg_n_0_[4] ),
        .O(\data_width_64.tlpndtag[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][5]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][5] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tagsig_reg_n_0_[5] ),
        .O(\data_width_64.tlpndtag[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][6]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][6] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[6] ),
        .O(\data_width_64.tlpndtag[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlpndtag[0][7]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[0][7] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[7] ),
        .O(\data_width_64.tlpndtag[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][0]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[0] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][0] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndtag[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][1]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[1] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][1] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndtag[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][2]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[2] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][2] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndtag[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][3]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[3] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][3] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndtag[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][4]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[4] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][4] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndtag[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][5]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[5] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][5] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(rdndtargetpipeline[1]),
        .O(\data_width_64.tlpndtag[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][6]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[6] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][6] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndtag[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlpndtag[1][7]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[7] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[1][7] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(\data_width_64.tlpndtag[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][0]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[0] ),
        .O(\data_width_64.tlpndtag[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][1]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[1] ),
        .O(\data_width_64.tlpndtag[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][2]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][2] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[2] ),
        .O(\data_width_64.tlpndtag[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][3]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][3] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[3] ),
        .O(\data_width_64.tlpndtag[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][4]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][4] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tagsig_reg_n_0_[4] ),
        .O(\data_width_64.tlpndtag[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][5]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][5] ),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tagsig_reg_n_0_[5] ),
        .O(\data_width_64.tlpndtag[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][6]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][6] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[6] ),
        .O(\data_width_64.tlpndtag[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlpndtag[2][7]_i_1 
       (.I0(\data_width_64.tlpndtag_reg_n_0_[2][7] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.tagsig_reg_n_0_[7] ),
        .O(\data_width_64.tlpndtag[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][0]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[0] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][0] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndtag0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][1]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[1] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][1] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndtag0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][2]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[2] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][2] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndtag0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][3]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[3] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][3] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndtag0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][4]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[4] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][4] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndtag0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][5]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[5] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][5] ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .O(tlpndtag0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][6]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[6] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][6] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndtag0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlpndtag[3][7]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[7] ),
        .I1(\data_width_64.tlpndtag_reg_n_0_[3][7] ),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .O(tlpndtag0_in[7]));
  FDRE \data_width_64.tlpndtag_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[0][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(\data_width_64.tlpndtag[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlpndtag_reg_n_0_[2][7] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[0]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[1]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[2]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[3]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][3] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[4]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][4] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[5]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][5] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[6]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][6] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtag_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtag0_in[7]),
        .Q(\data_width_64.tlpndtag_reg_n_0_[3][7] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpndtc[0][0]_i_1 
       (.I0(tlptcsig[0]),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tlpndtc_reg_n_0_[0][0] ),
        .O(tlpndtc0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpndtc[0][1]_i_1 
       (.I0(tlptcsig[1]),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tlpndtc_reg_n_0_[0][1] ),
        .O(tlpndtc0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlpndtc[0][2]_i_1 
       (.I0(tlptcsig[2]),
        .I1(rdndtargetpipeline[1]),
        .I2(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\data_width_64.tlpndtc_reg_n_0_[0][2] ),
        .O(tlpndtc0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair516" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpndtc[1][0]_i_1 
       (.I0(tlptcsig[0]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[1][0] ),
        .O(tlpndtc0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair517" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpndtc[1][1]_i_1 
       (.I0(tlptcsig[1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[1][1] ),
        .O(tlpndtc0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair518" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlpndtc[1][2]_i_1 
       (.I0(tlptcsig[2]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[1][2] ),
        .O(tlpndtc0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair516" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpndtc[2][0]_i_1 
       (.I0(\data_width_64.tlpndtc_reg_n_0_[2][0] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(tlptcsig[0]),
        .O(tlpndtc0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair517" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpndtc[2][1]_i_1 
       (.I0(\data_width_64.tlpndtc_reg_n_0_[2][1] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(tlptcsig[1]),
        .O(tlpndtc0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair518" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlpndtc[2][2]_i_1 
       (.I0(\data_width_64.tlpndtc_reg_n_0_[2][2] ),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(tlptcsig[2]),
        .O(tlpndtc0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpndtc[3][0]_i_1 
       (.I0(tlptcsig[0]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[3][0] ),
        .O(tlpndtc0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpndtc[3][1]_i_1 
       (.I0(tlptcsig[1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[3][1] ),
        .O(tlpndtc0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlpndtc[3][2]_i_1 
       (.I0(tlptcsig[2]),
        .I1(\data_width_64.rdndtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdndtargetpipeline[1]),
        .I3(\data_width_64.tlpndtc_reg_n_0_[3][2] ),
        .O(tlpndtc0_in[2]));
  FDRE \data_width_64.tlpndtc_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[9]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[10]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[11]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[6]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[7]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[8]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[3]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[4]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[5]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[0]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[1]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlpndtc_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(tlpndtc0_in[2]),
        .Q(\data_width_64.tlpndtc_reg_n_0_[3][2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][0]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[0]),
        .O(\data_width_64.tlprequesterid[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][10]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [10]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[10]),
        .O(\data_width_64.tlprequesterid[0][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][11]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [11]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[11]),
        .O(\data_width_64.tlprequesterid[0][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][12]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [12]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[12]),
        .O(\data_width_64.tlprequesterid[0][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][13]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [13]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[13]),
        .O(\data_width_64.tlprequesterid[0][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][14]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [14]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[14]),
        .O(\data_width_64.tlprequesterid[0][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][15]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [15]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[15]),
        .O(\data_width_64.tlprequesterid[0][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][1]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[1]),
        .O(\data_width_64.tlprequesterid[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][2]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[2]),
        .O(\data_width_64.tlprequesterid[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][3]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[3]),
        .O(\data_width_64.tlprequesterid[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][4]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[4]),
        .O(\data_width_64.tlprequesterid[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][5]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[5]),
        .O(\data_width_64.tlprequesterid[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][6]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[6]),
        .O(\data_width_64.tlprequesterid[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][7]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[7]),
        .O(\data_width_64.tlprequesterid[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][8]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [8]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[8]),
        .O(\data_width_64.tlprequesterid[0][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlprequesterid[0][9]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[0]_17 [9]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[9]),
        .O(\data_width_64.tlprequesterid[0][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][0]_i_1 
       (.I0(requesteridsig[0]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][10]_i_1 
       (.I0(requesteridsig[10]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [10]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][11]_i_1 
       (.I0(requesteridsig[11]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [11]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][12]_i_1 
       (.I0(requesteridsig[12]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [12]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][13]_i_1 
       (.I0(requesteridsig[13]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [13]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][14]_i_1 
       (.I0(requesteridsig[14]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [14]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][15]_i_1 
       (.I0(requesteridsig[15]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [15]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][1]_i_1 
       (.I0(requesteridsig[1]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][2]_i_1 
       (.I0(requesteridsig[2]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][3]_i_1 
       (.I0(requesteridsig[3]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][4]_i_1 
       (.I0(requesteridsig[4]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][5]_i_1 
       (.I0(requesteridsig[5]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][6]_i_1 
       (.I0(requesteridsig[6]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][7]_i_1 
       (.I0(requesteridsig[7]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][8]_i_1 
       (.I0(requesteridsig[8]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [8]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlprequesterid[1][9]_i_1 
       (.I0(requesteridsig[9]),
        .I1(\data_width_64.tlprequesterid_reg[1]_18 [9]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[1][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][0]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[0]),
        .O(\data_width_64.tlprequesterid[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][10]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [10]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[10]),
        .O(\data_width_64.tlprequesterid[2][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][11]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [11]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[11]),
        .O(\data_width_64.tlprequesterid[2][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][12]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [12]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[12]),
        .O(\data_width_64.tlprequesterid[2][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][13]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [13]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[13]),
        .O(\data_width_64.tlprequesterid[2][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][14]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [14]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[14]),
        .O(\data_width_64.tlprequesterid[2][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][15]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [15]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[15]),
        .O(\data_width_64.tlprequesterid[2][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][1]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[1]),
        .O(\data_width_64.tlprequesterid[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][2]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[2]),
        .O(\data_width_64.tlprequesterid[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][3]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[3]),
        .O(\data_width_64.tlprequesterid[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][4]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[4]),
        .O(\data_width_64.tlprequesterid[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][5]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[5]),
        .O(\data_width_64.tlprequesterid[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][6]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[6]),
        .O(\data_width_64.tlprequesterid[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][7]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[7]),
        .O(\data_width_64.tlprequesterid[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][8]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [8]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[8]),
        .O(\data_width_64.tlprequesterid[2][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlprequesterid[2][9]_i_1 
       (.I0(\data_width_64.tlprequesterid_reg[2]_19 [9]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(requesteridsig[9]),
        .O(\data_width_64.tlprequesterid[2][9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][0]_i_1 
       (.I0(requesteridsig[0]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][10]_i_1 
       (.I0(requesteridsig[10]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [10]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][11]_i_1 
       (.I0(requesteridsig[11]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [11]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][12]_i_1 
       (.I0(requesteridsig[12]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [12]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][13]_i_1 
       (.I0(requesteridsig[13]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [13]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][14]_i_1 
       (.I0(requesteridsig[14]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [14]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][15]_i_1 
       (.I0(requesteridsig[15]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [15]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][1]_i_1 
       (.I0(requesteridsig[1]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][2]_i_1 
       (.I0(requesteridsig[2]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][3]_i_1 
       (.I0(requesteridsig[3]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][4]_i_1 
       (.I0(requesteridsig[4]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][5]_i_1 
       (.I0(requesteridsig[5]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][6]_i_1 
       (.I0(requesteridsig[6]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][7]_i_1 
       (.I0(requesteridsig[7]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][8]_i_1 
       (.I0(requesteridsig[8]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [8]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlprequesterid[3][9]_i_1 
       (.I0(requesteridsig[9]),
        .I1(\data_width_64.tlprequesterid_reg[3]_20 [9]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlprequesterid[3][9]_i_1_n_0 ));
  FDRE \data_width_64.tlprequesterid_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][10]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][11]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][12]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][13]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][14]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][15]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][8]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[0][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[0][9]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[0]_17 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][10]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][11]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][12]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][13]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][14]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][15]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][8]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[1][9]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[1]_18 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][10]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][11]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][12]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][13]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][14]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][15]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][8]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[2][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[2][9]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[2]_19 [9]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][0]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][10]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [10]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][11]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [11]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][12]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [12]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][13]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [13]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][14]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [14]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][15]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [15]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][1]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][2]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][3]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][4]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][5]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][6]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][7]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][8]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [8]),
        .R(1'b0));
  FDRE \data_width_64.tlprequesterid_reg[3][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlprequesterid[3][9]_i_1_n_0 ),
        .Q(\data_width_64.tlprequesterid_reg[3]_20 [9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][0]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[0] ),
        .O(\data_width_64.tlptag[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][1]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[1] ),
        .O(\data_width_64.tlptag[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][2]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[2] ),
        .O(\data_width_64.tlptag[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][3]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[3] ),
        .O(\data_width_64.tlptag[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][4]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[4] ),
        .O(\data_width_64.tlptag[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][5]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[5] ),
        .O(\data_width_64.tlptag[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][6]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[6] ),
        .O(\data_width_64.tlptag[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'hABA8)) 
    \data_width_64.tlptag[0][7]_i_1 
       (.I0(\data_width_64.tlptag_reg[0]_21 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[7] ),
        .O(\data_width_64.tlptag[0][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][0]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[0] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][1]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[1] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][2]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[2] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][3]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[3] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][4]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[4] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][5]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[5] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][6]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[6] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'hCCAC)) 
    \data_width_64.tlptag[1][7]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[7] ),
        .I1(\data_width_64.tlptag_reg[1]_22 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[1][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][0]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[0] ),
        .O(\data_width_64.tlptag[2][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][1]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[1] ),
        .O(\data_width_64.tlptag[2][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][2]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[2] ),
        .O(\data_width_64.tlptag[2][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][3]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [3]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[3] ),
        .O(\data_width_64.tlptag[2][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][4]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [4]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[4] ),
        .O(\data_width_64.tlptag[2][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][5]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [5]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[5] ),
        .O(\data_width_64.tlptag[2][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][6]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [6]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[6] ),
        .O(\data_width_64.tlptag[2][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'hAEA2)) 
    \data_width_64.tlptag[2][7]_i_1 
       (.I0(\data_width_64.tlptag_reg[2]_23 [7]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.tagsig_reg_n_0_[7] ),
        .O(\data_width_64.tlptag[2][7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][0]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[0] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][1]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[1] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][2]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[2] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][3]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[3] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [3]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][4]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[4] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [4]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][5]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[5] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [5]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][6]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[6] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [6]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT4 #(
    .INIT(16'hACCC)) 
    \data_width_64.tlptag[3][7]_i_1 
       (.I0(\data_width_64.tagsig_reg_n_0_[7] ),
        .I1(\data_width_64.tlptag_reg[3]_24 [7]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I3(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .O(\data_width_64.tlptag[3][7]_i_1_n_0 ));
  FDRE \data_width_64.tlptag_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][0]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][1]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][2]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][3]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][4]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][5]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][6]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[0][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[0][7]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[0]_21 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][0]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][1]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][2]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][3]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][4]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][5]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][6]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[1][7]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[1]_22 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][0]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][1]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][2]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][3]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][4]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][5]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][6]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[2][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[2][7]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[2]_23 [7]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][0]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [0]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][1]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [1]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][2]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [2]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][3]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [3]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][4]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [4]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][5]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [5]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][6]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [6]),
        .R(1'b0));
  FDRE \data_width_64.tlptag_reg[3][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(\data_width_64.tlptag[3][7]_i_1_n_0 ),
        .Q(\data_width_64.tlptag_reg[3]_24 [7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlptc[0][0]_i_1 
       (.I0(tlptcsig[0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[0][0] ),
        .O(tlptc0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlptc[0][1]_i_1 
       (.I0(tlptcsig[1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[0][1] ),
        .O(tlptc0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.tlptc[0][2]_i_1 
       (.I0(tlptcsig[2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[0][2] ),
        .O(tlptc0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair507" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlptc[1][0]_i_1 
       (.I0(tlptcsig[0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[1][0] ),
        .O(tlptc0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair508" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlptc[1][1]_i_1 
       (.I0(tlptcsig[1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[1][1] ),
        .O(tlptc0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair509" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.tlptc[1][2]_i_1 
       (.I0(tlptcsig[2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[1][2] ),
        .O(tlptc0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair507" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlptc[2][0]_i_1 
       (.I0(\data_width_64.tlptc_reg_n_0_[2][0] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(tlptcsig[0]),
        .O(tlptc0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair508" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlptc[2][1]_i_1 
       (.I0(\data_width_64.tlptc_reg_n_0_[2][1] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(tlptcsig[1]),
        .O(tlptc0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair509" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.tlptc[2][2]_i_1 
       (.I0(\data_width_64.tlptc_reg_n_0_[2][2] ),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(tlptcsig[2]),
        .O(tlptc0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlptc[3][0]_i_1 
       (.I0(tlptcsig[0]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[3][0] ),
        .O(tlptc0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlptc[3][1]_i_1 
       (.I0(tlptcsig[1]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[3][1] ),
        .O(tlptc0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.tlptc[3][2]_i_1 
       (.I0(tlptcsig[2]),
        .I1(\data_width_64.rdtargetpipeline_reg[1]_0 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_0 [1]),
        .I3(\data_width_64.tlptc_reg_n_0_[3][2] ),
        .O(tlptc0_in[2]));
  FDRE \data_width_64.tlptc_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[9]),
        .Q(\data_width_64.tlptc_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[10]),
        .Q(\data_width_64.tlptc_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[11]),
        .Q(\data_width_64.tlptc_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[6]),
        .Q(\data_width_64.tlptc_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[7]),
        .Q(\data_width_64.tlptc_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[8]),
        .Q(\data_width_64.tlptc_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[3]),
        .Q(\data_width_64.tlptc_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[4]),
        .Q(\data_width_64.tlptc_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[5]),
        .Q(\data_width_64.tlptc_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[0]),
        .Q(\data_width_64.tlptc_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[1]),
        .Q(\data_width_64.tlptc_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.tlptc_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlplength[0][9]_i_1_n_0 ),
        .D(tlptc0_in[2]),
        .Q(\data_width_64.tlptc_reg_n_0_[3][2] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \data_width_64.tlptcsig[2]_i_1 
       (.I0(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I1(\data_width_64.tagsig_reg[0]_1 ),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .I3(rdreq_reg),
        .I4(user_lnk_up_mux_reg_2),
        .I5(axi_aresetn),
        .O(tlpattrsig));
  FDRE \data_width_64.tlptcsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [20]),
        .Q(tlptcsig[0]),
        .R(1'b0));
  FDRE \data_width_64.tlptcsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [21]),
        .Q(tlptcsig[1]),
        .R(1'b0));
  FDRE \data_width_64.tlptcsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(tlpattrsig),
        .D(\m_axis_cr_tdata_reg[63] [22]),
        .Q(tlptcsig[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[0]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [0]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [0]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [0]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[10]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [10]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [10]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [10]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [10]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[11]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [11]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [11]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [11]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [11]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[1]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [1]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [1]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[2]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [2]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [2]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [2]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [2]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[3]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [3]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [3]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [3]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [3]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[4]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [4]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [4]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [4]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [4]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[5]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [5]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [5]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [5]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [5]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[6]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [6]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [6]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [6]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [6]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[7]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [7]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [7]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [7]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [7]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[8]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [8]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [8]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [8]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [8]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totalbytecount[9]_i_1 
       (.I0(\data_width_64.tlpbytecount_reg[3]_29 [9]),
        .I1(\data_width_64.tlpbytecount_reg[1]_31 [9]),
        .I2(\data_width_64.tlpbytecount_reg[2]_30 [9]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlpbytecount_reg[0]_32 [9]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(\data_width_64.totalbytecount[9]_i_1_n_0 ));
  FDRE \data_width_64.totalbytecount_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[0]_i_1_n_0 ),
        .Q(totalbytecount[0]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[10]_i_1_n_0 ),
        .Q(totalbytecount[10]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[11]_i_1_n_0 ),
        .Q(totalbytecount[11]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[1]_i_1_n_0 ),
        .Q(totalbytecount[1]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[2]_i_1_n_0 ),
        .Q(totalbytecount[2]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[3]_i_1_n_0 ),
        .Q(totalbytecount[3]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[4]_i_1_n_0 ),
        .Q(totalbytecount[4]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[5]_i_1_n_0 ),
        .Q(totalbytecount[5]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[6]_i_1_n_0 ),
        .Q(totalbytecount[6]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[7]_i_1_n_0 ),
        .Q(totalbytecount[7]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[8]_i_1_n_0 ),
        .Q(totalbytecount[8]),
        .R(SR));
  FDRE \data_width_64.totalbytecount_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(\data_width_64.totalbytecount[9]_i_1_n_0 ),
        .Q(totalbytecount[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[0]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [0]),
        .I1(\data_width_64.tlplength_reg[1]_14 [0]),
        .I2(\data_width_64.tlplength_reg[2]_15 [0]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [0]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[0]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[1]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [1]),
        .I1(\data_width_64.tlplength_reg[1]_14 [1]),
        .I2(\data_width_64.tlplength_reg[2]_15 [1]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [1]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[1]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[2]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [2]),
        .I1(\data_width_64.tlplength_reg[1]_14 [2]),
        .I2(\data_width_64.tlplength_reg[2]_15 [2]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [2]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[2]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[3]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [3]),
        .I1(\data_width_64.tlplength_reg[1]_14 [3]),
        .I2(\data_width_64.tlplength_reg[2]_15 [3]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [3]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[3]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[4]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [4]),
        .I1(\data_width_64.tlplength_reg[1]_14 [4]),
        .I2(\data_width_64.tlplength_reg[2]_15 [4]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [4]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[4]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[5]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [5]),
        .I1(\data_width_64.tlplength_reg[1]_14 [5]),
        .I2(\data_width_64.tlplength_reg[2]_15 [5]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [5]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[5]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[6]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [6]),
        .I1(\data_width_64.tlplength_reg[1]_14 [6]),
        .I2(\data_width_64.tlplength_reg[2]_15 [6]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [6]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[6]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[7]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [7]),
        .I1(\data_width_64.tlplength_reg[1]_14 [7]),
        .I2(\data_width_64.tlplength_reg[2]_15 [7]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [7]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[7]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[8]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [8]),
        .I1(\data_width_64.tlplength_reg[1]_14 [8]),
        .I2(\data_width_64.tlplength_reg[2]_15 [8]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [8]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[8]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    \data_width_64.totallength[9]_i_1 
       (.I0(\data_width_64.tlplength_reg[3]_16 [9]),
        .I1(\data_width_64.tlplength_reg[1]_14 [9]),
        .I2(\data_width_64.tlplength_reg[2]_15 [9]),
        .I3(\data_width_64.cpldsplitcounttemp_reg[4]_1 [1]),
        .I4(\data_width_64.tlplength_reg[0]_13 [9]),
        .I5(\data_width_64.cpldsplitcounttemp_reg[4]_1 [0]),
        .O(ARG[9]));
  FDRE \data_width_64.totallength_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[0]),
        .Q(totallength[0]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[1]),
        .Q(totallength[1]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[2]),
        .Q(totallength[2]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[3]),
        .Q(totallength[3]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[4]),
        .Q(totallength[4]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[5]),
        .Q(totallength[5]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[6]),
        .Q(totallength[6]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[7]),
        .Q(totallength[7]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[8]),
        .Q(totallength[8]),
        .R(SR));
  FDRE \data_width_64.totallength_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.cpldsplitcounttemp[4]_i_1_n_0 ),
        .D(ARG[9]),
        .Q(totallength[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.wrpendflush[0][0]_i_1 
       (.I0(D[0]),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.wrpendflush_reg_n_0_[0][0] ),
        .O(wrpendflush0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.wrpendflush[0][1]_i_1 
       (.I0(D[1]),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.wrpendflush_reg_n_0_[0][1] ),
        .O(wrpendflush0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT4 #(
    .INIT(16'hFE02)) 
    \data_width_64.wrpendflush[0][2]_i_1 
       (.I0(D[2]),
        .I1(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.wrpendflush_reg_n_0_[0][2] ),
        .O(wrpendflush0_in[14]));
  LUT5 #(
    .INIT(32'hFFFE000E)) 
    \data_width_64.wrpendflush[0][3]_i_1 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(eqOp2_out),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(rdndtargetpipeline[0]),
        .I4(\data_width_64.wrpendflush_reg_n_0_[0][3] ),
        .O(wrpendflush0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair503" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.wrpendflush[1][0]_i_1 
       (.I0(D[0]),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[1][0] ),
        .O(wrpendflush0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair504" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.wrpendflush[1][1]_i_1 
       (.I0(D[1]),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[1][1] ),
        .O(wrpendflush0_in[9]));
  (* SOFT_HLUTNM = "soft_lutpair505" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_width_64.wrpendflush[1][2]_i_1 
       (.I0(D[2]),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[1][2] ),
        .O(wrpendflush0_in[10]));
  LUT5 #(
    .INIT(32'hFFEF00E0)) 
    \data_width_64.wrpendflush[1][3]_i_1 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(eqOp2_out),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I4(\data_width_64.wrpendflush_reg_n_0_[1][3] ),
        .O(wrpendflush0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair503" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.wrpendflush[2][0]_i_1 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[2][0] ),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(D[0]),
        .O(wrpendflush0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair504" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.wrpendflush[2][1]_i_1 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[2][1] ),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(D[1]),
        .O(wrpendflush0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair505" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_width_64.wrpendflush[2][2]_i_1 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[2][2] ),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(D[2]),
        .O(wrpendflush0_in[6]));
  LUT5 #(
    .INIT(32'hF0EEF0F0)) 
    \data_width_64.wrpendflush[2][3]_i_1 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(eqOp2_out),
        .I2(\data_width_64.wrpendflush_reg_n_0_[2][3] ),
        .I3(rdndtargetpipeline[0]),
        .I4(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .O(wrpendflush0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.wrpendflush[3][0]_i_1 
       (.I0(D[0]),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[3][0] ),
        .O(wrpendflush0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.wrpendflush[3][1]_i_1 
       (.I0(D[1]),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[3][1] ),
        .O(wrpendflush0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT4 #(
    .INIT(16'hBF80)) 
    \data_width_64.wrpendflush[3][2]_i_1 
       (.I0(D[2]),
        .I1(rdndtargetpipeline[0]),
        .I2(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\data_width_64.wrpendflush_reg_n_0_[3][2] ),
        .O(wrpendflush0_in[2]));
  LUT5 #(
    .INIT(32'h00800000)) 
    \data_width_64.wrpendflush[3][3]_i_1 
       (.I0(neqOp57_in),
        .I1(rdreq_reg),
        .I2(\data_width_64.tagsig_reg[0]_1 ),
        .I3(\data_width_64.wrpendflush[3][3]_i_3_n_0 ),
        .I4(axi_aresetn),
        .O(\data_width_64.wrpendflush[3][3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFE000)) 
    \data_width_64.wrpendflush[3][3]_i_2 
       (.I0(\data_width_64.wrpendflush_reg[0][3]_0 ),
        .I1(eqOp2_out),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I4(\data_width_64.wrpendflush_reg_n_0_[3][3] ),
        .O(wrpendflush0_in[3]));
  LUT6 #(
    .INIT(64'hBFFFFFFFBFFF0000)) 
    \data_width_64.wrpendflush[3][3]_i_3 
       (.I0(\data_width_64.rdndtlpaddrlow_reg[0]_0 ),
        .I1(sig_blk_lnk_up),
        .I2(cr_full),
        .I3(sig_s_axis_cr_tlast),
        .I4(\data_width_64.rdreqsmsig_reg[2]_0 ),
        .I5(\data_width_64.tagsig_reg[0]_0 ),
        .O(\data_width_64.wrpendflush[3][3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \data_width_64.wrpendflush[3][3]_i_4 
       (.I0(L1_in[0]),
        .I1(D[0]),
        .I2(D[2]),
        .I3(L1_in[2]),
        .I4(D[1]),
        .I5(L1_in[1]),
        .O(eqOp2_out));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \data_width_64.wrpendflush[3][3]_i_5 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[0][0] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[2][0] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.wrpendflush_reg_n_0_[1][0] ),
        .I4(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[3][0] ),
        .O(L1_in[0]));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \data_width_64.wrpendflush[3][3]_i_6 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[0][2] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[2][2] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.wrpendflush_reg_n_0_[1][2] ),
        .I4(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[3][2] ),
        .O(L1_in[2]));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \data_width_64.wrpendflush[3][3]_i_7 
       (.I0(\data_width_64.wrpendflush_reg_n_0_[0][1] ),
        .I1(\data_width_64.wrpendflush_reg_n_0_[2][1] ),
        .I2(rdndtargetpipeline[0]),
        .I3(\data_width_64.wrpendflush_reg_n_0_[1][1] ),
        .I4(\data_width_64.rdndtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\data_width_64.wrpendflush_reg_n_0_[3][1] ),
        .O(L1_in[1]));
  FDRE \data_width_64.wrpendflush_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[12]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[13]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[14]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[15]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[0][3] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[8]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[9]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[10]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[11]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[4]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[2][0] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[5]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[2][1] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[6]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[2][2] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[7]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[2][3] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[0]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[3][0] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[1]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[3][1] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[2]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[3][2] ),
        .R(1'b0));
  FDRE \data_width_64.wrpendflush_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.wrpendflush[3][3]_i_1_n_0 ),
        .D(wrpendflush0_in[3]),
        .Q(\data_width_64.wrpendflush_reg_n_0_[3][3] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.wrpendingsig[3][3]_i_1 
       (.I0(neqOp1_out),
        .I1(eqOp4_out),
        .O(p_90_out));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \data_width_64.wrpendingsig[3][3]_i_2 
       (.I0(\orrdreqpipeline_reg[0]_0 ),
        .I1(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I2(rdtargetpipeline),
        .I3(\orrdreqpipeline_reg[2]_0 ),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\orrdreqpipeline_reg[1]_0 ),
        .O(neqOp1_out));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \data_width_64.wrpendingsig[3][3]_i_3 
       (.I0(L3_in[0]),
        .I1(D[0]),
        .I2(D[2]),
        .I3(L3_in[2]),
        .I4(D[1]),
        .I5(L3_in[1]),
        .O(eqOp4_out));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \data_width_64.wrpendingsig[3][3]_i_4 
       (.I0(\wrpending[0]_44 [0]),
        .I1(\wrpending[2]_42 [0]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\wrpending[1]_43 [0]),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\wrpending[3]_41 [0]),
        .O(L3_in[0]));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \data_width_64.wrpendingsig[3][3]_i_5 
       (.I0(\wrpending[0]_44 [2]),
        .I1(\wrpending[2]_42 [2]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\wrpending[1]_43 [2]),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\wrpending[3]_41 [2]),
        .O(L3_in[2]));
  LUT6 #(
    .INIT(64'hCFC0AFAFCFC0A0A0)) 
    \data_width_64.wrpendingsig[3][3]_i_6 
       (.I0(\wrpending[0]_44 [1]),
        .I1(\wrpending[2]_42 [1]),
        .I2(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I3(\wrpending[1]_43 [1]),
        .I4(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I5(\wrpending[3]_41 [1]),
        .O(L3_in[1]));
  FDRE \data_width_64.wrpendingsig_reg[0][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(D[0]),
        .Q(\wrpending[0]_44 [0]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[0][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(D[1]),
        .Q(\wrpending[0]_44 [1]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[0][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(D[2]),
        .Q(\wrpending[0]_44 [2]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[0][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[0]_6 ),
        .D(p_90_out),
        .Q(\wrpending[0]_44 [3]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(D[0]),
        .Q(\wrpending[1]_43 [0]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(D[1]),
        .Q(\wrpending[1]_43 [1]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(D[2]),
        .Q(\wrpending[1]_43 [2]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[1]_4 ),
        .D(p_90_out),
        .Q(\wrpending[1]_43 [3]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[2][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(D[0]),
        .Q(\wrpending[2]_42 [0]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[2][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(D[1]),
        .Q(\wrpending[2]_42 [1]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[2][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(D[2]),
        .Q(\wrpending[2]_42 [2]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[2][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[2]_5 ),
        .D(p_90_out),
        .Q(\wrpending[2]_42 [3]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[3][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(D[0]),
        .Q(\wrpending[3]_41 [0]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[3][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(D[1]),
        .Q(\wrpending[3]_41 [1]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[3][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(D[2]),
        .Q(\wrpending[3]_41 [2]),
        .R(1'b0));
  FDRE \data_width_64.wrpendingsig_reg[3][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\wrpendingsig[3]_3 ),
        .D(p_90_out),
        .Q(\wrpending[3]_41 [3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0F80008000800080)) 
    \data_width_64.zerolenreadreq_i_3 
       (.I0(eqOp56_in),
        .I1(badreadreq),
        .I2(\data_width_64.tagsig_reg[0]_0 ),
        .I3(\data_width_64.tagsig_reg[0]_1 ),
        .I4(rdreq_reg),
        .I5(neqOp57_in),
        .O(\data_width_64.zerolenreadreq_reg_1 ));
  FDRE \data_width_64.zerolenreadreq_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.rdreqsmsig_reg[2]_2 ),
        .Q(\data_width_64.tlpaddrlow_reg[0]_0 ),
        .R(SR));
  LUT3 #(
    .INIT(8'h87)) 
    datatxpertlp_ram_reg_0_3_0_0_i_1
       (.I0(m_axi_arlentemp_reg_0_3_6_9_i_8_n_0),
        .I1(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .I2(m_axi_arlentemp_reg_0_3_6_9_i_7_n_0),
        .O(p_3_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    flush_axis_tlp_i_4
       (.I0(s_axis_tx_tlast_d_reg),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(s_axis_tx_tlast_d_reg_0),
        .O(sig_m_axis_cc_tlast));
  LUT6 #(
    .INIT(64'h5555544400000000)) 
    \goreg_bm.dout_i[63]_i_2 
       (.I0(\goreg_bm.dout_i[63]_i_3_n_0 ),
        .I1(\data_width_64.corruptdataflush_reg_0 ),
        .I2(s_axis_tx_tready),
        .I3(\end_point.psr_reg[2]_0 ),
        .I4(\data_width_64.lnkdowndataflush_reg_0 ),
        .I5(\goreg_bm.dout_i[63]_i_5_n_0 ),
        .O(rd_ensig));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \goreg_bm.dout_i[63]_i_3 
       (.I0(\data_width_64.dis_rden_reg_0 ),
        .I1(emptysig),
        .O(\goreg_bm.dout_i[63]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \goreg_bm.dout_i[63]_i_5 
       (.I0(\data_width_64.rd_en_sig_reg_0 ),
        .I1(data_phase),
        .I2(s_axis_cc_tvalid_q_reg_0),
        .O(\goreg_bm.dout_i[63]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[10]_i_3 
       (.I0(\length_offset_reg[11]_i_20_n_7 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[11]_i_21_n_7 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset_reg[10]_0 ));
  LUT5 #(
    .INIT(32'h00001500)) 
    \length_offset[11]_i_1 
       (.I0(\length_offset_reg[6]_0 [1]),
        .I1(cfg_dev_control_max_payload[2]),
        .I2(cfg_dev_control_max_payload[1]),
        .I3(neqOp3_out),
        .I4(\length_offset_reg[6]_0 [0]),
        .O(\length_offset[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \length_offset[11]_i_10 
       (.I0(R[6]),
        .I1(data5__0[8]),
        .I2(data5__0[9]),
        .O(\length_offset[11]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[11]_i_11 
       (.I0(R[5]),
        .I1(data5[7]),
        .I2(R[6]),
        .I3(data5__0[8]),
        .O(\length_offset[11]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[11]_i_14 
       (.I0(\length_offset_reg[11]_i_20_n_6 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[11]_i_21_n_6 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset_reg[11]_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[11]_i_15 
       (.I0(data5[7]),
        .I1(R[5]),
        .O(\length_offset[11]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_16 
       (.I0(data5__0[8]),
        .I1(data5__0[9]),
        .O(\length_offset[11]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \length_offset[11]_i_17 
       (.I0(R[5]),
        .I1(data5[7]),
        .I2(data5__0[8]),
        .O(\length_offset[11]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_18 
       (.I0(data5__0[8]),
        .I1(data5__0[9]),
        .O(\length_offset[11]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_19 
       (.I0(data5[7]),
        .I1(data5__0[8]),
        .O(\length_offset[11]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_22 
       (.I0(data5__0[8]),
        .I1(data5__0[9]),
        .O(\length_offset[11]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_23 
       (.I0(data5[7]),
        .I1(data5__0[8]),
        .O(\length_offset[11]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_24 
       (.I0(data5__0[8]),
        .I1(data5__0[9]),
        .O(\length_offset[11]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[11]_i_25 
       (.I0(data5[7]),
        .I1(data5__0[8]),
        .O(\length_offset[11]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[11]_i_6 
       (.I0(data5[7]),
        .I1(R[5]),
        .O(\length_offset[11]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[11]_i_7 
       (.I0(R[6]),
        .I1(data5__0[8]),
        .I2(\data_width_64.tlpaddrl_reg_0_3_6_11_n_4 ),
        .I3(data5__0[9]),
        .O(\length_offset[11]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[11]_i_8 
       (.I0(R[5]),
        .I1(data5[7]),
        .I2(R[6]),
        .I3(data5__0[8]),
        .O(\length_offset[11]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[11]_i_9 
       (.I0(data5[7]),
        .I1(R[5]),
        .O(\length_offset[11]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hF3BBBBBB)) 
    \length_offset[2]_i_1 
       (.I0(\data_width_64.tlplength_reg[3][0]_0 ),
        .I1(\length_offset_reg[2]_0 ),
        .I2(\length_offset_reg[2]_i_3_n_7 ),
        .I3(cfg_dev_control_max_payload[0]),
        .I4(cfg_dev_control_max_payload[2]),
        .O(length_offset[2]));
  LUT4 #(
    .INIT(16'h6999)) 
    \length_offset[2]_i_10 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(R_0[3]),
        .O(\length_offset[2]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \length_offset[2]_i_11 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(data5__0[1]),
        .O(\length_offset[2]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[2]_i_12 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[2]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[2]_i_4 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset_reg[2]_1 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[2]_i_5 
       (.I0(data5__0[2]),
        .I1(R_0[4]),
        .O(\length_offset[2]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[2]_i_6 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .O(\length_offset[2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[2]_i_7 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[2]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[2]_i_8 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[2]_i_9 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(R_0[5]),
        .I3(data5__0[3]),
        .O(\length_offset[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[3]_i_1 
       (.I0(\length_offset_reg[5]_i_2_n_6 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[5]_i_3_n_6 ),
        .I3(\length_offset_reg[2]_0 ),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[3]_i_2_n_0 ),
        .O(length_offset[3]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[3]_i_2 
       (.I0(\length_offset_reg[5]_i_21_n_6 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[5]_i_22_n_6 ),
        .I3(\length_offset_reg[2]_0 ),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\length_offset[3]_i_3_n_0 ),
        .O(\length_offset[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[3]_i_3 
       (.I0(\length_offset_reg[5]_i_40_n_6 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[2]_i_3_n_6 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[4]_i_1 
       (.I0(\length_offset_reg[5]_i_2_n_5 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[5]_i_3_n_5 ),
        .I3(\length_offset_reg[2]_0 ),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[4]_i_2_n_0 ),
        .O(length_offset[4]));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[4]_i_2 
       (.I0(\length_offset_reg[5]_i_21_n_5 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[5]_i_22_n_5 ),
        .I3(\length_offset_reg[2]_0 ),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\length_offset[4]_i_3_n_0 ),
        .O(\length_offset[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[4]_i_3 
       (.I0(\length_offset_reg[5]_i_40_n_5 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[2]_i_3_n_5 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[5]_i_1 
       (.I0(\length_offset_reg[5]_i_2_n_4 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[5]_i_3_n_4 ),
        .I3(\length_offset_reg[2]_0 ),
        .I4(cfg_dev_control_max_payload[2]),
        .I5(\length_offset[5]_i_4_n_0 ),
        .O(length_offset[5]));
  LUT4 #(
    .INIT(16'h6999)) 
    \length_offset[5]_i_10 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(R_0[3]),
        .O(\length_offset[5]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \length_offset[5]_i_11 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(data5__0[1]),
        .O(\length_offset[5]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[5]_i_12 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_13 
       (.I0(data5__0[2]),
        .I1(R_0[4]),
        .O(\length_offset[5]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_14 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .O(\length_offset[5]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_15 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_16 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[5]_i_17 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(R_0[5]),
        .I3(data5__0[3]),
        .O(\length_offset[5]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h6999)) 
    \length_offset[5]_i_18 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(R_0[3]),
        .O(\length_offset[5]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \length_offset[5]_i_19 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(data5__0[1]),
        .O(\length_offset[5]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[5]_i_20 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[5]_i_23 
       (.I0(\length_offset_reg[5]_i_40_n_4 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[2]_i_3_n_4 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset[5]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_24 
       (.I0(data5__0[2]),
        .I1(R_0[4]),
        .O(\length_offset[5]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_25 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .O(\length_offset[5]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_26 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_27 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[5]_i_28 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(R_0[5]),
        .I3(data5__0[3]),
        .O(\length_offset[5]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h6999)) 
    \length_offset[5]_i_29 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(R_0[3]),
        .O(\length_offset[5]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \length_offset[5]_i_30 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(data5__0[1]),
        .O(\length_offset[5]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[5]_i_31 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_32 
       (.I0(data5__0[2]),
        .I1(R_0[4]),
        .O(\length_offset[5]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_33 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .O(\length_offset[5]_i_33_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_34 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_35 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[5]_i_36 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(R_0[5]),
        .I3(data5__0[3]),
        .O(\length_offset[5]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h6999)) 
    \length_offset[5]_i_37 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(R_0[3]),
        .O(\length_offset[5]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \length_offset[5]_i_38 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(data5__0[1]),
        .O(\length_offset[5]_i_38_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[5]_i_39 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hB8FFFFFFB8FF0000)) 
    \length_offset[5]_i_4 
       (.I0(\length_offset_reg[5]_i_21_n_4 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[5]_i_22_n_4 ),
        .I3(\length_offset_reg[2]_0 ),
        .I4(cfg_dev_control_max_payload[1]),
        .I5(\length_offset[5]_i_23_n_0 ),
        .O(\length_offset[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_41 
       (.I0(data5__0[2]),
        .I1(R_0[4]),
        .O(\length_offset[5]_i_41_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_42 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .O(\length_offset[5]_i_42_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_43 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_43_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_44 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[5]_i_45 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(R_0[5]),
        .I3(data5__0[3]),
        .O(\length_offset[5]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h6999)) 
    \length_offset[5]_i_46 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(data5__0[1]),
        .I3(R_0[3]),
        .O(\length_offset[5]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'hE11E)) 
    \length_offset[5]_i_47 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .I2(R_0[3]),
        .I3(data5__0[1]),
        .O(\length_offset[5]_i_47_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \length_offset[5]_i_48 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_48_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_5 
       (.I0(data5__0[2]),
        .I1(R_0[4]),
        .O(\length_offset[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_6 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .O(\length_offset[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[5]_i_7 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[5]_i_8 
       (.I0(data5[0]),
        .I1(R_0[2]),
        .O(\length_offset[5]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[5]_i_9 
       (.I0(R_0[4]),
        .I1(data5__0[2]),
        .I2(R_0[5]),
        .I3(data5__0[3]),
        .O(\length_offset[5]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[6]_i_3 
       (.I0(\length_offset_reg[9]_i_40_n_7 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[9]_i_41_n_7 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset_reg[6]_1 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[7]_i_3 
       (.I0(\length_offset_reg[9]_i_40_n_6 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[9]_i_41_n_6 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset_reg[7]_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[8]_i_3 
       (.I0(\length_offset_reg[9]_i_40_n_5 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[9]_i_41_n_5 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_10 
       (.I0(R[3]),
        .I1(data5[5]),
        .I2(R[4]),
        .I3(data5[6]),
        .O(\length_offset[9]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_11 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .I2(R[3]),
        .I3(data5[5]),
        .O(\length_offset[9]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_12 
       (.I0(R_0[5]),
        .I1(data5__0[3]),
        .I2(R[2]),
        .I3(data5__0[4]),
        .O(\length_offset[9]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_13 
       (.I0(data5[6]),
        .I1(R[4]),
        .O(\length_offset[9]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_14 
       (.I0(data5[5]),
        .I1(R[3]),
        .O(\length_offset[9]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_15 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .O(\length_offset[9]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_16 
       (.I0(data5__0[3]),
        .I1(R_0[5]),
        .O(\length_offset[9]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_17 
       (.I0(R[4]),
        .I1(data5[6]),
        .I2(R[5]),
        .I3(data5[7]),
        .O(\length_offset[9]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_18 
       (.I0(R[3]),
        .I1(data5[5]),
        .I2(R[4]),
        .I3(data5[6]),
        .O(\length_offset[9]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_19 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .I2(R[3]),
        .I3(data5[5]),
        .O(\length_offset[9]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_20 
       (.I0(R_0[5]),
        .I1(data5__0[3]),
        .I2(R[2]),
        .I3(data5__0[4]),
        .O(\length_offset[9]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'hB8FF)) 
    \length_offset[9]_i_23 
       (.I0(\length_offset_reg[9]_i_40_n_4 ),
        .I1(cfg_dev_control_max_payload[0]),
        .I2(\length_offset_reg[9]_i_41_n_4 ),
        .I3(\length_offset_reg[2]_0 ),
        .O(\length_offset_reg[9]_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_24 
       (.I0(data5[6]),
        .I1(R[4]),
        .O(\length_offset[9]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_25 
       (.I0(data5[5]),
        .I1(R[3]),
        .O(\length_offset[9]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_26 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .O(\length_offset[9]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_27 
       (.I0(data5__0[3]),
        .I1(R_0[5]),
        .O(\length_offset[9]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_28 
       (.I0(R[4]),
        .I1(data5[6]),
        .I2(R[5]),
        .I3(data5[7]),
        .O(\length_offset[9]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_29 
       (.I0(R[3]),
        .I1(data5[5]),
        .I2(R[4]),
        .I3(data5[6]),
        .O(\length_offset[9]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_30 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .I2(R[3]),
        .I3(data5[5]),
        .O(\length_offset[9]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_31 
       (.I0(R_0[5]),
        .I1(data5__0[3]),
        .I2(R[2]),
        .I3(data5__0[4]),
        .O(\length_offset[9]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_32 
       (.I0(data5[6]),
        .I1(R[4]),
        .O(\length_offset[9]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_33 
       (.I0(data5[5]),
        .I1(R[3]),
        .O(\length_offset[9]_i_33_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_34 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .O(\length_offset[9]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_35 
       (.I0(data5__0[3]),
        .I1(R_0[5]),
        .O(\length_offset[9]_i_35_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \length_offset[9]_i_36 
       (.I0(R[4]),
        .I1(data5[6]),
        .I2(data5[7]),
        .O(\length_offset[9]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_37 
       (.I0(R[3]),
        .I1(data5[5]),
        .I2(R[4]),
        .I3(data5[6]),
        .O(\length_offset[9]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_38 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .I2(R[3]),
        .I3(data5[5]),
        .O(\length_offset[9]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_39 
       (.I0(R_0[5]),
        .I1(data5__0[3]),
        .I2(R[2]),
        .I3(data5__0[4]),
        .O(\length_offset[9]_i_39_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_42 
       (.I0(data5[5]),
        .I1(R[3]),
        .O(\length_offset[9]_i_42_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_43 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .O(\length_offset[9]_i_43_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_44 
       (.I0(data5__0[3]),
        .I1(R_0[5]),
        .O(\length_offset[9]_i_44_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[9]_i_45 
       (.I0(data5[6]),
        .I1(data5[7]),
        .O(\length_offset[9]_i_45_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \length_offset[9]_i_46 
       (.I0(R[3]),
        .I1(data5[5]),
        .I2(data5[6]),
        .O(\length_offset[9]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_47 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .I2(R[3]),
        .I3(data5[5]),
        .O(\length_offset[9]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_48 
       (.I0(R_0[5]),
        .I1(data5__0[3]),
        .I2(R[2]),
        .I3(data5__0[4]),
        .O(\length_offset[9]_i_48_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_49 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .O(\length_offset[9]_i_49_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_5 
       (.I0(data5[6]),
        .I1(R[4]),
        .O(\length_offset[9]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_50 
       (.I0(data5__0[3]),
        .I1(R_0[5]),
        .O(\length_offset[9]_i_50_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[9]_i_51 
       (.I0(data5[6]),
        .I1(data5[7]),
        .O(\length_offset[9]_i_51_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \length_offset[9]_i_52 
       (.I0(data5[5]),
        .I1(data5[6]),
        .O(\length_offset[9]_i_52_n_0 ));
  LUT3 #(
    .INIT(8'hE1)) 
    \length_offset[9]_i_53 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .I2(data5[5]),
        .O(\length_offset[9]_i_53_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_54 
       (.I0(R_0[5]),
        .I1(data5__0[3]),
        .I2(R[2]),
        .I3(data5__0[4]),
        .O(\length_offset[9]_i_54_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_6 
       (.I0(data5[5]),
        .I1(R[3]),
        .O(\length_offset[9]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_7 
       (.I0(data5__0[4]),
        .I1(R[2]),
        .O(\length_offset[9]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \length_offset[9]_i_8 
       (.I0(data5__0[3]),
        .I1(R_0[5]),
        .O(\length_offset[9]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h1EE1)) 
    \length_offset[9]_i_9 
       (.I0(R[4]),
        .I1(data5[6]),
        .I2(R[5]),
        .I3(data5[7]),
        .O(\length_offset[9]_i_9_n_0 ));
  FDRE \length_offset_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [4]),
        .Q(\length_offset_reg_n_0_[10] ),
        .R(SR));
  FDRE \length_offset_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [5]),
        .Q(\data_width_64.cpldsplitcounttemp_reg[4]_2 [2]),
        .R(SR));
  CARRY4 \length_offset_reg[11]_i_12 
       (.CI(\length_offset_reg[9]_i_21_n_0 ),
        .CO({\NLW_length_offset_reg[11]_i_12_CO_UNCONNECTED [3:1],\length_offset_reg[11]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\length_offset[11]_i_15_n_0 }),
        .O({\NLW_length_offset_reg[11]_i_12_O_UNCONNECTED [3:2],\length_offset_reg[11]_2 }),
        .S({1'b0,1'b0,\length_offset[11]_i_16_n_0 ,\length_offset[11]_i_17_n_0 }));
  CARRY4 \length_offset_reg[11]_i_13 
       (.CI(\length_offset_reg[9]_i_22_n_0 ),
        .CO({\NLW_length_offset_reg[11]_i_13_CO_UNCONNECTED [3:1],\length_offset_reg[11]_i_13_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,data5[7]}),
        .O({\NLW_length_offset_reg[11]_i_13_O_UNCONNECTED [3:2],\length_offset_reg[11]_1 }),
        .S({1'b0,1'b0,\length_offset[11]_i_18_n_0 ,\length_offset[11]_i_19_n_0 }));
  CARRY4 \length_offset_reg[11]_i_20 
       (.CI(\length_offset_reg[9]_i_40_n_0 ),
        .CO({\NLW_length_offset_reg[11]_i_20_CO_UNCONNECTED [3:1],\length_offset_reg[11]_i_20_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,data5[7]}),
        .O({\NLW_length_offset_reg[11]_i_20_O_UNCONNECTED [3:2],\length_offset_reg[11]_i_20_n_6 ,\length_offset_reg[11]_i_20_n_7 }),
        .S({1'b0,1'b0,\length_offset[11]_i_22_n_0 ,\length_offset[11]_i_23_n_0 }));
  CARRY4 \length_offset_reg[11]_i_21 
       (.CI(\length_offset_reg[9]_i_41_n_0 ),
        .CO({\NLW_length_offset_reg[11]_i_21_CO_UNCONNECTED [3:1],\length_offset_reg[11]_i_21_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,data5[7]}),
        .O({\NLW_length_offset_reg[11]_i_21_O_UNCONNECTED [3:2],\length_offset_reg[11]_i_21_n_6 ,\length_offset_reg[11]_i_21_n_7 }),
        .S({1'b0,1'b0,\length_offset[11]_i_24_n_0 ,\length_offset[11]_i_25_n_0 }));
  CARRY4 \length_offset_reg[11]_i_3 
       (.CI(\length_offset_reg[9]_i_2_n_0 ),
        .CO({\NLW_length_offset_reg[11]_i_3_CO_UNCONNECTED [3:1],\length_offset_reg[11]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\length_offset[11]_i_6_n_0 }),
        .O({\NLW_length_offset_reg[11]_i_3_O_UNCONNECTED [3:2],\length_offset_reg[11]_4 }),
        .S({1'b0,1'b0,\length_offset[11]_i_7_n_0 ,\length_offset[11]_i_8_n_0 }));
  CARRY4 \length_offset_reg[11]_i_4 
       (.CI(\length_offset_reg[9]_i_3_n_0 ),
        .CO({\NLW_length_offset_reg[11]_i_4_CO_UNCONNECTED [3:1],\length_offset_reg[11]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\length_offset[11]_i_9_n_0 }),
        .O({\NLW_length_offset_reg[11]_i_4_O_UNCONNECTED [3:2],\length_offset_reg[11]_3 }),
        .S({1'b0,1'b0,\length_offset[11]_i_10_n_0 ,\length_offset[11]_i_11_n_0 }));
  FDRE \length_offset_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(length_offset[2]),
        .Q(L_1[0]),
        .R(SR));
  CARRY4 \length_offset_reg[2]_i_3 
       (.CI(1'b0),
        .CO({\length_offset_reg[2]_i_3_n_0 ,\length_offset_reg[2]_i_3_n_1 ,\length_offset_reg[2]_i_3_n_2 ,\length_offset_reg[2]_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({\length_offset[2]_i_5_n_0 ,\length_offset[2]_i_6_n_0 ,\length_offset[2]_i_7_n_0 ,\length_offset[2]_i_8_n_0 }),
        .O({\length_offset_reg[2]_i_3_n_4 ,\length_offset_reg[2]_i_3_n_5 ,\length_offset_reg[2]_i_3_n_6 ,\length_offset_reg[2]_i_3_n_7 }),
        .S({\length_offset[2]_i_9_n_0 ,\length_offset[2]_i_10_n_0 ,\length_offset[2]_i_11_n_0 ,\length_offset[2]_i_12_n_0 }));
  FDRE \length_offset_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(length_offset[3]),
        .Q(L_1[1]),
        .R(SR));
  FDRE \length_offset_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(length_offset[4]),
        .Q(L_1[2]),
        .R(SR));
  FDRE \length_offset_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(length_offset[5]),
        .Q(L_1[3]),
        .R(SR));
  CARRY4 \length_offset_reg[5]_i_2 
       (.CI(1'b0),
        .CO({\length_offset_reg[5]_i_2_n_0 ,\length_offset_reg[5]_i_2_n_1 ,\length_offset_reg[5]_i_2_n_2 ,\length_offset_reg[5]_i_2_n_3 }),
        .CYINIT(1'b1),
        .DI({\length_offset[5]_i_5_n_0 ,\length_offset[5]_i_6_n_0 ,\length_offset[5]_i_7_n_0 ,\length_offset[5]_i_8_n_0 }),
        .O({\length_offset_reg[5]_i_2_n_4 ,\length_offset_reg[5]_i_2_n_5 ,\length_offset_reg[5]_i_2_n_6 ,\NLW_length_offset_reg[5]_i_2_O_UNCONNECTED [0]}),
        .S({\length_offset[5]_i_9_n_0 ,\length_offset[5]_i_10_n_0 ,\length_offset[5]_i_11_n_0 ,\length_offset[5]_i_12_n_0 }));
  CARRY4 \length_offset_reg[5]_i_21 
       (.CI(1'b0),
        .CO({\length_offset_reg[5]_i_21_n_0 ,\length_offset_reg[5]_i_21_n_1 ,\length_offset_reg[5]_i_21_n_2 ,\length_offset_reg[5]_i_21_n_3 }),
        .CYINIT(1'b1),
        .DI({\length_offset[5]_i_24_n_0 ,\length_offset[5]_i_25_n_0 ,\length_offset[5]_i_26_n_0 ,\length_offset[5]_i_27_n_0 }),
        .O({\length_offset_reg[5]_i_21_n_4 ,\length_offset_reg[5]_i_21_n_5 ,\length_offset_reg[5]_i_21_n_6 ,\NLW_length_offset_reg[5]_i_21_O_UNCONNECTED [0]}),
        .S({\length_offset[5]_i_28_n_0 ,\length_offset[5]_i_29_n_0 ,\length_offset[5]_i_30_n_0 ,\length_offset[5]_i_31_n_0 }));
  CARRY4 \length_offset_reg[5]_i_22 
       (.CI(1'b0),
        .CO({\length_offset_reg[5]_i_22_n_0 ,\length_offset_reg[5]_i_22_n_1 ,\length_offset_reg[5]_i_22_n_2 ,\length_offset_reg[5]_i_22_n_3 }),
        .CYINIT(1'b1),
        .DI({\length_offset[5]_i_32_n_0 ,\length_offset[5]_i_33_n_0 ,\length_offset[5]_i_34_n_0 ,\length_offset[5]_i_35_n_0 }),
        .O({\length_offset_reg[5]_i_22_n_4 ,\length_offset_reg[5]_i_22_n_5 ,\length_offset_reg[5]_i_22_n_6 ,\NLW_length_offset_reg[5]_i_22_O_UNCONNECTED [0]}),
        .S({\length_offset[5]_i_36_n_0 ,\length_offset[5]_i_37_n_0 ,\length_offset[5]_i_38_n_0 ,\length_offset[5]_i_39_n_0 }));
  CARRY4 \length_offset_reg[5]_i_3 
       (.CI(1'b0),
        .CO({\length_offset_reg[5]_i_3_n_0 ,\length_offset_reg[5]_i_3_n_1 ,\length_offset_reg[5]_i_3_n_2 ,\length_offset_reg[5]_i_3_n_3 }),
        .CYINIT(1'b1),
        .DI({\length_offset[5]_i_13_n_0 ,\length_offset[5]_i_14_n_0 ,\length_offset[5]_i_15_n_0 ,\length_offset[5]_i_16_n_0 }),
        .O({\length_offset_reg[5]_i_3_n_4 ,\length_offset_reg[5]_i_3_n_5 ,\length_offset_reg[5]_i_3_n_6 ,\NLW_length_offset_reg[5]_i_3_O_UNCONNECTED [0]}),
        .S({\length_offset[5]_i_17_n_0 ,\length_offset[5]_i_18_n_0 ,\length_offset[5]_i_19_n_0 ,\length_offset[5]_i_20_n_0 }));
  CARRY4 \length_offset_reg[5]_i_40 
       (.CI(1'b0),
        .CO({\length_offset_reg[5]_i_40_n_0 ,\length_offset_reg[5]_i_40_n_1 ,\length_offset_reg[5]_i_40_n_2 ,\length_offset_reg[5]_i_40_n_3 }),
        .CYINIT(1'b1),
        .DI({\length_offset[5]_i_41_n_0 ,\length_offset[5]_i_42_n_0 ,\length_offset[5]_i_43_n_0 ,\length_offset[5]_i_44_n_0 }),
        .O({\length_offset_reg[5]_i_40_n_4 ,\length_offset_reg[5]_i_40_n_5 ,\length_offset_reg[5]_i_40_n_6 ,\NLW_length_offset_reg[5]_i_40_O_UNCONNECTED [0]}),
        .S({\length_offset[5]_i_45_n_0 ,\length_offset[5]_i_46_n_0 ,\length_offset[5]_i_47_n_0 ,\length_offset[5]_i_48_n_0 }));
  FDRE \length_offset_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [0]),
        .Q(L_1[4]),
        .R(SR));
  FDRE \length_offset_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [1]),
        .Q(\data_width_64.cpldsplitcounttemp_reg[4]_2 [0]),
        .R(SR));
  FDRE \length_offset_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [2]),
        .Q(\length_offset_reg_n_0_[8] ),
        .R(SR));
  FDRE \length_offset_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\length_offset[11]_i_1_n_0 ),
        .D(\pipe_stages_1.pipe_rx_chanisaligned_q_reg_1 [3]),
        .Q(\data_width_64.cpldsplitcounttemp_reg[4]_2 [1]),
        .R(SR));
  CARRY4 \length_offset_reg[9]_i_2 
       (.CI(\length_offset_reg[5]_i_2_n_0 ),
        .CO({\length_offset_reg[9]_i_2_n_0 ,\length_offset_reg[9]_i_2_n_1 ,\length_offset_reg[9]_i_2_n_2 ,\length_offset_reg[9]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({\length_offset[9]_i_5_n_0 ,\length_offset[9]_i_6_n_0 ,\length_offset[9]_i_7_n_0 ,\length_offset[9]_i_8_n_0 }),
        .O(O),
        .S({\length_offset[9]_i_9_n_0 ,\length_offset[9]_i_10_n_0 ,\length_offset[9]_i_11_n_0 ,\length_offset[9]_i_12_n_0 }));
  CARRY4 \length_offset_reg[9]_i_21 
       (.CI(\length_offset_reg[5]_i_21_n_0 ),
        .CO({\length_offset_reg[9]_i_21_n_0 ,\length_offset_reg[9]_i_21_n_1 ,\length_offset_reg[9]_i_21_n_2 ,\length_offset_reg[9]_i_21_n_3 }),
        .CYINIT(1'b0),
        .DI({\length_offset[9]_i_24_n_0 ,\length_offset[9]_i_25_n_0 ,\length_offset[9]_i_26_n_0 ,\length_offset[9]_i_27_n_0 }),
        .O(\length_offset_reg[9]_2 ),
        .S({\length_offset[9]_i_28_n_0 ,\length_offset[9]_i_29_n_0 ,\length_offset[9]_i_30_n_0 ,\length_offset[9]_i_31_n_0 }));
  CARRY4 \length_offset_reg[9]_i_22 
       (.CI(\length_offset_reg[5]_i_22_n_0 ),
        .CO({\length_offset_reg[9]_i_22_n_0 ,\length_offset_reg[9]_i_22_n_1 ,\length_offset_reg[9]_i_22_n_2 ,\length_offset_reg[9]_i_22_n_3 }),
        .CYINIT(1'b0),
        .DI({\length_offset[9]_i_32_n_0 ,\length_offset[9]_i_33_n_0 ,\length_offset[9]_i_34_n_0 ,\length_offset[9]_i_35_n_0 }),
        .O(\length_offset_reg[9]_1 ),
        .S({\length_offset[9]_i_36_n_0 ,\length_offset[9]_i_37_n_0 ,\length_offset[9]_i_38_n_0 ,\length_offset[9]_i_39_n_0 }));
  CARRY4 \length_offset_reg[9]_i_3 
       (.CI(\length_offset_reg[5]_i_3_n_0 ),
        .CO({\length_offset_reg[9]_i_3_n_0 ,\length_offset_reg[9]_i_3_n_1 ,\length_offset_reg[9]_i_3_n_2 ,\length_offset_reg[9]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\length_offset[9]_i_13_n_0 ,\length_offset[9]_i_14_n_0 ,\length_offset[9]_i_15_n_0 ,\length_offset[9]_i_16_n_0 }),
        .O(\length_offset_reg[9]_3 ),
        .S({\length_offset[9]_i_17_n_0 ,\length_offset[9]_i_18_n_0 ,\length_offset[9]_i_19_n_0 ,\length_offset[9]_i_20_n_0 }));
  CARRY4 \length_offset_reg[9]_i_40 
       (.CI(\length_offset_reg[5]_i_40_n_0 ),
        .CO({\length_offset_reg[9]_i_40_n_0 ,\length_offset_reg[9]_i_40_n_1 ,\length_offset_reg[9]_i_40_n_2 ,\length_offset_reg[9]_i_40_n_3 }),
        .CYINIT(1'b0),
        .DI({data5[6],\length_offset[9]_i_42_n_0 ,\length_offset[9]_i_43_n_0 ,\length_offset[9]_i_44_n_0 }),
        .O({\length_offset_reg[9]_i_40_n_4 ,\length_offset_reg[9]_i_40_n_5 ,\length_offset_reg[9]_i_40_n_6 ,\length_offset_reg[9]_i_40_n_7 }),
        .S({\length_offset[9]_i_45_n_0 ,\length_offset[9]_i_46_n_0 ,\length_offset[9]_i_47_n_0 ,\length_offset[9]_i_48_n_0 }));
  CARRY4 \length_offset_reg[9]_i_41 
       (.CI(\length_offset_reg[2]_i_3_n_0 ),
        .CO({\length_offset_reg[9]_i_41_n_0 ,\length_offset_reg[9]_i_41_n_1 ,\length_offset_reg[9]_i_41_n_2 ,\length_offset_reg[9]_i_41_n_3 }),
        .CYINIT(1'b0),
        .DI({data5[6:5],\length_offset[9]_i_49_n_0 ,\length_offset[9]_i_50_n_0 }),
        .O({\length_offset_reg[9]_i_41_n_4 ,\length_offset_reg[9]_i_41_n_5 ,\length_offset_reg[9]_i_41_n_6 ,\length_offset_reg[9]_i_41_n_7 }),
        .S({\length_offset[9]_i_51_n_0 ,\length_offset[9]_i_52_n_0 ,\length_offset[9]_i_53_n_0 ,\length_offset[9]_i_54_n_0 }));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_1
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_0_5_i_10_n_0),
        .I4(\AddrVar_reg[30]_0 [1]),
        .O(\AddrVar_reg[30] [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_10
       (.I0(\tlpaddrlsig[3]_36 [1]),
        .I1(\tlpaddrlsig[1]_34 [1]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [1]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [1]),
        .O(m_axi_araddrtemp_reg_0_3_0_5_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_11
       (.I0(\tlpaddrlsig[3]_36 [0]),
        .I1(\tlpaddrlsig[1]_34 [0]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [0]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [0]),
        .O(m_axi_araddrtemp_reg_0_3_0_5_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_12
       (.I0(\tlpaddrlsig[3]_36 [3]),
        .I1(\tlpaddrlsig[1]_34 [3]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [3]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [3]),
        .O(m_axi_araddrtemp_reg_0_3_0_5_i_12_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_13
       (.I0(\tlpaddrlsig[3]_36 [2]),
        .I1(\tlpaddrlsig[1]_34 [2]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [2]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [2]),
        .O(m_axi_araddrtemp_reg_0_3_0_5_i_13_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_14
       (.I0(\tlpaddrlsig[3]_36 [5]),
        .I1(\tlpaddrlsig[1]_34 [5]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [5]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [5]),
        .O(m_axi_araddrtemp_reg_0_3_0_5_i_14_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_15
       (.I0(\tlpaddrlsig[3]_36 [4]),
        .I1(\tlpaddrlsig[1]_34 [4]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [4]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [4]),
        .O(m_axi_araddrtemp_reg_0_3_0_5_i_15_n_0));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_2
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_0_5_i_11_n_0),
        .I4(\AddrVar_reg[30]_0 [0]),
        .O(\AddrVar_reg[30] [0]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_3
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_0_5_i_12_n_0),
        .I4(\AddrVar_reg[30]_0 [3]),
        .O(\AddrVar_reg[30] [3]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_4
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_0_5_i_13_n_0),
        .I4(\AddrVar_reg[30]_0 [2]),
        .O(\AddrVar_reg[30] [2]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_5
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_0_5_i_14_n_0),
        .I4(\AddrVar_reg[30]_0 [5]),
        .O(\AddrVar_reg[30] [5]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_6
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_0_5_i_15_n_0),
        .I4(\AddrVar_reg[30]_0 [4]),
        .O(\AddrVar_reg[30] [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_7
       (.I0(\s_axis_cr_tusersig[3]_48 [0]),
        .I1(\s_axis_cr_tusersig[1]_46 [0]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\s_axis_cr_tusersig[2]_47 [0]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\s_axis_cr_tusersig[0]_45 [0]),
        .O(\AddrVar_reg[16] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_8
       (.I0(\s_axis_cr_tusersig[3]_48 [2]),
        .I1(\s_axis_cr_tusersig[1]_46 [2]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\s_axis_cr_tusersig[2]_47 [2]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\s_axis_cr_tusersig[0]_45 [2]),
        .O(p_2_in));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_0_5_i_9
       (.I0(\s_axis_cr_tusersig[3]_48 [1]),
        .I1(\s_axis_cr_tusersig[1]_46 [1]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\s_axis_cr_tusersig[2]_47 [1]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\s_axis_cr_tusersig[0]_45 [1]),
        .O(p_1_in__28));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_1
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_12_17_i_7_n_0),
        .I4(\AddrVar_reg[30]_0 [13]),
        .O(\AddrVar_reg[30] [13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_10
       (.I0(\tlpaddrlsig[3]_36 [14]),
        .I1(\tlpaddrlsig[1]_34 [14]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [14]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [14]),
        .O(m_axi_araddrtemp_reg_0_3_12_17_i_10_n_0));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_11
       (.I0(\tlpaddrlsig[2]_35 [17]),
        .I1(\tlpaddrlsig[0]_33 [17]),
        .I2(\tlpaddrlsig[3]_36 [17]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlpaddrlsig[1]_34 [17]),
        .I5(sig_addrstreampipeline[0]),
        .O(m_axi_araddrtemp_reg_0_3_12_17_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_12
       (.I0(\tlpaddrlsig[3]_36 [16]),
        .I1(\tlpaddrlsig[1]_34 [16]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [16]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [16]),
        .O(m_axi_araddrtemp_reg_0_3_12_17_i_12_n_0));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_2
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_12_17_i_8_n_0),
        .I4(\AddrVar_reg[30]_0 [12]),
        .O(\AddrVar_reg[30] [12]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_3
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_12_17_i_9_n_0),
        .I4(\AddrVar_reg[30]_0 [15]),
        .O(\AddrVar_reg[30] [15]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_4
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_12_17_i_10_n_0),
        .I4(\AddrVar_reg[30]_0 [14]),
        .O(\AddrVar_reg[30] [14]));
  LUT5 #(
    .INIT(32'h00000074)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_5
       (.I0(m_axi_araddrtemp_reg_0_3_12_17_i_11_n_0),
        .I1(\AddrVar_reg[16] ),
        .I2(\AddrVar_reg[30]_0 [17]),
        .I3(p_2_in),
        .I4(p_1_in__28),
        .O(\AddrVar_reg[30] [17]));
  LUT5 #(
    .INIT(32'h0000FE02)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_6
       (.I0(\AddrVar_reg[30]_0 [16]),
        .I1(p_1_in__28),
        .I2(\AddrVar_reg[16] ),
        .I3(m_axi_araddrtemp_reg_0_3_12_17_i_12_n_0),
        .I4(p_2_in),
        .O(\AddrVar_reg[30] [16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_7
       (.I0(\tlpaddrlsig[3]_36 [13]),
        .I1(\tlpaddrlsig[1]_34 [13]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [13]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [13]),
        .O(m_axi_araddrtemp_reg_0_3_12_17_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_8
       (.I0(\tlpaddrlsig[3]_36 [12]),
        .I1(\tlpaddrlsig[1]_34 [12]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [12]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [12]),
        .O(m_axi_araddrtemp_reg_0_3_12_17_i_8_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_12_17_i_9
       (.I0(\tlpaddrlsig[3]_36 [15]),
        .I1(\tlpaddrlsig[1]_34 [15]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [15]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [15]),
        .O(m_axi_araddrtemp_reg_0_3_12_17_i_9_n_0));
  LUT5 #(
    .INIT(32'h00000074)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_1
       (.I0(m_axi_araddrtemp_reg_0_3_18_23_i_7_n_0),
        .I1(\AddrVar_reg[16] ),
        .I2(\AddrVar_reg[30]_0 [19]),
        .I3(p_2_in),
        .I4(p_1_in__28),
        .O(\AddrVar_reg[30] [19]));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_10
       (.I0(\tlpaddrlsig[2]_35 [20]),
        .I1(\tlpaddrlsig[0]_33 [20]),
        .I2(\tlpaddrlsig[3]_36 [20]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlpaddrlsig[1]_34 [20]),
        .I5(sig_addrstreampipeline[0]),
        .O(m_axi_araddrtemp_reg_0_3_18_23_i_10_n_0));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_11
       (.I0(\tlpaddrlsig[2]_35 [22]),
        .I1(\tlpaddrlsig[0]_33 [22]),
        .I2(\tlpaddrlsig[3]_36 [22]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlpaddrlsig[1]_34 [22]),
        .I5(sig_addrstreampipeline[0]),
        .O(m_axi_araddrtemp_reg_0_3_18_23_i_11_n_0));
  LUT5 #(
    .INIT(32'h00000074)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_2
       (.I0(m_axi_araddrtemp_reg_0_3_18_23_i_8_n_0),
        .I1(\AddrVar_reg[16] ),
        .I2(\AddrVar_reg[30]_0 [18]),
        .I3(p_2_in),
        .I4(p_1_in__28),
        .O(\AddrVar_reg[30] [18]));
  LUT5 #(
    .INIT(32'h0000DFDC)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_3
       (.I0(m_axi_araddrtemp_reg_0_3_18_23_i_9_n_0),
        .I1(p_1_in__28),
        .I2(\AddrVar_reg[16] ),
        .I3(\AddrVar_reg[30]_0 [21]),
        .I4(p_2_in),
        .O(\AddrVar_reg[30] [21]));
  LUT5 #(
    .INIT(32'h00000074)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_4
       (.I0(m_axi_araddrtemp_reg_0_3_18_23_i_10_n_0),
        .I1(\AddrVar_reg[16] ),
        .I2(\AddrVar_reg[30]_0 [20]),
        .I3(p_2_in),
        .I4(p_1_in__28),
        .O(\AddrVar_reg[30] [20]));
  LUT4 #(
    .INIT(16'h00F4)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_5
       (.I0(\AddrVar_reg[16] ),
        .I1(\AddrVar_reg[30]_0 [23]),
        .I2(p_1_in__28),
        .I3(p_2_in),
        .O(\AddrVar_reg[30] [23]));
  LUT5 #(
    .INIT(32'h00000074)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_6
       (.I0(m_axi_araddrtemp_reg_0_3_18_23_i_11_n_0),
        .I1(\AddrVar_reg[16] ),
        .I2(\AddrVar_reg[30]_0 [22]),
        .I3(p_2_in),
        .I4(p_1_in__28),
        .O(\AddrVar_reg[30] [22]));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_7
       (.I0(\tlpaddrlsig[2]_35 [19]),
        .I1(\tlpaddrlsig[0]_33 [19]),
        .I2(\tlpaddrlsig[3]_36 [19]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlpaddrlsig[1]_34 [19]),
        .I5(sig_addrstreampipeline[0]),
        .O(m_axi_araddrtemp_reg_0_3_18_23_i_7_n_0));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_8
       (.I0(\tlpaddrlsig[2]_35 [18]),
        .I1(\tlpaddrlsig[0]_33 [18]),
        .I2(\tlpaddrlsig[3]_36 [18]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlpaddrlsig[1]_34 [18]),
        .I5(sig_addrstreampipeline[0]),
        .O(m_axi_araddrtemp_reg_0_3_18_23_i_8_n_0));
  LUT6 #(
    .INIT(64'h0F000FFF55335533)) 
    m_axi_araddrtemp_reg_0_3_18_23_i_9
       (.I0(\tlpaddrlsig[2]_35 [21]),
        .I1(\tlpaddrlsig[0]_33 [21]),
        .I2(\tlpaddrlsig[3]_36 [21]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlpaddrlsig[1]_34 [21]),
        .I5(sig_addrstreampipeline[0]),
        .O(m_axi_araddrtemp_reg_0_3_18_23_i_9_n_0));
  LUT4 #(
    .INIT(16'h00F4)) 
    m_axi_araddrtemp_reg_0_3_24_29_i_1
       (.I0(\AddrVar_reg[16] ),
        .I1(\AddrVar_reg[30]_0 [24]),
        .I2(p_1_in__28),
        .I3(p_2_in),
        .O(\AddrVar_reg[30] [24]));
  LUT4 #(
    .INIT(16'hEFEE)) 
    m_axi_araddrtemp_reg_0_3_30_31_i_1
       (.I0(p_1_in__28),
        .I1(p_2_in),
        .I2(\AddrVar_reg[16] ),
        .I3(\AddrVar_reg[30]_0 [25]),
        .O(\AddrVar_reg[30] [25]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_1
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_6_11_i_7_n_0),
        .I4(\AddrVar_reg[30]_0 [7]),
        .O(\AddrVar_reg[30] [7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_10
       (.I0(\tlpaddrlsig[3]_36 [8]),
        .I1(\tlpaddrlsig[1]_34 [8]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [8]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [8]),
        .O(m_axi_araddrtemp_reg_0_3_6_11_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_11
       (.I0(\tlpaddrlsig[3]_36 [11]),
        .I1(\tlpaddrlsig[1]_34 [11]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [11]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [11]),
        .O(m_axi_araddrtemp_reg_0_3_6_11_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_12
       (.I0(\tlpaddrlsig[3]_36 [10]),
        .I1(\tlpaddrlsig[1]_34 [10]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [10]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [10]),
        .O(m_axi_araddrtemp_reg_0_3_6_11_i_12_n_0));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_2
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_6_11_i_8_n_0),
        .I4(\AddrVar_reg[30]_0 [6]),
        .O(\AddrVar_reg[30] [6]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_3
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_6_11_i_9_n_0),
        .I4(\AddrVar_reg[30]_0 [9]),
        .O(\AddrVar_reg[30] [9]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_4
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_6_11_i_10_n_0),
        .I4(\AddrVar_reg[30]_0 [8]),
        .O(\AddrVar_reg[30] [8]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_5
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_6_11_i_11_n_0),
        .I4(\AddrVar_reg[30]_0 [11]),
        .O(\AddrVar_reg[30] [11]));
  LUT5 #(
    .INIT(32'hFF01FE00)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_6
       (.I0(\AddrVar_reg[16] ),
        .I1(p_2_in),
        .I2(p_1_in__28),
        .I3(m_axi_araddrtemp_reg_0_3_6_11_i_12_n_0),
        .I4(\AddrVar_reg[30]_0 [10]),
        .O(\AddrVar_reg[30] [10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_7
       (.I0(\tlpaddrlsig[3]_36 [7]),
        .I1(\tlpaddrlsig[1]_34 [7]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [7]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [7]),
        .O(m_axi_araddrtemp_reg_0_3_6_11_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_8
       (.I0(\tlpaddrlsig[3]_36 [6]),
        .I1(\tlpaddrlsig[1]_34 [6]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [6]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [6]),
        .O(m_axi_araddrtemp_reg_0_3_6_11_i_8_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    m_axi_araddrtemp_reg_0_3_6_11_i_9
       (.I0(\tlpaddrlsig[3]_36 [9]),
        .I1(\tlpaddrlsig[1]_34 [9]),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlpaddrlsig[2]_35 [9]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlpaddrlsig[0]_33 [9]),
        .O(m_axi_araddrtemp_reg_0_3_6_11_i_9_n_0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_10
       (.I0(\tlplengthsig[3]_40 [2]),
        .I1(\tlplengthsig[1]_38 [2]),
        .I2(\tlplengthsig[2]_39 [2]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [2]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [2]));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    m_axi_arlentemp_reg_0_3_0_5_i_11
       (.I0(\AddrVar_reg[30] [2]),
        .I1(m_axi_arlentemp_reg_0_3_0_5_i_20_n_0),
        .I2(sig_addrstreampipeline[0]),
        .I3(\tlplengthsig[1]_38 [0]),
        .I4(sig_addrstreampipeline[1]),
        .I5(\tlplengthsig[3]_40 [0]),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_12
       (.I0(\tlplengthsig[3]_40 [3]),
        .I1(\tlplengthsig[1]_38 [3]),
        .I2(\tlplengthsig[2]_39 [3]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [3]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [3]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_13
       (.I0(\tlplengthsig[3]_40 [4]),
        .I1(\tlplengthsig[1]_38 [4]),
        .I2(\tlplengthsig[2]_39 [4]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [4]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [4]));
  LUT3 #(
    .INIT(8'hFE)) 
    m_axi_arlentemp_reg_0_3_0_5_i_14
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_17_n_0),
        .I1(\tlplength[0]_12 [4]),
        .I2(\tlplength[0]_12 [5]),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_14_n_0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_15
       (.I0(\tlplengthsig[3]_40 [6]),
        .I1(\tlplengthsig[1]_38 [6]),
        .I2(\tlplengthsig[2]_39 [6]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [6]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [6]));
  LUT6 #(
    .INIT(64'h8000000000000001)) 
    m_axi_arlentemp_reg_0_3_0_5_i_16
       (.I0(\tlplength[0]_12 [5]),
        .I1(\tlplength[0]_12 [3]),
        .I2(\tlplength[0]_12 [1]),
        .I3(\tlplength[0]_12 [0]),
        .I4(\tlplength[0]_12 [2]),
        .I5(\tlplength[0]_12 [4]),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    m_axi_arlentemp_reg_0_3_0_5_i_17
       (.I0(\tlplength[0]_12 [2]),
        .I1(\tlplength[0]_12 [0]),
        .I2(\tlplength[0]_12 [1]),
        .I3(\tlplength[0]_12 [3]),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_17_n_0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_18
       (.I0(\tlplengthsig[3]_40 [5]),
        .I1(\tlplengthsig[1]_38 [5]),
        .I2(\tlplengthsig[2]_39 [5]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [5]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [5]));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h80000001)) 
    m_axi_arlentemp_reg_0_3_0_5_i_19
       (.I0(\tlplength[0]_12 [4]),
        .I1(\tlplength[0]_12 [2]),
        .I2(\tlplength[0]_12 [0]),
        .I3(\tlplength[0]_12 [1]),
        .I4(\tlplength[0]_12 [3]),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_19_n_0));
  LUT4 #(
    .INIT(16'h78E1)) 
    m_axi_arlentemp_reg_0_3_0_5_i_2
       (.I0(\tlplength[0]_12 [1]),
        .I1(\tlplength[0]_12 [0]),
        .I2(\tlplength[0]_12 [2]),
        .I3(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [1]));
  LUT3 #(
    .INIT(8'hB8)) 
    m_axi_arlentemp_reg_0_3_0_5_i_20
       (.I0(\tlplengthsig[2]_39 [0]),
        .I1(sig_addrstreampipeline[1]),
        .I2(\tlplengthsig[0]_37 [0]),
        .O(m_axi_arlentemp_reg_0_3_0_5_i_20_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    m_axi_arlentemp_reg_0_3_0_5_i_3
       (.I0(\tlplength[0]_12 [0]),
        .I1(\tlplength[0]_12 [1]),
        .I2(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [0]));
  LUT6 #(
    .INIT(64'h7FFF8000FFFE0001)) 
    m_axi_arlentemp_reg_0_3_0_5_i_4
       (.I0(\tlplength[0]_12 [3]),
        .I1(\tlplength[0]_12 [1]),
        .I2(\tlplength[0]_12 [0]),
        .I3(\tlplength[0]_12 [2]),
        .I4(\tlplength[0]_12 [4]),
        .I5(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [3]));
  LUT5 #(
    .INIT(32'h7F80FE01)) 
    m_axi_arlentemp_reg_0_3_0_5_i_5
       (.I0(\tlplength[0]_12 [2]),
        .I1(\tlplength[0]_12 [0]),
        .I2(\tlplength[0]_12 [1]),
        .I3(\tlplength[0]_12 [3]),
        .I4(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [2]));
  LUT4 #(
    .INIT(16'h6999)) 
    m_axi_arlentemp_reg_0_3_0_5_i_6
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_14_n_0),
        .I1(\tlplength[0]_12 [6]),
        .I2(m_axi_arlentemp_reg_0_3_0_5_i_16_n_0),
        .I3(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [5]));
  LUT5 #(
    .INIT(32'h1EE1E1E1)) 
    m_axi_arlentemp_reg_0_3_0_5_i_7
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_17_n_0),
        .I1(\tlplength[0]_12 [4]),
        .I2(\tlplength[0]_12 [5]),
        .I3(m_axi_arlentemp_reg_0_3_0_5_i_19_n_0),
        .I4(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [4]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_8
       (.I0(\tlplengthsig[3]_40 [1]),
        .I1(\tlplengthsig[1]_38 [1]),
        .I2(\tlplengthsig[2]_39 [1]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [1]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [1]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_0_5_i_9
       (.I0(\tlplengthsig[3]_40 [0]),
        .I1(\tlplengthsig[1]_38 [0]),
        .I2(\tlplengthsig[2]_39 [0]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [0]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [0]));
  LUT6 #(
    .INIT(64'h7FFE8001FFFC0003)) 
    m_axi_arlentemp_reg_0_3_6_9_i_1
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_16_n_0),
        .I1(\tlplength[0]_12 [7]),
        .I2(m_axi_arlentemp_reg_0_3_0_5_i_14_n_0),
        .I3(\tlplength[0]_12 [6]),
        .I4(\tlplength[0]_12 [8]),
        .I5(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [7]));
  LUT5 #(
    .INIT(32'h7E81FC03)) 
    m_axi_arlentemp_reg_0_3_6_9_i_2
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_16_n_0),
        .I1(\tlplength[0]_12 [6]),
        .I2(m_axi_arlentemp_reg_0_3_0_5_i_14_n_0),
        .I3(\tlplength[0]_12 [7]),
        .I4(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [6]));
  LUT3 #(
    .INIT(8'h20)) 
    m_axi_arlentemp_reg_0_3_6_9_i_3
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .I1(m_axi_arlentemp_reg_0_3_6_9_i_7_n_0),
        .I2(m_axi_arlentemp_reg_0_3_6_9_i_8_n_0),
        .O(p_3_in[1]));
  LUT3 #(
    .INIT(8'h93)) 
    m_axi_arlentemp_reg_0_3_6_9_i_4
       (.I0(m_axi_arlentemp_reg_0_3_6_9_i_8_n_0),
        .I1(m_axi_arlentemp_reg_0_3_6_9_i_7_n_0),
        .I2(m_axi_arlentemp_reg_0_3_0_5_i_11_n_0),
        .O(\m_axi_arlen4_reg[7] [8]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_6_9_i_5
       (.I0(\tlplengthsig[3]_40 [7]),
        .I1(\tlplengthsig[1]_38 [7]),
        .I2(\tlplengthsig[2]_39 [7]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [7]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [7]));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_6_9_i_6
       (.I0(\tlplengthsig[3]_40 [8]),
        .I1(\tlplengthsig[1]_38 [8]),
        .I2(\tlplengthsig[2]_39 [8]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [8]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [8]));
  LUT5 #(
    .INIT(32'h0001FFFE)) 
    m_axi_arlentemp_reg_0_3_6_9_i_7
       (.I0(\tlplength[0]_12 [8]),
        .I1(\tlplength[0]_12 [6]),
        .I2(m_axi_arlentemp_reg_0_3_0_5_i_14_n_0),
        .I3(\tlplength[0]_12 [7]),
        .I4(\tlplength[0]_12 [9]),
        .O(m_axi_arlentemp_reg_0_3_6_9_i_7_n_0));
  LUT5 #(
    .INIT(32'h80000002)) 
    m_axi_arlentemp_reg_0_3_6_9_i_8
       (.I0(m_axi_arlentemp_reg_0_3_0_5_i_16_n_0),
        .I1(\tlplength[0]_12 [8]),
        .I2(\tlplength[0]_12 [6]),
        .I3(m_axi_arlentemp_reg_0_3_0_5_i_14_n_0),
        .I4(\tlplength[0]_12 [7]),
        .O(m_axi_arlentemp_reg_0_3_6_9_i_8_n_0));
  LUT6 #(
    .INIT(64'hAACCAACCF0FFF000)) 
    m_axi_arlentemp_reg_0_3_6_9_i_9
       (.I0(\tlplengthsig[3]_40 [9]),
        .I1(\tlplengthsig[1]_38 [9]),
        .I2(\tlplengthsig[2]_39 [9]),
        .I3(sig_addrstreampipeline[1]),
        .I4(\tlplengthsig[0]_37 [9]),
        .I5(sig_addrstreampipeline[0]),
        .O(\tlplength[0]_12 [9]));
  LUT4 #(
    .INIT(16'h0010)) 
    m_axi_arprottemp_reg_0_3_0_2_i_1
       (.I0(\AddrVar_reg[16] ),
        .I1(p_1_in__28),
        .I2(\ARProtVar_reg[1] ),
        .I3(p_2_in),
        .O(ARProtVar[1]));
  LUT4 #(
    .INIT(16'h0010)) 
    m_axi_arprottemp_reg_0_3_0_2_i_2
       (.I0(\AddrVar_reg[16] ),
        .I1(p_1_in__28),
        .I2(\ARProtVar_reg[0] ),
        .I3(p_2_in),
        .O(ARProtVar[0]));
  LUT4 #(
    .INIT(16'h0010)) 
    m_axi_arprottemp_reg_0_3_0_2_i_3
       (.I0(\AddrVar_reg[16] ),
        .I1(p_1_in__28),
        .I2(\ARProtVar_reg[2] ),
        .I3(p_2_in),
        .O(ARProtVar[2]));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    m_axi_awsizetemp_reg_0_3_0_2_i_1
       (.I0(\tlplength[0]_12 [2]),
        .I1(\tlplength[0]_12 [1]),
        .I2(\tlplength[0]_12 [0]),
        .I3(\tlplength[0]_12 [3]),
        .I4(\tlplength[0]_12 [4]),
        .I5(m_axi_awsizetemp_reg_0_3_0_2_i_2__0_n_0),
        .O(p_1_in));
  LUT5 #(
    .INIT(32'h00000001)) 
    m_axi_awsizetemp_reg_0_3_0_2_i_2__0
       (.I0(\tlplength[0]_12 [8]),
        .I1(\tlplength[0]_12 [9]),
        .I2(\tlplength[0]_12 [5]),
        .I3(\tlplength[0]_12 [6]),
        .I4(\tlplength[0]_12 [7]),
        .O(m_axi_awsizetemp_reg_0_3_0_2_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT4 #(
    .INIT(16'h4FE0)) 
    \orrdreqpipeline[0]_i_1 
       (.I0(rdreq_reg),
        .I1(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I2(\orrdreqpipeline[2]_i_2_n_0 ),
        .I3(\orrdreqpipeline_reg[0]_0 ),
        .O(\orrdreqpipeline_reg[0] ));
  LUT5 #(
    .INIT(32'h74FFB800)) 
    \orrdreqpipeline[1]_i_1 
       (.I0(\orrdreqpipeline_reg[0]_0 ),
        .I1(rdreq_reg),
        .I2(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .I3(\orrdreqpipeline[2]_i_2_n_0 ),
        .I4(\orrdreqpipeline_reg[1]_0 ),
        .O(\orrdreqpipeline_reg[1] ));
  LUT6 #(
    .INIT(64'h7F70FFFF8F800000)) 
    \orrdreqpipeline[2]_i_1 
       (.I0(\orrdreqpipeline_reg[0]_0 ),
        .I1(\orrdreqpipeline_reg[1]_0 ),
        .I2(rdreq_reg),
        .I3(rdtargetpipeline),
        .I4(\orrdreqpipeline[2]_i_2_n_0 ),
        .I5(\orrdreqpipeline_reg[2]_0 ),
        .O(\orrdreqpipeline_reg[2] ));
  LUT5 #(
    .INIT(32'hF808FFFF)) 
    \orrdreqpipeline[2]_i_2 
       (.I0(rdreq_ordernotreq),
        .I1(\data_width_64.wrreqpendsig_reg[0] ),
        .I2(rdorder_reg),
        .I3(rdreq1_out),
        .I4(rdreq_reg),
        .O(\orrdreqpipeline[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_req_32_64.rdndreqpipeline[0]_i_1 
       (.I0(\data_width_64.rdndreqpipelinedecr_reg_n_0 ),
        .I1(rdndreqpipelineincr),
        .I2(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .O(\rd_req_32_64.rdndreqpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT4 #(
    .INIT(16'hE718)) 
    \rd_req_32_64.rdndreqpipeline[1]_i_1 
       (.I0(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I1(rdndreqpipelineincr),
        .I2(\data_width_64.rdndreqpipelinedecr_reg_n_0 ),
        .I3(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .O(\rd_req_32_64.rdndreqpipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'hFE7F0180)) 
    \rd_req_32_64.rdndreqpipeline[2]_i_1 
       (.I0(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .I1(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .I2(rdndreqpipelineincr),
        .I3(\data_width_64.rdndreqpipelinedecr_reg_n_0 ),
        .I4(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .O(\rd_req_32_64.rdndreqpipeline[2]_i_1_n_0 ));
  FDRE \rd_req_32_64.rdndreqpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\rd_req_32_64.rdndreqpipeline[0]_i_1_n_0 ),
        .Q(\np_ok_mode.rdndreqpipeline_d_reg[0] ),
        .R(user_lnk_up_mux_reg_3));
  FDRE \rd_req_32_64.rdndreqpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\rd_req_32_64.rdndreqpipeline[1]_i_1_n_0 ),
        .Q(\np_ok_mode.rdndreqpipeline_d_reg[1] ),
        .R(user_lnk_up_mux_reg_3));
  FDRE \rd_req_32_64.rdndreqpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\rd_req_32_64.rdndreqpipeline[2]_i_1_n_0 ),
        .Q(\np_ok_mode.rdndreqpipeline_d_reg[2] ),
        .R(user_lnk_up_mux_reg_3));
  LUT3 #(
    .INIT(8'h96)) 
    \rd_req_32_64.rdreqpipeline[0]_i_1 
       (.I0(\rd_req_32_64.rdreqpipeline_reg[2]_0 ),
        .I1(rdreq_ordernotreq),
        .I2(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .O(\rd_req_32_64.rdreqpipeline[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT4 #(
    .INIT(16'hE718)) 
    \rd_req_32_64.rdreqpipeline[1]_i_1 
       (.I0(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I1(rdreq_ordernotreq),
        .I2(\rd_req_32_64.rdreqpipeline_reg[2]_0 ),
        .I3(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .O(\rd_req_32_64.rdreqpipeline[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT5 #(
    .INIT(32'hFE7F0180)) 
    \rd_req_32_64.rdreqpipeline[2]_i_2 
       (.I0(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .I1(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .I2(rdreq_ordernotreq),
        .I3(\rd_req_32_64.rdreqpipeline_reg[2]_0 ),
        .I4(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .O(\rd_req_32_64.rdreqpipeline[2]_i_2_n_0 ));
  FDRE \rd_req_32_64.rdreqpipeline_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\rd_req_32_64.rdreqpipeline[0]_i_1_n_0 ),
        .Q(\np_ok_mode.rdreqpipeline_d_reg[0] ),
        .R(user_lnk_up_mux_reg_3));
  FDRE \rd_req_32_64.rdreqpipeline_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\rd_req_32_64.rdreqpipeline[1]_i_1_n_0 ),
        .Q(\np_ok_mode.rdreqpipeline_d_reg[1] ),
        .R(user_lnk_up_mux_reg_3));
  FDRE \rd_req_32_64.rdreqpipeline_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\rd_req_32_64.rdreqpipeline[2]_i_2_n_0 ),
        .Q(\np_ok_mode.rdreqpipeline_d_reg[2] ),
        .R(user_lnk_up_mux_reg_3));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    rdorder_i_2
       (.I0(\data_width_64.rdtargetpipeline_reg[0]_rep_n_0 ),
        .I1(\orrdreqpipeline_reg[0]_0 ),
        .I2(\orrdreqpipeline_reg[2]_0 ),
        .I3(rdtargetpipeline),
        .I4(\orrdreqpipeline_reg[1]_0 ),
        .I5(\data_width_64.rdtargetpipeline_reg[1]_rep_n_0 ),
        .O(neqOp0_out_1));
  LUT6 #(
    .INIT(64'hB888000000000000)) 
    rdreq_i_1
       (.I0(rdreq1_out),
        .I1(rdorder_reg),
        .I2(\data_width_64.wrreqpendsig_reg[0] ),
        .I3(rdreq_ordernotreq),
        .I4(rdreq_reg),
        .I5(axi_aresetn),
        .O(rdreq_reg_0));
  LUT3 #(
    .INIT(8'hE0)) 
    rdreq_i_2
       (.I0(eqOp_1),
        .I1(p_0_in_0),
        .I2(neqOp0_out_1),
        .O(rdreq1_out));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    rdreq_i_3
       (.I0(L[0]),
        .I1(\respmmpipeline_reg[0] ),
        .I2(\respmmpipeline_reg[2] ),
        .I3(L[2]),
        .I4(\respmmpipeline_reg[1] ),
        .I5(L[1]),
        .O(eqOp_1));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    rdreq_i_4
       (.I0(\wrpending[3]_41 [3]),
        .I1(\wrpending[1]_43 [3]),
        .I2(\orrdreqpipeline_reg[0]_0 ),
        .I3(\wrpending[2]_42 [3]),
        .I4(\orrdreqpipeline_reg[1]_0 ),
        .I5(\wrpending[0]_44 [3]),
        .O(p_0_in_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    rdreq_i_5
       (.I0(\wrpending[3]_41 [0]),
        .I1(\wrpending[1]_43 [0]),
        .I2(\orrdreqpipeline_reg[0]_0 ),
        .I3(\wrpending[2]_42 [0]),
        .I4(\orrdreqpipeline_reg[1]_0 ),
        .I5(\wrpending[0]_44 [0]),
        .O(L[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    rdreq_i_6
       (.I0(\wrpending[3]_41 [2]),
        .I1(\wrpending[1]_43 [2]),
        .I2(\orrdreqpipeline_reg[0]_0 ),
        .I3(\wrpending[2]_42 [2]),
        .I4(\orrdreqpipeline_reg[1]_0 ),
        .I5(\wrpending[0]_44 [2]),
        .O(L[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    rdreq_i_7
       (.I0(\wrpending[3]_41 [1]),
        .I1(\wrpending[1]_43 [1]),
        .I2(\orrdreqpipeline_reg[0]_0 ),
        .I3(\wrpending[2]_42 [1]),
        .I4(\orrdreqpipeline_reg[1]_0 ),
        .I5(\wrpending[0]_44 [1]),
        .O(L[1]));
  LUT6 #(
    .INIT(64'h8000808080000000)) 
    request_completed_i_1
       (.I0(sig_m_axis_cc_tvalid),
        .I1(s_axis_tx_tready),
        .I2(p_0_in),
        .I3(s_axis_tx_tlast_d_reg),
        .I4(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I5(s_axis_tx_tlast_d_reg_0),
        .O(request_completed));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    s_axis_cc_tvalid_q_i_1
       (.I0(s_axis_cc_tvalid_q_reg),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(s_axis_cc_tvalid_q_reg_0),
        .O(sig_m_axis_cc_tvalid));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[0]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[0]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[0]),
        .O(\s_axis_tx_tdata_d_reg[63] [0]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[0]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [24]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[24]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[0]),
        .O(\s_axis_tx_tdata_d[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[10]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[10]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[10]),
        .O(\s_axis_tx_tdata_d_reg[63] [10]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[10]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [18]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[18]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[10]),
        .O(\s_axis_tx_tdata_d[10]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[11]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[11]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[11]),
        .O(\s_axis_tx_tdata_d_reg[63] [11]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[11]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [19]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[19]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[11]),
        .O(\s_axis_tx_tdata_d[11]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[12]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[12]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[12]),
        .O(\s_axis_tx_tdata_d_reg[63] [12]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[12]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [20]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[20]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[12]),
        .O(\s_axis_tx_tdata_d[12]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[13]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[13]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[13]),
        .O(\s_axis_tx_tdata_d_reg[63] [13]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[13]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [21]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[21]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[13]),
        .O(\s_axis_tx_tdata_d[13]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[14]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[14]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[14]),
        .O(\s_axis_tx_tdata_d_reg[63] [14]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[14]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [22]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[22]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[14]),
        .O(\s_axis_tx_tdata_d[14]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[15]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[15]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[15]),
        .O(\s_axis_tx_tdata_d_reg[63] [15]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[15]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [23]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[23]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[15]),
        .O(\s_axis_tx_tdata_d[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[16]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[16]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[16]),
        .O(\s_axis_tx_tdata_d_reg[63] [16]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[16]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [8]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[8]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[16]),
        .O(\s_axis_tx_tdata_d[16]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[17]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[17]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[17]),
        .O(\s_axis_tx_tdata_d_reg[63] [17]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[17]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [9]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[9]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[17]),
        .O(\s_axis_tx_tdata_d[17]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[18]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[18]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[18]),
        .O(\s_axis_tx_tdata_d_reg[63] [18]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[18]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [10]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[10]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[18]),
        .O(\s_axis_tx_tdata_d[18]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[19]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[19]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[19]),
        .O(\s_axis_tx_tdata_d_reg[63] [19]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[19]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [11]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[11]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[19]),
        .O(\s_axis_tx_tdata_d[19]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[1]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[1]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[1]),
        .O(\s_axis_tx_tdata_d_reg[63] [1]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[1]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [25]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[25]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[1]),
        .O(\s_axis_tx_tdata_d[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[20]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[20]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[20]),
        .O(\s_axis_tx_tdata_d_reg[63] [20]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[20]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [12]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[12]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[20]),
        .O(\s_axis_tx_tdata_d[20]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[21]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[21]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[21]),
        .O(\s_axis_tx_tdata_d_reg[63] [21]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[21]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [13]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[13]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[21]),
        .O(\s_axis_tx_tdata_d[21]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[22]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[22]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[22]),
        .O(\s_axis_tx_tdata_d_reg[63] [22]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[22]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [14]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[14]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[22]),
        .O(\s_axis_tx_tdata_d[22]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[23]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[23]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[23]),
        .O(\s_axis_tx_tdata_d_reg[63] [23]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[23]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [15]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[15]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[23]),
        .O(\s_axis_tx_tdata_d[23]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[24]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[24]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[24]),
        .O(\s_axis_tx_tdata_d_reg[63] [24]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[24]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [0]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[0]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[24]),
        .O(\s_axis_tx_tdata_d[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[25]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[25]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[25]),
        .O(\s_axis_tx_tdata_d_reg[63] [25]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[25]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [1]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[1]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[25]),
        .O(\s_axis_tx_tdata_d[25]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[26]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[26]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[26]),
        .O(\s_axis_tx_tdata_d_reg[63] [26]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[26]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [2]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[2]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[26]),
        .O(\s_axis_tx_tdata_d[26]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[27]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[27]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[27]),
        .O(\s_axis_tx_tdata_d_reg[63] [27]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[27]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [3]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[3]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[27]),
        .O(\s_axis_tx_tdata_d[27]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[28]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[28]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[28]),
        .O(\s_axis_tx_tdata_d_reg[63] [28]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[28]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [4]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[4]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[28]),
        .O(\s_axis_tx_tdata_d[28]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[29]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[29]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[29]),
        .O(\s_axis_tx_tdata_d_reg[63] [29]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[29]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [5]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[5]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[29]),
        .O(\s_axis_tx_tdata_d[29]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[2]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[2]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[2]),
        .O(\s_axis_tx_tdata_d_reg[63] [2]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[2]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [26]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[26]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[2]),
        .O(\s_axis_tx_tdata_d[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[30]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[30]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[30]),
        .O(\s_axis_tx_tdata_d_reg[63] [30]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[30]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [6]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[6]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[30]),
        .O(\s_axis_tx_tdata_d[30]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[31]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[31]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[31]),
        .O(\s_axis_tx_tdata_d_reg[63] [31]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[31]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [7]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[7]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[31]),
        .O(\s_axis_tx_tdata_d[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[32]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[32]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[32]),
        .O(\s_axis_tx_tdata_d_reg[63] [32]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[32]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [56]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [24]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[32]),
        .O(\s_axis_tx_tdata_d[32]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[33]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[33]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[33]),
        .O(\s_axis_tx_tdata_d_reg[63] [33]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[33]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [57]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [25]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[33]),
        .O(\s_axis_tx_tdata_d[33]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[34]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[34]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[34]),
        .O(\s_axis_tx_tdata_d_reg[63] [34]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[34]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [58]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [26]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[34]),
        .O(\s_axis_tx_tdata_d[34]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[35]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[35]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[35]),
        .O(\s_axis_tx_tdata_d_reg[63] [35]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[35]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [59]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [27]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[35]),
        .O(\s_axis_tx_tdata_d[35]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[36]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[36]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[36]),
        .O(\s_axis_tx_tdata_d_reg[63] [36]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[36]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [60]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [28]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[36]),
        .O(\s_axis_tx_tdata_d[36]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[37]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[37]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[37]),
        .O(\s_axis_tx_tdata_d_reg[63] [37]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[37]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [61]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [29]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[37]),
        .O(\s_axis_tx_tdata_d[37]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[38]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[38]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[38]),
        .O(\s_axis_tx_tdata_d_reg[63] [38]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[38]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [62]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [30]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[38]),
        .O(\s_axis_tx_tdata_d[38]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[39]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[39]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[39]),
        .O(\s_axis_tx_tdata_d_reg[63] [39]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[39]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [63]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [31]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[39]),
        .O(\s_axis_tx_tdata_d[39]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[3]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[3]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[3]),
        .O(\s_axis_tx_tdata_d_reg[63] [3]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[3]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [27]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[27]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[3]),
        .O(\s_axis_tx_tdata_d[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[40]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[40]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[40]),
        .O(\s_axis_tx_tdata_d_reg[63] [40]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[40]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [48]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [16]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[40]),
        .O(\s_axis_tx_tdata_d[40]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[41]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[41]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[41]),
        .O(\s_axis_tx_tdata_d_reg[63] [41]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[41]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [49]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [17]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[41]),
        .O(\s_axis_tx_tdata_d[41]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[42]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[42]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[42]),
        .O(\s_axis_tx_tdata_d_reg[63] [42]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[42]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [50]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [18]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[42]),
        .O(\s_axis_tx_tdata_d[42]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[43]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[43]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[43]),
        .O(\s_axis_tx_tdata_d_reg[63] [43]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[43]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [51]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [19]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[43]),
        .O(\s_axis_tx_tdata_d[43]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \s_axis_tx_tdata_d[44]_i_1 
       (.I0(p_0_in),
        .I1(\s_axis_tx_tdata_d[44]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .O(\s_axis_tx_tdata_d_reg[63] [44]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[44]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [52]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [20]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[44]),
        .O(\s_axis_tx_tdata_d[44]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[45]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[45]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[45]),
        .O(\s_axis_tx_tdata_d_reg[63] [45]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[45]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [53]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [21]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[45]),
        .O(\s_axis_tx_tdata_d[45]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[46]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[46]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[46]),
        .O(\s_axis_tx_tdata_d_reg[63] [46]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[46]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [54]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [22]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[46]),
        .O(\s_axis_tx_tdata_d[46]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[47]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[47]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[47]),
        .O(\s_axis_tx_tdata_d_reg[63] [47]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[47]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [55]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [23]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[47]),
        .O(\s_axis_tx_tdata_d[47]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[48]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[48]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[48]),
        .O(\s_axis_tx_tdata_d_reg[63] [48]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[48]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [40]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [8]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[48]),
        .O(\s_axis_tx_tdata_d[48]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[49]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[49]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[49]),
        .O(\s_axis_tx_tdata_d_reg[63] [49]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[49]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [41]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [9]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[49]),
        .O(\s_axis_tx_tdata_d[49]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[4]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[4]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[4]),
        .O(\s_axis_tx_tdata_d_reg[63] [4]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[4]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [28]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[28]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[4]),
        .O(\s_axis_tx_tdata_d[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[50]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[50]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[50]),
        .O(\s_axis_tx_tdata_d_reg[63] [50]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[50]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [42]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [10]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[50]),
        .O(\s_axis_tx_tdata_d[50]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[51]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[51]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[51]),
        .O(\s_axis_tx_tdata_d_reg[63] [51]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[51]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [43]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [11]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[51]),
        .O(\s_axis_tx_tdata_d[51]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[52]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[52]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[52]),
        .O(\s_axis_tx_tdata_d_reg[63] [52]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[52]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [44]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [12]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[52]),
        .O(\s_axis_tx_tdata_d[52]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[53]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[53]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[53]),
        .O(\s_axis_tx_tdata_d_reg[63] [53]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[53]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [45]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [13]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[53]),
        .O(\s_axis_tx_tdata_d[53]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[54]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[54]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[54]),
        .O(\s_axis_tx_tdata_d_reg[63] [54]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[54]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [46]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [14]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[54]),
        .O(\s_axis_tx_tdata_d[54]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[55]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[55]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[55]),
        .O(\s_axis_tx_tdata_d_reg[63] [55]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[55]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [47]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [15]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[55]),
        .O(\s_axis_tx_tdata_d[55]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[56]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[56]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[56]),
        .O(\s_axis_tx_tdata_d_reg[63] [56]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[56]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [32]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [0]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[56]),
        .O(\s_axis_tx_tdata_d[56]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[57]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[57]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[57]),
        .O(\s_axis_tx_tdata_d_reg[63] [57]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[57]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [33]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [1]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[57]),
        .O(\s_axis_tx_tdata_d[57]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[58]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[58]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[58]),
        .O(\s_axis_tx_tdata_d_reg[63] [58]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[58]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [34]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [2]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[58]),
        .O(\s_axis_tx_tdata_d[58]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[59]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[59]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[59]),
        .O(\s_axis_tx_tdata_d_reg[63] [59]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[59]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [35]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [3]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[59]),
        .O(\s_axis_tx_tdata_d[59]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[5]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[5]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[5]),
        .O(\s_axis_tx_tdata_d_reg[63] [5]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[5]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [29]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[29]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[5]),
        .O(\s_axis_tx_tdata_d[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[60]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[60]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[60]),
        .O(\s_axis_tx_tdata_d_reg[63] [60]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[60]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [36]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [4]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[60]),
        .O(\s_axis_tx_tdata_d[60]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[61]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[61]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[61]),
        .O(\s_axis_tx_tdata_d_reg[63] [61]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[61]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [37]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [5]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[61]),
        .O(\s_axis_tx_tdata_d[61]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[62]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[62]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[62]),
        .O(\s_axis_tx_tdata_d_reg[63] [62]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[62]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [38]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [6]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[62]),
        .O(\s_axis_tx_tdata_d[62]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[63]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[63]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[63]),
        .O(\s_axis_tx_tdata_d_reg[63] [63]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[63]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [39]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(\goreg_bm.dout_i_reg[63] [7]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[63]),
        .O(\s_axis_tx_tdata_d[63]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[6]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[6]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[6]),
        .O(\s_axis_tx_tdata_d_reg[63] [6]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[6]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [30]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[30]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[6]),
        .O(\s_axis_tx_tdata_d[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \s_axis_tx_tdata_d[7]_i_1 
       (.I0(p_0_in),
        .I1(\s_axis_tx_tdata_d[7]_i_2_n_0 ),
        .I2(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .O(\s_axis_tx_tdata_d_reg[63] [7]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[7]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [31]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[31]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[7]),
        .O(\s_axis_tx_tdata_d[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[8]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[8]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[8]),
        .O(\s_axis_tx_tdata_d_reg[63] [8]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[8]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [16]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[16]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[8]),
        .O(\s_axis_tx_tdata_d[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tdata_d[9]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(\s_axis_tx_tdata_d[9]_i_2_n_0 ),
        .I3(m_axis_cc_tdata_nd__0[9]),
        .O(\s_axis_tx_tdata_d_reg[63] [9]));
  LUT6 #(
    .INIT(64'hBF80FFFFBF800000)) 
    \s_axis_tx_tdata_d[9]_i_2 
       (.I0(\goreg_bm.dout_i_reg[63] [17]),
        .I1(\data_width_64.m_axis_cc_tdata_h_reg[0]_0 ),
        .I2(Q),
        .I3(m_axis_cc_tdatatemp64[17]),
        .I4(data_phase),
        .I5(m_axis_cc_tdata_h[9]),
        .O(\s_axis_tx_tdata_d[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT4 #(
    .INIT(16'hE200)) 
    s_axis_tx_tlast_d_i_1
       (.I0(s_axis_tx_tlast_d_reg_0),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(s_axis_tx_tlast_d_reg),
        .I3(p_0_in),
        .O(s_axis_tx_tlast_d_reg_1));
  LUT4 #(
    .INIT(16'hA820)) 
    \s_axis_tx_tstrb_d[7]_i_1 
       (.I0(p_0_in),
        .I1(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I2(m_axis_cc_tstrb_d),
        .I3(m_axis_cc_tstrb_nd),
        .O(\s_axis_tx_tstrb_d_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT4 #(
    .INIT(16'hA808)) 
    s_axis_tx_tvalid_d_i_1
       (.I0(p_0_in),
        .I1(s_axis_cc_tvalid_q_reg_0),
        .I2(\data_width_64.m_axis_cc_tvalid_nd_reg_1 ),
        .I3(s_axis_cc_tvalid_q_reg),
        .O(s_axis_tx_tvalid_d_reg));
endmodule

(* ORIG_REF_NAME = "axi_s_masterbridge_wr" *) 
module overlay1_axi_pcie_0_0_axi_s_masterbridge_wr
   (out,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ,
    wrensig_reg,
    \data_width_64.datain_reg[64]_0 ,
    E,
    \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ,
    \data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ,
    \data_width_64.padzeroes_reg_0 ,
    wrensig_reg_0,
    \end_point.ctl_user_intr_d_reg[8] ,
    dataensig,
    s_axis_cw_treadysig,
    \data_width_64.s_axis_cw_treadysig_reg_0 ,
    \data_width_64.s_axis_cw_tlasttemp_reg_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ,
    \data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ,
    \data_width_64.wrreqsetsig_reg_0 ,
    \data_width_64.padzeroes_reg_1 ,
    \data_width_64.dataen_reg_0 ,
    \data_width_64.dataen_reg_1 ,
    \data_width_64.dataen_reg_2 ,
    \data_width_64.dataoffset_reg_0 ,
    \data_width_64.addroffset_reg_0 ,
    delaylast,
    \m_axi_awsize_reg[1] ,
    addroffset,
    \data_width_64.delaylast_reg_0 ,
    \data_width_64.delaylast_reg_1 ,
    \data_width_64.addroffset_reg_1 ,
    \m_axi_araddr1_reg[0] ,
    \splitcnt_reg[1] ,
    rdreq_reg,
    wrensig0,
    minusOp,
    p_1_in,
    \data_width_64.wrpendingsig_reg[1][0] ,
    \data_width_64.wrpendingsig_reg[1][2] ,
    \data_width_64.wrpendingsig_reg[1][1] ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ,
    \splitcnt_reg[1]_0 ,
    SR,
    p_0_in,
    \m_axis_cw_tuser_reg[2] ,
    \s_axis_cw_tusersig_reg[2] ,
    \s_axis_cw_tusersig_reg[1] ,
    \s_axis_cw_tusersig_reg[0] ,
    \data_width_64.m_axi_wstrb_reg[1] ,
    \data_width_64.m_axi_wstrb_reg[1]_0 ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    \AddrVar_reg[22] ,
    axi_aresetn_0,
    tlpfmtsig,
    \resetovrd.reset_reg[4] ,
    m_axis_cw_tlast_reg,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_1 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ,
    \data_width_64.padzeroes_reg_2 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_2 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ,
    \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_1 ,
    user_lnk_up_mux_reg,
    Q,
    sig_s_axis_cw_tlast,
    \gaf.gaf0.ram_afull_i_reg ,
    \m_axis_cw_tdata_reg[14] ,
    neqOp_0,
    m_axis_cw_tlast_reg_0,
    \wrreqsetcnt_reg[1] ,
    cw_full,
    sig_blk_lnk_up,
    sig_s_axis_cw_tvalid,
    s_axis_cw_treadysig34_out,
    user_lnk_up_mux_reg_0,
    cw_full_reg,
    p_49_out,
    user_lnk_up_mux_reg_1,
    s_axis_cw_treadysig45_out,
    p_1_out,
    \gaf.gaf0.ram_afull_i_reg_0 ,
    m_axis_cw_tlast_reg_1,
    eqOp,
    dataen8_out,
    \m_axis_cw_tdata_reg[29] ,
    \gaf.gaf0.ram_afull_i_reg_1 ,
    cw_full_reg_0,
    \gaf.gaf0.ram_afull_i_reg_2 ,
    delaylast40_out,
    padzeroes11_out,
    axi_aresetn,
    rdaddrsmsig_reg,
    neqOp0_out_0,
    \respmmpipeline_reg[0] ,
    \respmmpipeline_reg[2] ,
    \respmmpipeline_reg[1] ,
    \m_axis_cw_tuser_reg[6] ,
    p_2_in,
    s_axis_cw_tusersig,
    \m_axis_cw_tdata_reg[14]_0 ,
    \m_axis_cw_tdata_reg[7] ,
    \m_axis_cw_tdata_reg[22] );
  output [3:0]out;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  output wrensig_reg;
  output \data_width_64.datain_reg[64]_0 ;
  output [0:0]E;
  output \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ;
  output \data_width_64.padzeroes_reg_0 ;
  output wrensig_reg_0;
  output [0:0]\end_point.ctl_user_intr_d_reg[8] ;
  output dataensig;
  output s_axis_cw_treadysig;
  output \data_width_64.s_axis_cw_treadysig_reg_0 ;
  output \data_width_64.s_axis_cw_tlasttemp_reg_0 ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  output \data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ;
  output \data_width_64.wrreqsetsig_reg_0 ;
  output \data_width_64.padzeroes_reg_1 ;
  output \data_width_64.dataen_reg_0 ;
  output \data_width_64.dataen_reg_1 ;
  output \data_width_64.dataen_reg_2 ;
  output \data_width_64.dataoffset_reg_0 ;
  output \data_width_64.addroffset_reg_0 ;
  output delaylast;
  output [0:0]\m_axi_awsize_reg[1] ;
  output addroffset;
  output \data_width_64.delaylast_reg_0 ;
  output \data_width_64.delaylast_reg_1 ;
  output \data_width_64.addroffset_reg_1 ;
  output [0:0]\m_axi_araddr1_reg[0] ;
  output \splitcnt_reg[1] ;
  output rdreq_reg;
  output wrensig0;
  output [7:0]minusOp;
  output [0:0]p_1_in;
  output \data_width_64.wrpendingsig_reg[1][0] ;
  output \data_width_64.wrpendingsig_reg[1][2] ;
  output \data_width_64.wrpendingsig_reg[1][1] ;
  output \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  output [0:0]\splitcnt_reg[1]_0 ;
  output [0:0]SR;
  output p_0_in;
  output \m_axis_cw_tuser_reg[2] ;
  output \s_axis_cw_tusersig_reg[2] ;
  output \s_axis_cw_tusersig_reg[1] ;
  output \s_axis_cw_tusersig_reg[0] ;
  output [3:0]\data_width_64.m_axi_wstrb_reg[1] ;
  output [3:0]\data_width_64.m_axi_wstrb_reg[1]_0 ;
  output [64:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [22:0]\AddrVar_reg[22] ;
  input axi_aresetn_0;
  input [0:0]tlpfmtsig;
  input \resetovrd.reset_reg[4] ;
  input m_axis_cw_tlast_reg;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_1 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ;
  input \data_width_64.padzeroes_reg_2 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_2 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ;
  input \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_1 ;
  input user_lnk_up_mux_reg;
  input [63:0]Q;
  input sig_s_axis_cw_tlast;
  input \gaf.gaf0.ram_afull_i_reg ;
  input \m_axis_cw_tdata_reg[14] ;
  input neqOp_0;
  input m_axis_cw_tlast_reg_0;
  input \wrreqsetcnt_reg[1] ;
  input cw_full;
  input sig_blk_lnk_up;
  input sig_s_axis_cw_tvalid;
  input s_axis_cw_treadysig34_out;
  input user_lnk_up_mux_reg_0;
  input cw_full_reg;
  input p_49_out;
  input user_lnk_up_mux_reg_1;
  input s_axis_cw_treadysig45_out;
  input p_1_out;
  input \gaf.gaf0.ram_afull_i_reg_0 ;
  input m_axis_cw_tlast_reg_1;
  input eqOp;
  input dataen8_out;
  input \m_axis_cw_tdata_reg[29] ;
  input \gaf.gaf0.ram_afull_i_reg_1 ;
  input cw_full_reg_0;
  input \gaf.gaf0.ram_afull_i_reg_2 ;
  input delaylast40_out;
  input padzeroes11_out;
  input axi_aresetn;
  input [0:0]rdaddrsmsig_reg;
  input neqOp0_out_0;
  input \respmmpipeline_reg[0] ;
  input \respmmpipeline_reg[2] ;
  input \respmmpipeline_reg[1] ;
  input [2:0]\m_axis_cw_tuser_reg[6] ;
  input p_2_in;
  input [1:0]s_axis_cw_tusersig;
  input [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  input [31:0]\m_axis_cw_tdata_reg[7] ;
  input [22:0]\m_axis_cw_tdata_reg[22] ;

  wire [22:0]\AddrVar_reg[22] ;
  wire [64:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire \FSM_sequential_data_width_64.wrreqsmsig[0]_i_1_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[0]_i_2_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[0]_i_4_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[2]_i_1_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[2]_i_2_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[2]_i_4_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_10_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_1_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_2_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_3_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_4_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_7_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig[3]_i_8_n_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[0]_2 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[2]_1 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ;
  wire \FSM_sequential_data_width_64.wrreqsmsig_reg[3]_1 ;
  wire [63:0]Q;
  wire [0:0]SR;
  wire addroffset;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire cw_full;
  wire cw_full_reg;
  wire cw_full_reg_0;
  wire \data_width_64.addroffset_reg_0 ;
  wire \data_width_64.addroffset_reg_1 ;
  wire \data_width_64.dataen_i_6_n_0 ;
  wire \data_width_64.dataen_reg_0 ;
  wire \data_width_64.dataen_reg_1 ;
  wire \data_width_64.dataen_reg_2 ;
  wire \data_width_64.datain[0]_i_1_n_0 ;
  wire \data_width_64.datain[0]_i_2_n_0 ;
  wire \data_width_64.datain[10]_i_1_n_0 ;
  wire \data_width_64.datain[10]_i_2_n_0 ;
  wire \data_width_64.datain[11]_i_1_n_0 ;
  wire \data_width_64.datain[11]_i_2_n_0 ;
  wire \data_width_64.datain[12]_i_1_n_0 ;
  wire \data_width_64.datain[12]_i_2_n_0 ;
  wire \data_width_64.datain[13]_i_1_n_0 ;
  wire \data_width_64.datain[13]_i_2_n_0 ;
  wire \data_width_64.datain[14]_i_1_n_0 ;
  wire \data_width_64.datain[14]_i_2_n_0 ;
  wire \data_width_64.datain[15]_i_1_n_0 ;
  wire \data_width_64.datain[15]_i_2_n_0 ;
  wire \data_width_64.datain[16]_i_1_n_0 ;
  wire \data_width_64.datain[16]_i_2_n_0 ;
  wire \data_width_64.datain[17]_i_1_n_0 ;
  wire \data_width_64.datain[17]_i_2_n_0 ;
  wire \data_width_64.datain[18]_i_1_n_0 ;
  wire \data_width_64.datain[18]_i_2_n_0 ;
  wire \data_width_64.datain[19]_i_1_n_0 ;
  wire \data_width_64.datain[19]_i_2_n_0 ;
  wire \data_width_64.datain[1]_i_1_n_0 ;
  wire \data_width_64.datain[1]_i_2_n_0 ;
  wire \data_width_64.datain[20]_i_1_n_0 ;
  wire \data_width_64.datain[20]_i_2_n_0 ;
  wire \data_width_64.datain[21]_i_1_n_0 ;
  wire \data_width_64.datain[21]_i_2_n_0 ;
  wire \data_width_64.datain[22]_i_1_n_0 ;
  wire \data_width_64.datain[22]_i_2_n_0 ;
  wire \data_width_64.datain[23]_i_1_n_0 ;
  wire \data_width_64.datain[23]_i_2_n_0 ;
  wire \data_width_64.datain[24]_i_1_n_0 ;
  wire \data_width_64.datain[24]_i_2_n_0 ;
  wire \data_width_64.datain[25]_i_1_n_0 ;
  wire \data_width_64.datain[25]_i_2_n_0 ;
  wire \data_width_64.datain[26]_i_1_n_0 ;
  wire \data_width_64.datain[26]_i_2_n_0 ;
  wire \data_width_64.datain[27]_i_1_n_0 ;
  wire \data_width_64.datain[27]_i_2_n_0 ;
  wire \data_width_64.datain[28]_i_1_n_0 ;
  wire \data_width_64.datain[28]_i_2_n_0 ;
  wire \data_width_64.datain[29]_i_1_n_0 ;
  wire \data_width_64.datain[29]_i_2_n_0 ;
  wire \data_width_64.datain[2]_i_1_n_0 ;
  wire \data_width_64.datain[2]_i_2_n_0 ;
  wire \data_width_64.datain[30]_i_1_n_0 ;
  wire \data_width_64.datain[30]_i_2_n_0 ;
  wire \data_width_64.datain[31]_i_1_n_0 ;
  wire \data_width_64.datain[31]_i_2_n_0 ;
  wire \data_width_64.datain[32]_i_1_n_0 ;
  wire \data_width_64.datain[32]_i_2_n_0 ;
  wire \data_width_64.datain[32]_i_3_n_0 ;
  wire \data_width_64.datain[33]_i_1_n_0 ;
  wire \data_width_64.datain[33]_i_2_n_0 ;
  wire \data_width_64.datain[33]_i_3_n_0 ;
  wire \data_width_64.datain[34]_i_1_n_0 ;
  wire \data_width_64.datain[34]_i_2_n_0 ;
  wire \data_width_64.datain[34]_i_3_n_0 ;
  wire \data_width_64.datain[35]_i_1_n_0 ;
  wire \data_width_64.datain[35]_i_2_n_0 ;
  wire \data_width_64.datain[35]_i_3_n_0 ;
  wire \data_width_64.datain[36]_i_1_n_0 ;
  wire \data_width_64.datain[36]_i_2_n_0 ;
  wire \data_width_64.datain[36]_i_3_n_0 ;
  wire \data_width_64.datain[37]_i_1_n_0 ;
  wire \data_width_64.datain[37]_i_2_n_0 ;
  wire \data_width_64.datain[37]_i_3_n_0 ;
  wire \data_width_64.datain[38]_i_1_n_0 ;
  wire \data_width_64.datain[38]_i_2_n_0 ;
  wire \data_width_64.datain[38]_i_3_n_0 ;
  wire \data_width_64.datain[39]_i_1_n_0 ;
  wire \data_width_64.datain[39]_i_2_n_0 ;
  wire \data_width_64.datain[39]_i_3_n_0 ;
  wire \data_width_64.datain[3]_i_1_n_0 ;
  wire \data_width_64.datain[3]_i_2_n_0 ;
  wire \data_width_64.datain[40]_i_1_n_0 ;
  wire \data_width_64.datain[40]_i_2_n_0 ;
  wire \data_width_64.datain[40]_i_3_n_0 ;
  wire \data_width_64.datain[41]_i_1_n_0 ;
  wire \data_width_64.datain[41]_i_2_n_0 ;
  wire \data_width_64.datain[41]_i_3_n_0 ;
  wire \data_width_64.datain[42]_i_1_n_0 ;
  wire \data_width_64.datain[42]_i_2_n_0 ;
  wire \data_width_64.datain[42]_i_3_n_0 ;
  wire \data_width_64.datain[43]_i_1_n_0 ;
  wire \data_width_64.datain[43]_i_2_n_0 ;
  wire \data_width_64.datain[43]_i_3_n_0 ;
  wire \data_width_64.datain[44]_i_1_n_0 ;
  wire \data_width_64.datain[44]_i_2_n_0 ;
  wire \data_width_64.datain[44]_i_3_n_0 ;
  wire \data_width_64.datain[45]_i_1_n_0 ;
  wire \data_width_64.datain[45]_i_2_n_0 ;
  wire \data_width_64.datain[45]_i_3_n_0 ;
  wire \data_width_64.datain[46]_i_1_n_0 ;
  wire \data_width_64.datain[46]_i_2_n_0 ;
  wire \data_width_64.datain[46]_i_3_n_0 ;
  wire \data_width_64.datain[47]_i_1_n_0 ;
  wire \data_width_64.datain[47]_i_2_n_0 ;
  wire \data_width_64.datain[47]_i_3_n_0 ;
  wire \data_width_64.datain[48]_i_1_n_0 ;
  wire \data_width_64.datain[48]_i_2_n_0 ;
  wire \data_width_64.datain[48]_i_3_n_0 ;
  wire \data_width_64.datain[49]_i_1_n_0 ;
  wire \data_width_64.datain[49]_i_2_n_0 ;
  wire \data_width_64.datain[49]_i_3_n_0 ;
  wire \data_width_64.datain[4]_i_1_n_0 ;
  wire \data_width_64.datain[4]_i_2_n_0 ;
  wire \data_width_64.datain[50]_i_1_n_0 ;
  wire \data_width_64.datain[50]_i_2_n_0 ;
  wire \data_width_64.datain[50]_i_3_n_0 ;
  wire \data_width_64.datain[51]_i_1_n_0 ;
  wire \data_width_64.datain[51]_i_2_n_0 ;
  wire \data_width_64.datain[51]_i_3_n_0 ;
  wire \data_width_64.datain[52]_i_1_n_0 ;
  wire \data_width_64.datain[52]_i_2_n_0 ;
  wire \data_width_64.datain[52]_i_3_n_0 ;
  wire \data_width_64.datain[53]_i_1_n_0 ;
  wire \data_width_64.datain[53]_i_2_n_0 ;
  wire \data_width_64.datain[53]_i_3_n_0 ;
  wire \data_width_64.datain[54]_i_1_n_0 ;
  wire \data_width_64.datain[54]_i_2_n_0 ;
  wire \data_width_64.datain[54]_i_3_n_0 ;
  wire \data_width_64.datain[55]_i_1_n_0 ;
  wire \data_width_64.datain[55]_i_2_n_0 ;
  wire \data_width_64.datain[55]_i_3_n_0 ;
  wire \data_width_64.datain[56]_i_1_n_0 ;
  wire \data_width_64.datain[56]_i_2_n_0 ;
  wire \data_width_64.datain[56]_i_3_n_0 ;
  wire \data_width_64.datain[57]_i_1_n_0 ;
  wire \data_width_64.datain[57]_i_2_n_0 ;
  wire \data_width_64.datain[57]_i_3_n_0 ;
  wire \data_width_64.datain[58]_i_1_n_0 ;
  wire \data_width_64.datain[58]_i_2_n_0 ;
  wire \data_width_64.datain[58]_i_3_n_0 ;
  wire \data_width_64.datain[59]_i_1_n_0 ;
  wire \data_width_64.datain[59]_i_2_n_0 ;
  wire \data_width_64.datain[59]_i_3_n_0 ;
  wire \data_width_64.datain[5]_i_1_n_0 ;
  wire \data_width_64.datain[5]_i_2_n_0 ;
  wire \data_width_64.datain[60]_i_1_n_0 ;
  wire \data_width_64.datain[60]_i_2_n_0 ;
  wire \data_width_64.datain[60]_i_3_n_0 ;
  wire \data_width_64.datain[61]_i_1_n_0 ;
  wire \data_width_64.datain[61]_i_2_n_0 ;
  wire \data_width_64.datain[61]_i_3_n_0 ;
  wire \data_width_64.datain[62]_i_1_n_0 ;
  wire \data_width_64.datain[62]_i_2_n_0 ;
  wire \data_width_64.datain[62]_i_3_n_0 ;
  wire \data_width_64.datain[63]_i_1_n_0 ;
  wire \data_width_64.datain[63]_i_2_n_0 ;
  wire \data_width_64.datain[63]_i_3_n_0 ;
  wire \data_width_64.datain[64]_i_1_n_0 ;
  wire \data_width_64.datain[64]_i_2_n_0 ;
  wire \data_width_64.datain[64]_i_3_n_0 ;
  wire \data_width_64.datain[6]_i_1_n_0 ;
  wire \data_width_64.datain[6]_i_2_n_0 ;
  wire \data_width_64.datain[7]_i_1_n_0 ;
  wire \data_width_64.datain[7]_i_2_n_0 ;
  wire \data_width_64.datain[8]_i_1_n_0 ;
  wire \data_width_64.datain[8]_i_2_n_0 ;
  wire \data_width_64.datain[9]_i_1_n_0 ;
  wire \data_width_64.datain[9]_i_2_n_0 ;
  wire \data_width_64.datain_reg[64]_0 ;
  wire \data_width_64.dataoffset_reg_0 ;
  wire \data_width_64.delaylast_reg_0 ;
  wire \data_width_64.delaylast_reg_1 ;
  wire [3:0]\data_width_64.m_axi_wstrb_reg[1] ;
  wire [3:0]\data_width_64.m_axi_wstrb_reg[1]_0 ;
  wire \data_width_64.padzeroes_reg_0 ;
  wire \data_width_64.padzeroes_reg_1 ;
  wire \data_width_64.padzeroes_reg_2 ;
  wire \data_width_64.padzeroes_reg_i_3_n_0 ;
  wire \data_width_64.s_axis_cw_tdatatemp[63]_i_3_n_0 ;
  wire \data_width_64.s_axis_cw_tdatatemp[63]_i_4_n_0 ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[0] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[10] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[11] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[12] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[13] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[14] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[15] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[16] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[17] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[18] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[19] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[1] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[20] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[21] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[22] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[23] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[24] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[25] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[26] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[27] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[28] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[29] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[2] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[30] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[31] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[32] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[33] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[34] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[35] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[36] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[37] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[38] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[39] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[3] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[40] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[41] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[42] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[43] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[44] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[45] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[46] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[47] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[48] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[49] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[4] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[50] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[51] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[52] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[53] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[54] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[55] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[56] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[57] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[58] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[59] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[5] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[60] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[61] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[62] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[63] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[6] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[7] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[8] ;
  wire \data_width_64.s_axis_cw_tdatatemp_reg_n_0_[9] ;
  wire \data_width_64.s_axis_cw_tlasttemp_i_4_n_0 ;
  wire \data_width_64.s_axis_cw_tlasttemp_reg_0 ;
  wire \data_width_64.s_axis_cw_treadysig_i_6_n_0 ;
  wire \data_width_64.s_axis_cw_treadysig_reg_0 ;
  wire \data_width_64.tempdatareg[31]_i_1_n_0 ;
  wire \data_width_64.tempdatareg[31]_i_4_n_0 ;
  wire \data_width_64.tlpaddrl[22]_i_1_n_0 ;
  wire \data_width_64.tlpfmtsig[0]_i_1_n_0 ;
  wire \data_width_64.wrpendingsig_reg[1][0] ;
  wire \data_width_64.wrpendingsig_reg[1][1] ;
  wire \data_width_64.wrpendingsig_reg[1][2] ;
  wire \data_width_64.wrreqpendsig[0]_i_1_n_0 ;
  wire \data_width_64.wrreqpendsig[1]_i_1_n_0 ;
  wire \data_width_64.wrreqpendsig[2]_i_1_n_0 ;
  wire \data_width_64.wrreqsetsig_reg_0 ;
  wire dataen22_out;
  wire dataen8_out;
  wire dataensig;
  wire delaylast;
  wire delaylast40_out;
  wire delaylast44_out;
  wire [0:0]\end_point.ctl_user_intr_d_reg[8] ;
  wire eqOp;
  wire [3:0]firstdwbesig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_1 ;
  wire \gaf.gaf0.ram_afull_i_reg_2 ;
  wire [3:0]lastdwbesig;
  wire [0:0]\m_axi_araddr1_reg[0] ;
  wire m_axi_awlentemp_reg_0_3_6_7_i_3_n_0;
  wire [0:0]\m_axi_awsize_reg[1] ;
  wire m_axi_awsizetemp_reg_0_3_0_2_i_2_n_0;
  wire \m_axis_cw_tdata_reg[14] ;
  wire [0:0]\m_axis_cw_tdata_reg[14]_0 ;
  wire [22:0]\m_axis_cw_tdata_reg[22] ;
  wire \m_axis_cw_tdata_reg[29] ;
  wire [31:0]\m_axis_cw_tdata_reg[7] ;
  wire m_axis_cw_tlast_reg;
  wire m_axis_cw_tlast_reg_0;
  wire m_axis_cw_tlast_reg_1;
  wire \m_axis_cw_tuser_reg[2] ;
  wire [2:0]\m_axis_cw_tuser_reg[6] ;
  wire [7:0]minusOp;
  wire neqOp0_out_0;
  wire neqOp_0;
  (* RTL_KEEP = "yes" *) wire [3:0]out;
  wire p_0_in;
  wire [0:0]p_1_in;
  wire p_1_out;
  wire p_2_in;
  wire p_49_out;
  wire p_5_out__0;
  wire padzeroes11_out;
  wire padzeroes14_out;
  wire [0:0]rdaddrsmsig_reg;
  wire rdreq_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \respmmpipeline_reg[0] ;
  wire \respmmpipeline_reg[1] ;
  wire \respmmpipeline_reg[2] ;
  wire [32:31]s_axis_cw_tdatatemp;
  wire s_axis_cw_treadysig;
  wire s_axis_cw_treadysig34_out;
  wire s_axis_cw_treadysig45_out;
  wire [1:0]s_axis_cw_tusersig;
  wire \s_axis_cw_tusersig_reg[0] ;
  wire \s_axis_cw_tusersig_reg[1] ;
  wire \s_axis_cw_tusersig_reg[2] ;
  wire sig_blk_lnk_up;
  wire sig_s_axis_cw_tlast;
  wire sig_s_axis_cw_tvalid;
  wire \splitcnt_reg[1] ;
  wire [0:0]\splitcnt_reg[1]_0 ;
  wire [31:0]tempdatareg;
  wire [31:0]tempdatareg_0;
  wire [0:0]tlpfmtsig;
  wire [9:1]tlplength;
  wire [9:0]tlplengthsig;
  wire user_lnk_up_mux_reg;
  wire user_lnk_up_mux_reg_0;
  wire user_lnk_up_mux_reg_1;
  wire wrensig0;
  wire wrensig_reg;
  wire wrensig_reg_0;
  wire wrreqpendsig;
  wire \wrreqsetcnt_reg[1] ;

  LUT6 #(
    .INIT(64'h000000004444FF4F)) 
    \FSM_sequential_data_width_64.wrreqsmsig[0]_i_1 
       (.I0(\FSM_sequential_data_width_64.wrreqsmsig[0]_i_2_n_0 ),
        .I1(\m_axis_cw_tdata_reg[14] ),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .I3(\FSM_sequential_data_width_64.wrreqsmsig[0]_i_4_n_0 ),
        .I4(out[0]),
        .I5(out[3]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1110111100000000)) 
    \FSM_sequential_data_width_64.wrreqsmsig[0]_i_2 
       (.I0(out[1]),
        .I1(out[2]),
        .I2(Q[29]),
        .I3(E),
        .I4(\wrreqsetcnt_reg[1] ),
        .I5(neqOp_0),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_data_width_64.wrreqsmsig[0]_i_4 
       (.I0(out[2]),
        .I1(sig_blk_lnk_up),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \FSM_sequential_data_width_64.wrreqsmsig[1]_i_3 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_1 ));
  LUT6 #(
    .INIT(64'h0088088800880800)) 
    \FSM_sequential_data_width_64.wrreqsmsig[1]_i_4 
       (.I0(sig_blk_lnk_up),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ),
        .I2(sig_s_axis_cw_tlast),
        .I3(out[0]),
        .I4(out[1]),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .O(\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000200)) 
    \FSM_sequential_data_width_64.wrreqsmsig[2]_i_1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(\FSM_sequential_data_width_64.wrreqsmsig[2]_i_2_n_0 ),
        .I3(neqOp_0),
        .I4(Q[14]),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig[2]_i_4_n_0 ),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_data_width_64.wrreqsmsig[2]_i_2 
       (.I0(out[2]),
        .I1(out[3]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000570000000000)) 
    \FSM_sequential_data_width_64.wrreqsmsig[2]_i_4 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(sig_s_axis_cw_tlast),
        .I3(out[2]),
        .I4(out[3]),
        .I5(sig_blk_lnk_up),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFECCFECF)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_1 
       (.I0(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_3_n_0 ),
        .I1(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_4_n_0 ),
        .I2(out[3]),
        .I3(out[2]),
        .I4(m_axis_cw_tlast_reg_0),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA8AAAAAAAAAAA)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_10 
       (.I0(out[3]),
        .I1(sig_s_axis_cw_tlast),
        .I2(cw_full),
        .I3(sig_blk_lnk_up),
        .I4(out[1]),
        .I5(out[0]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF0200000002)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_2 
       (.I0(out[1]),
        .I1(sig_blk_lnk_up),
        .I2(s_axis_cw_treadysig45_out),
        .I3(out[2]),
        .I4(out[3]),
        .I5(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_7_n_0 ),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hB8F3B8C0BBFFBBFF)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_3 
       (.I0(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_8_n_0 ),
        .I1(out[0]),
        .I2(cw_full_reg),
        .I3(out[1]),
        .I4(\wrreqsetcnt_reg[1] ),
        .I5(sig_blk_lnk_up),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAABAAAA)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_4 
       (.I0(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_10_n_0 ),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(\wrreqsetcnt_reg[1] ),
        .I5(out[0]),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h80BF)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_7 
       (.I0(\gaf.gaf0.ram_afull_i_reg ),
        .I1(out[0]),
        .I2(out[1]),
        .I3(sig_blk_lnk_up),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEE4000)) 
    \FSM_sequential_data_width_64.wrreqsmsig[3]_i_8 
       (.I0(\data_width_64.datain_reg[64]_0 ),
        .I1(sig_s_axis_cw_tlast),
        .I2(wrensig_reg_0),
        .I3(sig_s_axis_cw_tvalid),
        .I4(wrensig_reg),
        .I5(\gaf.gaf0.ram_afull_i_reg ),
        .O(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_8_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_data_width_64.wrreqsmsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_1_n_0 ),
        .D(\FSM_sequential_data_width_64.wrreqsmsig[0]_i_1_n_0 ),
        .Q(out[0]),
        .R(axi_aresetn_0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_data_width_64.wrreqsmsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[14]_0 ),
        .Q(out[1]),
        .R(axi_aresetn_0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_data_width_64.wrreqsmsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_1_n_0 ),
        .D(\FSM_sequential_data_width_64.wrreqsmsig[2]_i_1_n_0 ),
        .Q(out[2]),
        .R(axi_aresetn_0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_data_width_64.wrreqsmsig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_1_n_0 ),
        .D(\FSM_sequential_data_width_64.wrreqsmsig[3]_i_2_n_0 ),
        .Q(out[3]),
        .R(axi_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair675" *) 
  LUT2 #(
    .INIT(4'h2)) 
    cw_empty_i_3
       (.I0(wrensig_reg_0),
        .I1(\gaf.gaf0.ram_afull_i_reg ),
        .O(\m_axis_cw_tuser_reg[2] ));
  LUT6 #(
    .INIT(64'hB8FFB800B800B800)) 
    \data_width_64.addroffset_i_2 
       (.I0(\gaf.gaf0.ram_afull_i_reg ),
        .I1(out[0]),
        .I2(Q[34]),
        .I3(out[1]),
        .I4(out[2]),
        .I5(Q[2]),
        .O(addroffset));
  LUT6 #(
    .INIT(64'hBC8C8C8C8C8C8C8C)) 
    \data_width_64.addroffset_i_3 
       (.I0(dataen22_out),
        .I1(out[0]),
        .I2(out[1]),
        .I3(sig_blk_lnk_up),
        .I4(Q[34]),
        .I5(cw_full_reg),
        .O(\data_width_64.addroffset_reg_1 ));
  LUT6 #(
    .INIT(64'hAEBEBEBEBEBEBEBE)) 
    \data_width_64.addroffset_i_4 
       (.I0(out[3]),
        .I1(out[1]),
        .I2(out[2]),
        .I3(sig_blk_lnk_up),
        .I4(Q[2]),
        .I5(cw_full_reg),
        .O(\data_width_64.addroffset_reg_0 ));
  LUT6 #(
    .INIT(64'h0E0E02000E0E0000)) 
    \data_width_64.addroffset_i_5 
       (.I0(sig_s_axis_cw_tlast),
        .I1(\data_width_64.datain_reg[64]_0 ),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(sig_s_axis_cw_tvalid),
        .I4(wrensig_reg),
        .I5(wrensig_reg_0),
        .O(dataen22_out));
  FDRE \data_width_64.addroffset_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_1 ),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h1DDD00001DDDCCCC)) 
    \data_width_64.dataen_i_3 
       (.I0(dataen8_out),
        .I1(out[0]),
        .I2(cw_full_reg),
        .I3(sig_blk_lnk_up),
        .I4(out[2]),
        .I5(\m_axis_cw_tdata_reg[29] ),
        .O(\data_width_64.dataen_reg_1 ));
  LUT6 #(
    .INIT(64'h5555FF7FFFFFFF7F)) 
    \data_width_64.dataen_i_4 
       (.I0(out[2]),
        .I1(sig_blk_lnk_up),
        .I2(cw_full),
        .I3(\gaf.gaf0.ram_afull_i_reg ),
        .I4(out[0]),
        .I5(dataen22_out),
        .O(\data_width_64.dataen_reg_2 ));
  LUT5 #(
    .INIT(32'h8BFF8B00)) 
    \data_width_64.dataen_i_6 
       (.I0(\gaf.gaf0.ram_afull_i_reg ),
        .I1(out[1]),
        .I2(sig_s_axis_cw_tlast),
        .I3(out[2]),
        .I4(eqOp),
        .O(\data_width_64.dataen_i_6_n_0 ));
  FDRE \data_width_64.dataen_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_1 ),
        .Q(dataensig),
        .R(axi_aresetn_0));
  MUXF7 \data_width_64.dataen_reg_i_2 
       (.I0(m_axis_cw_tlast_reg_1),
        .I1(\data_width_64.dataen_i_6_n_0 ),
        .O(\data_width_64.dataen_reg_0 ),
        .S(out[0]));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[0]_i_1 
       (.I0(Q[2]),
        .I1(Q[56]),
        .I2(out[1]),
        .I3(\data_width_64.datain[0]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[0]_i_2 
       (.I0(tempdatareg[0]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[24]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[0] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[10]_i_1 
       (.I0(Q[2]),
        .I1(Q[50]),
        .I2(out[1]),
        .I3(\data_width_64.datain[10]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[10]_i_2 
       (.I0(tempdatareg[10]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[18]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[10] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[11]_i_1 
       (.I0(Q[2]),
        .I1(Q[51]),
        .I2(out[1]),
        .I3(\data_width_64.datain[11]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[11]_i_2 
       (.I0(tempdatareg[11]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[19]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[11] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[12]_i_1 
       (.I0(Q[2]),
        .I1(Q[52]),
        .I2(out[1]),
        .I3(\data_width_64.datain[12]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[12]_i_2 
       (.I0(tempdatareg[12]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[20]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[12] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[13]_i_1 
       (.I0(Q[2]),
        .I1(Q[53]),
        .I2(out[1]),
        .I3(\data_width_64.datain[13]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[13]_i_2 
       (.I0(tempdatareg[13]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[21]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[13] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[14]_i_1 
       (.I0(Q[2]),
        .I1(Q[54]),
        .I2(out[1]),
        .I3(\data_width_64.datain[14]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[14]_i_2 
       (.I0(tempdatareg[14]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[22]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[14] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[15]_i_1 
       (.I0(Q[2]),
        .I1(Q[55]),
        .I2(out[1]),
        .I3(\data_width_64.datain[15]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[15]_i_2 
       (.I0(tempdatareg[15]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[23]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[15] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[16]_i_1 
       (.I0(Q[2]),
        .I1(Q[40]),
        .I2(out[1]),
        .I3(\data_width_64.datain[16]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[16]_i_2 
       (.I0(tempdatareg[16]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[8]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[16] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[17]_i_1 
       (.I0(Q[2]),
        .I1(Q[41]),
        .I2(out[1]),
        .I3(\data_width_64.datain[17]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[17]_i_2 
       (.I0(tempdatareg[17]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[9]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[17] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[18]_i_1 
       (.I0(Q[2]),
        .I1(Q[42]),
        .I2(out[1]),
        .I3(\data_width_64.datain[18]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[18]_i_2 
       (.I0(tempdatareg[18]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[10]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[18] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[19]_i_1 
       (.I0(Q[2]),
        .I1(Q[43]),
        .I2(out[1]),
        .I3(\data_width_64.datain[19]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[19]_i_2 
       (.I0(tempdatareg[19]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[11]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[19] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[1]_i_1 
       (.I0(Q[2]),
        .I1(Q[57]),
        .I2(out[1]),
        .I3(\data_width_64.datain[1]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[1]_i_2 
       (.I0(tempdatareg[1]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[25]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[1] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[20]_i_1 
       (.I0(Q[2]),
        .I1(Q[44]),
        .I2(out[1]),
        .I3(\data_width_64.datain[20]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[20]_i_2 
       (.I0(tempdatareg[20]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[12]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[20] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[21]_i_1 
       (.I0(Q[2]),
        .I1(Q[45]),
        .I2(out[1]),
        .I3(\data_width_64.datain[21]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[21]_i_2 
       (.I0(tempdatareg[21]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[13]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[21] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[22]_i_1 
       (.I0(Q[2]),
        .I1(Q[46]),
        .I2(out[1]),
        .I3(\data_width_64.datain[22]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[22]_i_2 
       (.I0(tempdatareg[22]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[14]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[22] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[23]_i_1 
       (.I0(Q[2]),
        .I1(Q[47]),
        .I2(out[1]),
        .I3(\data_width_64.datain[23]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[23]_i_2 
       (.I0(tempdatareg[23]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[15]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[23] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[24]_i_1 
       (.I0(Q[2]),
        .I1(Q[32]),
        .I2(out[1]),
        .I3(\data_width_64.datain[24]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[24]_i_2 
       (.I0(tempdatareg[24]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[0]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[24] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[25]_i_1 
       (.I0(Q[2]),
        .I1(Q[33]),
        .I2(out[1]),
        .I3(\data_width_64.datain[25]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[25]_i_2 
       (.I0(tempdatareg[25]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[1]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[25] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[26]_i_1 
       (.I0(Q[2]),
        .I1(Q[34]),
        .I2(out[1]),
        .I3(\data_width_64.datain[26]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[26]_i_2 
       (.I0(tempdatareg[26]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[2]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[26] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[26]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[27]_i_1 
       (.I0(Q[2]),
        .I1(Q[35]),
        .I2(out[1]),
        .I3(\data_width_64.datain[27]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[27]_i_2 
       (.I0(tempdatareg[27]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[3]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[27] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[28]_i_1 
       (.I0(Q[2]),
        .I1(Q[36]),
        .I2(out[1]),
        .I3(\data_width_64.datain[28]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[28]_i_2 
       (.I0(tempdatareg[28]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[4]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[28] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[28]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[29]_i_1 
       (.I0(Q[2]),
        .I1(Q[37]),
        .I2(out[1]),
        .I3(\data_width_64.datain[29]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[29]_i_2 
       (.I0(tempdatareg[29]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[5]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[29] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[2]_i_1 
       (.I0(Q[2]),
        .I1(Q[58]),
        .I2(out[1]),
        .I3(\data_width_64.datain[2]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[2]_i_2 
       (.I0(tempdatareg[2]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[26]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[2] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[30]_i_1 
       (.I0(Q[2]),
        .I1(Q[38]),
        .I2(out[1]),
        .I3(\data_width_64.datain[30]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[30]_i_2 
       (.I0(tempdatareg[30]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[6]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[30] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[30]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[31]_i_1 
       (.I0(Q[2]),
        .I1(Q[39]),
        .I2(out[1]),
        .I3(\data_width_64.datain[31]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[31]_i_2 
       (.I0(tempdatareg[31]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[7]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[31] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[32]_i_1 
       (.I0(Q[56]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[32]_i_2_n_0 ),
        .I4(\data_width_64.datain[32]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[32]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[32]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[56]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[24]),
        .O(\data_width_64.datain[32]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[32]_i_3 
       (.I0(Q[24]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[32] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[0]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[32]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[33]_i_1 
       (.I0(Q[57]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[33]_i_2_n_0 ),
        .I4(\data_width_64.datain[33]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[33]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[33]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[57]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[25]),
        .O(\data_width_64.datain[33]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[33]_i_3 
       (.I0(Q[25]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[33] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[1]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[33]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[34]_i_1 
       (.I0(Q[58]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[34]_i_2_n_0 ),
        .I4(\data_width_64.datain[34]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[34]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[34]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[58]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[26]),
        .O(\data_width_64.datain[34]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[34]_i_3 
       (.I0(Q[26]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[34] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[2]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[34]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[35]_i_1 
       (.I0(Q[59]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[35]_i_2_n_0 ),
        .I4(\data_width_64.datain[35]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[35]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[35]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[59]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[27]),
        .O(\data_width_64.datain[35]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[35]_i_3 
       (.I0(Q[27]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[35] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[3]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[35]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[36]_i_1 
       (.I0(Q[60]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[36]_i_2_n_0 ),
        .I4(\data_width_64.datain[36]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[36]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[36]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[60]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[28]),
        .O(\data_width_64.datain[36]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[36]_i_3 
       (.I0(Q[28]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[36] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[4]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[36]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[37]_i_1 
       (.I0(Q[61]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[37]_i_2_n_0 ),
        .I4(\data_width_64.datain[37]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[37]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[37]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[61]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[29]),
        .O(\data_width_64.datain[37]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[37]_i_3 
       (.I0(Q[29]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[37] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[5]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[37]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[38]_i_1 
       (.I0(Q[62]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[38]_i_2_n_0 ),
        .I4(\data_width_64.datain[38]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[38]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[38]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[62]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[30]),
        .O(\data_width_64.datain[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[38]_i_3 
       (.I0(Q[30]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[38] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[6]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[38]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[39]_i_1 
       (.I0(Q[63]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[39]_i_2_n_0 ),
        .I4(\data_width_64.datain[39]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[39]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[39]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[63]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[31]),
        .O(\data_width_64.datain[39]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[39]_i_3 
       (.I0(Q[31]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[39] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[7]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[39]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[59]),
        .I2(out[1]),
        .I3(\data_width_64.datain[3]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[3]_i_2 
       (.I0(tempdatareg[3]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[27]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[3] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[40]_i_1 
       (.I0(Q[48]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[40]_i_2_n_0 ),
        .I4(\data_width_64.datain[40]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[40]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[40]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[48]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[16]),
        .O(\data_width_64.datain[40]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[40]_i_3 
       (.I0(Q[16]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[40] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[8]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[40]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[41]_i_1 
       (.I0(Q[49]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[41]_i_2_n_0 ),
        .I4(\data_width_64.datain[41]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[41]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[41]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[49]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[17]),
        .O(\data_width_64.datain[41]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[41]_i_3 
       (.I0(Q[17]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[41] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[9]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[41]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[42]_i_1 
       (.I0(Q[50]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[42]_i_2_n_0 ),
        .I4(\data_width_64.datain[42]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[42]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[42]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[50]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[18]),
        .O(\data_width_64.datain[42]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[42]_i_3 
       (.I0(Q[18]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[42] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[10]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[42]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[43]_i_1 
       (.I0(Q[51]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[43]_i_2_n_0 ),
        .I4(\data_width_64.datain[43]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[43]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[43]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[51]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[19]),
        .O(\data_width_64.datain[43]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[43]_i_3 
       (.I0(Q[19]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[43] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[11]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[43]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[44]_i_1 
       (.I0(Q[52]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[44]_i_2_n_0 ),
        .I4(\data_width_64.datain[44]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[44]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[44]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[52]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[20]),
        .O(\data_width_64.datain[44]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[44]_i_3 
       (.I0(Q[20]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[44] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[12]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[44]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[45]_i_1 
       (.I0(Q[53]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[45]_i_2_n_0 ),
        .I4(\data_width_64.datain[45]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[45]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[45]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[53]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[21]),
        .O(\data_width_64.datain[45]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[45]_i_3 
       (.I0(Q[21]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[45] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[13]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[45]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[46]_i_1 
       (.I0(Q[54]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[46]_i_2_n_0 ),
        .I4(\data_width_64.datain[46]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[46]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[46]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[54]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[22]),
        .O(\data_width_64.datain[46]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[46]_i_3 
       (.I0(Q[22]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[46] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[14]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[46]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[47]_i_1 
       (.I0(Q[55]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[47]_i_2_n_0 ),
        .I4(\data_width_64.datain[47]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[47]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[47]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[55]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[23]),
        .O(\data_width_64.datain[47]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[47]_i_3 
       (.I0(Q[23]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[47] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[15]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[47]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[48]_i_1 
       (.I0(Q[40]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[48]_i_2_n_0 ),
        .I4(\data_width_64.datain[48]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[48]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[48]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[40]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[8]),
        .O(\data_width_64.datain[48]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[48]_i_3 
       (.I0(Q[8]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[48] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[16]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[48]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[49]_i_1 
       (.I0(Q[41]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[49]_i_2_n_0 ),
        .I4(\data_width_64.datain[49]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[49]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[49]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[41]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[9]),
        .O(\data_width_64.datain[49]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[49]_i_3 
       (.I0(Q[9]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[49] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[17]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[49]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[60]),
        .I2(out[1]),
        .I3(\data_width_64.datain[4]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[4]_i_2 
       (.I0(tempdatareg[4]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[28]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[4] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[50]_i_1 
       (.I0(Q[42]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[50]_i_2_n_0 ),
        .I4(\data_width_64.datain[50]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[50]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[50]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[42]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[10]),
        .O(\data_width_64.datain[50]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[50]_i_3 
       (.I0(Q[10]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[50] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[18]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[50]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[51]_i_1 
       (.I0(Q[43]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[51]_i_2_n_0 ),
        .I4(\data_width_64.datain[51]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[51]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[51]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[43]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[11]),
        .O(\data_width_64.datain[51]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[51]_i_3 
       (.I0(Q[11]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[51] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[19]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[51]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[52]_i_1 
       (.I0(Q[44]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[52]_i_2_n_0 ),
        .I4(\data_width_64.datain[52]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[52]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[52]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[44]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[12]),
        .O(\data_width_64.datain[52]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[52]_i_3 
       (.I0(Q[12]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[52] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[20]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[52]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[53]_i_1 
       (.I0(Q[45]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[53]_i_2_n_0 ),
        .I4(\data_width_64.datain[53]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[53]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[53]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[45]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[13]),
        .O(\data_width_64.datain[53]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[53]_i_3 
       (.I0(Q[13]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[53] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[21]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[53]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[54]_i_1 
       (.I0(Q[46]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[54]_i_2_n_0 ),
        .I4(\data_width_64.datain[54]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[54]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[54]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[46]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[14]),
        .O(\data_width_64.datain[54]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[54]_i_3 
       (.I0(Q[14]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[54] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[22]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[54]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[55]_i_1 
       (.I0(Q[47]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[55]_i_2_n_0 ),
        .I4(\data_width_64.datain[55]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[55]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[55]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[47]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[15]),
        .O(\data_width_64.datain[55]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[55]_i_3 
       (.I0(Q[15]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[55] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[23]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[55]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[56]_i_1 
       (.I0(Q[32]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[56]_i_2_n_0 ),
        .I4(\data_width_64.datain[56]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[56]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[56]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[32]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[0]),
        .O(\data_width_64.datain[56]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[56]_i_3 
       (.I0(Q[0]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[56] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[24]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[56]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[57]_i_1 
       (.I0(Q[33]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[57]_i_2_n_0 ),
        .I4(\data_width_64.datain[57]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[57]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[57]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[33]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[1]),
        .O(\data_width_64.datain[57]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[57]_i_3 
       (.I0(Q[1]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[57] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[25]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[57]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[58]_i_1 
       (.I0(Q[34]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[58]_i_2_n_0 ),
        .I4(\data_width_64.datain[58]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[58]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[58]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[34]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[2]),
        .O(\data_width_64.datain[58]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[58]_i_3 
       (.I0(Q[2]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[58] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[26]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[58]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[59]_i_1 
       (.I0(Q[35]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[59]_i_2_n_0 ),
        .I4(\data_width_64.datain[59]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[59]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[59]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[35]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[3]),
        .O(\data_width_64.datain[59]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[59]_i_3 
       (.I0(Q[3]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[59] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[27]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[59]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[5]_i_1 
       (.I0(Q[2]),
        .I1(Q[61]),
        .I2(out[1]),
        .I3(\data_width_64.datain[5]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[5]_i_2 
       (.I0(tempdatareg[5]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[29]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[5] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[60]_i_1 
       (.I0(Q[36]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[60]_i_2_n_0 ),
        .I4(\data_width_64.datain[60]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[60]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[60]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[36]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[4]),
        .O(\data_width_64.datain[60]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[60]_i_3 
       (.I0(Q[4]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[60] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[28]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[60]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[61]_i_1 
       (.I0(Q[37]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[61]_i_2_n_0 ),
        .I4(\data_width_64.datain[61]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[61]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[61]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[37]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[5]),
        .O(\data_width_64.datain[61]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[61]_i_3 
       (.I0(Q[5]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[61] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[29]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[61]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[62]_i_1 
       (.I0(Q[38]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[62]_i_2_n_0 ),
        .I4(\data_width_64.datain[62]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[62]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[62]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[38]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[6]),
        .O(\data_width_64.datain[62]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[62]_i_3 
       (.I0(Q[6]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[62] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[30]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[62]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08F8F8F800000000)) 
    \data_width_64.datain[63]_i_1 
       (.I0(Q[39]),
        .I1(Q[2]),
        .I2(out[1]),
        .I3(\data_width_64.datain[63]_i_2_n_0 ),
        .I4(\data_width_64.datain[63]_i_3_n_0 ),
        .I5(out[0]),
        .O(\data_width_64.datain[63]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \data_width_64.datain[63]_i_2 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I1(Q[39]),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I3(Q[7]),
        .O(\data_width_64.datain[63]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h111DDD1DFFFFFFFF)) 
    \data_width_64.datain[63]_i_3 
       (.I0(Q[7]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[63] ),
        .I3(\data_width_64.padzeroes_reg_0 ),
        .I4(tempdatareg[31]),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .O(\data_width_64.datain[63]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h50000011)) 
    \data_width_64.datain[64]_i_1 
       (.I0(out[3]),
        .I1(out[1]),
        .I2(\data_width_64.datain[64]_i_3_n_0 ),
        .I3(out[2]),
        .I4(out[0]),
        .O(\data_width_64.datain[64]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8A80AAAA)) 
    \data_width_64.datain[64]_i_2 
       (.I0(out[0]),
        .I1(wrensig_reg),
        .I2(\data_width_64.datain_reg[64]_0 ),
        .I3(sig_s_axis_cw_tlast),
        .I4(out[1]),
        .O(\data_width_64.datain[64]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0B08080808080808)) 
    \data_width_64.datain[64]_i_3 
       (.I0(\data_width_64.s_axis_cw_tdatatemp[63]_i_4_n_0 ),
        .I1(out[1]),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(cw_full),
        .I4(sig_blk_lnk_up),
        .I5(sig_s_axis_cw_tlast),
        .O(\data_width_64.datain[64]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[6]_i_1 
       (.I0(Q[2]),
        .I1(Q[62]),
        .I2(out[1]),
        .I3(\data_width_64.datain[6]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[6]_i_2 
       (.I0(tempdatareg[6]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[30]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[6] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[7]_i_1 
       (.I0(Q[2]),
        .I1(Q[63]),
        .I2(out[1]),
        .I3(\data_width_64.datain[7]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[7]_i_2 
       (.I0(tempdatareg[7]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[31]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[7] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[8]_i_1 
       (.I0(Q[2]),
        .I1(Q[48]),
        .I2(out[1]),
        .I3(\data_width_64.datain[8]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[8]_i_2 
       (.I0(tempdatareg[8]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[16]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[8] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hF4040000)) 
    \data_width_64.datain[9]_i_1 
       (.I0(Q[2]),
        .I1(Q[49]),
        .I2(out[1]),
        .I3(\data_width_64.datain[9]_i_2_n_0 ),
        .I4(out[0]),
        .O(\data_width_64.datain[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00B8B8B8B8)) 
    \data_width_64.datain[9]_i_2 
       (.I0(tempdatareg[9]),
        .I1(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I2(Q[17]),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[9] ),
        .I4(\data_width_64.padzeroes_reg_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .O(\data_width_64.datain[9]_i_2_n_0 ));
  FDRE \data_width_64.datain_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[0]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[10]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [10]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[11]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [11]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[12]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [12]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[13]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [13]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[14]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [14]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[15]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [15]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[16]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [16]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[17]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [17]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[18]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [18]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[19]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [19]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[1]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[20]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [20]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[21]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [21]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[22]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [22]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[23]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [23]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[24]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [24]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[25]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [25]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[26]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [26]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[27]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [27]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[28]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [28]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[29]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [29]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[2]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[30]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [30]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[31]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [31]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[32]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [32]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[33]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [33]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[34]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [34]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[35]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [35]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[36]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [36]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[37]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [37]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[38]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [38]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[39]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [39]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[3]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [3]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[40]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [40]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[41]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [41]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[42]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [42]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[43]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [43]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[44]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [44]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[45]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [45]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[46]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [46]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[47]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [47]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[48]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [48]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[49]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [49]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[4]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [4]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[50]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [50]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[51]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [51]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[52]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [52]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[53]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [53]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[54]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [54]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[55]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [55]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[56]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [56]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[57]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [57]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[58]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [58]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[59]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [59]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[5]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [5]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[60]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [60]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[61]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [61]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[62]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [62]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[63]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [63]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[64] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[64]_i_2_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [64]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[6]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [6]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[7]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [7]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[8]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [8]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.datain_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.datain[64]_i_1_n_0 ),
        .D(\data_width_64.datain[9]_i_1_n_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram [9]),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h5404000000000505)) 
    \data_width_64.dataoffset_i_2 
       (.I0(out[3]),
        .I1(cw_full_reg_0),
        .I2(out[1]),
        .I3(dataen22_out),
        .I4(out[2]),
        .I5(out[0]),
        .O(\data_width_64.dataoffset_reg_0 ));
  FDRE \data_width_64.dataoffset_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[1]_2 ),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .R(axi_aresetn_0));
  LUT5 #(
    .INIT(32'hB8B8B888)) 
    \data_width_64.delaylast_i_2 
       (.I0(\gaf.gaf0.ram_afull_i_reg_2 ),
        .I1(out[1]),
        .I2(out[2]),
        .I3(Q[2]),
        .I4(\m_axi_awsize_reg[1] ),
        .O(delaylast));
  LUT6 #(
    .INIT(64'h0000000201010101)) 
    \data_width_64.delaylast_i_3 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(\m_axi_awsize_reg[1] ),
        .I4(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I5(out[2]),
        .O(\data_width_64.delaylast_reg_1 ));
  LUT3 #(
    .INIT(8'h20)) 
    \data_width_64.delaylast_i_8 
       (.I0(\data_width_64.datain_reg[64]_0 ),
        .I1(\gaf.gaf0.ram_afull_i_reg ),
        .I2(wrensig_reg),
        .O(delaylast44_out));
  FDRE \data_width_64.delaylast_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_1 ),
        .Q(\data_width_64.datain_reg[64]_0 ),
        .R(axi_aresetn_0));
  MUXF7 \data_width_64.delaylast_reg_i_4 
       (.I0(delaylast40_out),
        .I1(delaylast44_out),
        .O(\data_width_64.delaylast_reg_0 ),
        .S(out[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.firstdwbesig[0]_i_1 
       (.I0(out[0]),
        .I1(Q[32]),
        .O(firstdwbesig[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.firstdwbesig[1]_i_1 
       (.I0(out[0]),
        .I1(Q[33]),
        .O(firstdwbesig[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.firstdwbesig[2]_i_1 
       (.I0(out[0]),
        .I1(Q[34]),
        .O(firstdwbesig[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.firstdwbesig[3]_i_1 
       (.I0(out[0]),
        .I1(Q[35]),
        .O(firstdwbesig[3]));
  FDRE \data_width_64.firstdwbesig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(firstdwbesig[0]),
        .Q(\data_width_64.m_axi_wstrb_reg[1] [0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.firstdwbesig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(firstdwbesig[1]),
        .Q(\data_width_64.m_axi_wstrb_reg[1] [1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.firstdwbesig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(firstdwbesig[2]),
        .Q(\data_width_64.m_axi_wstrb_reg[1] [2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.firstdwbesig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(firstdwbesig[3]),
        .Q(\data_width_64.m_axi_wstrb_reg[1] [3]),
        .R(axi_aresetn_0));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.lastdwbesig[0]_i_1 
       (.I0(out[0]),
        .I1(Q[36]),
        .O(lastdwbesig[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.lastdwbesig[1]_i_1 
       (.I0(out[0]),
        .I1(Q[37]),
        .O(lastdwbesig[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.lastdwbesig[2]_i_1 
       (.I0(out[0]),
        .I1(Q[38]),
        .O(lastdwbesig[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.lastdwbesig[3]_i_1 
       (.I0(out[0]),
        .I1(Q[39]),
        .O(lastdwbesig[3]));
  FDRE \data_width_64.lastdwbesig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(lastdwbesig[0]),
        .Q(\data_width_64.m_axi_wstrb_reg[1]_0 [0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.lastdwbesig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(lastdwbesig[1]),
        .Q(\data_width_64.m_axi_wstrb_reg[1]_0 [1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.lastdwbesig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(lastdwbesig[2]),
        .Q(\data_width_64.m_axi_wstrb_reg[1]_0 [2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.lastdwbesig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(lastdwbesig[3]),
        .Q(\data_width_64.m_axi_wstrb_reg[1]_0 [3]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.master_int_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[3]_0 ),
        .Q(\end_point.ctl_user_intr_d_reg[8] ),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h00F4000300040003)) 
    \data_width_64.padzeroes_i_2 
       (.I0(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I1(out[1]),
        .I2(out[0]),
        .I3(out[3]),
        .I4(out[2]),
        .I5(\data_width_64.padzeroes_reg_i_3_n_0 ),
        .O(\data_width_64.padzeroes_reg_1 ));
  LUT6 #(
    .INIT(64'h2220220000000000)) 
    \data_width_64.padzeroes_i_5 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I1(\gaf.gaf0.ram_afull_i_reg ),
        .I2(sig_s_axis_cw_tvalid),
        .I3(wrensig_reg),
        .I4(wrensig_reg_0),
        .I5(\data_width_64.padzeroes_reg_0 ),
        .O(padzeroes14_out));
  FDRE \data_width_64.padzeroes_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.padzeroes_reg_2 ),
        .Q(\data_width_64.padzeroes_reg_0 ),
        .R(axi_aresetn_0));
  MUXF7 \data_width_64.padzeroes_reg_i_3 
       (.I0(padzeroes11_out),
        .I1(padzeroes14_out),
        .O(\data_width_64.padzeroes_reg_i_3_n_0 ),
        .S(out[1]));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \data_width_64.s_axis_cw_tdatatemp[31]_i_1 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ),
        .I1(\data_width_64.s_axis_cw_tdatatemp[63]_i_3_n_0 ),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(p_5_out__0),
        .I4(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I5(p_1_out),
        .O(s_axis_cw_tdatatemp[31]));
  (* SOFT_HLUTNM = "soft_lutpair674" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \data_width_64.s_axis_cw_tdatatemp[31]_i_3 
       (.I0(wrensig_reg_0),
        .I1(wrensig_reg),
        .O(p_5_out__0));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \data_width_64.s_axis_cw_tdatatemp[63]_i_1 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ),
        .I1(\data_width_64.s_axis_cw_tdatatemp[63]_i_3_n_0 ),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I4(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I5(\data_width_64.s_axis_cw_tdatatemp[63]_i_4_n_0 ),
        .O(s_axis_cw_tdatatemp[32]));
  LUT2 #(
    .INIT(4'h2)) 
    \data_width_64.s_axis_cw_tdatatemp[63]_i_2 
       (.I0(out[2]),
        .I1(out[3]),
        .O(\data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.s_axis_cw_tdatatemp[63]_i_3 
       (.I0(out[0]),
        .I1(out[1]),
        .O(\data_width_64.s_axis_cw_tdatatemp[63]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair674" *) 
  LUT4 #(
    .INIT(16'hECCC)) 
    \data_width_64.s_axis_cw_tdatatemp[63]_i_4 
       (.I0(wrensig_reg_0),
        .I1(wrensig_reg),
        .I2(sig_blk_lnk_up),
        .I3(cw_full),
        .O(\data_width_64.s_axis_cw_tdatatemp[63]_i_4_n_0 ));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [0]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[0] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [10]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[10] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [11]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[11] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [12]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[12] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [13]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[13] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [14]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[14] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [15]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[15] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [16]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[16] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [17]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[17] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [18]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[18] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [19]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[19] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [1]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[1] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [20]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[20] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [21]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[21] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [22]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[22] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [23]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[23] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [24]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[24] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [25]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[25] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [26]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[26] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [27]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[27] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [28]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[28] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [29]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[29] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [2]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[2] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [30]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[30] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [31]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[31] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[56]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[32] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[57]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[33] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[58]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[34] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[59]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[35] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[60]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[36] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[61]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[37] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[62]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[38] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[63]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[39] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [3]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[3] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[48]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[40] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[49]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[41] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[50]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[42] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[51]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[43] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[52]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[44] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[53]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[45] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[54]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[46] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[55]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[47] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[40]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[48] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[41]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[49] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [4]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[4] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[42]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[50] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[43]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[51] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[44]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[52] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[45]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[53] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[46]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[54] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[47]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[55] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[32]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[56] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[33]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[57] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[34]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[58] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[35]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[59] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [5]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[5] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[36]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[60] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[37]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[61] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[38]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[62] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[32]),
        .D(Q[39]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[63] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [6]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[6] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [7]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[7] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [8]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[8] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.s_axis_cw_tdatatemp_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(s_axis_cw_tdatatemp[31]),
        .D(\m_axis_cw_tdata_reg[7] [9]),
        .Q(\data_width_64.s_axis_cw_tdatatemp_reg_n_0_[9] ),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h00000000FDFFFFFF)) 
    \data_width_64.s_axis_cw_tlasttemp_i_2 
       (.I0(out[2]),
        .I1(out[3]),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(\data_width_64.datain_reg[64]_0 ),
        .I4(user_lnk_up_mux_reg_0),
        .I5(\data_width_64.s_axis_cw_tlasttemp_i_4_n_0 ),
        .O(\data_width_64.s_axis_cw_tlasttemp_reg_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \data_width_64.s_axis_cw_tlasttemp_i_4 
       (.I0(out[3]),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .O(\data_width_64.s_axis_cw_tlasttemp_i_4_n_0 ));
  FDRE \data_width_64.s_axis_cw_tlasttemp_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(m_axis_cw_tlast_reg),
        .Q(wrensig_reg),
        .R(axi_aresetn_0));
  LUT5 #(
    .INIT(32'h2E2EEE2E)) 
    \data_width_64.s_axis_cw_treadysig_i_2 
       (.I0(user_lnk_up_mux_reg),
        .I1(out[0]),
        .I2(\data_width_64.s_axis_cw_treadysig_i_6_n_0 ),
        .I3(Q[14]),
        .I4(out[1]),
        .O(s_axis_cw_treadysig));
  LUT6 #(
    .INIT(64'hEE00EE00C0FFC000)) 
    \data_width_64.s_axis_cw_treadysig_i_4 
       (.I0(wrensig_reg),
        .I1(sig_s_axis_cw_tvalid),
        .I2(sig_s_axis_cw_tlast),
        .I3(out[1]),
        .I4(s_axis_cw_treadysig34_out),
        .I5(out[2]),
        .O(\data_width_64.s_axis_cw_treadysig_reg_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFDDF555)) 
    \data_width_64.s_axis_cw_treadysig_i_6 
       (.I0(out[2]),
        .I1(wrensig_reg_0),
        .I2(\data_width_64.datain_reg[64]_0 ),
        .I3(wrensig_reg),
        .I4(sig_s_axis_cw_tlast),
        .I5(\gaf.gaf0.ram_afull_i_reg ),
        .O(\data_width_64.s_axis_cw_treadysig_i_6_n_0 ));
  FDRE \data_width_64.s_axis_cw_treadysig_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_2 ),
        .Q(wrensig_reg_0),
        .R(axi_aresetn_0));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[0]_i_1 
       (.I0(out[2]),
        .I1(Q[56]),
        .O(tempdatareg_0[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[10]_i_1 
       (.I0(out[2]),
        .I1(Q[50]),
        .O(tempdatareg_0[10]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[11]_i_1 
       (.I0(out[2]),
        .I1(Q[51]),
        .O(tempdatareg_0[11]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[12]_i_1 
       (.I0(out[2]),
        .I1(Q[52]),
        .O(tempdatareg_0[12]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[13]_i_1 
       (.I0(out[2]),
        .I1(Q[53]),
        .O(tempdatareg_0[13]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[14]_i_1 
       (.I0(out[2]),
        .I1(Q[54]),
        .O(tempdatareg_0[14]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[15]_i_1 
       (.I0(out[2]),
        .I1(Q[55]),
        .O(tempdatareg_0[15]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[16]_i_1 
       (.I0(out[2]),
        .I1(Q[40]),
        .O(tempdatareg_0[16]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[17]_i_1 
       (.I0(out[2]),
        .I1(Q[41]),
        .O(tempdatareg_0[17]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[18]_i_1 
       (.I0(out[2]),
        .I1(Q[42]),
        .O(tempdatareg_0[18]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[19]_i_1 
       (.I0(out[2]),
        .I1(Q[43]),
        .O(tempdatareg_0[19]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[1]_i_1 
       (.I0(out[2]),
        .I1(Q[57]),
        .O(tempdatareg_0[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[20]_i_1 
       (.I0(out[2]),
        .I1(Q[44]),
        .O(tempdatareg_0[20]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[21]_i_1 
       (.I0(out[2]),
        .I1(Q[45]),
        .O(tempdatareg_0[21]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[22]_i_1 
       (.I0(out[2]),
        .I1(Q[46]),
        .O(tempdatareg_0[22]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[23]_i_1 
       (.I0(out[2]),
        .I1(Q[47]),
        .O(tempdatareg_0[23]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[24]_i_1 
       (.I0(out[2]),
        .I1(Q[32]),
        .O(tempdatareg_0[24]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[25]_i_1 
       (.I0(out[2]),
        .I1(Q[33]),
        .O(tempdatareg_0[25]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[26]_i_1 
       (.I0(out[2]),
        .I1(Q[34]),
        .O(tempdatareg_0[26]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[27]_i_1 
       (.I0(out[2]),
        .I1(Q[35]),
        .O(tempdatareg_0[27]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[28]_i_1 
       (.I0(out[2]),
        .I1(Q[36]),
        .O(tempdatareg_0[28]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[29]_i_1 
       (.I0(out[2]),
        .I1(Q[37]),
        .O(tempdatareg_0[29]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[2]_i_1 
       (.I0(out[2]),
        .I1(Q[58]),
        .O(tempdatareg_0[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[30]_i_1 
       (.I0(out[2]),
        .I1(Q[38]),
        .O(tempdatareg_0[30]));
  LUT6 #(
    .INIT(64'h5404000000000505)) 
    \data_width_64.tempdatareg[31]_i_1 
       (.I0(out[3]),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .I2(out[1]),
        .I3(\data_width_64.tempdatareg[31]_i_4_n_0 ),
        .I4(out[2]),
        .I5(out[0]),
        .O(\data_width_64.tempdatareg[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[31]_i_2 
       (.I0(out[2]),
        .I1(Q[39]),
        .O(tempdatareg_0[31]));
  LUT6 #(
    .INIT(64'h1110000010100000)) 
    \data_width_64.tempdatareg[31]_i_4 
       (.I0(\data_width_64.s_axis_cw_tdatatemp_reg[8]_0 ),
        .I1(\gaf.gaf0.ram_afull_i_reg ),
        .I2(wrensig_reg),
        .I3(sig_s_axis_cw_tvalid),
        .I4(\data_width_64.s_axis_cw_tdatatemp_reg[33]_0 ),
        .I5(wrensig_reg_0),
        .O(\data_width_64.tempdatareg[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[3]_i_1 
       (.I0(out[2]),
        .I1(Q[59]),
        .O(tempdatareg_0[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[4]_i_1 
       (.I0(out[2]),
        .I1(Q[60]),
        .O(tempdatareg_0[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[5]_i_1 
       (.I0(out[2]),
        .I1(Q[61]),
        .O(tempdatareg_0[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[6]_i_1 
       (.I0(out[2]),
        .I1(Q[62]),
        .O(tempdatareg_0[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[7]_i_1 
       (.I0(out[2]),
        .I1(Q[63]),
        .O(tempdatareg_0[7]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[8]_i_1 
       (.I0(out[2]),
        .I1(Q[48]),
        .O(tempdatareg_0[8]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tempdatareg[9]_i_1 
       (.I0(out[2]),
        .I1(Q[49]),
        .O(tempdatareg_0[9]));
  FDRE \data_width_64.tempdatareg_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[0]),
        .Q(tempdatareg[0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[10]),
        .Q(tempdatareg[10]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[11]),
        .Q(tempdatareg[11]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[12]),
        .Q(tempdatareg[12]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[13]),
        .Q(tempdatareg[13]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[14]),
        .Q(tempdatareg[14]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[15]),
        .Q(tempdatareg[15]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[16]),
        .Q(tempdatareg[16]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[17]),
        .Q(tempdatareg[17]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[18]),
        .Q(tempdatareg[18]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[19]),
        .Q(tempdatareg[19]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[1]),
        .Q(tempdatareg[1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[20]),
        .Q(tempdatareg[20]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[21]),
        .Q(tempdatareg[21]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[22]),
        .Q(tempdatareg[22]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[23]),
        .Q(tempdatareg[23]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[24]),
        .Q(tempdatareg[24]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[25]),
        .Q(tempdatareg[25]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[26]),
        .Q(tempdatareg[26]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[27]),
        .Q(tempdatareg[27]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[28]),
        .Q(tempdatareg[28]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[29]),
        .Q(tempdatareg[29]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[2]),
        .Q(tempdatareg[2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[30]),
        .Q(tempdatareg[30]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[31]),
        .Q(tempdatareg[31]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[3]),
        .Q(tempdatareg[3]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[4]),
        .Q(tempdatareg[4]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[5]),
        .Q(tempdatareg[5]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[6]),
        .Q(tempdatareg[6]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[7]),
        .Q(tempdatareg[7]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[8]),
        .Q(tempdatareg[8]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tempdatareg_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tempdatareg[31]_i_1_n_0 ),
        .D(tempdatareg_0[9]),
        .Q(tempdatareg[9]),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h000008000800000F)) 
    \data_width_64.tlpaddrl[22]_i_1 
       (.I0(cw_full_reg),
        .I1(sig_blk_lnk_up),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(out[1]),
        .O(\data_width_64.tlpaddrl[22]_i_1_n_0 ));
  FDRE \data_width_64.tlpaddrl_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [0]),
        .Q(\AddrVar_reg[22] [0]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [10]),
        .Q(\AddrVar_reg[22] [10]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [11]),
        .Q(\AddrVar_reg[22] [11]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [12]),
        .Q(\AddrVar_reg[22] [12]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [13]),
        .Q(\AddrVar_reg[22] [13]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [14]),
        .Q(\AddrVar_reg[22] [14]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [15]),
        .Q(\AddrVar_reg[22] [15]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [16]),
        .Q(\AddrVar_reg[22] [16]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [17]),
        .Q(\AddrVar_reg[22] [17]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [18]),
        .Q(\AddrVar_reg[22] [18]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [19]),
        .Q(\AddrVar_reg[22] [19]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [1]),
        .Q(\AddrVar_reg[22] [1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [20]),
        .Q(\AddrVar_reg[22] [20]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [21]),
        .Q(\AddrVar_reg[22] [21]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [22]),
        .Q(\AddrVar_reg[22] [22]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [2]),
        .Q(\AddrVar_reg[22] [2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [3]),
        .Q(\AddrVar_reg[22] [3]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [4]),
        .Q(\AddrVar_reg[22] [4]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [5]),
        .Q(\AddrVar_reg[22] [5]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [6]),
        .Q(\AddrVar_reg[22] [6]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [7]),
        .Q(\AddrVar_reg[22] [7]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [8]),
        .Q(\AddrVar_reg[22] [8]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlpaddrl_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpaddrl[22]_i_1_n_0 ),
        .D(\m_axis_cw_tdata_reg[22] [9]),
        .Q(\AddrVar_reg[22] [9]),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h0003000100010001)) 
    \data_width_64.tlpfmtsig[0]_i_1 
       (.I0(out[0]),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(p_49_out),
        .I5(user_lnk_up_mux_reg_1),
        .O(\data_width_64.tlpfmtsig[0]_i_1_n_0 ));
  FDRE \data_width_64.tlpfmtsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlpfmtsig),
        .Q(\FSM_sequential_data_width_64.wrreqsmsig_reg[0]_0 ),
        .R(axi_aresetn_0));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[0]_i_1 
       (.I0(out[0]),
        .I1(Q[0]),
        .O(tlplengthsig[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[1]_i_1 
       (.I0(out[0]),
        .I1(Q[1]),
        .O(tlplengthsig[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[2]_i_1 
       (.I0(out[0]),
        .I1(Q[2]),
        .O(tlplengthsig[2]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[3]_i_1 
       (.I0(out[0]),
        .I1(Q[3]),
        .O(tlplengthsig[3]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[4]_i_1 
       (.I0(out[0]),
        .I1(Q[4]),
        .O(tlplengthsig[4]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[5]_i_1 
       (.I0(out[0]),
        .I1(Q[5]),
        .O(tlplengthsig[5]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[6]_i_1 
       (.I0(out[0]),
        .I1(Q[6]),
        .O(tlplengthsig[6]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[7]_i_1 
       (.I0(out[0]),
        .I1(Q[7]),
        .O(tlplengthsig[7]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[8]_i_1 
       (.I0(out[0]),
        .I1(Q[8]),
        .O(tlplengthsig[8]));
  LUT2 #(
    .INIT(4'h8)) 
    \data_width_64.tlplengthsig[9]_i_1 
       (.I0(out[0]),
        .I1(Q[9]),
        .O(tlplengthsig[9]));
  FDRE \data_width_64.tlplengthsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[0]),
        .Q(\m_axi_awsize_reg[1] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[1]),
        .Q(tlplength[1]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[2]),
        .Q(tlplength[2]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[3]),
        .Q(tlplength[3]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[4]),
        .Q(tlplength[4]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[5]),
        .Q(tlplength[5]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[6]),
        .Q(tlplength[6]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[7]),
        .Q(tlplength[7]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[8]),
        .Q(tlplength[8]),
        .R(axi_aresetn_0));
  FDRE \data_width_64.tlplengthsig_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\data_width_64.tlpfmtsig[0]_i_1_n_0 ),
        .D(tlplengthsig[9]),
        .Q(tlplength[9]),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'hFF7F7FFF00808000)) 
    \data_width_64.wrreqpendsig[0]_i_1 
       (.I0(cw_full_reg),
        .I1(sig_blk_lnk_up),
        .I2(\data_width_64.s_axis_cw_tdatatemp_reg[8]_1 ),
        .I3(out[0]),
        .I4(out[1]),
        .I5(\data_width_64.wrpendingsig_reg[1][0] ),
        .O(\data_width_64.wrreqpendsig[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair673" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \data_width_64.wrreqpendsig[1]_i_1 
       (.I0(\data_width_64.wrpendingsig_reg[1][0] ),
        .I1(wrreqpendsig),
        .I2(\data_width_64.wrpendingsig_reg[1][1] ),
        .O(\data_width_64.wrreqpendsig[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair673" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \data_width_64.wrreqpendsig[2]_i_1 
       (.I0(\data_width_64.wrpendingsig_reg[1][0] ),
        .I1(\data_width_64.wrpendingsig_reg[1][1] ),
        .I2(wrreqpendsig),
        .I3(\data_width_64.wrpendingsig_reg[1][2] ),
        .O(\data_width_64.wrreqpendsig[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0060000000000000)) 
    \data_width_64.wrreqpendsig[2]_i_2 
       (.I0(out[1]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(sig_blk_lnk_up),
        .I5(cw_full_reg),
        .O(wrreqpendsig));
  FDRE \data_width_64.wrreqpendsig_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.wrreqpendsig[0]_i_1_n_0 ),
        .Q(\data_width_64.wrpendingsig_reg[1][0] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.wrreqpendsig_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.wrreqpendsig[1]_i_1_n_0 ),
        .Q(\data_width_64.wrpendingsig_reg[1][1] ),
        .R(axi_aresetn_0));
  FDRE \data_width_64.wrreqpendsig_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\data_width_64.wrreqpendsig[2]_i_1_n_0 ),
        .Q(\data_width_64.wrpendingsig_reg[1][2] ),
        .R(axi_aresetn_0));
  LUT6 #(
    .INIT(64'h00000000F88000FF)) 
    \data_width_64.wrreqsetsig_i_2 
       (.I0(sig_blk_lnk_up),
        .I1(cw_full_reg),
        .I2(out[0]),
        .I3(out[1]),
        .I4(out[2]),
        .I5(out[3]),
        .O(\data_width_64.wrreqsetsig_reg_0 ));
  FDRE \data_width_64.wrreqsetsig_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_data_width_64.wrreqsmsig_reg[2]_0 ),
        .Q(E),
        .R(axi_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair676" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \m_axi_araddr1[31]_i_1 
       (.I0(axi_aresetn),
        .I1(\splitcnt_reg[1] ),
        .I2(rdaddrsmsig_reg),
        .O(\m_axi_araddr1_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair676" *) 
  LUT3 #(
    .INIT(8'h1F)) 
    \m_axi_araddr[31]_i_1 
       (.I0(\splitcnt_reg[1] ),
        .I1(rdaddrsmsig_reg),
        .I2(axi_aresetn),
        .O(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_araddr[31]_i_3 
       (.I0(rdreq_reg),
        .I1(neqOp0_out_0),
        .O(\splitcnt_reg[1] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \m_axi_arlen4[7]_i_3 
       (.I0(\data_width_64.wrpendingsig_reg[1][0] ),
        .I1(\respmmpipeline_reg[0] ),
        .I2(\respmmpipeline_reg[2] ),
        .I3(\data_width_64.wrpendingsig_reg[1][2] ),
        .I4(\respmmpipeline_reg[1] ),
        .I5(\data_width_64.wrpendingsig_reg[1][1] ),
        .O(rdreq_reg));
  LUT2 #(
    .INIT(4'h8)) 
    m_axi_awaddrtemp_reg_0_3_0_5_i_1
       (.I0(E),
        .I1(axi_aresetn),
        .O(p_0_in));
  LUT2 #(
    .INIT(4'h9)) 
    m_axi_awlentemp_reg_0_3_0_5_i_1
       (.I0(\m_axi_awsize_reg[1] ),
        .I1(tlplength[1]),
        .O(minusOp[1]));
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_awlentemp_reg_0_3_0_5_i_2
       (.I0(\m_axi_awsize_reg[1] ),
        .O(minusOp[0]));
  LUT4 #(
    .INIT(16'hFE01)) 
    m_axi_awlentemp_reg_0_3_0_5_i_3
       (.I0(tlplength[2]),
        .I1(\m_axi_awsize_reg[1] ),
        .I2(tlplength[1]),
        .I3(tlplength[3]),
        .O(minusOp[3]));
  LUT3 #(
    .INIT(8'hE1)) 
    m_axi_awlentemp_reg_0_3_0_5_i_4
       (.I0(tlplength[1]),
        .I1(\m_axi_awsize_reg[1] ),
        .I2(tlplength[2]),
        .O(minusOp[2]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    m_axi_awlentemp_reg_0_3_0_5_i_5
       (.I0(tlplength[4]),
        .I1(tlplength[2]),
        .I2(\m_axi_awsize_reg[1] ),
        .I3(tlplength[1]),
        .I4(tlplength[3]),
        .I5(tlplength[5]),
        .O(minusOp[5]));
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    m_axi_awlentemp_reg_0_3_0_5_i_6
       (.I0(tlplength[3]),
        .I1(tlplength[1]),
        .I2(\m_axi_awsize_reg[1] ),
        .I3(tlplength[2]),
        .I4(tlplength[4]),
        .O(minusOp[4]));
  LUT3 #(
    .INIT(8'hE1)) 
    m_axi_awlentemp_reg_0_3_6_7_i_1
       (.I0(tlplength[6]),
        .I1(m_axi_awlentemp_reg_0_3_6_7_i_3_n_0),
        .I2(tlplength[7]),
        .O(minusOp[7]));
  LUT2 #(
    .INIT(4'h9)) 
    m_axi_awlentemp_reg_0_3_6_7_i_2
       (.I0(m_axi_awlentemp_reg_0_3_6_7_i_3_n_0),
        .I1(tlplength[6]),
        .O(minusOp[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    m_axi_awlentemp_reg_0_3_6_7_i_3
       (.I0(tlplength[4]),
        .I1(tlplength[2]),
        .I2(\m_axi_awsize_reg[1] ),
        .I3(tlplength[1]),
        .I4(tlplength[3]),
        .I5(tlplength[5]),
        .O(m_axi_awlentemp_reg_0_3_6_7_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEFFFFFFFFF)) 
    m_axi_awsizetemp_reg_0_3_0_2_i_1__0
       (.I0(tlplength[2]),
        .I1(tlplength[1]),
        .I2(\m_axi_awsize_reg[1] ),
        .I3(tlplength[3]),
        .I4(tlplength[4]),
        .I5(m_axi_awsizetemp_reg_0_3_0_2_i_2_n_0),
        .O(p_1_in));
  LUT5 #(
    .INIT(32'h00000001)) 
    m_axi_awsizetemp_reg_0_3_0_2_i_2
       (.I0(tlplength[8]),
        .I1(tlplength[9]),
        .I2(tlplength[5]),
        .I3(tlplength[6]),
        .I4(tlplength[7]),
        .O(m_axi_awsizetemp_reg_0_3_0_2_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair675" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    \s_axis_cw_tusersig[0]_i_1 
       (.I0(\m_axis_cw_tuser_reg[6] [0]),
        .I1(wrensig_reg_0),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(s_axis_cw_tusersig[0]),
        .O(\s_axis_cw_tusersig_reg[0] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \s_axis_cw_tusersig[1]_i_1 
       (.I0(\m_axis_cw_tuser_reg[6] [1]),
        .I1(wrensig_reg_0),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(s_axis_cw_tusersig[1]),
        .O(\s_axis_cw_tusersig_reg[1] ));
  LUT4 #(
    .INIT(16'hFB08)) 
    \s_axis_cw_tusersig[2]_i_1 
       (.I0(\m_axis_cw_tuser_reg[6] [2]),
        .I1(wrensig_reg_0),
        .I2(\gaf.gaf0.ram_afull_i_reg ),
        .I3(p_2_in),
        .O(\s_axis_cw_tusersig_reg[2] ));
  LUT2 #(
    .INIT(4'h2)) 
    \splitcnt[1]_i_1 
       (.I0(\splitcnt_reg[1] ),
        .I1(rdaddrsmsig_reg),
        .O(\splitcnt_reg[1]_0 ));
  LUT6 #(
    .INIT(64'h00A8008800880088)) 
    wrensig_i_1
       (.I0(dataensig),
        .I1(wrensig_reg),
        .I2(wrensig_reg_0),
        .I3(\gaf.gaf0.ram_afull_i_reg ),
        .I4(sig_blk_lnk_up),
        .I5(cw_full),
        .O(wrensig0));
endmodule

(* ORIG_REF_NAME = "register_block" *) 
module overlay1_axi_pcie_0_0_register_block
   (out,
    sig_IP2Bus_WrAck,
    sig_IP2Bus_RdAck,
    \s_axi_rdata_i_reg[31] ,
    SR,
    \FSM_sequential_register_state_reg[0]_0 ,
    \resetovrd.reset_reg[4] ,
    \FSM_sequential_register_state_reg[0]_1 ,
    sig_Bus2IP_RNW,
    sig_Bus2IP_CS,
    axi_aresetn,
    \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ,
    \end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ,
    \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ,
    \end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] );
  output [0:0]out;
  output sig_IP2Bus_WrAck;
  output sig_IP2Bus_RdAck;
  output [31:0]\s_axi_rdata_i_reg[31] ;
  input [0:0]SR;
  input \FSM_sequential_register_state_reg[0]_0 ;
  input \resetovrd.reset_reg[4] ;
  input \FSM_sequential_register_state_reg[0]_1 ;
  input sig_Bus2IP_RNW;
  input sig_Bus2IP_CS;
  input axi_aresetn;
  input \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ;
  input [1:0]\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ;
  input [1:0]\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ;
  input [31:0]\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] ;

  wire \FSM_sequential_register_state[0]_i_1_n_0 ;
  wire \FSM_sequential_register_state[1]_i_1_n_0 ;
  wire \FSM_sequential_register_state_reg[0]_0 ;
  wire \FSM_sequential_register_state_reg[0]_1 ;
  wire \IP2Bus_Data[0]_i_1_n_0 ;
  wire \IP2Bus_Data[10]_i_1_n_0 ;
  wire \IP2Bus_Data[11]_i_1_n_0 ;
  wire \IP2Bus_Data[12]_i_1_n_0 ;
  wire \IP2Bus_Data[13]_i_1_n_0 ;
  wire \IP2Bus_Data[14]_i_1_n_0 ;
  wire \IP2Bus_Data[15]_i_1_n_0 ;
  wire \IP2Bus_Data[16]_i_1_n_0 ;
  wire \IP2Bus_Data[16]_i_2_n_0 ;
  wire \IP2Bus_Data[17]_i_1_n_0 ;
  wire \IP2Bus_Data[18]_i_1_n_0 ;
  wire \IP2Bus_Data[19]_i_1_n_0 ;
  wire \IP2Bus_Data[1]_i_1_n_0 ;
  wire \IP2Bus_Data[1]_i_2_n_0 ;
  wire \IP2Bus_Data[20]_i_1_n_0 ;
  wire \IP2Bus_Data[21]_i_1_n_0 ;
  wire \IP2Bus_Data[22]_i_1_n_0 ;
  wire \IP2Bus_Data[23]_i_1_n_0 ;
  wire \IP2Bus_Data[24]_i_1_n_0 ;
  wire \IP2Bus_Data[25]_i_1_n_0 ;
  wire \IP2Bus_Data[25]_i_2_n_0 ;
  wire \IP2Bus_Data[26]_i_1_n_0 ;
  wire \IP2Bus_Data[27]_i_1_n_0 ;
  wire \IP2Bus_Data[28]_i_1_n_0 ;
  wire \IP2Bus_Data[29]_i_1_n_0 ;
  wire \IP2Bus_Data[2]_i_1_n_0 ;
  wire \IP2Bus_Data[30]_i_1_n_0 ;
  wire \IP2Bus_Data[31]_i_1_n_0 ;
  wire \IP2Bus_Data[3]_i_1_n_0 ;
  wire \IP2Bus_Data[4]_i_1_n_0 ;
  wire \IP2Bus_Data[5]_i_1_n_0 ;
  wire \IP2Bus_Data[6]_i_1_n_0 ;
  wire \IP2Bus_Data[7]_i_1_n_0 ;
  wire \IP2Bus_Data[8]_i_1_n_0 ;
  wire \IP2Bus_Data[9]_i_1_n_0 ;
  wire [0:0]SR;
  wire axi_aresetn;
  wire [1:0]\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] ;
  wire [1:0]\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] ;
  wire \end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ;
  wire [31:0]\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] ;
  (* RTL_KEEP = "yes" *) wire [0:0]out;
  wire [3:0]p_1_in__0;
  wire p_2_in;
  (* RTL_KEEP = "yes" *) wire [1:1]register_state;
  wire \resetovrd.reset_reg[4] ;
  wire [31:0]\s_axi_rdata_i_reg[31] ;
  wire sig_Bus2IP_CS;
  wire sig_Bus2IP_RNW;
  wire sig_IP2Bus_RdAck;
  wire sig_IP2Bus_WrAck;
  wire \sig_bus2ip_ce_reg_reg_n_0_[0] ;
  wire \sig_bus2ip_ce_reg_reg_n_0_[1] ;
  wire \sig_bus2ip_ce_reg_reg_n_0_[2] ;
  wire \sig_register_bar_array[1][31]_i_1_n_0 ;
  wire [31:0]\sig_register_bar_array_reg[1] ;

  LUT5 #(
    .INIT(32'hF37F0040)) 
    \FSM_sequential_register_state[0]_i_1 
       (.I0(out),
        .I1(axi_aresetn),
        .I2(sig_Bus2IP_CS),
        .I3(register_state),
        .I4(out),
        .O(\FSM_sequential_register_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF3BF0080)) 
    \FSM_sequential_register_state[1]_i_1 
       (.I0(out),
        .I1(axi_aresetn),
        .I2(sig_Bus2IP_CS),
        .I3(register_state),
        .I4(register_state),
        .O(\FSM_sequential_register_state[1]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_register_state_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_register_state[0]_i_1_n_0 ),
        .Q(out),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE \FSM_sequential_register_state_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_register_state[1]_i_1_n_0 ),
        .Q(register_state),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8880808000808080)) 
    \IP2Bus_Data[0]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_CS),
        .I2(\IP2Bus_Data[16]_i_2_n_0 ),
        .I3(sig_Bus2IP_RNW),
        .I4(p_2_in),
        .I5(\sig_register_bar_array_reg[1] [0]),
        .O(\IP2Bus_Data[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[10]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [10]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[11]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [11]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[12]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [12]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[13]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [13]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[14]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [14]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[15]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [15]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8880808000808080)) 
    \IP2Bus_Data[16]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_CS),
        .I2(\IP2Bus_Data[16]_i_2_n_0 ),
        .I3(sig_Bus2IP_RNW),
        .I4(p_2_in),
        .I5(\sig_register_bar_array_reg[1] [16]),
        .O(\IP2Bus_Data[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair685" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \IP2Bus_Data[16]_i_2 
       (.I0(\sig_bus2ip_ce_reg_reg_n_0_[1] ),
        .I1(\sig_bus2ip_ce_reg_reg_n_0_[2] ),
        .I2(\sig_bus2ip_ce_reg_reg_n_0_[0] ),
        .I3(sig_Bus2IP_RNW),
        .O(\IP2Bus_Data[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[17]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [17]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[18]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [18]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[19]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [19]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \IP2Bus_Data[1]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_CS),
        .I2(sig_Bus2IP_RNW),
        .I3(\IP2Bus_Data[1]_i_2_n_0 ),
        .O(\IP2Bus_Data[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF777333337773)) 
    \IP2Bus_Data[1]_i_2 
       (.I0(\sig_bus2ip_ce_reg_reg_n_0_[2] ),
        .I1(sig_Bus2IP_RNW),
        .I2(\sig_bus2ip_ce_reg_reg_n_0_[0] ),
        .I3(\sig_bus2ip_ce_reg_reg_n_0_[1] ),
        .I4(p_2_in),
        .I5(\sig_register_bar_array_reg[1] [1]),
        .O(\IP2Bus_Data[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[20]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [20]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[21]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [21]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[22]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [22]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8080800080008000)) 
    \IP2Bus_Data[23]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_RNW),
        .I2(sig_Bus2IP_CS),
        .I3(\IP2Bus_Data[25]_i_2_n_0 ),
        .I4(\sig_register_bar_array_reg[1] [23]),
        .I5(p_2_in),
        .O(\IP2Bus_Data[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8080800080008000)) 
    \IP2Bus_Data[24]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_RNW),
        .I2(sig_Bus2IP_CS),
        .I3(\IP2Bus_Data[25]_i_2_n_0 ),
        .I4(\sig_register_bar_array_reg[1] [24]),
        .I5(p_2_in),
        .O(\IP2Bus_Data[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8080800080008000)) 
    \IP2Bus_Data[25]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_RNW),
        .I2(sig_Bus2IP_CS),
        .I3(\IP2Bus_Data[25]_i_2_n_0 ),
        .I4(\sig_register_bar_array_reg[1] [25]),
        .I5(p_2_in),
        .O(\IP2Bus_Data[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair685" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \IP2Bus_Data[25]_i_2 
       (.I0(\sig_bus2ip_ce_reg_reg_n_0_[2] ),
        .I1(\sig_bus2ip_ce_reg_reg_n_0_[1] ),
        .I2(p_2_in),
        .O(\IP2Bus_Data[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[26]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [26]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[27]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [27]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[28]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [28]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[29]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [29]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[2]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [2]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[30]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [30]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[31]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [31]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8880808000808080)) 
    \IP2Bus_Data[3]_i_1 
       (.I0(out),
        .I1(sig_Bus2IP_CS),
        .I2(\IP2Bus_Data[16]_i_2_n_0 ),
        .I3(sig_Bus2IP_RNW),
        .I4(p_2_in),
        .I5(\sig_register_bar_array_reg[1] [3]),
        .O(\IP2Bus_Data[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[4]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [4]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[5]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [5]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[6]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [6]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[7]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [7]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[8]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [8]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \IP2Bus_Data[9]_i_1 
       (.I0(out),
        .I1(p_2_in),
        .I2(sig_Bus2IP_RNW),
        .I3(\sig_register_bar_array_reg[1] [9]),
        .I4(sig_Bus2IP_CS),
        .O(\IP2Bus_Data[9]_i_1_n_0 ));
  FDRE \IP2Bus_Data_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[0]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [0]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[10]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [10]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[11]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [11]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[12]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [12]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[13]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [13]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[14]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [14]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[15]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [15]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[16]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [16]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[17]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [17]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[18]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [18]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[19]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [19]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[1]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [1]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[20]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [20]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[21]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [21]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[22]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [22]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[23]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [23]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[24]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [24]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[25]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [25]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[26]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [26]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[27]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [27]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[28]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [28]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[29]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [29]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[2]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [2]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[30]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [30]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[31]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [31]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[3]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [3]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[4]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [4]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[5]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [5]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[6]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [6]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[7]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [7]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[8]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [8]),
        .R(SR));
  FDRE \IP2Bus_Data_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\IP2Bus_Data[9]_i_1_n_0 ),
        .Q(\s_axi_rdata_i_reg[31] [9]),
        .R(SR));
  FDRE IP2Bus_RdAck_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_register_state_reg[0]_1 ),
        .Q(sig_IP2Bus_RdAck),
        .R(SR));
  FDRE IP2Bus_WrAck_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\FSM_sequential_register_state_reg[0]_0 ),
        .Q(sig_IP2Bus_WrAck),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000101000051015)) 
    \sig_bus2ip_ce_reg[0]_i_1 
       (.I0(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ),
        .I1(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [0]),
        .I2(sig_Bus2IP_RNW),
        .I3(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [0]),
        .I4(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [1]),
        .I5(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [1]),
        .O(p_1_in__0[0]));
  LUT6 #(
    .INIT(64'h0000404005004540)) 
    \sig_bus2ip_ce_reg[1]_i_1 
       (.I0(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ),
        .I1(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [0]),
        .I2(sig_Bus2IP_RNW),
        .I3(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [0]),
        .I4(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [1]),
        .I5(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [1]),
        .O(p_1_in__0[1]));
  LUT6 #(
    .INIT(64'h0000404005004540)) 
    \sig_bus2ip_ce_reg[2]_i_1 
       (.I0(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ),
        .I1(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [1]),
        .I2(sig_Bus2IP_RNW),
        .I3(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [1]),
        .I4(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [0]),
        .I5(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [0]),
        .O(p_1_in__0[2]));
  LUT6 #(
    .INIT(64'h4540050040400000)) 
    \sig_bus2ip_ce_reg[3]_i_1 
       (.I0(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[5] ),
        .I1(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [0]),
        .I2(sig_Bus2IP_RNW),
        .I3(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [0]),
        .I4(\end_point.s_axi_ctl_araddr_ipic_bridge_reg[3] [1]),
        .I5(\end_point.s_axi_ctl_awaddr_ipic_bridge_reg[3] [1]),
        .O(p_1_in__0[3]));
  FDRE \sig_bus2ip_ce_reg_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(p_1_in__0[0]),
        .Q(\sig_bus2ip_ce_reg_reg_n_0_[0] ),
        .R(SR));
  FDRE \sig_bus2ip_ce_reg_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(\sig_bus2ip_ce_reg_reg_n_0_[1] ),
        .R(SR));
  FDRE \sig_bus2ip_ce_reg_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(\sig_bus2ip_ce_reg_reg_n_0_[2] ),
        .R(SR));
  FDRE \sig_bus2ip_ce_reg_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_2_in),
        .R(SR));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    \sig_register_bar_array[1][31]_i_1 
       (.I0(p_2_in),
        .I1(sig_Bus2IP_RNW),
        .I2(sig_Bus2IP_CS),
        .I3(out),
        .I4(axi_aresetn),
        .O(\sig_register_bar_array[1][31]_i_1_n_0 ));
  FDRE \sig_register_bar_array_reg[1][0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [0]),
        .Q(\sig_register_bar_array_reg[1] [0]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [10]),
        .Q(\sig_register_bar_array_reg[1] [10]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [11]),
        .Q(\sig_register_bar_array_reg[1] [11]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [12]),
        .Q(\sig_register_bar_array_reg[1] [12]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [13]),
        .Q(\sig_register_bar_array_reg[1] [13]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [14]),
        .Q(\sig_register_bar_array_reg[1] [14]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [15]),
        .Q(\sig_register_bar_array_reg[1] [15]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [16]),
        .Q(\sig_register_bar_array_reg[1] [16]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [17]),
        .Q(\sig_register_bar_array_reg[1] [17]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [18]),
        .Q(\sig_register_bar_array_reg[1] [18]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [19]),
        .Q(\sig_register_bar_array_reg[1] [19]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [1]),
        .Q(\sig_register_bar_array_reg[1] [1]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [20]),
        .Q(\sig_register_bar_array_reg[1] [20]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [21]),
        .Q(\sig_register_bar_array_reg[1] [21]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [22]),
        .Q(\sig_register_bar_array_reg[1] [22]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [23]),
        .Q(\sig_register_bar_array_reg[1] [23]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [24]),
        .Q(\sig_register_bar_array_reg[1] [24]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [25]),
        .Q(\sig_register_bar_array_reg[1] [25]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [26]),
        .Q(\sig_register_bar_array_reg[1] [26]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [27]),
        .Q(\sig_register_bar_array_reg[1] [27]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [28]),
        .Q(\sig_register_bar_array_reg[1] [28]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [29]),
        .Q(\sig_register_bar_array_reg[1] [29]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [2]),
        .Q(\sig_register_bar_array_reg[1] [2]),
        .R(SR));
  FDSE \sig_register_bar_array_reg[1][30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [30]),
        .Q(\sig_register_bar_array_reg[1] [30]),
        .S(SR));
  FDRE \sig_register_bar_array_reg[1][31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [31]),
        .Q(\sig_register_bar_array_reg[1] [31]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [3]),
        .Q(\sig_register_bar_array_reg[1] [3]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [4]),
        .Q(\sig_register_bar_array_reg[1] [4]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [5]),
        .Q(\sig_register_bar_array_reg[1] [5]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [6]),
        .Q(\sig_register_bar_array_reg[1] [6]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [7]),
        .Q(\sig_register_bar_array_reg[1] [7]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [8]),
        .Q(\sig_register_bar_array_reg[1] [8]),
        .R(SR));
  FDRE \sig_register_bar_array_reg[1][9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\sig_register_bar_array[1][31]_i_1_n_0 ),
        .D(\end_point.s_axi_ctl_wdata_ipic_bridge_reg[31] [9]),
        .Q(\sig_register_bar_array_reg[1] [9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "sync_fifo_fg" *) 
module overlay1_axi_pcie_0_0_sync_fifo_fg
   (\gaf.gaf0.ram_afull_i_reg ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \data_width_64.delaylast_reg ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    wrdatasmsig__1,
    \resetovrd.reset_reg[4] ,
    axi_aresetn_0,
    \data_width_64.datain_reg[64] ,
    out,
    Q,
    \data_width_64.m_axi_wvalidsig_reg_0 ,
    m_axi_wready,
    wrensig,
    neqOp1_out,
    axi_aresetn);
  output \gaf.gaf0.ram_afull_i_reg ;
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output \data_width_64.delaylast_reg ;
  output m_axi_wlast;
  output [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  output wrdatasmsig__1;
  input \resetovrd.reset_reg[4] ;
  input axi_aresetn_0;
  input [64:0]\data_width_64.datain_reg[64] ;
  input [0:0]out;
  input [0:0]Q;
  input \data_width_64.m_axi_wvalidsig_reg_0 ;
  input m_axi_wready;
  input wrensig;
  input neqOp1_out;
  input axi_aresetn;

  wire [0:0]Q;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire \data_width_64.delaylast_reg ;
  wire [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axi_wvalidsig_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire neqOp1_out;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire wrdatasmsig__1;
  wire wrensig;

  overlay1_axi_pcie_0_0_fifo_generator_v13_1_0 \FAMILY_SUPPORTED.I_SYNC_FIFO_BRAM 
       (.Q(Q),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\data_width_64.m_axi_wvalidsig_reg_0 (\data_width_64.m_axi_wvalidsig_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .neqOp1_out(neqOp1_out),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wrdatasmsig__1(wrdatasmsig__1),
        .wrensig(wrensig));
endmodule

(* ORIG_REF_NAME = "sync_fifo_fg" *) 
module overlay1_axi_pcie_0_0_sync_fifo_fg__parameterized0
   (\gaf.gaf0.ram_afull_i_reg ,
    emptysig,
    \data_width_64.m_axis_cc_tdata_h_reg[63] ,
    Q,
    \data_width_64.m_axis_cc_tdata_h_reg[43] ,
    \data_width_64.m_axis_cc_tdata_h_reg[42] ,
    \data_width_64.m_axis_cc_tdata_h_reg[41] ,
    \data_width_64.m_axis_cc_tdata_h_reg[40] ,
    \data_width_64.m_axis_cc_tdata_h_reg[39] ,
    \data_width_64.m_axis_cc_tdata_h_reg[38] ,
    \data_width_64.m_axis_cc_tdata_h_reg[37] ,
    \data_width_64.m_axis_cc_tdata_h_reg[36] ,
    \data_width_64.m_axis_cc_tdata_h_reg[35] ,
    \data_width_64.m_axis_cc_tdata_h_reg[34] ,
    \data_width_64.m_axis_cc_tdata_h_reg[33] ,
    \data_width_64.m_axis_cc_tdata_h_reg[32] ,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    \resetovrd.reset_reg[4] ,
    SR,
    \data_width_64.din_reg[63] ,
    \data_width_64.rresp_reg[3][1] ,
    m_axis_cc_tdata_d1,
    p_76_out,
    \data_width_64.tlpcompleterid_reg[3][15] ,
    \data_width_64.tlpcompleterid_reg[3][14] ,
    \data_width_64.tlpcompleterid_reg[3][13] ,
    \data_width_64.tlpcompleterid_reg[3][12] ,
    \data_width_64.tlpcompleterid_reg[3][11] ,
    \data_width_64.tlpcompleterid_reg[3][10] ,
    \data_width_64.tlpcompleterid_reg[3][9] ,
    \data_width_64.tlpcompleterid_reg[3][8] ,
    \data_width_64.tlpcompleterid_reg[3][7] ,
    \data_width_64.tlpcompleterid_reg[3][6] ,
    \data_width_64.tlpcompleterid_reg[3][5] ,
    \data_width_64.tlpcompleterid_reg[3][4] ,
    \data_width_64.tlpcompleterid_reg[3][3] ,
    \data_width_64.tlpcompleterid_reg[3][2] ,
    \data_width_64.tlpcompleterid_reg[3][1] ,
    \data_width_64.tlpcompleterid_reg[3][0] ,
    \data_width_64.cplpacket1_reg ,
    \data_width_64.rdtlpaddrltemp_reg[2] ,
    \data_width_64.rresp_reg[3][1]_0 ,
    \data_width_64.rresp_reg[3][0] ,
    rd_ensig,
    wr_ensig,
    axi_aresetn,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg ;
  output emptysig;
  output [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  output [63:0]Q;
  output \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input [0:0]SR;
  input [63:0]\data_width_64.din_reg[63] ;
  input \data_width_64.rresp_reg[3][1] ;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input \data_width_64.tlpcompleterid_reg[3][15] ;
  input \data_width_64.tlpcompleterid_reg[3][14] ;
  input \data_width_64.tlpcompleterid_reg[3][13] ;
  input \data_width_64.tlpcompleterid_reg[3][12] ;
  input \data_width_64.tlpcompleterid_reg[3][11] ;
  input \data_width_64.tlpcompleterid_reg[3][10] ;
  input \data_width_64.tlpcompleterid_reg[3][9] ;
  input \data_width_64.tlpcompleterid_reg[3][8] ;
  input \data_width_64.tlpcompleterid_reg[3][7] ;
  input \data_width_64.tlpcompleterid_reg[3][6] ;
  input \data_width_64.tlpcompleterid_reg[3][5] ;
  input \data_width_64.tlpcompleterid_reg[3][4] ;
  input \data_width_64.tlpcompleterid_reg[3][3] ;
  input \data_width_64.tlpcompleterid_reg[3][2] ;
  input \data_width_64.tlpcompleterid_reg[3][1] ;
  input \data_width_64.tlpcompleterid_reg[3][0] ;
  input \data_width_64.cplpacket1_reg ;
  input [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  input \data_width_64.rresp_reg[3][1]_0 ;
  input \data_width_64.rresp_reg[3][0] ;
  input rd_ensig;
  input wr_ensig;
  input axi_aresetn;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [63:0]Q;
  wire [0:0]SR;
  wire axi_aresetn;
  wire \data_width_64.cplpacket1_reg ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  wire [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire \data_width_64.rresp_reg[3][0] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.rresp_reg[3][1]_0 ;
  wire \data_width_64.tlpcompleterid_reg[3][0] ;
  wire \data_width_64.tlpcompleterid_reg[3][10] ;
  wire \data_width_64.tlpcompleterid_reg[3][11] ;
  wire \data_width_64.tlpcompleterid_reg[3][12] ;
  wire \data_width_64.tlpcompleterid_reg[3][13] ;
  wire \data_width_64.tlpcompleterid_reg[3][14] ;
  wire \data_width_64.tlpcompleterid_reg[3][15] ;
  wire \data_width_64.tlpcompleterid_reg[3][1] ;
  wire \data_width_64.tlpcompleterid_reg[3][2] ;
  wire \data_width_64.tlpcompleterid_reg[3][3] ;
  wire \data_width_64.tlpcompleterid_reg[3][4] ;
  wire \data_width_64.tlpcompleterid_reg[3][5] ;
  wire \data_width_64.tlpcompleterid_reg[3][6] ;
  wire \data_width_64.tlpcompleterid_reg[3][7] ;
  wire \data_width_64.tlpcompleterid_reg[3][8] ;
  wire \data_width_64.tlpcompleterid_reg[3][9] ;
  wire emptysig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire p_76_out;
  wire rd_ensig;
  wire \resetovrd.reset_reg[4] ;
  wire wr_ensig;

  overlay1_axi_pcie_0_0_fifo_generator_v13_1_0__parameterized0 \FAMILY_SUPPORTED.I_SYNC_FIFO_BRAM 
       (.Q(Q),
        .SR(SR),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.cplpacket1_reg (\data_width_64.cplpacket1_reg ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[32] (\data_width_64.m_axis_cc_tdata_h_reg[32] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[33] (\data_width_64.m_axis_cc_tdata_h_reg[33] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[34] (\data_width_64.m_axis_cc_tdata_h_reg[34] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[35] (\data_width_64.m_axis_cc_tdata_h_reg[35] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[36] (\data_width_64.m_axis_cc_tdata_h_reg[36] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[37] (\data_width_64.m_axis_cc_tdata_h_reg[37] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[38] (\data_width_64.m_axis_cc_tdata_h_reg[38] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[39] (\data_width_64.m_axis_cc_tdata_h_reg[39] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[40] (\data_width_64.m_axis_cc_tdata_h_reg[40] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[41] (\data_width_64.m_axis_cc_tdata_h_reg[41] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[42] (\data_width_64.m_axis_cc_tdata_h_reg[42] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[43] (\data_width_64.m_axis_cc_tdata_h_reg[43] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[63] (\data_width_64.m_axis_cc_tdata_h_reg[63] ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rdtlpaddrltemp_reg[2] (\data_width_64.rdtlpaddrltemp_reg[2] ),
        .\data_width_64.rresp_reg[1][2] (\data_width_64.rresp_reg[1][2] ),
        .\data_width_64.rresp_reg[3][0] (\data_width_64.rresp_reg[3][0] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.rresp_reg[3][1]_0 (\data_width_64.rresp_reg[3][1]_0 ),
        .\data_width_64.tlpcompleterid_reg[3][0] (\data_width_64.tlpcompleterid_reg[3][0] ),
        .\data_width_64.tlpcompleterid_reg[3][10] (\data_width_64.tlpcompleterid_reg[3][10] ),
        .\data_width_64.tlpcompleterid_reg[3][11] (\data_width_64.tlpcompleterid_reg[3][11] ),
        .\data_width_64.tlpcompleterid_reg[3][12] (\data_width_64.tlpcompleterid_reg[3][12] ),
        .\data_width_64.tlpcompleterid_reg[3][13] (\data_width_64.tlpcompleterid_reg[3][13] ),
        .\data_width_64.tlpcompleterid_reg[3][14] (\data_width_64.tlpcompleterid_reg[3][14] ),
        .\data_width_64.tlpcompleterid_reg[3][15] (\data_width_64.tlpcompleterid_reg[3][15] ),
        .\data_width_64.tlpcompleterid_reg[3][1] (\data_width_64.tlpcompleterid_reg[3][1] ),
        .\data_width_64.tlpcompleterid_reg[3][2] (\data_width_64.tlpcompleterid_reg[3][2] ),
        .\data_width_64.tlpcompleterid_reg[3][3] (\data_width_64.tlpcompleterid_reg[3][3] ),
        .\data_width_64.tlpcompleterid_reg[3][4] (\data_width_64.tlpcompleterid_reg[3][4] ),
        .\data_width_64.tlpcompleterid_reg[3][5] (\data_width_64.tlpcompleterid_reg[3][5] ),
        .\data_width_64.tlpcompleterid_reg[3][6] (\data_width_64.tlpcompleterid_reg[3][6] ),
        .\data_width_64.tlpcompleterid_reg[3][7] (\data_width_64.tlpcompleterid_reg[3][7] ),
        .\data_width_64.tlpcompleterid_reg[3][8] (\data_width_64.tlpcompleterid_reg[3][8] ),
        .\data_width_64.tlpcompleterid_reg[3][9] (\data_width_64.tlpcompleterid_reg[3][9] ),
        .emptysig(emptysig),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .p_76_out(p_76_out),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wr_ensig(wr_ensig));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_generic_cstr
   (D,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] );
  output [64:0]D;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;

  wire [64:0]D;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.D(D),
        .E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_generic_cstr__parameterized0
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] );
  output [63:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [63:0]\data_width_64.din_reg[63] ;

  wire [63:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized0 \ramloop[0].ram.r 
       (.D(D[17:0]),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[17] (\data_width_64.din_reg[63] [17:0]),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized1 \ramloop[1].ram.r 
       (.D(D[35:18]),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[35] (\data_width_64.din_reg[63] [35:18]),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized2 \ramloop[2].ram.r 
       (.D(D[53:36]),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[53] (\data_width_64.din_reg[63] [53:36]),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized3 \ramloop[3].ram.r 
       (.D(D[63:54]),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] [63:54]),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_width
   (D,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] );
  output [64:0]D;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;

  wire [64:0]D;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.D(D),
        .E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized0
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[17] );
  output [17:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [17:0]\data_width_64.din_reg[17] ;

  wire [17:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [17:0]\data_width_64.din_reg[17] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[17] (\data_width_64.din_reg[17] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized1
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[35] );
  output [17:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [17:0]\data_width_64.din_reg[35] ;

  wire [17:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [17:0]\data_width_64.din_reg[35] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized1 \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[35] (\data_width_64.din_reg[35] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized2
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[53] );
  output [17:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [17:0]\data_width_64.din_reg[53] ;

  wire [17:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [17:0]\data_width_64.din_reg[53] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized2 \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[53] (\data_width_64.din_reg[53] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_width__parameterized3
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] );
  output [9:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [9:0]\data_width_64.din_reg[63] ;

  wire [9:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [9:0]\data_width_64.din_reg[63] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized3 \prim_noinit.ram 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper
   (D,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] );
  output [64:0]D;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;

  wire [64:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 ;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(72),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(72)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram 
       (.ADDRARDADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,\gcc0.gc1.gsym.count_d2_reg[8] ,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_DBITERR_UNCONNECTED ),
        .DIADI({\data_width_64.datain_reg[64] [32:9],\data_width_64.datain_reg[64] [7:0]}),
        .DIBDI(\data_width_64.datain_reg[64] [64:33]),
        .DIPADIP({1'b0,1'b0,1'b0,\data_width_64.datain_reg[64] [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({D[32:9],D[7:0]}),
        .DOBDO(D[64:33]),
        .DOPADOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_85 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_86 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_87 ,D[8]}),
        .DOPBDOP({\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_89 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_90 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ram_empty_fb_i_reg),
        .ENBWREN(E),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(axi_aresetn),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,1'b0,1'b0}),
        .WEBWE({E,E,E,E,E,E,E,E}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized0
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[17] );
  output [17:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [17:0]\data_width_64.din_reg[17] ;

  wire [17:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [17:0]\data_width_64.din_reg[17] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,\gcc0.gc1.gsym.count_d2_reg[10] ,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\data_width_64.din_reg[17] [16:9],\data_width_64.din_reg[17] [7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,\data_width_64.din_reg[17] [17],\data_width_64.din_reg[17] [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:16],D[16:9],D[7:0]}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:2],D[17],D[8]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(ram_empty_fb_i_reg),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized1
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[35] );
  output [17:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [17:0]\data_width_64.din_reg[35] ;

  wire [17:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [17:0]\data_width_64.din_reg[35] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,\gcc0.gc1.gsym.count_d2_reg[10] ,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\data_width_64.din_reg[35] [16:9],\data_width_64.din_reg[35] [7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,\data_width_64.din_reg[35] [17],\data_width_64.din_reg[35] [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:16],D[16:9],D[7:0]}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:2],D[17],D[8]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(ram_empty_fb_i_reg),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized2
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[53] );
  output [17:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [17:0]\data_width_64.din_reg[53] ;

  wire [17:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [17:0]\data_width_64.din_reg[53] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,\gcc0.gc1.gsym.count_d2_reg[10] ,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\data_width_64.din_reg[53] [16:9],\data_width_64.din_reg[53] [7:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,\data_width_64.din_reg[53] [17],\data_width_64.din_reg[53] [8]}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:16],D[16:9],D[7:0]}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:2],D[17],D[8]}),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(ram_empty_fb_i_reg),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_prim_wrapper__parameterized3
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] );
  output [9:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [9:0]\data_width_64.din_reg[63] ;

  wire [9:0]D;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_69 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_70 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_71 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_77 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_78 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_79 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 ;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [9:0]\data_width_64.din_reg[63] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED ;
  wire [3:2]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED ;

  (* CLOCK_DOMAINS = "COMMON" *) 
  (* box_type = "PRIMITIVE" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram 
       (.ADDRARDADDR({1'b1,\gcc0.gc1.gsym.count_d2_reg[10] ,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,Q,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(\resetovrd.reset_reg[4] ),
        .CLKBWRCLK(\resetovrd.reset_reg[4] ),
        .DBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\data_width_64.din_reg[63] [9:5],1'b0,1'b0,1'b0,\data_width_64.din_reg[63] [4:0]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOADO_UNCONNECTED [31:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOBDO_UNCONNECTED [31:16],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_69 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_70 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_71 ,D[9:5],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_77 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_78 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_79 ,D[4:0]}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_DOPBDOP_UNCONNECTED [3:2],\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_91 ,\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_n_92 }),
        .ECCPARITY(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(WEA),
        .ENBWREN(ram_empty_fb_i_reg),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(SR),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_SBITERR_UNCONNECTED ),
        .WEA({WEA,WEA,WEA,WEA}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_top
   (D,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] );
  output [64:0]D;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;

  wire [64:0]D;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.D(D),
        .E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_top__parameterized0
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] );
  output [63:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [63:0]\data_width_64.din_reg[63] ;

  wire [63:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_generic_cstr__parameterized0 \valid.cstr 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_2" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2
   (D,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] );
  output [64:0]D;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;

  wire [64:0]D;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2_synth inst_blk_mem_gen
       (.D(D),
        .E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_2" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2__parameterized1
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] );
  output [63:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [63:0]\data_width_64.din_reg[63] ;

  wire [63:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2_synth__parameterized0 inst_blk_mem_gen
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_2_synth" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2_synth
   (D,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] );
  output [64:0]D;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;

  wire [64:0]D;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_3_2_synth" *) 
module overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2_synth__parameterized0
   (D,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] );
  output [63:0]D;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [63:0]\data_width_64.din_reg[63] ;

  wire [63:0]D;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  overlay1_axi_pcie_0_0_blk_mem_gen_top__parameterized0 \gnbram.gnativebmg.native_blk_mem_gen 
       (.D(D),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare
   (comp0,
    v1_reg,
    \gc1.count_d2_reg[8] );
  output comp0;
  input [3:0]v1_reg;
  input \gc1.count_d2_reg[8] ;

  wire CI;
  wire comp0;
  wire \gc1.count_d2_reg[8] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire [3:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc1.count_d2_reg[8] }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare_0
   (comp1,
    ram_full_fb_i_reg,
    v1_reg_0,
    \gc1.count_d2_reg[8] ,
    wrensig,
    comp0,
    p_7_out,
    ram_full_fb_i_reg_0);
  output comp1;
  output ram_full_fb_i_reg;
  input [3:0]v1_reg_0;
  input \gc1.count_d2_reg[8] ;
  input wrensig;
  input comp0;
  input p_7_out;
  input ram_full_fb_i_reg_0;

  wire CI;
  wire comp0;
  wire comp1;
  wire \gc1.count_d2_reg[8] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire p_7_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [3:0]v1_reg_0;
  wire wrensig;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc1.count_d2_reg[8] }));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    ram_full_fb_i_i_1__0
       (.I0(comp1),
        .I1(wrensig),
        .I2(comp0),
        .I3(p_7_out),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare_1
   (\gaf.gaf0.ram_afull_i_reg ,
    v1_reg_1,
    \gc1.count_d2_reg[8] ,
    ram_full_fb_i_reg,
    wrensig,
    p_7_out,
    comp1,
    \gaf.gaf0.ram_afull_i_reg_0 );
  output \gaf.gaf0.ram_afull_i_reg ;
  input [3:0]v1_reg_1;
  input \gc1.count_d2_reg[8] ;
  input ram_full_fb_i_reg;
  input wrensig;
  input p_7_out;
  input comp1;
  input \gaf.gaf0.ram_afull_i_reg_0 ;

  wire CI;
  wire comp1;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gc1.count_d2_reg[8] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire p_0_in;
  wire p_7_out;
  wire ram_full_fb_i_reg;
  wire [3:0]v1_reg_1;
  wire wrensig;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h30FFFFFF00200020)) 
    \gaf.gaf0.ram_afull_i_i_1__0 
       (.I0(p_0_in),
        .I1(ram_full_fb_i_reg),
        .I2(wrensig),
        .I3(p_7_out),
        .I4(comp1),
        .I5(\gaf.gaf0.ram_afull_i_reg_0 ),
        .O(\gaf.gaf0.ram_afull_i_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_1));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],p_0_in}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc1.count_d2_reg[8] }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare_2
   (comp0,
    \gcc0.gc1.gsym.count_d2_reg[0] ,
    \gcc0.gc1.gsym.count_d2_reg[2] ,
    \gcc0.gc1.gsym.count_d2_reg[4] ,
    \gcc0.gc1.gsym.count_d2_reg[6] ,
    \gc1.count_d2_reg[8] );
  output comp0;
  input \gcc0.gc1.gsym.count_d2_reg[0] ;
  input \gcc0.gc1.gsym.count_d2_reg[2] ;
  input \gcc0.gc1.gsym.count_d2_reg[4] ;
  input \gcc0.gc1.gsym.count_d2_reg[6] ;
  input \gc1.count_d2_reg[8] ;

  wire CI;
  wire comp0;
  wire \gc1.count_d2_reg[8] ;
  wire \gcc0.gc1.gsym.count_d2_reg[0] ;
  wire \gcc0.gc1.gsym.count_d2_reg[2] ;
  wire \gcc0.gc1.gsym.count_d2_reg[4] ;
  wire \gcc0.gc1.gsym.count_d2_reg[6] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S({\gcc0.gc1.gsym.count_d2_reg[6] ,\gcc0.gc1.gsym.count_d2_reg[4] ,\gcc0.gc1.gsym.count_d2_reg[2] ,\gcc0.gc1.gsym.count_d2_reg[0] }));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp0}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc1.count_d2_reg[8] }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare_3
   (ram_empty_i0__3,
    v1_reg,
    \gc1.count_d1_reg[8] ,
    E,
    comp0,
    p_2_out,
    wrensig,
    p_2_out__0);
  output ram_empty_i0__3;
  input [3:0]v1_reg;
  input \gc1.count_d1_reg[8] ;
  input [0:0]E;
  input comp0;
  input p_2_out;
  input wrensig;
  input p_2_out__0;

  wire CI;
  wire [0:0]E;
  wire comp0;
  wire comp1;
  wire \gc1.count_d1_reg[8] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire p_2_out;
  wire p_2_out__0;
  wire ram_empty_i0__3;
  wire [3:0]v1_reg;
  wire wrensig;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:1],comp1}),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:1],\gc1.count_d1_reg[8] }));
  LUT6 #(
    .INIT(64'hFF0FFFFF88008888)) 
    ram_empty_fb_i_i_1__0
       (.I0(comp1),
        .I1(E),
        .I2(comp0),
        .I3(p_2_out),
        .I4(wrensig),
        .I5(p_2_out__0),
        .O(ram_empty_i0__3));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare__parameterized0
   (comp0,
    \gcc0.gc1.gsym.count_d2_reg[0] ,
    \gcc0.gc1.gsym.count_d2_reg[2] ,
    \gcc0.gc1.gsym.count_d2_reg[4] ,
    \gcc0.gc1.gsym.count_d2_reg[6] ,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \gc1.count_d2_reg[10] );
  output comp0;
  input \gcc0.gc1.gsym.count_d2_reg[0] ;
  input \gcc0.gc1.gsym.count_d2_reg[2] ;
  input \gcc0.gc1.gsym.count_d2_reg[4] ;
  input \gcc0.gc1.gsym.count_d2_reg[6] ;
  input \gcc0.gc1.gsym.count_d2_reg[8] ;
  input \gc1.count_d2_reg[10] ;

  wire CI;
  wire comp0;
  wire \gc1.count_d2_reg[10] ;
  wire \gcc0.gc1.gsym.count_d2_reg[0] ;
  wire \gcc0.gc1.gsym.count_d2_reg[2] ;
  wire \gcc0.gc1.gsym.count_d2_reg[4] ;
  wire \gcc0.gc1.gsym.count_d2_reg[6] ;
  wire \gcc0.gc1.gsym.count_d2_reg[8] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire \gmux.gm[4].gms.ms_n_0 ;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S({\gcc0.gc1.gsym.count_d2_reg[6] ,\gcc0.gc1.gsym.count_d2_reg[4] ,\gcc0.gc1.gsym.count_d2_reg[2] ,\gcc0.gc1.gsym.count_d2_reg[0] }));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp0,\gmux.gm[4].gms.ms_n_0 }),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],\gc1.count_d2_reg[10] ,\gcc0.gc1.gsym.count_d2_reg[8] }));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare__parameterized1
   (ram_empty_i0__3,
    v1_reg,
    \gc1.count_d1_reg[10] ,
    E,
    comp0,
    p_2_out,
    wr_ensig,
    p_2_out__0);
  output ram_empty_i0__3;
  input [4:0]v1_reg;
  input \gc1.count_d1_reg[10] ;
  input [0:0]E;
  input comp0;
  input p_2_out;
  input wr_ensig;
  input p_2_out__0;

  wire CI;
  wire [0:0]E;
  wire comp0;
  wire comp1;
  wire \gc1.count_d1_reg[10] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire \gmux.gm[4].gms.ms_n_0 ;
  wire p_2_out;
  wire p_2_out__0;
  wire ram_empty_i0__3;
  wire [4:0]v1_reg;
  wire wr_ensig;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp1,\gmux.gm[4].gms.ms_n_0 }),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],\gc1.count_d1_reg[10] ,v1_reg[4]}));
  LUT6 #(
    .INIT(64'hFF0FFFFF88008888)) 
    ram_empty_fb_i_i_1
       (.I0(comp1),
        .I1(E),
        .I2(comp0),
        .I3(p_2_out),
        .I4(wr_ensig),
        .I5(p_2_out__0),
        .O(ram_empty_i0__3));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare__parameterized3
   (comp0,
    v1_reg,
    \gc1.count_d2_reg[10] );
  output comp0;
  input [4:0]v1_reg;
  input \gc1.count_d2_reg[10] ;

  wire CI;
  wire comp0;
  wire \gc1.count_d2_reg[10] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire \gmux.gm[4].gms.ms_n_0 ;
  wire [4:0]v1_reg;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp0,\gmux.gm[4].gms.ms_n_0 }),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],\gc1.count_d2_reg[10] ,v1_reg[4]}));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare__parameterized4
   (comp1,
    ram_full_fb_i_reg,
    v1_reg_0,
    \gc1.count_d2_reg[10] ,
    wr_ensig,
    comp0,
    p_7_out,
    ram_full_fb_i_reg_0);
  output comp1;
  output ram_full_fb_i_reg;
  input [4:0]v1_reg_0;
  input \gc1.count_d2_reg[10] ;
  input wr_ensig;
  input comp0;
  input p_7_out;
  input ram_full_fb_i_reg_0;

  wire CI;
  wire comp0;
  wire comp1;
  wire \gc1.count_d2_reg[10] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire \gmux.gm[4].gms.ms_n_0 ;
  wire p_7_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [4:0]v1_reg_0;
  wire wr_ensig;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_0[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],comp1,\gmux.gm[4].gms.ms_n_0 }),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],\gc1.count_d2_reg[10] ,v1_reg_0[4]}));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    ram_full_fb_i_i_1
       (.I0(comp1),
        .I1(wr_ensig),
        .I2(comp0),
        .I3(p_7_out),
        .I4(ram_full_fb_i_reg_0),
        .O(ram_full_fb_i_reg));
endmodule

(* ORIG_REF_NAME = "compare" *) 
module overlay1_axi_pcie_0_0_compare__parameterized5
   (\gaf.gaf0.ram_afull_i_reg ,
    v1_reg_1,
    \gc1.count_d2_reg[10] ,
    ram_full_fb_i_reg,
    wr_ensig,
    p_7_out,
    comp1,
    \gaf.gaf0.ram_afull_i_reg_0 );
  output \gaf.gaf0.ram_afull_i_reg ;
  input [4:0]v1_reg_1;
  input \gc1.count_d2_reg[10] ;
  input ram_full_fb_i_reg;
  input wr_ensig;
  input p_7_out;
  input comp1;
  input \gaf.gaf0.ram_afull_i_reg_0 ;

  wire CI;
  wire comp1;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gc1.count_d2_reg[10] ;
  wire \gmux.gm[1].gms.ms_n_0 ;
  wire \gmux.gm[2].gms.ms_n_0 ;
  wire \gmux.gm[3].gms.ms_n_0 ;
  wire \gmux.gm[4].gms.ms_n_0 ;
  wire p_0_in;
  wire p_7_out;
  wire ram_full_fb_i_reg;
  wire [4:0]v1_reg_1;
  wire wr_ensig;
  wire [3:0]\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED ;
  wire [3:2]\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h30FFFFFF00200020)) 
    \gaf.gaf0.ram_afull_i_i_1 
       (.I0(p_0_in),
        .I1(ram_full_fb_i_reg),
        .I2(wr_ensig),
        .I3(p_7_out),
        .I4(comp1),
        .I5(\gaf.gaf0.ram_afull_i_reg_0 ),
        .O(\gaf.gaf0.ram_afull_i_reg ));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[0].gm1.m1_CARRY4 
       (.CI(1'b0),
        .CO({\gmux.gm[3].gms.ms_n_0 ,\gmux.gm[2].gms.ms_n_0 ,\gmux.gm[1].gms.ms_n_0 ,CI}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_gmux.gm[0].gm1.m1_CARRY4_O_UNCONNECTED [3:0]),
        .S(v1_reg_1[3:0]));
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* box_type = "PRIMITIVE" *) 
  CARRY4 \gmux.gm[4].gms.ms_CARRY4 
       (.CI(\gmux.gm[3].gms.ms_n_0 ),
        .CO({\NLW_gmux.gm[4].gms.ms_CARRY4_CO_UNCONNECTED [3:2],p_0_in,\gmux.gm[4].gms.ms_n_0 }),
        .CYINIT(1'b0),
        .DI({\NLW_gmux.gm[4].gms.ms_CARRY4_DI_UNCONNECTED [3:2],1'b0,1'b0}),
        .O(\NLW_gmux.gm[4].gms.ms_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_gmux.gm[4].gms.ms_CARRY4_S_UNCONNECTED [3:2],\gc1.count_d2_reg[10] ,v1_reg_1[4]}));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module overlay1_axi_pcie_0_0_fifo_generator_ramfifo
   (\gaf.gaf0.ram_afull_i_reg ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \data_width_64.delaylast_reg ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    wrdatasmsig__1,
    \resetovrd.reset_reg[4] ,
    axi_aresetn_0,
    \data_width_64.datain_reg[64] ,
    out,
    Q,
    \data_width_64.m_axi_wvalidsig_reg_0 ,
    m_axi_wready,
    wrensig,
    neqOp1_out,
    axi_aresetn);
  output \gaf.gaf0.ram_afull_i_reg ;
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output \data_width_64.delaylast_reg ;
  output m_axi_wlast;
  output [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  output wrdatasmsig__1;
  input \resetovrd.reset_reg[4] ;
  input axi_aresetn_0;
  input [64:0]\data_width_64.datain_reg[64] ;
  input [0:0]out;
  input [0:0]Q;
  input \data_width_64.m_axi_wvalidsig_reg_0 ;
  input m_axi_wready;
  input wrensig;
  input neqOp1_out;
  input axi_aresetn;

  wire [0:0]Q;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire \data_width_64.delaylast_reg ;
  wire [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axi_wvalidsig_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gntv_or_sync_fifo.gl0.rd_n_22 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_23 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_3 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_4 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_18 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_19 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_20 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_21 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_22 ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire [3:0]\grss.rsts/c2/v1_reg ;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire neqOp1_out;
  wire [0:0]out;
  wire [8:0]p_0_out;
  wire [8:0]p_11_out;
  wire [8:8]p_12_out;
  wire p_2_out;
  wire p_5_out;
  wire p_7_out;
  wire [7:0]rd_pntr_plus1;
  wire \resetovrd.reset_reg[4] ;
  wire [8:8]wr_pntr_plus2;
  wire wrdatasmsig__1;
  wire wrensig;

  overlay1_axi_pcie_0_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\gntv_or_sync_fifo.gl0.rd_n_3 ),
        .E(p_5_out),
        .Q(p_0_out),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg (\gntv_or_sync_fifo.gl0.rd_n_23 ),
        .\gc1.count_d2_reg[7] (rd_pntr_plus1),
        .\gcc0.gc1.gsym.count_d1_reg[8] (p_12_out),
        .\gcc0.gc1.gsym.count_d2_reg[0] (\gntv_or_sync_fifo.gl0.wr_n_18 ),
        .\gcc0.gc1.gsym.count_d2_reg[2] (\gntv_or_sync_fifo.gl0.wr_n_19 ),
        .\gcc0.gc1.gsym.count_d2_reg[4] (\gntv_or_sync_fifo.gl0.wr_n_20 ),
        .\gcc0.gc1.gsym.count_d2_reg[6] (\gntv_or_sync_fifo.gl0.wr_n_21 ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (p_11_out[8]),
        .\gcc0.gc1.gsym.count_reg[8] (wr_pntr_plus2),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wready(m_axi_wready),
        .p_2_out(p_2_out),
        .p_7_out(p_7_out),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_4 ),
        .ram_full_fb_i_reg_0(\gntv_or_sync_fifo.gl0.rd_n_22 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(\grss.rsts/c2/v1_reg ),
        .wrensig(wrensig));
  overlay1_axi_pcie_0_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (p_11_out),
        .E(\gntv_or_sync_fifo.gl0.wr_n_22 ),
        .Q(Q),
        .axi_aresetn(axi_aresetn_0),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gc1.count_d1_reg[7] (rd_pntr_plus1),
        .\gc1.count_d2_reg[7] (p_0_out[7:0]),
        .\gc1.count_d2_reg[8] (\gntv_or_sync_fifo.gl0.rd_n_4 ),
        .\gc1.count_d2_reg[8]_0 (\gntv_or_sync_fifo.gl0.rd_n_22 ),
        .\gc1.count_d2_reg[8]_1 (\gntv_or_sync_fifo.gl0.rd_n_23 ),
        .\gcc0.gc1.gsym.count_d1_reg[8] (wr_pntr_plus2),
        .\gcc0.gc1.gsym.count_d2_reg[8] (p_12_out),
        .out(out),
        .p_2_out(p_2_out),
        .p_7_out(p_7_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.wr_n_18 ),
        .ram_empty_fb_i_reg_0(\gntv_or_sync_fifo.gl0.wr_n_19 ),
        .ram_empty_fb_i_reg_1(\gntv_or_sync_fifo.gl0.wr_n_20 ),
        .ram_empty_fb_i_reg_2(\gntv_or_sync_fifo.gl0.wr_n_21 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(\grss.rsts/c2/v1_reg ),
        .wrensig(wrensig));
  overlay1_axi_pcie_0_0_memory \gntv_or_sync_fifo.mem 
       (.E(\gntv_or_sync_fifo.gl0.wr_n_22 ),
        .Q(p_0_out),
        .axi_aresetn(axi_aresetn_0),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\data_width_64.m_axi_wvalidsig_reg_0 (\data_width_64.m_axi_wvalidsig_reg_0 ),
        .empty_fwft_i_reg(\gpregsm1.curr_fwft_state_reg[1] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (p_11_out),
        .\gpregsm1.curr_fwft_state_reg[1] (p_5_out),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .neqOp1_out(neqOp1_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_3 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wrdatasmsig__1(wrdatasmsig__1));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module overlay1_axi_pcie_0_0_fifo_generator_ramfifo__parameterized0
   (\gaf.gaf0.ram_afull_i_reg ,
    emptysig,
    \data_width_64.m_axis_cc_tdata_h_reg[63] ,
    Q,
    \data_width_64.m_axis_cc_tdata_h_reg[43] ,
    \data_width_64.m_axis_cc_tdata_h_reg[42] ,
    \data_width_64.m_axis_cc_tdata_h_reg[41] ,
    \data_width_64.m_axis_cc_tdata_h_reg[40] ,
    \data_width_64.m_axis_cc_tdata_h_reg[39] ,
    \data_width_64.m_axis_cc_tdata_h_reg[38] ,
    \data_width_64.m_axis_cc_tdata_h_reg[37] ,
    \data_width_64.m_axis_cc_tdata_h_reg[36] ,
    \data_width_64.m_axis_cc_tdata_h_reg[35] ,
    \data_width_64.m_axis_cc_tdata_h_reg[34] ,
    \data_width_64.m_axis_cc_tdata_h_reg[33] ,
    \data_width_64.m_axis_cc_tdata_h_reg[32] ,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    \resetovrd.reset_reg[4] ,
    SR,
    \data_width_64.din_reg[63] ,
    \data_width_64.rresp_reg[3][1] ,
    m_axis_cc_tdata_d1,
    p_76_out,
    \data_width_64.tlpcompleterid_reg[3][15] ,
    \data_width_64.tlpcompleterid_reg[3][14] ,
    \data_width_64.tlpcompleterid_reg[3][13] ,
    \data_width_64.tlpcompleterid_reg[3][12] ,
    \data_width_64.tlpcompleterid_reg[3][11] ,
    \data_width_64.tlpcompleterid_reg[3][10] ,
    \data_width_64.tlpcompleterid_reg[3][9] ,
    \data_width_64.tlpcompleterid_reg[3][8] ,
    \data_width_64.tlpcompleterid_reg[3][7] ,
    \data_width_64.tlpcompleterid_reg[3][6] ,
    \data_width_64.tlpcompleterid_reg[3][5] ,
    \data_width_64.tlpcompleterid_reg[3][4] ,
    \data_width_64.tlpcompleterid_reg[3][3] ,
    \data_width_64.tlpcompleterid_reg[3][2] ,
    \data_width_64.tlpcompleterid_reg[3][1] ,
    \data_width_64.tlpcompleterid_reg[3][0] ,
    \data_width_64.cplpacket1_reg ,
    \data_width_64.rdtlpaddrltemp_reg[2] ,
    \data_width_64.rresp_reg[3][1]_0 ,
    \data_width_64.rresp_reg[3][0] ,
    rd_ensig,
    wr_ensig,
    axi_aresetn,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg ;
  output emptysig;
  output [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  output [63:0]Q;
  output \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input [0:0]SR;
  input [63:0]\data_width_64.din_reg[63] ;
  input \data_width_64.rresp_reg[3][1] ;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input \data_width_64.tlpcompleterid_reg[3][15] ;
  input \data_width_64.tlpcompleterid_reg[3][14] ;
  input \data_width_64.tlpcompleterid_reg[3][13] ;
  input \data_width_64.tlpcompleterid_reg[3][12] ;
  input \data_width_64.tlpcompleterid_reg[3][11] ;
  input \data_width_64.tlpcompleterid_reg[3][10] ;
  input \data_width_64.tlpcompleterid_reg[3][9] ;
  input \data_width_64.tlpcompleterid_reg[3][8] ;
  input \data_width_64.tlpcompleterid_reg[3][7] ;
  input \data_width_64.tlpcompleterid_reg[3][6] ;
  input \data_width_64.tlpcompleterid_reg[3][5] ;
  input \data_width_64.tlpcompleterid_reg[3][4] ;
  input \data_width_64.tlpcompleterid_reg[3][3] ;
  input \data_width_64.tlpcompleterid_reg[3][2] ;
  input \data_width_64.tlpcompleterid_reg[3][1] ;
  input \data_width_64.tlpcompleterid_reg[3][0] ;
  input \data_width_64.cplpacket1_reg ;
  input [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  input \data_width_64.rresp_reg[3][1]_0 ;
  input \data_width_64.rresp_reg[3][0] ;
  input rd_ensig;
  input wr_ensig;
  input axi_aresetn;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [63:0]Q;
  wire [0:0]SR;
  wire axi_aresetn;
  wire \data_width_64.cplpacket1_reg ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  wire [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire \data_width_64.rresp_reg[3][0] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.rresp_reg[3][1]_0 ;
  wire \data_width_64.tlpcompleterid_reg[3][0] ;
  wire \data_width_64.tlpcompleterid_reg[3][10] ;
  wire \data_width_64.tlpcompleterid_reg[3][11] ;
  wire \data_width_64.tlpcompleterid_reg[3][12] ;
  wire \data_width_64.tlpcompleterid_reg[3][13] ;
  wire \data_width_64.tlpcompleterid_reg[3][14] ;
  wire \data_width_64.tlpcompleterid_reg[3][15] ;
  wire \data_width_64.tlpcompleterid_reg[3][1] ;
  wire \data_width_64.tlpcompleterid_reg[3][2] ;
  wire \data_width_64.tlpcompleterid_reg[3][3] ;
  wire \data_width_64.tlpcompleterid_reg[3][4] ;
  wire \data_width_64.tlpcompleterid_reg[3][5] ;
  wire \data_width_64.tlpcompleterid_reg[3][6] ;
  wire \data_width_64.tlpcompleterid_reg[3][7] ;
  wire \data_width_64.tlpcompleterid_reg[3][8] ;
  wire \data_width_64.tlpcompleterid_reg[3][9] ;
  wire emptysig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gntv_or_sync_fifo.gl0.rd_n_26 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_27 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_3 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_4 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_20 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_21 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_22 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_23 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_24 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_25 ;
  wire [4:0]\grss.rsts/c2/v1_reg ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire [10:0]p_0_out;
  wire [10:0]p_11_out;
  wire [10:10]p_12_out;
  wire p_2_out;
  wire p_5_out;
  wire p_76_out;
  wire p_7_out;
  wire rd_ensig;
  wire [9:0]rd_pntr_plus1;
  wire \resetovrd.reset_reg[4] ;
  wire wr_ensig;
  wire [10:10]wr_pntr_plus2;

  overlay1_axi_pcie_0_0_rd_logic__parameterized0 \gntv_or_sync_fifo.gl0.rd 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\gntv_or_sync_fifo.gl0.rd_n_3 ),
        .E(p_5_out),
        .Q(p_0_out),
        .SR(SR),
        .axi_aresetn(axi_aresetn),
        .emptysig(emptysig),
        .\gaf.gaf0.ram_afull_i_reg (\gntv_or_sync_fifo.gl0.rd_n_27 ),
        .\gc1.count_d2_reg[9] (rd_pntr_plus1),
        .\gcc0.gc1.gsym.count_d1_reg[10] (p_12_out),
        .\gcc0.gc1.gsym.count_d2_reg[0] (\gntv_or_sync_fifo.gl0.wr_n_20 ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (p_11_out[10]),
        .\gcc0.gc1.gsym.count_d2_reg[2] (\gntv_or_sync_fifo.gl0.wr_n_21 ),
        .\gcc0.gc1.gsym.count_d2_reg[4] (\gntv_or_sync_fifo.gl0.wr_n_22 ),
        .\gcc0.gc1.gsym.count_d2_reg[6] (\gntv_or_sync_fifo.gl0.wr_n_23 ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gntv_or_sync_fifo.gl0.wr_n_24 ),
        .\gcc0.gc1.gsym.count_reg[10] (wr_pntr_plus2),
        .p_2_out(p_2_out),
        .p_7_out(p_7_out),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_4 ),
        .ram_full_fb_i_reg_0(\gntv_or_sync_fifo.gl0.rd_n_26 ),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(\grss.rsts/c2/v1_reg ),
        .wr_ensig(wr_ensig));
  overlay1_axi_pcie_0_0_wr_logic__parameterized0 \gntv_or_sync_fifo.gl0.wr 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (p_11_out),
        .Q(wr_pntr_plus2),
        .SR(SR),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_25 ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rresp_reg[1][2] (\data_width_64.rresp_reg[1][2] ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gc1.count_d1_reg[9] (rd_pntr_plus1),
        .\gc1.count_d2_reg[10] (\gntv_or_sync_fifo.gl0.rd_n_4 ),
        .\gc1.count_d2_reg[10]_0 (\gntv_or_sync_fifo.gl0.rd_n_26 ),
        .\gc1.count_d2_reg[10]_1 (\gntv_or_sync_fifo.gl0.rd_n_27 ),
        .\gc1.count_d2_reg[9] (p_0_out[9:0]),
        .\gcc0.gc1.gsym.count_d2_reg[10] (p_12_out),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .p_2_out(p_2_out),
        .p_7_out(p_7_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.wr_n_20 ),
        .ram_empty_fb_i_reg_0(\gntv_or_sync_fifo.gl0.wr_n_21 ),
        .ram_empty_fb_i_reg_1(\gntv_or_sync_fifo.gl0.wr_n_22 ),
        .ram_empty_fb_i_reg_2(\gntv_or_sync_fifo.gl0.wr_n_23 ),
        .ram_empty_fb_i_reg_3(\gntv_or_sync_fifo.gl0.wr_n_24 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(\grss.rsts/c2/v1_reg ),
        .wr_ensig(wr_ensig));
  overlay1_axi_pcie_0_0_memory__parameterized0 \gntv_or_sync_fifo.mem 
       (.E(p_5_out),
        .Q(p_0_out),
        .SR(SR),
        .WEA(\gntv_or_sync_fifo.gl0.wr_n_25 ),
        .\data_width_64.cplpacket1_reg (\data_width_64.cplpacket1_reg ),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[32] (\data_width_64.m_axis_cc_tdata_h_reg[32] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[33] (\data_width_64.m_axis_cc_tdata_h_reg[33] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[34] (\data_width_64.m_axis_cc_tdata_h_reg[34] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[35] (\data_width_64.m_axis_cc_tdata_h_reg[35] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[36] (\data_width_64.m_axis_cc_tdata_h_reg[36] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[37] (\data_width_64.m_axis_cc_tdata_h_reg[37] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[38] (\data_width_64.m_axis_cc_tdata_h_reg[38] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[39] (\data_width_64.m_axis_cc_tdata_h_reg[39] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[40] (\data_width_64.m_axis_cc_tdata_h_reg[40] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[41] (\data_width_64.m_axis_cc_tdata_h_reg[41] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[42] (\data_width_64.m_axis_cc_tdata_h_reg[42] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[43] (\data_width_64.m_axis_cc_tdata_h_reg[43] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[63] (\data_width_64.m_axis_cc_tdata_h_reg[63] ),
        .\data_width_64.m_axis_cc_tdatatemp64_reg[31] (Q),
        .\data_width_64.rdtlpaddrltemp_reg[2] (\data_width_64.rdtlpaddrltemp_reg[2] ),
        .\data_width_64.rresp_reg[3][0] (\data_width_64.rresp_reg[3][0] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.rresp_reg[3][1]_0 (\data_width_64.rresp_reg[3][1]_0 ),
        .\data_width_64.tlpcompleterid_reg[3][0] (\data_width_64.tlpcompleterid_reg[3][0] ),
        .\data_width_64.tlpcompleterid_reg[3][10] (\data_width_64.tlpcompleterid_reg[3][10] ),
        .\data_width_64.tlpcompleterid_reg[3][11] (\data_width_64.tlpcompleterid_reg[3][11] ),
        .\data_width_64.tlpcompleterid_reg[3][12] (\data_width_64.tlpcompleterid_reg[3][12] ),
        .\data_width_64.tlpcompleterid_reg[3][13] (\data_width_64.tlpcompleterid_reg[3][13] ),
        .\data_width_64.tlpcompleterid_reg[3][14] (\data_width_64.tlpcompleterid_reg[3][14] ),
        .\data_width_64.tlpcompleterid_reg[3][15] (\data_width_64.tlpcompleterid_reg[3][15] ),
        .\data_width_64.tlpcompleterid_reg[3][1] (\data_width_64.tlpcompleterid_reg[3][1] ),
        .\data_width_64.tlpcompleterid_reg[3][2] (\data_width_64.tlpcompleterid_reg[3][2] ),
        .\data_width_64.tlpcompleterid_reg[3][3] (\data_width_64.tlpcompleterid_reg[3][3] ),
        .\data_width_64.tlpcompleterid_reg[3][4] (\data_width_64.tlpcompleterid_reg[3][4] ),
        .\data_width_64.tlpcompleterid_reg[3][5] (\data_width_64.tlpcompleterid_reg[3][5] ),
        .\data_width_64.tlpcompleterid_reg[3][6] (\data_width_64.tlpcompleterid_reg[3][6] ),
        .\data_width_64.tlpcompleterid_reg[3][7] (\data_width_64.tlpcompleterid_reg[3][7] ),
        .\data_width_64.tlpcompleterid_reg[3][8] (\data_width_64.tlpcompleterid_reg[3][8] ),
        .\data_width_64.tlpcompleterid_reg[3][9] (\data_width_64.tlpcompleterid_reg[3][9] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (p_11_out),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .p_76_out(p_76_out),
        .ram_empty_fb_i_reg(\gntv_or_sync_fifo.gl0.rd_n_3 ),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module overlay1_axi_pcie_0_0_fifo_generator_top
   (\gaf.gaf0.ram_afull_i_reg ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \data_width_64.delaylast_reg ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    wrdatasmsig__1,
    \resetovrd.reset_reg[4] ,
    axi_aresetn_0,
    \data_width_64.datain_reg[64] ,
    out,
    Q,
    \data_width_64.m_axi_wvalidsig_reg_0 ,
    m_axi_wready,
    wrensig,
    neqOp1_out,
    axi_aresetn);
  output \gaf.gaf0.ram_afull_i_reg ;
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output \data_width_64.delaylast_reg ;
  output m_axi_wlast;
  output [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  output wrdatasmsig__1;
  input \resetovrd.reset_reg[4] ;
  input axi_aresetn_0;
  input [64:0]\data_width_64.datain_reg[64] ;
  input [0:0]out;
  input [0:0]Q;
  input \data_width_64.m_axi_wvalidsig_reg_0 ;
  input m_axi_wready;
  input wrensig;
  input neqOp1_out;
  input axi_aresetn;

  wire [0:0]Q;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire \data_width_64.delaylast_reg ;
  wire [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axi_wvalidsig_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire neqOp1_out;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire wrdatasmsig__1;
  wire wrensig;

  overlay1_axi_pcie_0_0_fifo_generator_ramfifo \grf.rf 
       (.Q(Q),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\data_width_64.m_axi_wvalidsig_reg_0 (\data_width_64.m_axi_wvalidsig_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .neqOp1_out(neqOp1_out),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wrdatasmsig__1(wrdatasmsig__1),
        .wrensig(wrensig));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module overlay1_axi_pcie_0_0_fifo_generator_top__parameterized0
   (\gaf.gaf0.ram_afull_i_reg ,
    emptysig,
    \data_width_64.m_axis_cc_tdata_h_reg[63] ,
    Q,
    \data_width_64.m_axis_cc_tdata_h_reg[43] ,
    \data_width_64.m_axis_cc_tdata_h_reg[42] ,
    \data_width_64.m_axis_cc_tdata_h_reg[41] ,
    \data_width_64.m_axis_cc_tdata_h_reg[40] ,
    \data_width_64.m_axis_cc_tdata_h_reg[39] ,
    \data_width_64.m_axis_cc_tdata_h_reg[38] ,
    \data_width_64.m_axis_cc_tdata_h_reg[37] ,
    \data_width_64.m_axis_cc_tdata_h_reg[36] ,
    \data_width_64.m_axis_cc_tdata_h_reg[35] ,
    \data_width_64.m_axis_cc_tdata_h_reg[34] ,
    \data_width_64.m_axis_cc_tdata_h_reg[33] ,
    \data_width_64.m_axis_cc_tdata_h_reg[32] ,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    \resetovrd.reset_reg[4] ,
    SR,
    \data_width_64.din_reg[63] ,
    \data_width_64.rresp_reg[3][1] ,
    m_axis_cc_tdata_d1,
    p_76_out,
    \data_width_64.tlpcompleterid_reg[3][15] ,
    \data_width_64.tlpcompleterid_reg[3][14] ,
    \data_width_64.tlpcompleterid_reg[3][13] ,
    \data_width_64.tlpcompleterid_reg[3][12] ,
    \data_width_64.tlpcompleterid_reg[3][11] ,
    \data_width_64.tlpcompleterid_reg[3][10] ,
    \data_width_64.tlpcompleterid_reg[3][9] ,
    \data_width_64.tlpcompleterid_reg[3][8] ,
    \data_width_64.tlpcompleterid_reg[3][7] ,
    \data_width_64.tlpcompleterid_reg[3][6] ,
    \data_width_64.tlpcompleterid_reg[3][5] ,
    \data_width_64.tlpcompleterid_reg[3][4] ,
    \data_width_64.tlpcompleterid_reg[3][3] ,
    \data_width_64.tlpcompleterid_reg[3][2] ,
    \data_width_64.tlpcompleterid_reg[3][1] ,
    \data_width_64.tlpcompleterid_reg[3][0] ,
    \data_width_64.cplpacket1_reg ,
    \data_width_64.rdtlpaddrltemp_reg[2] ,
    \data_width_64.rresp_reg[3][1]_0 ,
    \data_width_64.rresp_reg[3][0] ,
    rd_ensig,
    wr_ensig,
    axi_aresetn,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg ;
  output emptysig;
  output [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  output [63:0]Q;
  output \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input [0:0]SR;
  input [63:0]\data_width_64.din_reg[63] ;
  input \data_width_64.rresp_reg[3][1] ;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input \data_width_64.tlpcompleterid_reg[3][15] ;
  input \data_width_64.tlpcompleterid_reg[3][14] ;
  input \data_width_64.tlpcompleterid_reg[3][13] ;
  input \data_width_64.tlpcompleterid_reg[3][12] ;
  input \data_width_64.tlpcompleterid_reg[3][11] ;
  input \data_width_64.tlpcompleterid_reg[3][10] ;
  input \data_width_64.tlpcompleterid_reg[3][9] ;
  input \data_width_64.tlpcompleterid_reg[3][8] ;
  input \data_width_64.tlpcompleterid_reg[3][7] ;
  input \data_width_64.tlpcompleterid_reg[3][6] ;
  input \data_width_64.tlpcompleterid_reg[3][5] ;
  input \data_width_64.tlpcompleterid_reg[3][4] ;
  input \data_width_64.tlpcompleterid_reg[3][3] ;
  input \data_width_64.tlpcompleterid_reg[3][2] ;
  input \data_width_64.tlpcompleterid_reg[3][1] ;
  input \data_width_64.tlpcompleterid_reg[3][0] ;
  input \data_width_64.cplpacket1_reg ;
  input [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  input \data_width_64.rresp_reg[3][1]_0 ;
  input \data_width_64.rresp_reg[3][0] ;
  input rd_ensig;
  input wr_ensig;
  input axi_aresetn;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [63:0]Q;
  wire [0:0]SR;
  wire axi_aresetn;
  wire \data_width_64.cplpacket1_reg ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  wire [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire \data_width_64.rresp_reg[3][0] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.rresp_reg[3][1]_0 ;
  wire \data_width_64.tlpcompleterid_reg[3][0] ;
  wire \data_width_64.tlpcompleterid_reg[3][10] ;
  wire \data_width_64.tlpcompleterid_reg[3][11] ;
  wire \data_width_64.tlpcompleterid_reg[3][12] ;
  wire \data_width_64.tlpcompleterid_reg[3][13] ;
  wire \data_width_64.tlpcompleterid_reg[3][14] ;
  wire \data_width_64.tlpcompleterid_reg[3][15] ;
  wire \data_width_64.tlpcompleterid_reg[3][1] ;
  wire \data_width_64.tlpcompleterid_reg[3][2] ;
  wire \data_width_64.tlpcompleterid_reg[3][3] ;
  wire \data_width_64.tlpcompleterid_reg[3][4] ;
  wire \data_width_64.tlpcompleterid_reg[3][5] ;
  wire \data_width_64.tlpcompleterid_reg[3][6] ;
  wire \data_width_64.tlpcompleterid_reg[3][7] ;
  wire \data_width_64.tlpcompleterid_reg[3][8] ;
  wire \data_width_64.tlpcompleterid_reg[3][9] ;
  wire emptysig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire p_76_out;
  wire rd_ensig;
  wire \resetovrd.reset_reg[4] ;
  wire wr_ensig;

  overlay1_axi_pcie_0_0_fifo_generator_ramfifo__parameterized0 \grf.rf 
       (.Q(Q),
        .SR(SR),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.cplpacket1_reg (\data_width_64.cplpacket1_reg ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[32] (\data_width_64.m_axis_cc_tdata_h_reg[32] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[33] (\data_width_64.m_axis_cc_tdata_h_reg[33] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[34] (\data_width_64.m_axis_cc_tdata_h_reg[34] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[35] (\data_width_64.m_axis_cc_tdata_h_reg[35] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[36] (\data_width_64.m_axis_cc_tdata_h_reg[36] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[37] (\data_width_64.m_axis_cc_tdata_h_reg[37] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[38] (\data_width_64.m_axis_cc_tdata_h_reg[38] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[39] (\data_width_64.m_axis_cc_tdata_h_reg[39] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[40] (\data_width_64.m_axis_cc_tdata_h_reg[40] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[41] (\data_width_64.m_axis_cc_tdata_h_reg[41] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[42] (\data_width_64.m_axis_cc_tdata_h_reg[42] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[43] (\data_width_64.m_axis_cc_tdata_h_reg[43] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[63] (\data_width_64.m_axis_cc_tdata_h_reg[63] ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rdtlpaddrltemp_reg[2] (\data_width_64.rdtlpaddrltemp_reg[2] ),
        .\data_width_64.rresp_reg[1][2] (\data_width_64.rresp_reg[1][2] ),
        .\data_width_64.rresp_reg[3][0] (\data_width_64.rresp_reg[3][0] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.rresp_reg[3][1]_0 (\data_width_64.rresp_reg[3][1]_0 ),
        .\data_width_64.tlpcompleterid_reg[3][0] (\data_width_64.tlpcompleterid_reg[3][0] ),
        .\data_width_64.tlpcompleterid_reg[3][10] (\data_width_64.tlpcompleterid_reg[3][10] ),
        .\data_width_64.tlpcompleterid_reg[3][11] (\data_width_64.tlpcompleterid_reg[3][11] ),
        .\data_width_64.tlpcompleterid_reg[3][12] (\data_width_64.tlpcompleterid_reg[3][12] ),
        .\data_width_64.tlpcompleterid_reg[3][13] (\data_width_64.tlpcompleterid_reg[3][13] ),
        .\data_width_64.tlpcompleterid_reg[3][14] (\data_width_64.tlpcompleterid_reg[3][14] ),
        .\data_width_64.tlpcompleterid_reg[3][15] (\data_width_64.tlpcompleterid_reg[3][15] ),
        .\data_width_64.tlpcompleterid_reg[3][1] (\data_width_64.tlpcompleterid_reg[3][1] ),
        .\data_width_64.tlpcompleterid_reg[3][2] (\data_width_64.tlpcompleterid_reg[3][2] ),
        .\data_width_64.tlpcompleterid_reg[3][3] (\data_width_64.tlpcompleterid_reg[3][3] ),
        .\data_width_64.tlpcompleterid_reg[3][4] (\data_width_64.tlpcompleterid_reg[3][4] ),
        .\data_width_64.tlpcompleterid_reg[3][5] (\data_width_64.tlpcompleterid_reg[3][5] ),
        .\data_width_64.tlpcompleterid_reg[3][6] (\data_width_64.tlpcompleterid_reg[3][6] ),
        .\data_width_64.tlpcompleterid_reg[3][7] (\data_width_64.tlpcompleterid_reg[3][7] ),
        .\data_width_64.tlpcompleterid_reg[3][8] (\data_width_64.tlpcompleterid_reg[3][8] ),
        .\data_width_64.tlpcompleterid_reg[3][9] (\data_width_64.tlpcompleterid_reg[3][9] ),
        .emptysig(emptysig),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .p_76_out(p_76_out),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wr_ensig(wr_ensig));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_0" *) 
module overlay1_axi_pcie_0_0_fifo_generator_v13_1_0
   (\gaf.gaf0.ram_afull_i_reg ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \data_width_64.delaylast_reg ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    wrdatasmsig__1,
    \resetovrd.reset_reg[4] ,
    axi_aresetn_0,
    \data_width_64.datain_reg[64] ,
    out,
    Q,
    \data_width_64.m_axi_wvalidsig_reg_0 ,
    m_axi_wready,
    wrensig,
    neqOp1_out,
    axi_aresetn);
  output \gaf.gaf0.ram_afull_i_reg ;
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output \data_width_64.delaylast_reg ;
  output m_axi_wlast;
  output [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  output wrdatasmsig__1;
  input \resetovrd.reset_reg[4] ;
  input axi_aresetn_0;
  input [64:0]\data_width_64.datain_reg[64] ;
  input [0:0]out;
  input [0:0]Q;
  input \data_width_64.m_axi_wvalidsig_reg_0 ;
  input m_axi_wready;
  input wrensig;
  input neqOp1_out;
  input axi_aresetn;

  wire [0:0]Q;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire \data_width_64.delaylast_reg ;
  wire [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axi_wvalidsig_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire neqOp1_out;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire wrdatasmsig__1;
  wire wrensig;

  overlay1_axi_pcie_0_0_fifo_generator_v13_1_0_synth inst_fifo_gen
       (.Q(Q),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\data_width_64.m_axi_wvalidsig_reg_0 (\data_width_64.m_axi_wvalidsig_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .neqOp1_out(neqOp1_out),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wrdatasmsig__1(wrdatasmsig__1),
        .wrensig(wrensig));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_0" *) 
module overlay1_axi_pcie_0_0_fifo_generator_v13_1_0__parameterized0
   (\gaf.gaf0.ram_afull_i_reg ,
    emptysig,
    \data_width_64.m_axis_cc_tdata_h_reg[63] ,
    Q,
    \data_width_64.m_axis_cc_tdata_h_reg[43] ,
    \data_width_64.m_axis_cc_tdata_h_reg[42] ,
    \data_width_64.m_axis_cc_tdata_h_reg[41] ,
    \data_width_64.m_axis_cc_tdata_h_reg[40] ,
    \data_width_64.m_axis_cc_tdata_h_reg[39] ,
    \data_width_64.m_axis_cc_tdata_h_reg[38] ,
    \data_width_64.m_axis_cc_tdata_h_reg[37] ,
    \data_width_64.m_axis_cc_tdata_h_reg[36] ,
    \data_width_64.m_axis_cc_tdata_h_reg[35] ,
    \data_width_64.m_axis_cc_tdata_h_reg[34] ,
    \data_width_64.m_axis_cc_tdata_h_reg[33] ,
    \data_width_64.m_axis_cc_tdata_h_reg[32] ,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    \resetovrd.reset_reg[4] ,
    SR,
    \data_width_64.din_reg[63] ,
    \data_width_64.rresp_reg[3][1] ,
    m_axis_cc_tdata_d1,
    p_76_out,
    \data_width_64.tlpcompleterid_reg[3][15] ,
    \data_width_64.tlpcompleterid_reg[3][14] ,
    \data_width_64.tlpcompleterid_reg[3][13] ,
    \data_width_64.tlpcompleterid_reg[3][12] ,
    \data_width_64.tlpcompleterid_reg[3][11] ,
    \data_width_64.tlpcompleterid_reg[3][10] ,
    \data_width_64.tlpcompleterid_reg[3][9] ,
    \data_width_64.tlpcompleterid_reg[3][8] ,
    \data_width_64.tlpcompleterid_reg[3][7] ,
    \data_width_64.tlpcompleterid_reg[3][6] ,
    \data_width_64.tlpcompleterid_reg[3][5] ,
    \data_width_64.tlpcompleterid_reg[3][4] ,
    \data_width_64.tlpcompleterid_reg[3][3] ,
    \data_width_64.tlpcompleterid_reg[3][2] ,
    \data_width_64.tlpcompleterid_reg[3][1] ,
    \data_width_64.tlpcompleterid_reg[3][0] ,
    \data_width_64.cplpacket1_reg ,
    \data_width_64.rdtlpaddrltemp_reg[2] ,
    \data_width_64.rresp_reg[3][1]_0 ,
    \data_width_64.rresp_reg[3][0] ,
    rd_ensig,
    wr_ensig,
    axi_aresetn,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg ;
  output emptysig;
  output [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  output [63:0]Q;
  output \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input [0:0]SR;
  input [63:0]\data_width_64.din_reg[63] ;
  input \data_width_64.rresp_reg[3][1] ;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input \data_width_64.tlpcompleterid_reg[3][15] ;
  input \data_width_64.tlpcompleterid_reg[3][14] ;
  input \data_width_64.tlpcompleterid_reg[3][13] ;
  input \data_width_64.tlpcompleterid_reg[3][12] ;
  input \data_width_64.tlpcompleterid_reg[3][11] ;
  input \data_width_64.tlpcompleterid_reg[3][10] ;
  input \data_width_64.tlpcompleterid_reg[3][9] ;
  input \data_width_64.tlpcompleterid_reg[3][8] ;
  input \data_width_64.tlpcompleterid_reg[3][7] ;
  input \data_width_64.tlpcompleterid_reg[3][6] ;
  input \data_width_64.tlpcompleterid_reg[3][5] ;
  input \data_width_64.tlpcompleterid_reg[3][4] ;
  input \data_width_64.tlpcompleterid_reg[3][3] ;
  input \data_width_64.tlpcompleterid_reg[3][2] ;
  input \data_width_64.tlpcompleterid_reg[3][1] ;
  input \data_width_64.tlpcompleterid_reg[3][0] ;
  input \data_width_64.cplpacket1_reg ;
  input [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  input \data_width_64.rresp_reg[3][1]_0 ;
  input \data_width_64.rresp_reg[3][0] ;
  input rd_ensig;
  input wr_ensig;
  input axi_aresetn;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [63:0]Q;
  wire [0:0]SR;
  wire axi_aresetn;
  wire \data_width_64.cplpacket1_reg ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  wire [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire \data_width_64.rresp_reg[3][0] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.rresp_reg[3][1]_0 ;
  wire \data_width_64.tlpcompleterid_reg[3][0] ;
  wire \data_width_64.tlpcompleterid_reg[3][10] ;
  wire \data_width_64.tlpcompleterid_reg[3][11] ;
  wire \data_width_64.tlpcompleterid_reg[3][12] ;
  wire \data_width_64.tlpcompleterid_reg[3][13] ;
  wire \data_width_64.tlpcompleterid_reg[3][14] ;
  wire \data_width_64.tlpcompleterid_reg[3][15] ;
  wire \data_width_64.tlpcompleterid_reg[3][1] ;
  wire \data_width_64.tlpcompleterid_reg[3][2] ;
  wire \data_width_64.tlpcompleterid_reg[3][3] ;
  wire \data_width_64.tlpcompleterid_reg[3][4] ;
  wire \data_width_64.tlpcompleterid_reg[3][5] ;
  wire \data_width_64.tlpcompleterid_reg[3][6] ;
  wire \data_width_64.tlpcompleterid_reg[3][7] ;
  wire \data_width_64.tlpcompleterid_reg[3][8] ;
  wire \data_width_64.tlpcompleterid_reg[3][9] ;
  wire emptysig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire p_76_out;
  wire rd_ensig;
  wire \resetovrd.reset_reg[4] ;
  wire wr_ensig;

  overlay1_axi_pcie_0_0_fifo_generator_v13_1_0_synth__parameterized0 inst_fifo_gen
       (.Q(Q),
        .SR(SR),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.cplpacket1_reg (\data_width_64.cplpacket1_reg ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[32] (\data_width_64.m_axis_cc_tdata_h_reg[32] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[33] (\data_width_64.m_axis_cc_tdata_h_reg[33] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[34] (\data_width_64.m_axis_cc_tdata_h_reg[34] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[35] (\data_width_64.m_axis_cc_tdata_h_reg[35] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[36] (\data_width_64.m_axis_cc_tdata_h_reg[36] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[37] (\data_width_64.m_axis_cc_tdata_h_reg[37] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[38] (\data_width_64.m_axis_cc_tdata_h_reg[38] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[39] (\data_width_64.m_axis_cc_tdata_h_reg[39] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[40] (\data_width_64.m_axis_cc_tdata_h_reg[40] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[41] (\data_width_64.m_axis_cc_tdata_h_reg[41] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[42] (\data_width_64.m_axis_cc_tdata_h_reg[42] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[43] (\data_width_64.m_axis_cc_tdata_h_reg[43] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[63] (\data_width_64.m_axis_cc_tdata_h_reg[63] ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rdtlpaddrltemp_reg[2] (\data_width_64.rdtlpaddrltemp_reg[2] ),
        .\data_width_64.rresp_reg[1][2] (\data_width_64.rresp_reg[1][2] ),
        .\data_width_64.rresp_reg[3][0] (\data_width_64.rresp_reg[3][0] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.rresp_reg[3][1]_0 (\data_width_64.rresp_reg[3][1]_0 ),
        .\data_width_64.tlpcompleterid_reg[3][0] (\data_width_64.tlpcompleterid_reg[3][0] ),
        .\data_width_64.tlpcompleterid_reg[3][10] (\data_width_64.tlpcompleterid_reg[3][10] ),
        .\data_width_64.tlpcompleterid_reg[3][11] (\data_width_64.tlpcompleterid_reg[3][11] ),
        .\data_width_64.tlpcompleterid_reg[3][12] (\data_width_64.tlpcompleterid_reg[3][12] ),
        .\data_width_64.tlpcompleterid_reg[3][13] (\data_width_64.tlpcompleterid_reg[3][13] ),
        .\data_width_64.tlpcompleterid_reg[3][14] (\data_width_64.tlpcompleterid_reg[3][14] ),
        .\data_width_64.tlpcompleterid_reg[3][15] (\data_width_64.tlpcompleterid_reg[3][15] ),
        .\data_width_64.tlpcompleterid_reg[3][1] (\data_width_64.tlpcompleterid_reg[3][1] ),
        .\data_width_64.tlpcompleterid_reg[3][2] (\data_width_64.tlpcompleterid_reg[3][2] ),
        .\data_width_64.tlpcompleterid_reg[3][3] (\data_width_64.tlpcompleterid_reg[3][3] ),
        .\data_width_64.tlpcompleterid_reg[3][4] (\data_width_64.tlpcompleterid_reg[3][4] ),
        .\data_width_64.tlpcompleterid_reg[3][5] (\data_width_64.tlpcompleterid_reg[3][5] ),
        .\data_width_64.tlpcompleterid_reg[3][6] (\data_width_64.tlpcompleterid_reg[3][6] ),
        .\data_width_64.tlpcompleterid_reg[3][7] (\data_width_64.tlpcompleterid_reg[3][7] ),
        .\data_width_64.tlpcompleterid_reg[3][8] (\data_width_64.tlpcompleterid_reg[3][8] ),
        .\data_width_64.tlpcompleterid_reg[3][9] (\data_width_64.tlpcompleterid_reg[3][9] ),
        .emptysig(emptysig),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .p_76_out(p_76_out),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wr_ensig(wr_ensig));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_0_synth" *) 
module overlay1_axi_pcie_0_0_fifo_generator_v13_1_0_synth
   (\gaf.gaf0.ram_afull_i_reg ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \data_width_64.delaylast_reg ,
    m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    wrdatasmsig__1,
    \resetovrd.reset_reg[4] ,
    axi_aresetn_0,
    \data_width_64.datain_reg[64] ,
    out,
    Q,
    \data_width_64.m_axi_wvalidsig_reg_0 ,
    m_axi_wready,
    wrensig,
    neqOp1_out,
    axi_aresetn);
  output \gaf.gaf0.ram_afull_i_reg ;
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output \data_width_64.delaylast_reg ;
  output m_axi_wlast;
  output [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  output wrdatasmsig__1;
  input \resetovrd.reset_reg[4] ;
  input axi_aresetn_0;
  input [64:0]\data_width_64.datain_reg[64] ;
  input [0:0]out;
  input [0:0]Q;
  input \data_width_64.m_axi_wvalidsig_reg_0 ;
  input m_axi_wready;
  input wrensig;
  input neqOp1_out;
  input axi_aresetn;

  wire [0:0]Q;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire \data_width_64.delaylast_reg ;
  wire [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axi_wvalidsig_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire neqOp1_out;
  wire [0:0]out;
  wire \resetovrd.reset_reg[4] ;
  wire wrdatasmsig__1;
  wire wrensig;

  overlay1_axi_pcie_0_0_fifo_generator_top \gconvfifo.rf 
       (.Q(Q),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\data_width_64.m_axi_wvalidsig_reg_0 (\data_width_64.m_axi_wvalidsig_reg_0 ),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wlast(m_axi_wlast),
        .m_axi_wready(m_axi_wready),
        .neqOp1_out(neqOp1_out),
        .out(out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wrdatasmsig__1(wrdatasmsig__1),
        .wrensig(wrensig));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_0_synth" *) 
module overlay1_axi_pcie_0_0_fifo_generator_v13_1_0_synth__parameterized0
   (\gaf.gaf0.ram_afull_i_reg ,
    emptysig,
    \data_width_64.m_axis_cc_tdata_h_reg[63] ,
    Q,
    \data_width_64.m_axis_cc_tdata_h_reg[43] ,
    \data_width_64.m_axis_cc_tdata_h_reg[42] ,
    \data_width_64.m_axis_cc_tdata_h_reg[41] ,
    \data_width_64.m_axis_cc_tdata_h_reg[40] ,
    \data_width_64.m_axis_cc_tdata_h_reg[39] ,
    \data_width_64.m_axis_cc_tdata_h_reg[38] ,
    \data_width_64.m_axis_cc_tdata_h_reg[37] ,
    \data_width_64.m_axis_cc_tdata_h_reg[36] ,
    \data_width_64.m_axis_cc_tdata_h_reg[35] ,
    \data_width_64.m_axis_cc_tdata_h_reg[34] ,
    \data_width_64.m_axis_cc_tdata_h_reg[33] ,
    \data_width_64.m_axis_cc_tdata_h_reg[32] ,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    \resetovrd.reset_reg[4] ,
    SR,
    \data_width_64.din_reg[63] ,
    \data_width_64.rresp_reg[3][1] ,
    m_axis_cc_tdata_d1,
    p_76_out,
    \data_width_64.tlpcompleterid_reg[3][15] ,
    \data_width_64.tlpcompleterid_reg[3][14] ,
    \data_width_64.tlpcompleterid_reg[3][13] ,
    \data_width_64.tlpcompleterid_reg[3][12] ,
    \data_width_64.tlpcompleterid_reg[3][11] ,
    \data_width_64.tlpcompleterid_reg[3][10] ,
    \data_width_64.tlpcompleterid_reg[3][9] ,
    \data_width_64.tlpcompleterid_reg[3][8] ,
    \data_width_64.tlpcompleterid_reg[3][7] ,
    \data_width_64.tlpcompleterid_reg[3][6] ,
    \data_width_64.tlpcompleterid_reg[3][5] ,
    \data_width_64.tlpcompleterid_reg[3][4] ,
    \data_width_64.tlpcompleterid_reg[3][3] ,
    \data_width_64.tlpcompleterid_reg[3][2] ,
    \data_width_64.tlpcompleterid_reg[3][1] ,
    \data_width_64.tlpcompleterid_reg[3][0] ,
    \data_width_64.cplpacket1_reg ,
    \data_width_64.rdtlpaddrltemp_reg[2] ,
    \data_width_64.rresp_reg[3][1]_0 ,
    \data_width_64.rresp_reg[3][0] ,
    rd_ensig,
    wr_ensig,
    axi_aresetn,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg ;
  output emptysig;
  output [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  output [63:0]Q;
  output \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input \resetovrd.reset_reg[4] ;
  input [0:0]SR;
  input [63:0]\data_width_64.din_reg[63] ;
  input \data_width_64.rresp_reg[3][1] ;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input \data_width_64.tlpcompleterid_reg[3][15] ;
  input \data_width_64.tlpcompleterid_reg[3][14] ;
  input \data_width_64.tlpcompleterid_reg[3][13] ;
  input \data_width_64.tlpcompleterid_reg[3][12] ;
  input \data_width_64.tlpcompleterid_reg[3][11] ;
  input \data_width_64.tlpcompleterid_reg[3][10] ;
  input \data_width_64.tlpcompleterid_reg[3][9] ;
  input \data_width_64.tlpcompleterid_reg[3][8] ;
  input \data_width_64.tlpcompleterid_reg[3][7] ;
  input \data_width_64.tlpcompleterid_reg[3][6] ;
  input \data_width_64.tlpcompleterid_reg[3][5] ;
  input \data_width_64.tlpcompleterid_reg[3][4] ;
  input \data_width_64.tlpcompleterid_reg[3][3] ;
  input \data_width_64.tlpcompleterid_reg[3][2] ;
  input \data_width_64.tlpcompleterid_reg[3][1] ;
  input \data_width_64.tlpcompleterid_reg[3][0] ;
  input \data_width_64.cplpacket1_reg ;
  input [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  input \data_width_64.rresp_reg[3][1]_0 ;
  input \data_width_64.rresp_reg[3][0] ;
  input rd_ensig;
  input wr_ensig;
  input axi_aresetn;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [63:0]Q;
  wire [0:0]SR;
  wire axi_aresetn;
  wire \data_width_64.cplpacket1_reg ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  wire [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire \data_width_64.rresp_reg[3][0] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.rresp_reg[3][1]_0 ;
  wire \data_width_64.tlpcompleterid_reg[3][0] ;
  wire \data_width_64.tlpcompleterid_reg[3][10] ;
  wire \data_width_64.tlpcompleterid_reg[3][11] ;
  wire \data_width_64.tlpcompleterid_reg[3][12] ;
  wire \data_width_64.tlpcompleterid_reg[3][13] ;
  wire \data_width_64.tlpcompleterid_reg[3][14] ;
  wire \data_width_64.tlpcompleterid_reg[3][15] ;
  wire \data_width_64.tlpcompleterid_reg[3][1] ;
  wire \data_width_64.tlpcompleterid_reg[3][2] ;
  wire \data_width_64.tlpcompleterid_reg[3][3] ;
  wire \data_width_64.tlpcompleterid_reg[3][4] ;
  wire \data_width_64.tlpcompleterid_reg[3][5] ;
  wire \data_width_64.tlpcompleterid_reg[3][6] ;
  wire \data_width_64.tlpcompleterid_reg[3][7] ;
  wire \data_width_64.tlpcompleterid_reg[3][8] ;
  wire \data_width_64.tlpcompleterid_reg[3][9] ;
  wire emptysig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire m_axis_cc_tdata_d1;
  wire p_76_out;
  wire rd_ensig;
  wire \resetovrd.reset_reg[4] ;
  wire wr_ensig;

  overlay1_axi_pcie_0_0_fifo_generator_top__parameterized0 \gconvfifo.rf 
       (.Q(Q),
        .SR(SR),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.cplpacket1_reg (\data_width_64.cplpacket1_reg ),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[32] (\data_width_64.m_axis_cc_tdata_h_reg[32] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[33] (\data_width_64.m_axis_cc_tdata_h_reg[33] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[34] (\data_width_64.m_axis_cc_tdata_h_reg[34] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[35] (\data_width_64.m_axis_cc_tdata_h_reg[35] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[36] (\data_width_64.m_axis_cc_tdata_h_reg[36] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[37] (\data_width_64.m_axis_cc_tdata_h_reg[37] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[38] (\data_width_64.m_axis_cc_tdata_h_reg[38] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[39] (\data_width_64.m_axis_cc_tdata_h_reg[39] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[40] (\data_width_64.m_axis_cc_tdata_h_reg[40] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[41] (\data_width_64.m_axis_cc_tdata_h_reg[41] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[42] (\data_width_64.m_axis_cc_tdata_h_reg[42] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[43] (\data_width_64.m_axis_cc_tdata_h_reg[43] ),
        .\data_width_64.m_axis_cc_tdata_h_reg[63] (\data_width_64.m_axis_cc_tdata_h_reg[63] ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rdtlpaddrltemp_reg[2] (\data_width_64.rdtlpaddrltemp_reg[2] ),
        .\data_width_64.rresp_reg[1][2] (\data_width_64.rresp_reg[1][2] ),
        .\data_width_64.rresp_reg[3][0] (\data_width_64.rresp_reg[3][0] ),
        .\data_width_64.rresp_reg[3][1] (\data_width_64.rresp_reg[3][1] ),
        .\data_width_64.rresp_reg[3][1]_0 (\data_width_64.rresp_reg[3][1]_0 ),
        .\data_width_64.tlpcompleterid_reg[3][0] (\data_width_64.tlpcompleterid_reg[3][0] ),
        .\data_width_64.tlpcompleterid_reg[3][10] (\data_width_64.tlpcompleterid_reg[3][10] ),
        .\data_width_64.tlpcompleterid_reg[3][11] (\data_width_64.tlpcompleterid_reg[3][11] ),
        .\data_width_64.tlpcompleterid_reg[3][12] (\data_width_64.tlpcompleterid_reg[3][12] ),
        .\data_width_64.tlpcompleterid_reg[3][13] (\data_width_64.tlpcompleterid_reg[3][13] ),
        .\data_width_64.tlpcompleterid_reg[3][14] (\data_width_64.tlpcompleterid_reg[3][14] ),
        .\data_width_64.tlpcompleterid_reg[3][15] (\data_width_64.tlpcompleterid_reg[3][15] ),
        .\data_width_64.tlpcompleterid_reg[3][1] (\data_width_64.tlpcompleterid_reg[3][1] ),
        .\data_width_64.tlpcompleterid_reg[3][2] (\data_width_64.tlpcompleterid_reg[3][2] ),
        .\data_width_64.tlpcompleterid_reg[3][3] (\data_width_64.tlpcompleterid_reg[3][3] ),
        .\data_width_64.tlpcompleterid_reg[3][4] (\data_width_64.tlpcompleterid_reg[3][4] ),
        .\data_width_64.tlpcompleterid_reg[3][5] (\data_width_64.tlpcompleterid_reg[3][5] ),
        .\data_width_64.tlpcompleterid_reg[3][6] (\data_width_64.tlpcompleterid_reg[3][6] ),
        .\data_width_64.tlpcompleterid_reg[3][7] (\data_width_64.tlpcompleterid_reg[3][7] ),
        .\data_width_64.tlpcompleterid_reg[3][8] (\data_width_64.tlpcompleterid_reg[3][8] ),
        .\data_width_64.tlpcompleterid_reg[3][9] (\data_width_64.tlpcompleterid_reg[3][9] ),
        .emptysig(emptysig),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axis_cc_tdata_d1(m_axis_cc_tdata_d1),
        .p_76_out(p_76_out),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .wr_ensig(wr_ensig));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module overlay1_axi_pcie_0_0_memory
   (m_axi_wlast,
    \data_width_64.m_axi_wvalidsig_reg ,
    wrdatasmsig__1,
    \resetovrd.reset_reg[4] ,
    ram_empty_fb_i_reg,
    E,
    axi_aresetn,
    Q,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \data_width_64.datain_reg[64] ,
    neqOp1_out,
    \data_width_64.m_axi_wvalidsig_reg_0 ,
    m_axi_wready,
    empty_fwft_i_reg,
    \gpregsm1.curr_fwft_state_reg[1] );
  output m_axi_wlast;
  output [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  output wrdatasmsig__1;
  input \resetovrd.reset_reg[4] ;
  input ram_empty_fb_i_reg;
  input [0:0]E;
  input axi_aresetn;
  input [8:0]Q;
  input [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [64:0]\data_width_64.datain_reg[64] ;
  input neqOp1_out;
  input \data_width_64.m_axi_wvalidsig_reg_0 ;
  input m_axi_wready;
  input empty_fwft_i_reg;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;

  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [64:0]\data_width_64.datain_reg[64] ;
  wire [64:0]\data_width_64.m_axi_wvalidsig_reg ;
  wire \data_width_64.m_axi_wvalidsig_reg_0 ;
  wire [64:0]doutb;
  wire empty_fwft_i_reg;
  wire [8:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_wlast;
  wire m_axi_wready;
  wire neqOp1_out;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;
  wire wrdatasmsig__1;

  (* SOFT_HLUTNM = "soft_lutpair684" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \data_width_64.wrdatasmsig[1]_i_2 
       (.I0(\data_width_64.m_axi_wvalidsig_reg [64]),
        .I1(\data_width_64.m_axi_wvalidsig_reg_0 ),
        .I2(m_axi_wready),
        .I3(empty_fwft_i_reg),
        .O(wrdatasmsig__1));
  overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.datain_reg[64] (\data_width_64.datain_reg[64] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[0]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [0]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[10]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [10]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[11]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [11]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[12]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [12]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[13]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [13]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[14]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [14]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[15]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [15]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[16]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [16]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[17]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [17]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[18]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [18]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[19]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [19]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[1]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [1]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[20]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [20]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[21]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [21]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[22]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [22]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[23]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [23]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[24]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [24]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[25]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [25]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[26]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [26]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[27]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [27]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[28]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [28]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[29]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [29]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[2]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[30]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [30]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[31]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [31]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[32]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [32]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[33]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [33]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[34]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [34]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[35]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [35]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[36]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [36]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[37]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [37]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[38]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [38]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[39]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [39]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[3]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[40]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [40]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[41]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [41]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[42]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [42]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[43]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [43]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[44]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [44]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[45]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [45]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[46]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [46]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[47]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [47]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[48]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [48]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[49]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [49]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[4]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[50]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [50]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[51]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [51]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[52]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [52]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[53]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [53]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[54]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [54]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[55]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [55]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[56]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [56]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[57]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [57]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[58]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [58]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[59]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [59]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[5]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[60]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [60]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[61]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [61]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[62]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [62]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[63]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [63]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[64] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[64]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [64]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[6]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[7]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[8]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [8]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(doutb[9]),
        .Q(\data_width_64.m_axi_wvalidsig_reg [9]),
        .R(axi_aresetn));
  (* SOFT_HLUTNM = "soft_lutpair684" *) 
  LUT2 #(
    .INIT(4'h8)) 
    m_axi_wlast_INST_0
       (.I0(\data_width_64.m_axi_wvalidsig_reg [64]),
        .I1(neqOp1_out),
        .O(m_axi_wlast));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module overlay1_axi_pcie_0_0_memory__parameterized0
   (\data_width_64.m_axis_cc_tdata_h_reg[63] ,
    \data_width_64.m_axis_cc_tdatatemp64_reg[31] ,
    \data_width_64.m_axis_cc_tdata_h_reg[43] ,
    \data_width_64.m_axis_cc_tdata_h_reg[42] ,
    \data_width_64.m_axis_cc_tdata_h_reg[41] ,
    \data_width_64.m_axis_cc_tdata_h_reg[40] ,
    \data_width_64.m_axis_cc_tdata_h_reg[39] ,
    \data_width_64.m_axis_cc_tdata_h_reg[38] ,
    \data_width_64.m_axis_cc_tdata_h_reg[37] ,
    \data_width_64.m_axis_cc_tdata_h_reg[36] ,
    \data_width_64.m_axis_cc_tdata_h_reg[35] ,
    \data_width_64.m_axis_cc_tdata_h_reg[34] ,
    \data_width_64.m_axis_cc_tdata_h_reg[33] ,
    \data_width_64.m_axis_cc_tdata_h_reg[32] ,
    \resetovrd.reset_reg[4] ,
    WEA,
    ram_empty_fb_i_reg,
    SR,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    Q,
    \data_width_64.din_reg[63] ,
    \data_width_64.rresp_reg[3][1] ,
    m_axis_cc_tdata_d1,
    p_76_out,
    \data_width_64.tlpcompleterid_reg[3][15] ,
    \data_width_64.tlpcompleterid_reg[3][14] ,
    \data_width_64.tlpcompleterid_reg[3][13] ,
    \data_width_64.tlpcompleterid_reg[3][12] ,
    \data_width_64.tlpcompleterid_reg[3][11] ,
    \data_width_64.tlpcompleterid_reg[3][10] ,
    \data_width_64.tlpcompleterid_reg[3][9] ,
    \data_width_64.tlpcompleterid_reg[3][8] ,
    \data_width_64.tlpcompleterid_reg[3][7] ,
    \data_width_64.tlpcompleterid_reg[3][6] ,
    \data_width_64.tlpcompleterid_reg[3][5] ,
    \data_width_64.tlpcompleterid_reg[3][4] ,
    \data_width_64.tlpcompleterid_reg[3][3] ,
    \data_width_64.tlpcompleterid_reg[3][2] ,
    \data_width_64.tlpcompleterid_reg[3][1] ,
    \data_width_64.tlpcompleterid_reg[3][0] ,
    \data_width_64.cplpacket1_reg ,
    \data_width_64.rdtlpaddrltemp_reg[2] ,
    \data_width_64.rresp_reg[3][1]_0 ,
    \data_width_64.rresp_reg[3][0] ,
    E);
  output [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  output [63:0]\data_width_64.m_axis_cc_tdatatemp64_reg[31] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  output \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  input \resetovrd.reset_reg[4] ;
  input [0:0]WEA;
  input ram_empty_fb_i_reg;
  input [0:0]SR;
  input [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [10:0]Q;
  input [63:0]\data_width_64.din_reg[63] ;
  input \data_width_64.rresp_reg[3][1] ;
  input m_axis_cc_tdata_d1;
  input p_76_out;
  input \data_width_64.tlpcompleterid_reg[3][15] ;
  input \data_width_64.tlpcompleterid_reg[3][14] ;
  input \data_width_64.tlpcompleterid_reg[3][13] ;
  input \data_width_64.tlpcompleterid_reg[3][12] ;
  input \data_width_64.tlpcompleterid_reg[3][11] ;
  input \data_width_64.tlpcompleterid_reg[3][10] ;
  input \data_width_64.tlpcompleterid_reg[3][9] ;
  input \data_width_64.tlpcompleterid_reg[3][8] ;
  input \data_width_64.tlpcompleterid_reg[3][7] ;
  input \data_width_64.tlpcompleterid_reg[3][6] ;
  input \data_width_64.tlpcompleterid_reg[3][5] ;
  input \data_width_64.tlpcompleterid_reg[3][4] ;
  input \data_width_64.tlpcompleterid_reg[3][3] ;
  input \data_width_64.tlpcompleterid_reg[3][2] ;
  input \data_width_64.tlpcompleterid_reg[3][1] ;
  input \data_width_64.tlpcompleterid_reg[3][0] ;
  input \data_width_64.cplpacket1_reg ;
  input [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  input \data_width_64.rresp_reg[3][1]_0 ;
  input \data_width_64.rresp_reg[3][0] ;
  input [0:0]E;

  wire [0:0]E;
  wire [10:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire \data_width_64.cplpacket1_reg ;
  wire [63:0]\data_width_64.din_reg[63] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[32] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[33] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[34] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[35] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[36] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[37] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[38] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[39] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[40] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[41] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[42] ;
  wire \data_width_64.m_axis_cc_tdata_h_reg[43] ;
  wire [18:0]\data_width_64.m_axis_cc_tdata_h_reg[63] ;
  wire [63:0]\data_width_64.m_axis_cc_tdatatemp64_reg[31] ;
  wire [0:0]\data_width_64.rdtlpaddrltemp_reg[2] ;
  wire \data_width_64.rresp_reg[3][0] ;
  wire \data_width_64.rresp_reg[3][1] ;
  wire \data_width_64.rresp_reg[3][1]_0 ;
  wire \data_width_64.tlpcompleterid_reg[3][0] ;
  wire \data_width_64.tlpcompleterid_reg[3][10] ;
  wire \data_width_64.tlpcompleterid_reg[3][11] ;
  wire \data_width_64.tlpcompleterid_reg[3][12] ;
  wire \data_width_64.tlpcompleterid_reg[3][13] ;
  wire \data_width_64.tlpcompleterid_reg[3][14] ;
  wire \data_width_64.tlpcompleterid_reg[3][15] ;
  wire \data_width_64.tlpcompleterid_reg[3][1] ;
  wire \data_width_64.tlpcompleterid_reg[3][2] ;
  wire \data_width_64.tlpcompleterid_reg[3][3] ;
  wire \data_width_64.tlpcompleterid_reg[3][4] ;
  wire \data_width_64.tlpcompleterid_reg[3][5] ;
  wire \data_width_64.tlpcompleterid_reg[3][6] ;
  wire \data_width_64.tlpcompleterid_reg[3][7] ;
  wire \data_width_64.tlpcompleterid_reg[3][8] ;
  wire \data_width_64.tlpcompleterid_reg[3][9] ;
  wire [63:0]doutb;
  wire [10:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire m_axis_cc_tdata_d1;
  wire p_76_out;
  wire ram_empty_fb_i_reg;
  wire \resetovrd.reset_reg[4] ;

  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[32]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [24]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [56]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[32] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[33]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [25]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [57]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[33] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[34]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [26]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [58]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[34] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[35]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [27]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [59]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[35] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[36]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [28]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [60]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[36] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[37]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [29]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [61]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[37] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[38]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [30]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [62]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[38] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[39]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [31]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [63]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[39] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[40]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [16]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [48]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[40] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[41]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [17]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [49]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[41] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[42]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [18]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [50]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[42] ));
  LUT4 #(
    .INIT(16'hEA2A)) 
    \data_width_64.m_axis_cc_tdata_h[43]_i_2 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [19]),
        .I1(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I2(\data_width_64.cplpacket1_reg ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [51]),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[43] ));
  LUT6 #(
    .INIT(64'hEA2A000000000000)) 
    \data_width_64.m_axis_cc_tdata_h[44]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [20]),
        .I1(\data_width_64.cplpacket1_reg ),
        .I2(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [52]),
        .I4(p_76_out),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [0]));
  LUT6 #(
    .INIT(64'hEA2A000000000000)) 
    \data_width_64.m_axis_cc_tdata_h[46]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [22]),
        .I1(\data_width_64.cplpacket1_reg ),
        .I2(\data_width_64.rdtlpaddrltemp_reg[2] ),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [54]),
        .I4(p_76_out),
        .I5(\data_width_64.rresp_reg[3][1] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [1]));
  LUT6 #(
    .INIT(64'h000000FF00FFB800)) 
    \data_width_64.m_axis_cc_tdata_h[47]_i_1 
       (.I0(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [55]),
        .I1(m_axis_cc_tdata_d1),
        .I2(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [23]),
        .I3(p_76_out),
        .I4(\data_width_64.rresp_reg[3][1]_0 ),
        .I5(\data_width_64.rresp_reg[3][0] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [2]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[48]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [40]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [8]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][0] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [3]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[49]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [41]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [9]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][1] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [4]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[50]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [42]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [10]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][2] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [5]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[51]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [43]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [11]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][3] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [6]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[52]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [44]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [12]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][4] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [7]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[53]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [45]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [13]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][5] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [8]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[54]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [46]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [14]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][6] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [9]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[55]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [47]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [15]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][7] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [10]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[56]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [32]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [0]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][8] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [11]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[57]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [33]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [1]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][9] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [12]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[58]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [34]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [2]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][10] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [13]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[59]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [35]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [3]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][11] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [14]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[60]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [36]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [4]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][12] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [15]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[61]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [37]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [5]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][13] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [16]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[62]_i_1 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [38]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [6]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][14] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [17]));
  LUT6 #(
    .INIT(64'h8A80FFFF8A800000)) 
    \data_width_64.m_axis_cc_tdata_h[63]_i_2 
       (.I0(\data_width_64.rresp_reg[3][1] ),
        .I1(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [39]),
        .I2(m_axis_cc_tdata_d1),
        .I3(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [7]),
        .I4(p_76_out),
        .I5(\data_width_64.tlpcompleterid_reg[3][15] ),
        .O(\data_width_64.m_axis_cc_tdata_h_reg[63] [18]));
  overlay1_axi_pcie_0_0_blk_mem_gen_v8_3_2__parameterized1 \gbm.gbmg.gbmga.ngecc.bmg 
       (.D(doutb),
        .Q(Q),
        .SR(SR),
        .WEA(WEA),
        .\data_width_64.din_reg[63] (\data_width_64.din_reg[63] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[0]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[10]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[11] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[11]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[12] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[12]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[13] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[13]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[14] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[14]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[15] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[15]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[16] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[16]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[17] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[17]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[18] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[18]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[19] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[19]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[1]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[20] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[20]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[21] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[21]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[22] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[22]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[23] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[23]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[24] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[24]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[25] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[25]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[26] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[26]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[27] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[27]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[28] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[28]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[29] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[29]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[2]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[30] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[30]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[31] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[31]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[32] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[32]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[33] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[33]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[34] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[34]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[35] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[35]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[36] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[36]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[37] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[37]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[38] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[38]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[39] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[39]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[3]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[40] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[40]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[41] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[41]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[42] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[42]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[43] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[43]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[44] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[44]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[45] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[45]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[46] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[46]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[47] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[47]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[48] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[48]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[49] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[49]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[4]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[50] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[50]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[51] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[51]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[52] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[52]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[53] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[53]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[54] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[54]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[55] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[55]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[56] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[56]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[57] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[57]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[58] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[58]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[59] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[59]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[5]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[60] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[60]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[61] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[61]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[62] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[62]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [62]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[63] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[63]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [63]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[6]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[7]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[8]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_bm.dout_i_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(doutb[9]),
        .Q(\data_width_64.m_axis_cc_tdatatemp64_reg[31] [9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module overlay1_axi_pcie_0_0_rd_bin_cntr
   (ram_full_fb_i_reg,
    Q,
    ram_empty_fb_i_reg,
    ram_full_fb_i_reg_0,
    \gaf.gaf0.ram_afull_i_reg ,
    ram_empty_fb_i_reg_0,
    \gc1.count_d2_reg[7]_0 ,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \gcc0.gc1.gsym.count_d1_reg[8] ,
    \gcc0.gc1.gsym.count_reg[8] ,
    axi_aresetn,
    E,
    \resetovrd.reset_reg[4] );
  output ram_full_fb_i_reg;
  output [8:0]Q;
  output ram_empty_fb_i_reg;
  output ram_full_fb_i_reg_0;
  output \gaf.gaf0.ram_afull_i_reg ;
  output ram_empty_fb_i_reg_0;
  output [7:0]\gc1.count_d2_reg[7]_0 ;
  input [0:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [0:0]\gcc0.gc1.gsym.count_d1_reg[8] ;
  input [0:0]\gcc0.gc1.gsym.count_reg[8] ;
  input axi_aresetn;
  input [0:0]E;
  input \resetovrd.reset_reg[4] ;

  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gc1.count[8]_i_2_n_0 ;
  wire [7:0]\gc1.count_d2_reg[7]_0 ;
  wire [0:0]\gcc0.gc1.gsym.count_d1_reg[8] ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire [0:0]\gcc0.gc1.gsym.count_reg[8] ;
  wire [8:0]plusOp;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [8:8]rd_pntr_plus1;
  wire [8:0]rd_pntr_plus2;
  wire \resetovrd.reset_reg[4] ;

  (* SOFT_HLUTNM = "soft_lutpair680" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair680" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair678" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair678" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[6]_i_1 
       (.I0(\gc1.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .O(plusOp[6]));
  (* SOFT_HLUTNM = "soft_lutpair679" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[7]_i_1 
       (.I0(\gc1.count[8]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .I2(rd_pntr_plus2[7]),
        .O(plusOp[7]));
  (* SOFT_HLUTNM = "soft_lutpair679" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[8]_i_1 
       (.I0(rd_pntr_plus2[6]),
        .I1(\gc1.count[8]_i_2_n_0 ),
        .I2(rd_pntr_plus2[7]),
        .I3(rd_pntr_plus2[8]),
        .O(plusOp[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc1.count[8]_i_2 
       (.I0(rd_pntr_plus2[5]),
        .I1(rd_pntr_plus2[3]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[0]),
        .I4(rd_pntr_plus2[2]),
        .I5(rd_pntr_plus2[4]),
        .O(\gc1.count[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .Q(\gc1.count_d2_reg[7]_0 [0]),
        .S(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[1]),
        .Q(\gc1.count_d2_reg[7]_0 [1]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[2]),
        .Q(\gc1.count_d2_reg[7]_0 [2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[3]),
        .Q(\gc1.count_d2_reg[7]_0 [3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[4]),
        .Q(\gc1.count_d2_reg[7]_0 [4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[5]),
        .Q(\gc1.count_d2_reg[7]_0 [5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[6]),
        .Q(\gc1.count_d2_reg[7]_0 [6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[7]),
        .Q(\gc1.count_d2_reg[7]_0 [7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[8]),
        .Q(rd_pntr_plus1),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [0]),
        .Q(Q[0]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [1]),
        .Q(Q[1]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [2]),
        .Q(Q[2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [3]),
        .Q(Q[3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [4]),
        .Q(Q[4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [5]),
        .Q(Q[5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [6]),
        .Q(Q[6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[7]_0 [7]),
        .Q(Q[7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus1),
        .Q(Q[8]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[0]),
        .Q(rd_pntr_plus2[0]),
        .R(axi_aresetn));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[1]),
        .Q(rd_pntr_plus2[1]),
        .S(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[2]),
        .Q(rd_pntr_plus2[2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[3]),
        .Q(rd_pntr_plus2[3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[4]),
        .Q(rd_pntr_plus2[4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[5]),
        .Q(rd_pntr_plus2[5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[6]),
        .Q(rd_pntr_plus2[6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[7]),
        .Q(rd_pntr_plus2[7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp[8]),
        .Q(rd_pntr_plus2[8]),
        .R(axi_aresetn));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__4 
       (.I0(Q[8]),
        .I1(\gcc0.gc1.gsym.count_d2_reg[8] ),
        .O(ram_full_fb_i_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__5 
       (.I0(rd_pntr_plus1),
        .I1(\gcc0.gc1.gsym.count_d2_reg[8] ),
        .O(ram_empty_fb_i_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__6 
       (.I0(Q[8]),
        .I1(\gcc0.gc1.gsym.count_d1_reg[8] ),
        .O(ram_full_fb_i_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__7 
       (.I0(Q[8]),
        .I1(\gcc0.gc1.gsym.count_reg[8] ),
        .O(\gaf.gaf0.ram_afull_i_reg ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[4].gms.ms_i_1__8 
       (.I0(Q[8]),
        .I1(\gcc0.gc1.gsym.count_d2_reg[8] ),
        .O(ram_empty_fb_i_reg_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module overlay1_axi_pcie_0_0_rd_bin_cntr__parameterized0
   (ram_full_fb_i_reg,
    Q,
    ram_empty_fb_i_reg,
    ram_full_fb_i_reg_0,
    \gaf.gaf0.ram_afull_i_reg ,
    ram_empty_fb_i_reg_0,
    \gc1.count_d2_reg[9]_0 ,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    \gcc0.gc1.gsym.count_d1_reg[10] ,
    \gcc0.gc1.gsym.count_reg[10] ,
    SR,
    E,
    \resetovrd.reset_reg[4] );
  output ram_full_fb_i_reg;
  output [10:0]Q;
  output ram_empty_fb_i_reg;
  output ram_full_fb_i_reg_0;
  output \gaf.gaf0.ram_afull_i_reg ;
  output ram_empty_fb_i_reg_0;
  output [9:0]\gc1.count_d2_reg[9]_0 ;
  input [0:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [0:0]\gcc0.gc1.gsym.count_d1_reg[10] ;
  input [0:0]\gcc0.gc1.gsym.count_reg[10] ;
  input [0:0]SR;
  input [0:0]E;
  input \resetovrd.reset_reg[4] ;

  wire [0:0]E;
  wire [10:0]Q;
  wire [0:0]SR;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire \gc1.count[10]_i_2_n_0 ;
  wire [9:0]\gc1.count_d2_reg[9]_0 ;
  wire [0:0]\gcc0.gc1.gsym.count_d1_reg[10] ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire [0:0]\gcc0.gc1.gsym.count_reg[10] ;
  wire [10:0]plusOp__1;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire [10:10]rd_pntr_plus1;
  wire [10:0]rd_pntr_plus2;
  wire \resetovrd.reset_reg[4] ;

  (* SOFT_HLUTNM = "soft_lutpair618" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1__0 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp__1[0]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[10]_i_1 
       (.I0(rd_pntr_plus2[8]),
        .I1(rd_pntr_plus2[6]),
        .I2(\gc1.count[10]_i_2_n_0 ),
        .I3(rd_pntr_plus2[7]),
        .I4(rd_pntr_plus2[9]),
        .I5(rd_pntr_plus2[10]),
        .O(plusOp__1[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gc1.count[10]_i_2 
       (.I0(rd_pntr_plus2[5]),
        .I1(rd_pntr_plus2[3]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[0]),
        .I4(rd_pntr_plus2[2]),
        .I5(rd_pntr_plus2[4]),
        .O(\gc1.count[10]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1__0 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair618" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1__0 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair616" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1__0 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair616" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1__0 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gc1.count[5]_i_1__0 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .I5(rd_pntr_plus2[5]),
        .O(plusOp__1[5]));
  (* SOFT_HLUTNM = "soft_lutpair617" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[6]_i_1__0 
       (.I0(\gc1.count[10]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .O(plusOp__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair617" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[7]_i_1__0 
       (.I0(\gc1.count[10]_i_2_n_0 ),
        .I1(rd_pntr_plus2[6]),
        .I2(rd_pntr_plus2[7]),
        .O(plusOp__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair615" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[8]_i_1__0 
       (.I0(rd_pntr_plus2[6]),
        .I1(\gc1.count[10]_i_2_n_0 ),
        .I2(rd_pntr_plus2[7]),
        .I3(rd_pntr_plus2[8]),
        .O(plusOp__1[8]));
  (* SOFT_HLUTNM = "soft_lutpair615" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[9]_i_1 
       (.I0(rd_pntr_plus2[7]),
        .I1(\gc1.count[10]_i_2_n_0 ),
        .I2(rd_pntr_plus2[6]),
        .I3(rd_pntr_plus2[8]),
        .I4(rd_pntr_plus2[9]),
        .O(plusOp__1[9]));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .Q(\gc1.count_d2_reg[9]_0 [0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[10]),
        .Q(rd_pntr_plus1),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[1]),
        .Q(\gc1.count_d2_reg[9]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[2]),
        .Q(\gc1.count_d2_reg[9]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[3]),
        .Q(\gc1.count_d2_reg[9]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[4]),
        .Q(\gc1.count_d2_reg[9]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[5]),
        .Q(\gc1.count_d2_reg[9]_0 [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[6]),
        .Q(\gc1.count_d2_reg[9]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[7]),
        .Q(\gc1.count_d2_reg[9]_0 [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[8]),
        .Q(\gc1.count_d2_reg[9]_0 [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus2[9]),
        .Q(\gc1.count_d2_reg[9]_0 [9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(rd_pntr_plus1),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gc1.count_d2_reg[9]_0 [9]),
        .Q(Q[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[0]),
        .Q(rd_pntr_plus2[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[10]),
        .Q(rd_pntr_plus2[10]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[1]),
        .Q(rd_pntr_plus2[1]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[2]),
        .Q(rd_pntr_plus2[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[3]),
        .Q(rd_pntr_plus2[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[4]),
        .Q(rd_pntr_plus2[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[5]),
        .Q(rd_pntr_plus2[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[6]),
        .Q(rd_pntr_plus2[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[7]),
        .Q(rd_pntr_plus2[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[8]),
        .Q(rd_pntr_plus2[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gc1.count_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__1[9]),
        .Q(rd_pntr_plus2[9]),
        .R(SR));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[5].gms.ms_i_1 
       (.I0(Q[10]),
        .I1(\gcc0.gc1.gsym.count_d2_reg[10] ),
        .O(ram_full_fb_i_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[5].gms.ms_i_1__0 
       (.I0(rd_pntr_plus1),
        .I1(\gcc0.gc1.gsym.count_d2_reg[10] ),
        .O(ram_empty_fb_i_reg));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[5].gms.ms_i_1__1 
       (.I0(Q[10]),
        .I1(\gcc0.gc1.gsym.count_d1_reg[10] ),
        .O(ram_full_fb_i_reg_0));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[5].gms.ms_i_1__2 
       (.I0(Q[10]),
        .I1(\gcc0.gc1.gsym.count_reg[10] ),
        .O(\gaf.gaf0.ram_afull_i_reg ));
  LUT2 #(
    .INIT(4'h9)) 
    \gmux.gm[5].gms.ms_i_1__3 
       (.I0(Q[10]),
        .I1(\gcc0.gc1.gsym.count_d2_reg[10] ),
        .O(ram_empty_fb_i_reg_0));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module overlay1_axi_pcie_0_0_rd_fwft
   (\gpregsm1.curr_fwft_state_reg[1]_0 ,
    E,
    \goreg_bm.dout_i_reg[64] ,
    axi_aresetn,
    \resetovrd.reset_reg[4] ,
    \data_width_64.m_axi_wvalidsig_reg ,
    m_axi_wready,
    p_2_out__0);
  output \gpregsm1.curr_fwft_state_reg[1]_0 ;
  output [0:0]E;
  output [0:0]\goreg_bm.dout_i_reg[64] ;
  input axi_aresetn;
  input \resetovrd.reset_reg[4] ;
  input \data_width_64.m_axi_wvalidsig_reg ;
  input m_axi_wready;
  input p_2_out__0;

  wire [0:0]E;
  wire axi_aresetn;
  wire [0:0]curr_fwft_state;
  wire \data_width_64.m_axi_wvalidsig_reg ;
  wire empty_fwft_fb_reg_n_0;
  wire empty_fwft_i0__5;
  wire [0:0]\goreg_bm.dout_i_reg[64] ;
  wire \gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire m_axi_wready;
  wire [1:0]next_fwft_state;
  wire p_2_out__0;
  wire \resetovrd.reset_reg[4] ;

  LUT6 #(
    .INIT(64'hAABAAAAA22222222)) 
    empty_fwft_fb_i_1__0
       (.I0(empty_fwft_fb_reg_n_0),
        .I1(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I2(m_axi_wready),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I4(\data_width_64.m_axi_wvalidsig_reg ),
        .I5(curr_fwft_state),
        .O(empty_fwft_i0__5));
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(empty_fwft_i0__5),
        .Q(empty_fwft_fb_reg_n_0),
        .S(axi_aresetn));
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(empty_fwft_i0__5),
        .Q(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .S(axi_aresetn));
  LUT6 #(
    .INIT(64'h0000000020FFFFFF)) 
    \gc1.count_d1[8]_i_1 
       (.I0(\data_width_64.m_axi_wvalidsig_reg ),
        .I1(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I2(m_axi_wready),
        .I3(curr_fwft_state),
        .I4(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I5(p_2_out__0),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair677" *) 
  LUT5 #(
    .INIT(32'h22A22222)) 
    \goreg_bm.dout_i[64]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(m_axi_wready),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I4(\data_width_64.m_axi_wvalidsig_reg ),
        .O(\goreg_bm.dout_i_reg[64] ));
  (* SOFT_HLUTNM = "soft_lutpair677" *) 
  LUT5 #(
    .INIT(32'hFBFFAAAA)) 
    \gpregsm1.curr_fwft_state[0]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(m_axi_wready),
        .I2(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I3(\data_width_64.m_axi_wvalidsig_reg ),
        .I4(curr_fwft_state),
        .O(next_fwft_state[0]));
  LUT6 #(
    .INIT(64'hA2AA0000FFFFFFFF)) 
    \gpregsm1.curr_fwft_state[1]_i_1__0 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(\data_width_64.m_axi_wvalidsig_reg ),
        .I2(\gpregsm1.curr_fwft_state_reg[1]_0 ),
        .I3(m_axi_wready),
        .I4(curr_fwft_state),
        .I5(p_2_out__0),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state),
        .R(axi_aresetn));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .R(axi_aresetn));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module overlay1_axi_pcie_0_0_rd_fwft_4
   (emptysig,
    E,
    \gc1.count_reg[10] ,
    SR,
    \resetovrd.reset_reg[4] ,
    rd_ensig,
    p_2_out__0);
  output emptysig;
  output [0:0]E;
  output [0:0]\gc1.count_reg[10] ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input rd_ensig;
  input p_2_out__0;

  wire [0:0]E;
  wire [0:0]SR;
  wire [0:0]curr_fwft_state;
  wire empty_fwft_fb_reg_n_0;
  wire empty_fwft_i0__5;
  wire emptysig;
  wire [0:0]\gc1.count_reg[10] ;
  wire \gpregsm1.curr_fwft_state_reg_n_0_[1] ;
  wire [1:0]next_fwft_state;
  wire p_2_out__0;
  wire rd_ensig;
  wire \resetovrd.reset_reg[4] ;

  (* SOFT_HLUTNM = "soft_lutpair614" *) 
  LUT4 #(
    .INIT(16'hBA22)) 
    empty_fwft_fb_i_1
       (.I0(empty_fwft_fb_reg_n_0),
        .I1(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I2(rd_ensig),
        .I3(curr_fwft_state),
        .O(empty_fwft_i0__5));
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(empty_fwft_i0__5),
        .Q(empty_fwft_fb_reg_n_0),
        .S(SR));
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(empty_fwft_i0__5),
        .Q(emptysig),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair613" *) 
  LUT4 #(
    .INIT(16'h00BF)) 
    \gc1.count_d1[10]_i_1 
       (.I0(rd_ensig),
        .I1(curr_fwft_state),
        .I2(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I3(p_2_out__0),
        .O(\gc1.count_reg[10] ));
  (* SOFT_HLUTNM = "soft_lutpair614" *) 
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_bm.dout_i[63]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(curr_fwft_state),
        .I2(rd_ensig),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(rd_ensig),
        .I2(curr_fwft_state),
        .O(next_fwft_state[0]));
  (* SOFT_HLUTNM = "soft_lutpair613" *) 
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .I1(rd_ensig),
        .I2(curr_fwft_state),
        .I3(p_2_out__0),
        .O(next_fwft_state[1]));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state),
        .R(SR));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(\gpregsm1.curr_fwft_state_reg_n_0_[1] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module overlay1_axi_pcie_0_0_rd_logic
   (\gpregsm1.curr_fwft_state_reg[1] ,
    p_7_out,
    E,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    ram_full_fb_i_reg,
    Q,
    \gc1.count_d2_reg[7] ,
    ram_full_fb_i_reg_0,
    \gaf.gaf0.ram_afull_i_reg ,
    \gcc0.gc1.gsym.count_d2_reg[0] ,
    \gcc0.gc1.gsym.count_d2_reg[2] ,
    \gcc0.gc1.gsym.count_d2_reg[4] ,
    \gcc0.gc1.gsym.count_d2_reg[6] ,
    v1_reg,
    axi_aresetn_0,
    \resetovrd.reset_reg[4] ,
    \data_width_64.m_axi_wvalidsig_reg ,
    m_axi_wready,
    p_2_out,
    wrensig,
    axi_aresetn,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \gcc0.gc1.gsym.count_d1_reg[8] ,
    \gcc0.gc1.gsym.count_reg[8] );
  output \gpregsm1.curr_fwft_state_reg[1] ;
  output p_7_out;
  output [0:0]E;
  output \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output ram_full_fb_i_reg;
  output [8:0]Q;
  output [7:0]\gc1.count_d2_reg[7] ;
  output ram_full_fb_i_reg_0;
  output \gaf.gaf0.ram_afull_i_reg ;
  input \gcc0.gc1.gsym.count_d2_reg[0] ;
  input \gcc0.gc1.gsym.count_d2_reg[2] ;
  input \gcc0.gc1.gsym.count_d2_reg[4] ;
  input \gcc0.gc1.gsym.count_d2_reg[6] ;
  input [3:0]v1_reg;
  input axi_aresetn_0;
  input \resetovrd.reset_reg[4] ;
  input \data_width_64.m_axi_wvalidsig_reg ;
  input m_axi_wready;
  input p_2_out;
  input wrensig;
  input axi_aresetn;
  input [0:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  input [0:0]\gcc0.gc1.gsym.count_d1_reg[8] ;
  input [0:0]\gcc0.gc1.gsym.count_reg[8] ;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire \data_width_64.m_axi_wvalidsig_reg ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire [7:0]\gc1.count_d2_reg[7] ;
  wire [0:0]\gcc0.gc1.gsym.count_d1_reg[8] ;
  wire \gcc0.gc1.gsym.count_d2_reg[0] ;
  wire \gcc0.gc1.gsym.count_d2_reg[2] ;
  wire \gcc0.gc1.gsym.count_d2_reg[4] ;
  wire \gcc0.gc1.gsym.count_d2_reg[6] ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire [0:0]\gcc0.gc1.gsym.count_reg[8] ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire m_axi_wready;
  wire p_2_out;
  wire p_2_out__0;
  wire p_7_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire \resetovrd.reset_reg[4] ;
  wire rpntr_n_10;
  wire rpntr_n_13;
  wire [3:0]v1_reg;
  wire wrensig;

  overlay1_axi_pcie_0_0_rd_fwft \gr1.gr1_int.rfwft 
       (.E(p_7_out),
        .axi_aresetn(axi_aresetn_0),
        .\data_width_64.m_axi_wvalidsig_reg (\data_width_64.m_axi_wvalidsig_reg ),
        .\goreg_bm.dout_i_reg[64] (E),
        .\gpregsm1.curr_fwft_state_reg[1]_0 (\gpregsm1.curr_fwft_state_reg[1] ),
        .m_axi_wready(m_axi_wready),
        .p_2_out__0(p_2_out__0),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_rd_status_flags_ss \grss.rsts 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .E(p_7_out),
        .axi_aresetn(axi_aresetn),
        .axi_aresetn_0(axi_aresetn_0),
        .\gc1.count_d1_reg[8] (rpntr_n_10),
        .\gc1.count_d2_reg[8] (rpntr_n_13),
        .\gcc0.gc1.gsym.count_d2_reg[0] (\gcc0.gc1.gsym.count_d2_reg[0] ),
        .\gcc0.gc1.gsym.count_d2_reg[2] (\gcc0.gc1.gsym.count_d2_reg[2] ),
        .\gcc0.gc1.gsym.count_d2_reg[4] (\gcc0.gc1.gsym.count_d2_reg[4] ),
        .\gcc0.gc1.gsym.count_d2_reg[6] (\gcc0.gc1.gsym.count_d2_reg[6] ),
        .p_2_out(p_2_out),
        .p_2_out__0(p_2_out__0),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(v1_reg),
        .wrensig(wrensig));
  overlay1_axi_pcie_0_0_rd_bin_cntr rpntr
       (.E(p_7_out),
        .Q(Q),
        .axi_aresetn(axi_aresetn_0),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gc1.count_d2_reg[7]_0 (\gc1.count_d2_reg[7] ),
        .\gcc0.gc1.gsym.count_d1_reg[8] (\gcc0.gc1.gsym.count_d1_reg[8] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .\gcc0.gc1.gsym.count_reg[8] (\gcc0.gc1.gsym.count_reg[8] ),
        .ram_empty_fb_i_reg(rpntr_n_10),
        .ram_empty_fb_i_reg_0(rpntr_n_13),
        .ram_full_fb_i_reg(ram_full_fb_i_reg),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_0),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module overlay1_axi_pcie_0_0_rd_logic__parameterized0
   (emptysig,
    E,
    p_7_out,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    ram_full_fb_i_reg,
    Q,
    \gc1.count_d2_reg[9] ,
    ram_full_fb_i_reg_0,
    \gaf.gaf0.ram_afull_i_reg ,
    \gcc0.gc1.gsym.count_d2_reg[0] ,
    \gcc0.gc1.gsym.count_d2_reg[2] ,
    \gcc0.gc1.gsym.count_d2_reg[4] ,
    \gcc0.gc1.gsym.count_d2_reg[6] ,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    v1_reg,
    SR,
    \resetovrd.reset_reg[4] ,
    rd_ensig,
    p_2_out,
    wr_ensig,
    axi_aresetn,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    \gcc0.gc1.gsym.count_d1_reg[10] ,
    \gcc0.gc1.gsym.count_reg[10] );
  output emptysig;
  output [0:0]E;
  output p_7_out;
  output \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  output ram_full_fb_i_reg;
  output [10:0]Q;
  output [9:0]\gc1.count_d2_reg[9] ;
  output ram_full_fb_i_reg_0;
  output \gaf.gaf0.ram_afull_i_reg ;
  input \gcc0.gc1.gsym.count_d2_reg[0] ;
  input \gcc0.gc1.gsym.count_d2_reg[2] ;
  input \gcc0.gc1.gsym.count_d2_reg[4] ;
  input \gcc0.gc1.gsym.count_d2_reg[6] ;
  input \gcc0.gc1.gsym.count_d2_reg[8] ;
  input [4:0]v1_reg;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input rd_ensig;
  input p_2_out;
  input wr_ensig;
  input axi_aresetn;
  input [0:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  input [0:0]\gcc0.gc1.gsym.count_d1_reg[10] ;
  input [0:0]\gcc0.gc1.gsym.count_reg[10] ;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [10:0]Q;
  wire [0:0]SR;
  wire axi_aresetn;
  wire emptysig;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire [0:0]\gcc0.gc1.gsym.count_d1_reg[10] ;
  wire \gcc0.gc1.gsym.count_d2_reg[0] ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire \gcc0.gc1.gsym.count_d2_reg[2] ;
  wire \gcc0.gc1.gsym.count_d2_reg[4] ;
  wire \gcc0.gc1.gsym.count_d2_reg[6] ;
  wire \gcc0.gc1.gsym.count_d2_reg[8] ;
  wire [0:0]\gcc0.gc1.gsym.count_reg[10] ;
  wire p_2_out;
  wire p_2_out__0;
  wire p_7_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire rd_ensig;
  wire \resetovrd.reset_reg[4] ;
  wire rpntr_n_12;
  wire rpntr_n_15;
  wire [4:0]v1_reg;
  wire wr_ensig;

  overlay1_axi_pcie_0_0_rd_fwft_4 \gr1.gr1_int.rfwft 
       (.E(E),
        .SR(SR),
        .emptysig(emptysig),
        .\gc1.count_reg[10] (p_7_out),
        .p_2_out__0(p_2_out__0),
        .rd_ensig(rd_ensig),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
  overlay1_axi_pcie_0_0_rd_status_flags_ss__parameterized0 \grss.rsts 
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .E(p_7_out),
        .SR(SR),
        .axi_aresetn(axi_aresetn),
        .\gc1.count_d1_reg[10] (rpntr_n_12),
        .\gc1.count_d2_reg[10] (rpntr_n_15),
        .\gcc0.gc1.gsym.count_d2_reg[0] (\gcc0.gc1.gsym.count_d2_reg[0] ),
        .\gcc0.gc1.gsym.count_d2_reg[2] (\gcc0.gc1.gsym.count_d2_reg[2] ),
        .\gcc0.gc1.gsym.count_d2_reg[4] (\gcc0.gc1.gsym.count_d2_reg[4] ),
        .\gcc0.gc1.gsym.count_d2_reg[6] (\gcc0.gc1.gsym.count_d2_reg[6] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .p_2_out(p_2_out),
        .p_2_out__0(p_2_out__0),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(v1_reg),
        .wr_ensig(wr_ensig));
  overlay1_axi_pcie_0_0_rd_bin_cntr__parameterized0 rpntr
       (.E(p_7_out),
        .Q(Q),
        .SR(SR),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.gaf0.ram_afull_i_reg ),
        .\gc1.count_d2_reg[9]_0 (\gc1.count_d2_reg[9] ),
        .\gcc0.gc1.gsym.count_d1_reg[10] (\gcc0.gc1.gsym.count_d1_reg[10] ),
        .\gcc0.gc1.gsym.count_d2_reg[10] (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .\gcc0.gc1.gsym.count_reg[10] (\gcc0.gc1.gsym.count_reg[10] ),
        .ram_empty_fb_i_reg(rpntr_n_12),
        .ram_empty_fb_i_reg_0(rpntr_n_15),
        .ram_full_fb_i_reg(ram_full_fb_i_reg),
        .ram_full_fb_i_reg_0(ram_full_fb_i_reg_0),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module overlay1_axi_pcie_0_0_rd_status_flags_ss
   (p_2_out__0,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    \gcc0.gc1.gsym.count_d2_reg[0] ,
    \gcc0.gc1.gsym.count_d2_reg[2] ,
    \gcc0.gc1.gsym.count_d2_reg[4] ,
    \gcc0.gc1.gsym.count_d2_reg[6] ,
    \gc1.count_d2_reg[8] ,
    v1_reg,
    \gc1.count_d1_reg[8] ,
    axi_aresetn_0,
    \resetovrd.reset_reg[4] ,
    E,
    p_2_out,
    wrensig,
    axi_aresetn);
  output p_2_out__0;
  output \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  input \gcc0.gc1.gsym.count_d2_reg[0] ;
  input \gcc0.gc1.gsym.count_d2_reg[2] ;
  input \gcc0.gc1.gsym.count_d2_reg[4] ;
  input \gcc0.gc1.gsym.count_d2_reg[6] ;
  input \gc1.count_d2_reg[8] ;
  input [3:0]v1_reg;
  input \gc1.count_d1_reg[8] ;
  input axi_aresetn_0;
  input \resetovrd.reset_reg[4] ;
  input [0:0]E;
  input p_2_out;
  input wrensig;
  input axi_aresetn;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire axi_aresetn;
  wire axi_aresetn_0;
  wire comp0;
  wire \gc1.count_d1_reg[8] ;
  wire \gc1.count_d2_reg[8] ;
  wire \gcc0.gc1.gsym.count_d2_reg[0] ;
  wire \gcc0.gc1.gsym.count_d2_reg[2] ;
  wire \gcc0.gc1.gsym.count_d2_reg[4] ;
  wire \gcc0.gc1.gsym.count_d2_reg[6] ;
  wire p_2_out;
  wire p_2_out__0;
  wire ram_empty_i0__3;
  wire \resetovrd.reset_reg[4] ;
  wire [3:0]v1_reg;
  wire wrensig;

  LUT3 #(
    .INIT(8'h4F)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_1 
       (.I0(p_2_out__0),
        .I1(E),
        .I2(axi_aresetn),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ));
  overlay1_axi_pcie_0_0_compare_2 c1
       (.comp0(comp0),
        .\gc1.count_d2_reg[8] (\gc1.count_d2_reg[8] ),
        .\gcc0.gc1.gsym.count_d2_reg[0] (\gcc0.gc1.gsym.count_d2_reg[0] ),
        .\gcc0.gc1.gsym.count_d2_reg[2] (\gcc0.gc1.gsym.count_d2_reg[2] ),
        .\gcc0.gc1.gsym.count_d2_reg[4] (\gcc0.gc1.gsym.count_d2_reg[4] ),
        .\gcc0.gc1.gsym.count_d2_reg[6] (\gcc0.gc1.gsym.count_d2_reg[6] ));
  overlay1_axi_pcie_0_0_compare_3 c2
       (.E(E),
        .comp0(comp0),
        .\gc1.count_d1_reg[8] (\gc1.count_d1_reg[8] ),
        .p_2_out(p_2_out),
        .p_2_out__0(p_2_out__0),
        .ram_empty_i0__3(ram_empty_i0__3),
        .v1_reg(v1_reg),
        .wrensig(wrensig));
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(ram_empty_i0__3),
        .Q(p_2_out__0),
        .S(axi_aresetn_0));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module overlay1_axi_pcie_0_0_rd_status_flags_ss__parameterized0
   (p_2_out__0,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    \gcc0.gc1.gsym.count_d2_reg[0] ,
    \gcc0.gc1.gsym.count_d2_reg[2] ,
    \gcc0.gc1.gsym.count_d2_reg[4] ,
    \gcc0.gc1.gsym.count_d2_reg[6] ,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    \gc1.count_d2_reg[10] ,
    v1_reg,
    \gc1.count_d1_reg[10] ,
    SR,
    \resetovrd.reset_reg[4] ,
    E,
    p_2_out,
    wr_ensig,
    axi_aresetn);
  output p_2_out__0;
  output \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  input \gcc0.gc1.gsym.count_d2_reg[0] ;
  input \gcc0.gc1.gsym.count_d2_reg[2] ;
  input \gcc0.gc1.gsym.count_d2_reg[4] ;
  input \gcc0.gc1.gsym.count_d2_reg[6] ;
  input \gcc0.gc1.gsym.count_d2_reg[8] ;
  input \gc1.count_d2_reg[10] ;
  input [4:0]v1_reg;
  input \gc1.count_d1_reg[10] ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input [0:0]E;
  input p_2_out;
  input wr_ensig;
  input axi_aresetn;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [0:0]SR;
  wire axi_aresetn;
  wire comp0;
  wire \gc1.count_d1_reg[10] ;
  wire \gc1.count_d2_reg[10] ;
  wire \gcc0.gc1.gsym.count_d2_reg[0] ;
  wire \gcc0.gc1.gsym.count_d2_reg[2] ;
  wire \gcc0.gc1.gsym.count_d2_reg[4] ;
  wire \gcc0.gc1.gsym.count_d2_reg[6] ;
  wire \gcc0.gc1.gsym.count_d2_reg[8] ;
  wire p_2_out;
  wire p_2_out__0;
  wire ram_empty_i0__3;
  wire \resetovrd.reset_reg[4] ;
  wire [4:0]v1_reg;
  wire wr_ensig;

  LUT3 #(
    .INIT(8'h4F)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_2 
       (.I0(p_2_out__0),
        .I1(E),
        .I2(axi_aresetn),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ));
  overlay1_axi_pcie_0_0_compare__parameterized0 c1
       (.comp0(comp0),
        .\gc1.count_d2_reg[10] (\gc1.count_d2_reg[10] ),
        .\gcc0.gc1.gsym.count_d2_reg[0] (\gcc0.gc1.gsym.count_d2_reg[0] ),
        .\gcc0.gc1.gsym.count_d2_reg[2] (\gcc0.gc1.gsym.count_d2_reg[2] ),
        .\gcc0.gc1.gsym.count_d2_reg[4] (\gcc0.gc1.gsym.count_d2_reg[4] ),
        .\gcc0.gc1.gsym.count_d2_reg[6] (\gcc0.gc1.gsym.count_d2_reg[6] ),
        .\gcc0.gc1.gsym.count_d2_reg[8] (\gcc0.gc1.gsym.count_d2_reg[8] ));
  overlay1_axi_pcie_0_0_compare__parameterized1 c2
       (.E(E),
        .comp0(comp0),
        .\gc1.count_d1_reg[10] (\gc1.count_d1_reg[10] ),
        .p_2_out(p_2_out),
        .p_2_out__0(p_2_out__0),
        .ram_empty_i0__3(ram_empty_i0__3),
        .v1_reg(v1_reg),
        .wr_ensig(wr_ensig));
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(ram_empty_i0__3),
        .Q(p_2_out__0),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module overlay1_axi_pcie_0_0_wr_bin_cntr
   (\gcc0.gc1.gsym.count_d1_reg[8]_0 ,
    v1_reg_0,
    Q,
    v1_reg,
    v1_reg_1,
    v1_reg_2,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    ram_empty_fb_i_reg_1,
    ram_empty_fb_i_reg_2,
    \gcc0.gc1.gsym.count_d2_reg[8]_0 ,
    \gc1.count_d2_reg[7] ,
    \gc1.count_d1_reg[7] ,
    axi_aresetn,
    E,
    \resetovrd.reset_reg[4] );
  output [0:0]\gcc0.gc1.gsym.count_d1_reg[8]_0 ;
  output [3:0]v1_reg_0;
  output [8:0]Q;
  output [3:0]v1_reg;
  output [3:0]v1_reg_1;
  output [3:0]v1_reg_2;
  output ram_empty_fb_i_reg;
  output ram_empty_fb_i_reg_0;
  output ram_empty_fb_i_reg_1;
  output ram_empty_fb_i_reg_2;
  output [0:0]\gcc0.gc1.gsym.count_d2_reg[8]_0 ;
  input [7:0]\gc1.count_d2_reg[7] ;
  input [7:0]\gc1.count_d1_reg[7] ;
  input axi_aresetn;
  input [0:0]E;
  input \resetovrd.reset_reg[4] ;

  wire [0:0]E;
  wire [8:0]Q;
  wire axi_aresetn;
  wire [7:0]\gc1.count_d1_reg[7] ;
  wire [7:0]\gc1.count_d2_reg[7] ;
  wire \gcc0.gc1.gsym.count[8]_i_2_n_0 ;
  wire [0:0]\gcc0.gc1.gsym.count_d1_reg[8]_0 ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[8]_0 ;
  wire [7:0]p_12_out;
  wire [8:0]plusOp__0;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_fb_i_reg_1;
  wire ram_empty_fb_i_reg_2;
  wire \resetovrd.reset_reg[4] ;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire [3:0]v1_reg_2;
  wire [7:0]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair683" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc1.gsym.count[0]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc1.gsym.count[1]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair683" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gcc0.gc1.gsym.count[2]_i_1 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair681" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gcc0.gc1.gsym.count[3]_i_1 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair681" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gcc0.gc1.gsym.count[4]_i_1 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gcc0.gc1.gsym.count[5]_i_1 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp__0[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc1.gsym.count[6]_i_1 
       (.I0(\gcc0.gc1.gsym.count[8]_i_2_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair682" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gcc0.gc1.gsym.count[7]_i_1 
       (.I0(\gcc0.gc1.gsym.count[8]_i_2_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair682" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gcc0.gc1.gsym.count[8]_i_1 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gcc0.gc1.gsym.count[8]_i_2_n_0 ),
        .I2(wr_pntr_plus2[7]),
        .I3(\gcc0.gc1.gsym.count_d1_reg[8]_0 ),
        .O(plusOp__0[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gcc0.gc1.gsym.count[8]_i_2 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\gcc0.gc1.gsym.count[8]_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc1.gsym.count_d1_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .Q(p_12_out[0]),
        .S(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[1]),
        .Q(p_12_out[1]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[2]),
        .Q(p_12_out[2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[3]),
        .Q(p_12_out[3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[4]),
        .Q(p_12_out[4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[5]),
        .Q(p_12_out[5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[6]),
        .Q(p_12_out[6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[7]),
        .Q(p_12_out[7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gcc0.gc1.gsym.count_d1_reg[8]_0 ),
        .Q(\gcc0.gc1.gsym.count_d2_reg[8]_0 ),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[0]),
        .Q(Q[0]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[1]),
        .Q(Q[1]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[2]),
        .Q(Q[2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[3]),
        .Q(Q[3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[4]),
        .Q(Q[4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[5]),
        .Q(Q[5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[6]),
        .Q(Q[6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[7]),
        .Q(Q[7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gcc0.gc1.gsym.count_d2_reg[8]_0 ),
        .Q(Q[8]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(wr_pntr_plus2[0]),
        .R(axi_aresetn));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc1.gsym.count_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(wr_pntr_plus2[1]),
        .S(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(wr_pntr_plus2[2]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(wr_pntr_plus2[3]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(wr_pntr_plus2[4]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[5]),
        .Q(wr_pntr_plus2[5]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[6]),
        .Q(wr_pntr_plus2[6]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[7]),
        .Q(wr_pntr_plus2[7]),
        .R(axi_aresetn));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__0[8]),
        .Q(\gcc0.gc1.gsym.count_d1_reg[8]_0 ),
        .R(axi_aresetn));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1 
       (.I0(Q[0]),
        .I1(\gc1.count_d2_reg[7] [0]),
        .I2(Q[1]),
        .I3(\gc1.count_d2_reg[7] [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__1 
       (.I0(Q[0]),
        .I1(\gc1.count_d1_reg[7] [0]),
        .I2(Q[1]),
        .I3(\gc1.count_d1_reg[7] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__2 
       (.I0(p_12_out[0]),
        .I1(\gc1.count_d2_reg[7] [0]),
        .I2(p_12_out[1]),
        .I3(\gc1.count_d2_reg[7] [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__3 
       (.I0(wr_pntr_plus2[0]),
        .I1(\gc1.count_d2_reg[7] [0]),
        .I2(wr_pntr_plus2[1]),
        .I3(\gc1.count_d2_reg[7] [1]),
        .O(v1_reg_2[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__7 
       (.I0(Q[0]),
        .I1(\gc1.count_d2_reg[7] [0]),
        .I2(Q[1]),
        .I3(\gc1.count_d2_reg[7] [1]),
        .O(ram_empty_fb_i_reg));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1 
       (.I0(Q[2]),
        .I1(\gc1.count_d2_reg[7] [2]),
        .I2(Q[3]),
        .I3(\gc1.count_d2_reg[7] [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__1 
       (.I0(Q[2]),
        .I1(\gc1.count_d1_reg[7] [2]),
        .I2(Q[3]),
        .I3(\gc1.count_d1_reg[7] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__2 
       (.I0(p_12_out[2]),
        .I1(\gc1.count_d2_reg[7] [2]),
        .I2(p_12_out[3]),
        .I3(\gc1.count_d2_reg[7] [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__3 
       (.I0(wr_pntr_plus2[2]),
        .I1(\gc1.count_d2_reg[7] [2]),
        .I2(wr_pntr_plus2[3]),
        .I3(\gc1.count_d2_reg[7] [3]),
        .O(v1_reg_2[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__7 
       (.I0(Q[2]),
        .I1(\gc1.count_d2_reg[7] [2]),
        .I2(Q[3]),
        .I3(\gc1.count_d2_reg[7] [3]),
        .O(ram_empty_fb_i_reg_0));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1 
       (.I0(Q[4]),
        .I1(\gc1.count_d2_reg[7] [4]),
        .I2(Q[5]),
        .I3(\gc1.count_d2_reg[7] [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__1 
       (.I0(Q[4]),
        .I1(\gc1.count_d1_reg[7] [4]),
        .I2(Q[5]),
        .I3(\gc1.count_d1_reg[7] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__2 
       (.I0(p_12_out[4]),
        .I1(\gc1.count_d2_reg[7] [4]),
        .I2(p_12_out[5]),
        .I3(\gc1.count_d2_reg[7] [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__3 
       (.I0(wr_pntr_plus2[4]),
        .I1(\gc1.count_d2_reg[7] [4]),
        .I2(wr_pntr_plus2[5]),
        .I3(\gc1.count_d2_reg[7] [5]),
        .O(v1_reg_2[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__7 
       (.I0(Q[4]),
        .I1(\gc1.count_d2_reg[7] [4]),
        .I2(Q[5]),
        .I3(\gc1.count_d2_reg[7] [5]),
        .O(ram_empty_fb_i_reg_1));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1 
       (.I0(Q[6]),
        .I1(\gc1.count_d2_reg[7] [6]),
        .I2(Q[7]),
        .I3(\gc1.count_d2_reg[7] [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__1 
       (.I0(Q[6]),
        .I1(\gc1.count_d1_reg[7] [6]),
        .I2(Q[7]),
        .I3(\gc1.count_d1_reg[7] [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__2 
       (.I0(p_12_out[6]),
        .I1(\gc1.count_d2_reg[7] [6]),
        .I2(p_12_out[7]),
        .I3(\gc1.count_d2_reg[7] [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__3 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gc1.count_d2_reg[7] [6]),
        .I2(wr_pntr_plus2[7]),
        .I3(\gc1.count_d2_reg[7] [7]),
        .O(v1_reg_2[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__7 
       (.I0(Q[6]),
        .I1(\gc1.count_d2_reg[7] [6]),
        .I2(Q[7]),
        .I3(\gc1.count_d2_reg[7] [7]),
        .O(ram_empty_fb_i_reg_2));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module overlay1_axi_pcie_0_0_wr_bin_cntr__parameterized0
   (Q,
    v1_reg_0,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    v1_reg,
    v1_reg_1,
    v1_reg_2,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    ram_empty_fb_i_reg_1,
    ram_empty_fb_i_reg_2,
    ram_empty_fb_i_reg_3,
    \gcc0.gc1.gsym.count_d2_reg[10]_0 ,
    \gc1.count_d2_reg[9] ,
    \gc1.count_d1_reg[9] ,
    SR,
    E,
    \resetovrd.reset_reg[4] );
  output [0:0]Q;
  output [4:0]v1_reg_0;
  output [10:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  output [4:0]v1_reg;
  output [4:0]v1_reg_1;
  output [4:0]v1_reg_2;
  output ram_empty_fb_i_reg;
  output ram_empty_fb_i_reg_0;
  output ram_empty_fb_i_reg_1;
  output ram_empty_fb_i_reg_2;
  output ram_empty_fb_i_reg_3;
  output [0:0]\gcc0.gc1.gsym.count_d2_reg[10]_0 ;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [9:0]\gc1.count_d1_reg[9] ;
  input [0:0]SR;
  input [0:0]E;
  input \resetovrd.reset_reg[4] ;

  wire [10:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]E;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire \gcc0.gc1.gsym.count[10]_i_2_n_0 ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[10]_0 ;
  wire [9:0]p_12_out;
  wire [10:0]plusOp__2;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_fb_i_reg_1;
  wire ram_empty_fb_i_reg_2;
  wire ram_empty_fb_i_reg_3;
  wire \resetovrd.reset_reg[4] ;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire [4:0]v1_reg_2;
  wire [9:0]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair623" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc1.gsym.count[0]_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .O(plusOp__2[0]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gcc0.gc1.gsym.count[10]_i_1 
       (.I0(wr_pntr_plus2[8]),
        .I1(wr_pntr_plus2[6]),
        .I2(\gcc0.gc1.gsym.count[10]_i_2_n_0 ),
        .I3(wr_pntr_plus2[7]),
        .I4(wr_pntr_plus2[9]),
        .I5(Q),
        .O(plusOp__2[10]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \gcc0.gc1.gsym.count[10]_i_2 
       (.I0(wr_pntr_plus2[5]),
        .I1(wr_pntr_plus2[3]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[0]),
        .I4(wr_pntr_plus2[2]),
        .I5(wr_pntr_plus2[4]),
        .O(\gcc0.gc1.gsym.count[10]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc1.gsym.count[1]_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .O(plusOp__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair623" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gcc0.gc1.gsym.count[2]_i_1__0 
       (.I0(wr_pntr_plus2[0]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[2]),
        .O(plusOp__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair621" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gcc0.gc1.gsym.count[3]_i_1__0 
       (.I0(wr_pntr_plus2[1]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[2]),
        .I3(wr_pntr_plus2[3]),
        .O(plusOp__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair621" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gcc0.gc1.gsym.count[4]_i_1__0 
       (.I0(wr_pntr_plus2[2]),
        .I1(wr_pntr_plus2[0]),
        .I2(wr_pntr_plus2[1]),
        .I3(wr_pntr_plus2[3]),
        .I4(wr_pntr_plus2[4]),
        .O(plusOp__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \gcc0.gc1.gsym.count[5]_i_1__0 
       (.I0(wr_pntr_plus2[3]),
        .I1(wr_pntr_plus2[1]),
        .I2(wr_pntr_plus2[0]),
        .I3(wr_pntr_plus2[2]),
        .I4(wr_pntr_plus2[4]),
        .I5(wr_pntr_plus2[5]),
        .O(plusOp__2[5]));
  (* SOFT_HLUTNM = "soft_lutpair622" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc1.gsym.count[6]_i_1__0 
       (.I0(\gcc0.gc1.gsym.count[10]_i_2_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .O(plusOp__2[6]));
  (* SOFT_HLUTNM = "soft_lutpair622" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gcc0.gc1.gsym.count[7]_i_1__0 
       (.I0(\gcc0.gc1.gsym.count[10]_i_2_n_0 ),
        .I1(wr_pntr_plus2[6]),
        .I2(wr_pntr_plus2[7]),
        .O(plusOp__2[7]));
  (* SOFT_HLUTNM = "soft_lutpair620" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gcc0.gc1.gsym.count[8]_i_1__0 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gcc0.gc1.gsym.count[10]_i_2_n_0 ),
        .I2(wr_pntr_plus2[7]),
        .I3(wr_pntr_plus2[8]),
        .O(plusOp__2[8]));
  (* SOFT_HLUTNM = "soft_lutpair620" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gcc0.gc1.gsym.count[9]_i_1 
       (.I0(wr_pntr_plus2[7]),
        .I1(\gcc0.gc1.gsym.count[10]_i_2_n_0 ),
        .I2(wr_pntr_plus2[6]),
        .I3(wr_pntr_plus2[8]),
        .I4(wr_pntr_plus2[9]),
        .O(plusOp__2[9]));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc1.gsym.count_d1_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[0]),
        .Q(p_12_out[0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(Q),
        .Q(\gcc0.gc1.gsym.count_d2_reg[10]_0 ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[1]),
        .Q(p_12_out[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[2]),
        .Q(p_12_out[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[3]),
        .Q(p_12_out[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[4]),
        .Q(p_12_out[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[5]),
        .Q(p_12_out[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[6]),
        .Q(p_12_out[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[7]),
        .Q(p_12_out[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[8]),
        .Q(p_12_out[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d1_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(wr_pntr_plus2[9]),
        .Q(p_12_out[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[0]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(\gcc0.gc1.gsym.count_d2_reg[10]_0 ),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[1]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[2]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[3]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[4]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[5]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[6]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[7]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[8]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_d2_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(p_12_out[9]),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[0] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[0]),
        .Q(wr_pntr_plus2[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[10] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[10]),
        .Q(Q),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc1.gsym.count_reg[1] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[1]),
        .Q(wr_pntr_plus2[1]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[2] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[2]),
        .Q(wr_pntr_plus2[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[3] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[3]),
        .Q(wr_pntr_plus2[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[4] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[4]),
        .Q(wr_pntr_plus2[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[5] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[5]),
        .Q(wr_pntr_plus2[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[6] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[6]),
        .Q(wr_pntr_plus2[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[7] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[7]),
        .Q(wr_pntr_plus2[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[8] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[8]),
        .Q(wr_pntr_plus2[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc1.gsym.count_reg[9] 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(E),
        .D(plusOp__2[9]),
        .Q(wr_pntr_plus2[9]),
        .R(SR));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]),
        .I1(\gc1.count_d2_reg[9] [0]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]),
        .I3(\gc1.count_d2_reg[9] [1]),
        .O(v1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__4 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]),
        .I1(\gc1.count_d1_reg[9] [0]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]),
        .I3(\gc1.count_d1_reg[9] [1]),
        .O(v1_reg[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__5 
       (.I0(p_12_out[0]),
        .I1(\gc1.count_d2_reg[9] [0]),
        .I2(p_12_out[1]),
        .I3(\gc1.count_d2_reg[9] [1]),
        .O(v1_reg_1[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__6 
       (.I0(wr_pntr_plus2[0]),
        .I1(\gc1.count_d2_reg[9] [0]),
        .I2(wr_pntr_plus2[1]),
        .I3(\gc1.count_d2_reg[9] [1]),
        .O(v1_reg_2[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[0].gm1.m1_i_1__8 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [0]),
        .I1(\gc1.count_d2_reg[9] [0]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [1]),
        .I3(\gc1.count_d2_reg[9] [1]),
        .O(ram_empty_fb_i_reg));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]),
        .I3(\gc1.count_d2_reg[9] [3]),
        .O(v1_reg_0[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__4 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]),
        .I1(\gc1.count_d1_reg[9] [2]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]),
        .I3(\gc1.count_d1_reg[9] [3]),
        .O(v1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__5 
       (.I0(p_12_out[2]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .I2(p_12_out[3]),
        .I3(\gc1.count_d2_reg[9] [3]),
        .O(v1_reg_1[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__6 
       (.I0(wr_pntr_plus2[2]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .I2(wr_pntr_plus2[3]),
        .I3(\gc1.count_d2_reg[9] [3]),
        .O(v1_reg_2[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[1].gms.ms_i_1__8 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [2]),
        .I1(\gc1.count_d2_reg[9] [2]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [3]),
        .I3(\gc1.count_d2_reg[9] [3]),
        .O(ram_empty_fb_i_reg_0));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]),
        .I3(\gc1.count_d2_reg[9] [5]),
        .O(v1_reg_0[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__4 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]),
        .I1(\gc1.count_d1_reg[9] [4]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]),
        .I3(\gc1.count_d1_reg[9] [5]),
        .O(v1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__5 
       (.I0(p_12_out[4]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .I2(p_12_out[5]),
        .I3(\gc1.count_d2_reg[9] [5]),
        .O(v1_reg_1[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__6 
       (.I0(wr_pntr_plus2[4]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .I2(wr_pntr_plus2[5]),
        .I3(\gc1.count_d2_reg[9] [5]),
        .O(v1_reg_2[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[2].gms.ms_i_1__8 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [4]),
        .I1(\gc1.count_d2_reg[9] [4]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [5]),
        .I3(\gc1.count_d2_reg[9] [5]),
        .O(ram_empty_fb_i_reg_1));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]),
        .I3(\gc1.count_d2_reg[9] [7]),
        .O(v1_reg_0[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__4 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]),
        .I1(\gc1.count_d1_reg[9] [6]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]),
        .I3(\gc1.count_d1_reg[9] [7]),
        .O(v1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__5 
       (.I0(p_12_out[6]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .I2(p_12_out[7]),
        .I3(\gc1.count_d2_reg[9] [7]),
        .O(v1_reg_1[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__6 
       (.I0(wr_pntr_plus2[6]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .I2(wr_pntr_plus2[7]),
        .I3(\gc1.count_d2_reg[9] [7]),
        .O(v1_reg_2[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[3].gms.ms_i_1__8 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [6]),
        .I1(\gc1.count_d2_reg[9] [6]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [7]),
        .I3(\gc1.count_d2_reg[9] [7]),
        .O(ram_empty_fb_i_reg_2));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]),
        .I3(\gc1.count_d2_reg[9] [9]),
        .O(v1_reg_0[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__0 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]),
        .I1(\gc1.count_d1_reg[9] [8]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]),
        .I3(\gc1.count_d1_reg[9] [9]),
        .O(v1_reg[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__1 
       (.I0(p_12_out[8]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .I2(p_12_out[9]),
        .I3(\gc1.count_d2_reg[9] [9]),
        .O(v1_reg_1[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__2 
       (.I0(wr_pntr_plus2[8]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .I2(wr_pntr_plus2[9]),
        .I3(\gc1.count_d2_reg[9] [9]),
        .O(v1_reg_2[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \gmux.gm[4].gms.ms_i_1__3 
       (.I0(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [8]),
        .I1(\gc1.count_d2_reg[9] [8]),
        .I2(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram [9]),
        .I3(\gc1.count_d2_reg[9] [9]),
        .O(ram_empty_fb_i_reg_3));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module overlay1_axi_pcie_0_0_wr_logic
   (\gaf.gaf0.ram_afull_i_reg ,
    p_2_out,
    \data_width_64.delaylast_reg ,
    \gcc0.gc1.gsym.count_d1_reg[8] ,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ,
    v1_reg,
    \gcc0.gc1.gsym.count_d2_reg[8] ,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    ram_empty_fb_i_reg_1,
    ram_empty_fb_i_reg_2,
    E,
    \gc1.count_d2_reg[8] ,
    \gc1.count_d2_reg[8]_0 ,
    \gc1.count_d2_reg[8]_1 ,
    axi_aresetn,
    \resetovrd.reset_reg[4] ,
    out,
    Q,
    \gc1.count_d2_reg[7] ,
    \gc1.count_d1_reg[7] ,
    wrensig,
    p_7_out);
  output \gaf.gaf0.ram_afull_i_reg ;
  output p_2_out;
  output \data_width_64.delaylast_reg ;
  output [0:0]\gcc0.gc1.gsym.count_d1_reg[8] ;
  output [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  output [3:0]v1_reg;
  output [0:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  output ram_empty_fb_i_reg;
  output ram_empty_fb_i_reg_0;
  output ram_empty_fb_i_reg_1;
  output ram_empty_fb_i_reg_2;
  output [0:0]E;
  input \gc1.count_d2_reg[8] ;
  input \gc1.count_d2_reg[8]_0 ;
  input \gc1.count_d2_reg[8]_1 ;
  input axi_aresetn;
  input \resetovrd.reset_reg[4] ;
  input [0:0]out;
  input [0:0]Q;
  input [7:0]\gc1.count_d2_reg[7] ;
  input [7:0]\gc1.count_d1_reg[7] ;
  input wrensig;
  input p_7_out;

  wire [8:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ;
  wire [0:0]E;
  wire [0:0]Q;
  wire axi_aresetn;
  wire [3:0]\c1/v1_reg ;
  wire \data_width_64.delaylast_reg ;
  wire [3:0]\gaf.c2/v1_reg ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire [7:0]\gc1.count_d1_reg[7] ;
  wire [7:0]\gc1.count_d2_reg[7] ;
  wire \gc1.count_d2_reg[8] ;
  wire \gc1.count_d2_reg[8]_0 ;
  wire \gc1.count_d2_reg[8]_1 ;
  wire [0:0]\gcc0.gc1.gsym.count_d1_reg[8] ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[8] ;
  wire [3:0]\gntv_or_sync_fifo.gl0.rd/grss.rsts/c1/v1_reg ;
  wire [0:0]out;
  wire p_2_out;
  wire p_7_out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_fb_i_reg_1;
  wire ram_empty_fb_i_reg_2;
  wire \resetovrd.reset_reg[4] ;
  wire [3:0]v1_reg;
  wire wrensig;

  overlay1_axi_pcie_0_0_wr_status_flags_ss \gwss.wsts 
       (.E(E),
        .Q(Q),
        .axi_aresetn(axi_aresetn),
        .\data_width_64.delaylast_reg (\data_width_64.delaylast_reg ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg ),
        .\gaf.gaf0.ram_afull_i_reg_1 (p_2_out),
        .\gc1.count_d2_reg[8] (\gc1.count_d2_reg[8] ),
        .\gc1.count_d2_reg[8]_0 (\gc1.count_d2_reg[8]_0 ),
        .\gc1.count_d2_reg[8]_1 (\gc1.count_d2_reg[8]_1 ),
        .out(out),
        .p_7_out(p_7_out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(\gntv_or_sync_fifo.gl0.rd/grss.rsts/c1/v1_reg ),
        .v1_reg_0(\c1/v1_reg ),
        .v1_reg_1(\gaf.c2/v1_reg ),
        .wrensig(wrensig));
  overlay1_axi_pcie_0_0_wr_bin_cntr wpntr
       (.E(E),
        .Q(\DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram ),
        .axi_aresetn(axi_aresetn),
        .\gc1.count_d1_reg[7] (\gc1.count_d1_reg[7] ),
        .\gc1.count_d2_reg[7] (\gc1.count_d2_reg[7] ),
        .\gcc0.gc1.gsym.count_d1_reg[8]_0 (\gcc0.gc1.gsym.count_d1_reg[8] ),
        .\gcc0.gc1.gsym.count_d2_reg[8]_0 (\gcc0.gc1.gsym.count_d2_reg[8] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_1),
        .ram_empty_fb_i_reg_2(ram_empty_fb_i_reg_2),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(v1_reg),
        .v1_reg_0(\gntv_or_sync_fifo.gl0.rd/grss.rsts/c1/v1_reg ),
        .v1_reg_1(\c1/v1_reg ),
        .v1_reg_2(\gaf.c2/v1_reg ));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module overlay1_axi_pcie_0_0_wr_logic__parameterized0
   (\gaf.gaf0.ram_afull_i_reg ,
    p_2_out,
    Q,
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ,
    v1_reg,
    \gcc0.gc1.gsym.count_d2_reg[10] ,
    ram_empty_fb_i_reg,
    ram_empty_fb_i_reg_0,
    ram_empty_fb_i_reg_1,
    ram_empty_fb_i_reg_2,
    ram_empty_fb_i_reg_3,
    WEA,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    \gc1.count_d2_reg[10] ,
    \gc1.count_d2_reg[10]_0 ,
    \gc1.count_d2_reg[10]_1 ,
    SR,
    \resetovrd.reset_reg[4] ,
    \gc1.count_d2_reg[9] ,
    \gc1.count_d1_reg[9] ,
    wr_ensig,
    p_7_out,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg ;
  output p_2_out;
  output [0:0]Q;
  output [10:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  output [4:0]v1_reg;
  output [0:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  output ram_empty_fb_i_reg;
  output ram_empty_fb_i_reg_0;
  output ram_empty_fb_i_reg_1;
  output ram_empty_fb_i_reg_2;
  output ram_empty_fb_i_reg_3;
  output [0:0]WEA;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input \gc1.count_d2_reg[10] ;
  input \gc1.count_d2_reg[10]_0 ;
  input \gc1.count_d2_reg[10]_1 ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input [9:0]\gc1.count_d2_reg[9] ;
  input [9:0]\gc1.count_d1_reg[9] ;
  input wr_ensig;
  input p_7_out;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [10:0]\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [0:0]WEA;
  wire [4:0]\c1/v1_reg ;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire [4:0]\gaf.c2/v1_reg ;
  wire \gaf.gaf0.ram_afull_i_reg ;
  wire [9:0]\gc1.count_d1_reg[9] ;
  wire \gc1.count_d2_reg[10] ;
  wire \gc1.count_d2_reg[10]_0 ;
  wire \gc1.count_d2_reg[10]_1 ;
  wire [9:0]\gc1.count_d2_reg[9] ;
  wire [0:0]\gcc0.gc1.gsym.count_d2_reg[10] ;
  wire [4:0]\gntv_or_sync_fifo.gl0.rd/grss.rsts/c1/v1_reg ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire p_2_out;
  wire p_7_out;
  wire ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_fb_i_reg_1;
  wire ram_empty_fb_i_reg_2;
  wire ram_empty_fb_i_reg_3;
  wire \resetovrd.reset_reg[4] ;
  wire [4:0]v1_reg;
  wire wr_ensig;

  overlay1_axi_pcie_0_0_wr_status_flags_ss__parameterized0 \gwss.wsts 
       (.E(WEA),
        .SR(SR),
        .\data_width_64.dataen_reg (\data_width_64.dataen_reg ),
        .\data_width_64.datammpipeline_reg[1] (\data_width_64.datammpipeline_reg[1] ),
        .\data_width_64.rddatasmsig_reg (\data_width_64.rddatasmsig_reg ),
        .\data_width_64.rresp_reg[1][2] (\data_width_64.rresp_reg[1][2] ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg ),
        .\gaf.gaf0.ram_afull_i_reg_1 (p_2_out),
        .\gc1.count_d2_reg[10] (\gc1.count_d2_reg[10] ),
        .\gc1.count_d2_reg[10]_0 (\gc1.count_d2_reg[10]_0 ),
        .\gc1.count_d2_reg[10]_1 (\gc1.count_d2_reg[10]_1 ),
        .m_axi_rlast(m_axi_rlast),
        .m_axi_rvalid(m_axi_rvalid),
        .p_7_out(p_7_out),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(\gntv_or_sync_fifo.gl0.rd/grss.rsts/c1/v1_reg ),
        .v1_reg_0(\c1/v1_reg ),
        .v1_reg_1(\gaf.c2/v1_reg ),
        .wr_ensig(wr_ensig));
  overlay1_axi_pcie_0_0_wr_bin_cntr__parameterized0 wpntr
       (.\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram (\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram ),
        .E(WEA),
        .Q(Q),
        .SR(SR),
        .\gc1.count_d1_reg[9] (\gc1.count_d1_reg[9] ),
        .\gc1.count_d2_reg[9] (\gc1.count_d2_reg[9] ),
        .\gcc0.gc1.gsym.count_d2_reg[10]_0 (\gcc0.gc1.gsym.count_d2_reg[10] ),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .ram_empty_fb_i_reg_1(ram_empty_fb_i_reg_1),
        .ram_empty_fb_i_reg_2(ram_empty_fb_i_reg_2),
        .ram_empty_fb_i_reg_3(ram_empty_fb_i_reg_3),
        .\resetovrd.reset_reg[4] (\resetovrd.reset_reg[4] ),
        .v1_reg(v1_reg),
        .v1_reg_0(\gntv_or_sync_fifo.gl0.rd/grss.rsts/c1/v1_reg ),
        .v1_reg_1(\c1/v1_reg ),
        .v1_reg_2(\gaf.c2/v1_reg ));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module overlay1_axi_pcie_0_0_wr_status_flags_ss
   (\gaf.gaf0.ram_afull_i_reg_0 ,
    \gaf.gaf0.ram_afull_i_reg_1 ,
    \data_width_64.delaylast_reg ,
    E,
    v1_reg,
    \gc1.count_d2_reg[8] ,
    v1_reg_0,
    \gc1.count_d2_reg[8]_0 ,
    v1_reg_1,
    \gc1.count_d2_reg[8]_1 ,
    axi_aresetn,
    \resetovrd.reset_reg[4] ,
    out,
    Q,
    wrensig,
    p_7_out);
  output \gaf.gaf0.ram_afull_i_reg_0 ;
  output \gaf.gaf0.ram_afull_i_reg_1 ;
  output \data_width_64.delaylast_reg ;
  output [0:0]E;
  input [3:0]v1_reg;
  input \gc1.count_d2_reg[8] ;
  input [3:0]v1_reg_0;
  input \gc1.count_d2_reg[8]_0 ;
  input [3:0]v1_reg_1;
  input \gc1.count_d2_reg[8]_1 ;
  input axi_aresetn;
  input \resetovrd.reset_reg[4] ;
  input [0:0]out;
  input [0:0]Q;
  input wrensig;
  input p_7_out;

  wire [0:0]E;
  wire [0:0]Q;
  wire axi_aresetn;
  wire c1_n_1;
  wire comp0;
  wire comp1;
  wire \data_width_64.delaylast_reg ;
  wire \gaf.c2_n_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_1 ;
  wire \gc1.count_d2_reg[8] ;
  wire \gc1.count_d2_reg[8]_0 ;
  wire \gc1.count_d2_reg[8]_1 ;
  wire [0:0]out;
  wire p_7_out;
  wire \resetovrd.reset_reg[4] ;
  wire [3:0]v1_reg;
  wire [3:0]v1_reg_0;
  wire [3:0]v1_reg_1;
  wire wrensig;

  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.WIDE_PRIM36_NO_ECC.ram_i_2 
       (.I0(wrensig),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .O(E));
  overlay1_axi_pcie_0_0_compare c0
       (.comp0(comp0),
        .\gc1.count_d2_reg[8] (\gc1.count_d2_reg[8] ),
        .v1_reg(v1_reg));
  overlay1_axi_pcie_0_0_compare_0 c1
       (.comp0(comp0),
        .comp1(comp1),
        .\gc1.count_d2_reg[8] (\gc1.count_d2_reg[8]_0 ),
        .p_7_out(p_7_out),
        .ram_full_fb_i_reg(c1_n_1),
        .ram_full_fb_i_reg_0(\gaf.gaf0.ram_afull_i_reg_1 ),
        .v1_reg_0(v1_reg_0),
        .wrensig(wrensig));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_width_64.delaylast_i_5 
       (.I0(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I1(out),
        .I2(Q),
        .O(\data_width_64.delaylast_reg ));
  overlay1_axi_pcie_0_0_compare_1 \gaf.c2 
       (.comp1(comp1),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.c2_n_0 ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg_0 ),
        .\gc1.count_d2_reg[8] (\gc1.count_d2_reg[8]_1 ),
        .p_7_out(p_7_out),
        .ram_full_fb_i_reg(\gaf.gaf0.ram_afull_i_reg_1 ),
        .v1_reg_1(v1_reg_1),
        .wrensig(wrensig));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gaf.gaf0.ram_afull_i_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\gaf.c2_n_0 ),
        .Q(\gaf.gaf0.ram_afull_i_reg_0 ),
        .R(axi_aresetn));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(c1_n_1),
        .Q(\gaf.gaf0.ram_afull_i_reg_1 ),
        .R(axi_aresetn));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module overlay1_axi_pcie_0_0_wr_status_flags_ss__parameterized0
   (\gaf.gaf0.ram_afull_i_reg_0 ,
    \gaf.gaf0.ram_afull_i_reg_1 ,
    E,
    \data_width_64.rresp_reg[1][2] ,
    \data_width_64.dataen_reg ,
    \data_width_64.datammpipeline_reg[1] ,
    v1_reg,
    \gc1.count_d2_reg[10] ,
    v1_reg_0,
    \gc1.count_d2_reg[10]_0 ,
    v1_reg_1,
    \gc1.count_d2_reg[10]_1 ,
    SR,
    \resetovrd.reset_reg[4] ,
    wr_ensig,
    p_7_out,
    \data_width_64.rddatasmsig_reg ,
    m_axi_rlast,
    m_axi_rvalid);
  output \gaf.gaf0.ram_afull_i_reg_0 ;
  output \gaf.gaf0.ram_afull_i_reg_1 ;
  output [0:0]E;
  output \data_width_64.rresp_reg[1][2] ;
  output \data_width_64.dataen_reg ;
  output \data_width_64.datammpipeline_reg[1] ;
  input [4:0]v1_reg;
  input \gc1.count_d2_reg[10] ;
  input [4:0]v1_reg_0;
  input \gc1.count_d2_reg[10]_0 ;
  input [4:0]v1_reg_1;
  input \gc1.count_d2_reg[10]_1 ;
  input [0:0]SR;
  input \resetovrd.reset_reg[4] ;
  input wr_ensig;
  input p_7_out;
  input \data_width_64.rddatasmsig_reg ;
  input m_axi_rlast;
  input m_axi_rvalid;

  wire [0:0]E;
  wire [0:0]SR;
  wire c1_n_1;
  wire comp0;
  wire comp1;
  wire \data_width_64.dataen_reg ;
  wire \data_width_64.datammpipeline_reg[1] ;
  wire \data_width_64.rddatasmsig_reg ;
  wire \data_width_64.rresp_reg[1][2] ;
  wire \gaf.c2_n_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_0 ;
  wire \gaf.gaf0.ram_afull_i_reg_1 ;
  wire \gc1.count_d2_reg[10] ;
  wire \gc1.count_d2_reg[10]_0 ;
  wire \gc1.count_d2_reg[10]_1 ;
  wire m_axi_rlast;
  wire m_axi_rvalid;
  wire p_7_out;
  wire \resetovrd.reset_reg[4] ;
  wire [4:0]v1_reg;
  wire [4:0]v1_reg_0;
  wire [4:0]v1_reg_1;
  wire wr_ensig;

  LUT2 #(
    .INIT(4'h2)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM36.ram_i_1 
       (.I0(wr_ensig),
        .I1(\gaf.gaf0.ram_afull_i_reg_1 ),
        .O(E));
  overlay1_axi_pcie_0_0_compare__parameterized3 c0
       (.comp0(comp0),
        .\gc1.count_d2_reg[10] (\gc1.count_d2_reg[10] ),
        .v1_reg(v1_reg));
  overlay1_axi_pcie_0_0_compare__parameterized4 c1
       (.comp0(comp0),
        .comp1(comp1),
        .\gc1.count_d2_reg[10] (\gc1.count_d2_reg[10]_0 ),
        .p_7_out(p_7_out),
        .ram_full_fb_i_reg(c1_n_1),
        .ram_full_fb_i_reg_0(\gaf.gaf0.ram_afull_i_reg_1 ),
        .v1_reg_0(v1_reg_0),
        .wr_ensig(wr_ensig));
  (* SOFT_HLUTNM = "soft_lutpair619" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \data_width_64.dataen_i_2 
       (.I0(m_axi_rlast),
        .I1(m_axi_rvalid),
        .I2(\gaf.gaf0.ram_afull_i_reg_0 ),
        .O(\data_width_64.dataen_reg ));
  (* SOFT_HLUTNM = "soft_lutpair619" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.datammpipeline[1]_i_2 
       (.I0(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I1(m_axi_rvalid),
        .O(\data_width_64.datammpipeline_reg[1] ));
  LUT2 #(
    .INIT(4'hB)) 
    \data_width_64.rresp[1][2]_i_5 
       (.I0(\gaf.gaf0.ram_afull_i_reg_0 ),
        .I1(\data_width_64.rddatasmsig_reg ),
        .O(\data_width_64.rresp_reg[1][2] ));
  overlay1_axi_pcie_0_0_compare__parameterized5 \gaf.c2 
       (.comp1(comp1),
        .\gaf.gaf0.ram_afull_i_reg (\gaf.c2_n_0 ),
        .\gaf.gaf0.ram_afull_i_reg_0 (\gaf.gaf0.ram_afull_i_reg_0 ),
        .\gc1.count_d2_reg[10] (\gc1.count_d2_reg[10]_1 ),
        .p_7_out(p_7_out),
        .ram_full_fb_i_reg(\gaf.gaf0.ram_afull_i_reg_1 ),
        .v1_reg_1(v1_reg_1),
        .wr_ensig(wr_ensig));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gaf.gaf0.ram_afull_i_reg 
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(\gaf.c2_n_0 ),
        .Q(\gaf.gaf0.ram_afull_i_reg_0 ),
        .R(SR));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(\resetovrd.reset_reg[4] ),
        .CE(1'b1),
        .D(c1_n_1),
        .Q(\gaf.gaf0.ram_afull_i_reg_1 ),
        .R(SR));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
